<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1173.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="1154"><g><title>wgpu_test`&lt;bevy_scene::ScenePlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.09%)</title><rect x="0.0000%" y="1029" width="0.0867%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>wgpu_test`&lt;bevy_app::app::App as bevy_asset::assets::AddAsset&gt;::add_asset (1 samples, 0.09%)</title><rect x="0.0000%" y="1013" width="0.0867%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::AssetServer::register_asset_type (1 samples, 0.09%)</title><rect x="0.0000%" y="997" width="0.0867%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.09%)</title><rect x="0.0000%" y="981" width="0.0867%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>AppKit`+[NSAnimationContext activate] (1 samples, 0.09%)</title><rect x="0.0867%" y="885" width="0.0867%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.3367%" y="895.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (1 samples, 0.09%)</title><rect x="0.1733%" y="885" width="0.0867%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.4233%" y="895.50"></text></g><g><title>AppKit`NSAccessibilityPostApplicationActivated (1 samples, 0.09%)</title><rect x="0.1733%" y="869" width="0.0867%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.4233%" y="879.50"></text></g><g><title>AppKit`NSAccessibilityPostNotificationWithUserInfo (1 samples, 0.09%)</title><rect x="0.1733%" y="853" width="0.0867%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.4233%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="0.1733%" y="837" width="0.0867%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.4233%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="0.1733%" y="821" width="0.0867%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.4233%" y="831.50"></text></g><g><title>AppKit`___IsImpliedParentNotification_block_invoke (1 samples, 0.09%)</title><rect x="0.1733%" y="805" width="0.0867%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.4233%" y="815.50"></text></g><g><title>CoreFoundation`-[NSSet initWithObjects:] (1 samples, 0.09%)</title><rect x="0.1733%" y="789" width="0.0867%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.4233%" y="799.50"></text></g><g><title>CoreFoundation`__NSSetI_new (1 samples, 0.09%)</title><rect x="0.1733%" y="773" width="0.0867%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.4233%" y="783.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.09%)</title><rect x="0.1733%" y="757" width="0.0867%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.4233%" y="767.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (1 samples, 0.09%)</title><rect x="0.2600%" y="885" width="0.0867%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.5100%" y="895.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (1 samples, 0.09%)</title><rect x="0.2600%" y="869" width="0.0867%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.5100%" y="879.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::key_down (1 samples, 0.09%)</title><rect x="0.2600%" y="853" width="0.0867%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.5100%" y="863.50"></text></g><g><title>AppKit`-[NSView interpretKeyEvents:] (1 samples, 0.09%)</title><rect x="0.2600%" y="837" width="0.0867%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.5100%" y="847.50"></text></g><g><title>AppKit`-[NSTextInputContext _handleEvent:allowingSyntheticEvent:] (1 samples, 0.09%)</title><rect x="0.2600%" y="821" width="0.0867%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.5100%" y="831.50"></text></g><g><title>AppKit`-[NSTextInputContext _handleEvent:options:allowingSyntheticEvent:completionHandler:] (1 samples, 0.09%)</title><rect x="0.2600%" y="805" width="0.0867%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.5100%" y="815.50"></text></g><g><title>AppKit`-[NSTextInputContext tryTSMProcessRawKeyEvent_orSubstitution:dispatchCondition:setupForDispatch:furtherCondition:doubleSpaceSubstitutionCondition:doubleSpaceSubstitutionWork:dispatchTSMWork:continuation:] (1 samples, 0.09%)</title><rect x="0.2600%" y="789" width="0.0867%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="0.5100%" y="799.50"></text></g><g><title>AppKit`__204-[NSTextInputContext tryTSMProcessRawKeyEvent_orSubstitution:dispatchCondition:setupForDispatch:furtherCondition:doubleSpaceSubstitutionCondition:doubleSpaceSubstitutionWork:dispatchTSMWork:continuation:]_block_invoke.799 (1 samples, 0.09%)</title><rect x="0.2600%" y="773" width="0.0867%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.5100%" y="783.50"></text></g><g><title>AppKit`__84-[NSTextInputContext _handleEvent:options:allowingSyntheticEvent:completionHandler:]_block_invoke_3.838 (1 samples, 0.09%)</title><rect x="0.2600%" y="757" width="0.0867%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="0.5100%" y="767.50"></text></g><g><title>HIToolbox`TSMProcessRawKeyEventWithOptionsAndCompletionHandler (1 samples, 0.09%)</title><rect x="0.2600%" y="741" width="0.0867%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="0.5100%" y="751.50"></text></g><g><title>HIToolbox`Start_CapsLock_KBLayoutDelayOverride_ForTyping_Timer (1 samples, 0.09%)</title><rect x="0.2600%" y="725" width="0.0867%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="0.5100%" y="735.50"></text></g><g><title>HIToolbox`InstallEventLoopTimerInternal (1 samples, 0.09%)</title><rect x="0.2600%" y="709" width="0.0867%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="0.5100%" y="719.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (1 samples, 0.09%)</title><rect x="0.2600%" y="693" width="0.0867%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="0.5100%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (1 samples, 0.09%)</title><rect x="0.2600%" y="677" width="0.0867%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="0.5100%" y="687.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (1 samples, 0.09%)</title><rect x="0.2600%" y="661" width="0.0867%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="0.5100%" y="671.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (1 samples, 0.09%)</title><rect x="0.2600%" y="645" width="0.0867%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="0.5100%" y="655.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] (5 samples, 0.43%)</title><rect x="0.3466%" y="837" width="0.4333%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="5"/><text x="0.5966%" y="847.50"></text></g><g><title>AppKit`-[NSMenuItem _corePerformAction] (5 samples, 0.43%)</title><rect x="0.3466%" y="821" width="0.4333%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="5"/><text x="0.5966%" y="831.50"></text></g><g><title>AppKit`-[NSApplication(NSResponder) sendAction:to:from:] (5 samples, 0.43%)</title><rect x="0.3466%" y="805" width="0.4333%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="5"/><text x="0.5966%" y="815.50"></text></g><g><title>AppKit`-[NSApplication terminate:] (5 samples, 0.43%)</title><rect x="0.3466%" y="789" width="0.4333%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="5"/><text x="0.5966%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__exit (5 samples, 0.43%)</title><rect x="0.3466%" y="773" width="0.4333%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="5"/><text x="0.5966%" y="783.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (9 samples, 0.78%)</title><rect x="0.0867%" y="933" width="0.7799%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="9"/><text x="0.3367%" y="943.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app::send_event (9 samples, 0.78%)</title><rect x="0.0867%" y="917" width="0.7799%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="9"/><text x="0.3367%" y="927.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (9 samples, 0.78%)</title><rect x="0.0867%" y="901" width="0.7799%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="9"/><text x="0.3367%" y="911.50"></text></g><g><title>AppKit`routeKeyEquivalent (6 samples, 0.52%)</title><rect x="0.3466%" y="885" width="0.5199%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="6"/><text x="0.5966%" y="895.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (6 samples, 0.52%)</title><rect x="0.3466%" y="869" width="0.5199%" height="15" fill="rgb(232,182,51)" fg:x="4" fg:w="6"/><text x="0.5966%" y="879.50"></text></g><g><title>AppKit`-[NSMenu _performActionForItem:atIndex:fromEvent:] (6 samples, 0.52%)</title><rect x="0.3466%" y="853" width="0.5199%" height="15" fill="rgb(231,60,39)" fg:x="4" fg:w="6"/><text x="0.5966%" y="863.50"></text></g><g><title>AppKit`__50-[NSMenu _performActionForItem:atIndex:fromEvent:]_block_invoke (1 samples, 0.09%)</title><rect x="0.7799%" y="837" width="0.0867%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="1.0299%" y="847.50"></text></g><g><title>AppKit`-[NSMenu recordKeyboardShortcutEvent:withKeyEquivalent:modifierMask:title:] (1 samples, 0.09%)</title><rect x="0.7799%" y="821" width="0.0867%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="1.0299%" y="831.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.09%)</title><rect x="0.7799%" y="805" width="0.0867%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="1.0299%" y="815.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.09%)</title><rect x="0.7799%" y="789" width="0.0867%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="1.0299%" y="799.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.09%)</title><rect x="0.7799%" y="773" width="0.0867%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="1.0299%" y="783.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.09%)</title><rect x="0.7799%" y="757" width="0.0867%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="1.0299%" y="767.50"></text></g><g><title>libobjc.A.dylib`lockAndFinishInitializing(objc_class*, objc_class*) (1 samples, 0.09%)</title><rect x="0.7799%" y="741" width="0.0867%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="1.0299%" y="751.50"></text></g><g><title>libobjc.A.dylib`bool method_lists_contains_any&lt;WrappedPtr&lt;method_list_t, PtrauthRaw&gt; const&gt;(WrappedPtr&lt;method_list_t, PtrauthRaw&gt; const*, WrappedPtr&lt;method_list_t, PtrauthRaw&gt; const*, objc_selector**, unsigned long) (1 samples, 0.09%)</title><rect x="0.7799%" y="725" width="0.0867%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="1.0299%" y="735.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (1 samples, 0.09%)</title><rect x="0.8666%" y="901" width="0.0867%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="1.1166%" y="911.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (1 samples, 0.09%)</title><rect x="0.8666%" y="885" width="0.0867%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="1.1166%" y="895.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (1 samples, 0.09%)</title><rect x="0.8666%" y="869" width="0.0867%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="1.1166%" y="879.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (1 samples, 0.09%)</title><rect x="0.8666%" y="853" width="0.0867%" height="15" fill="rgb(247,123,22)" fg:x="10" fg:w="1"/><text x="1.1166%" y="863.50"></text></g><g><title>HIToolbox`CreateMenuFromNib (1 samples, 0.09%)</title><rect x="0.9532%" y="677" width="0.0867%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="1.2032%" y="687.50"></text></g><g><title>HIToolbox`loadNib (1 samples, 0.09%)</title><rect x="0.9532%" y="661" width="0.0867%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="1.2032%" y="671.50"></text></g><g><title>HIToolbox`IBXDecoderLoad (1 samples, 0.09%)</title><rect x="0.9532%" y="645" width="0.0867%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="1"/><text x="1.2032%" y="655.50"></text></g><g><title>CoreFoundation`CFXMLParserParse (1 samples, 0.09%)</title><rect x="0.9532%" y="629" width="0.0867%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="1"/><text x="1.2032%" y="639.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.09%)</title><rect x="0.9532%" y="613" width="0.0867%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="1"/><text x="1.2032%" y="623.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.09%)</title><rect x="0.9532%" y="597" width="0.0867%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="1"/><text x="1.2032%" y="607.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.09%)</title><rect x="0.9532%" y="581" width="0.0867%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="1"/><text x="1.2032%" y="591.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.09%)</title><rect x="0.9532%" y="565" width="0.0867%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="1"/><text x="1.2032%" y="575.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.09%)</title><rect x="0.9532%" y="549" width="0.0867%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="1"/><text x="1.2032%" y="559.50"></text></g><g><title>CoreFoundation`_inputStreamScanXMLName (1 samples, 0.09%)</title><rect x="0.9532%" y="533" width="0.0867%" height="15" fill="rgb(210,229,1)" fg:x="11" fg:w="1"/><text x="1.2032%" y="543.50"></text></g><g><title>CoreFoundation`CFUniCharIsMemberOf (1 samples, 0.09%)</title><rect x="0.9532%" y="517" width="0.0867%" height="15" fill="rgb(222,148,37)" fg:x="11" fg:w="1"/><text x="1.2032%" y="527.50"></text></g><g><title>HIToolbox`GetStandardMenu (2 samples, 0.17%)</title><rect x="0.9532%" y="693" width="0.1733%" height="15" fill="rgb(234,67,33)" fg:x="11" fg:w="2"/><text x="1.2032%" y="703.50"></text></g><g><title>HIToolbox`HLTBLoadPreferredLanguageNib (1 samples, 0.09%)</title><rect x="1.0399%" y="677" width="0.0867%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="1.2899%" y="687.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLForLocalization (1 samples, 0.09%)</title><rect x="1.0399%" y="661" width="0.0867%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="1.2899%" y="671.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.09%)</title><rect x="1.0399%" y="645" width="0.0867%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="1.2899%" y="655.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.09%)</title><rect x="1.0399%" y="629" width="0.0867%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="1.2899%" y="639.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.09%)</title><rect x="1.0399%" y="613" width="0.0867%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="1.2899%" y="623.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.09%)</title><rect x="1.0399%" y="597" width="0.0867%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="1.2899%" y="607.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.09%)</title><rect x="1.0399%" y="581" width="0.0867%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="1.2899%" y="591.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.09%)</title><rect x="1.0399%" y="565" width="0.0867%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="1.2899%" y="575.50"></text></g><g><title>libsystem_c.dylib`__opendir2$INODE64 (1 samples, 0.09%)</title><rect x="1.0399%" y="549" width="0.0867%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="1.2899%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.09%)</title><rect x="1.0399%" y="533" width="0.0867%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="1.2899%" y="543.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (3 samples, 0.26%)</title><rect x="0.9532%" y="805" width="0.2600%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="3"/><text x="1.2032%" y="815.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (3 samples, 0.26%)</title><rect x="0.9532%" y="789" width="0.2600%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="3"/><text x="1.2032%" y="799.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (3 samples, 0.26%)</title><rect x="0.9532%" y="773" width="0.2600%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="3"/><text x="1.2032%" y="783.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (3 samples, 0.26%)</title><rect x="0.9532%" y="757" width="0.2600%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="3"/><text x="1.2032%" y="767.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (3 samples, 0.26%)</title><rect x="0.9532%" y="741" width="0.2600%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="3"/><text x="1.2032%" y="751.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (3 samples, 0.26%)</title><rect x="0.9532%" y="725" width="0.2600%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="3"/><text x="1.2032%" y="735.50"></text></g><g><title>HIToolbox`AppleMenuHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (3 samples, 0.26%)</title><rect x="0.9532%" y="709" width="0.2600%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="3"/><text x="1.2032%" y="719.50"></text></g><g><title>HIToolbox`UpdateAppleMenuToReflectMacManager() (1 samples, 0.09%)</title><rect x="1.1265%" y="693" width="0.0867%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="1"/><text x="1.3765%" y="703.50"></text></g><g><title>HIServices`HIS_XPCImp_CopyMacManagerPrefs (1 samples, 0.09%)</title><rect x="1.1265%" y="677" width="0.0867%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="1"/><text x="1.3765%" y="687.50"></text></g><g><title>HIServices`GetAppBooleanPref (1 samples, 0.09%)</title><rect x="1.1265%" y="661" width="0.0867%" height="15" fill="rgb(235,213,38)" fg:x="13" fg:w="1"/><text x="1.3765%" y="671.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.09%)</title><rect x="1.1265%" y="645" width="0.0867%" height="15" fill="rgb(237,122,38)" fg:x="13" fg:w="1"/><text x="1.3765%" y="655.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.09%)</title><rect x="1.1265%" y="629" width="0.0867%" height="15" fill="rgb(244,218,35)" fg:x="13" fg:w="1"/><text x="1.3765%" y="639.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.09%)</title><rect x="1.1265%" y="613" width="0.0867%" height="15" fill="rgb(240,68,47)" fg:x="13" fg:w="1"/><text x="1.3765%" y="623.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.09%)</title><rect x="1.1265%" y="597" width="0.0867%" height="15" fill="rgb(210,16,53)" fg:x="13" fg:w="1"/><text x="1.3765%" y="607.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (1 samples, 0.09%)</title><rect x="1.1265%" y="581" width="0.0867%" height="15" fill="rgb(235,124,12)" fg:x="13" fg:w="1"/><text x="1.3765%" y="591.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (1 samples, 0.09%)</title><rect x="1.1265%" y="565" width="0.0867%" height="15" fill="rgb(224,169,11)" fg:x="13" fg:w="1"/><text x="1.3765%" y="575.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (1 samples, 0.09%)</title><rect x="1.1265%" y="549" width="0.0867%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="1.3765%" y="559.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_getDictionary:] (1 samples, 0.09%)</title><rect x="1.1265%" y="533" width="0.0867%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="1.3765%" y="543.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:] (1 samples, 0.09%)</title><rect x="1.1265%" y="517" width="0.0867%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="1.3765%" y="527.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:] (1 samples, 0.09%)</title><rect x="1.1265%" y="501" width="0.0867%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="1.3765%" y="511.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 0.09%)</title><rect x="1.1265%" y="485" width="0.0867%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="1.3765%" y="495.50"></text></g><g><title>CoreFoundation`__104-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:]_block_invoke (1 samples, 0.09%)</title><rect x="1.1265%" y="469" width="0.0867%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="1.3765%" y="479.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:performBlock:] (1 samples, 0.09%)</title><rect x="1.1265%" y="453" width="0.0867%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="1"/><text x="1.3765%" y="463.50"></text></g><g><title>CoreFoundation`__104-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:]_block_invoke_2 (1 samples, 0.09%)</title><rect x="1.1265%" y="437" width="0.0867%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="1"/><text x="1.3765%" y="447.50"></text></g><g><title>CoreFoundation`__80-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]_block_invoke (1 samples, 0.09%)</title><rect x="1.1265%" y="421" width="0.0867%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="1"/><text x="1.3765%" y="431.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.09%)</title><rect x="1.1265%" y="405" width="0.0867%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="1"/><text x="1.3765%" y="415.50"></text></g><g><title>libxpc.dylib`xpc_array_apply (1 samples, 0.09%)</title><rect x="1.1265%" y="389" width="0.0867%" height="15" fill="rgb(242,17,10)" fg:x="13" fg:w="1"/><text x="1.3765%" y="399.50"></text></g><g><title>CoreFoundation`__93-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:]_block_invoke (1 samples, 0.09%)</title><rect x="1.1265%" y="373" width="0.0867%" height="15" fill="rgb(242,107,0)" fg:x="13" fg:w="1"/><text x="1.3765%" y="383.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.09%)</title><rect x="1.1265%" y="357" width="0.0867%" height="15" fill="rgb(251,28,31)" fg:x="13" fg:w="1"/><text x="1.3765%" y="367.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateWithData (1 samples, 0.09%)</title><rect x="1.1265%" y="341" width="0.0867%" height="15" fill="rgb(233,223,10)" fg:x="13" fg:w="1"/><text x="1.3765%" y="351.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.09%)</title><rect x="1.1265%" y="325" width="0.0867%" height="15" fill="rgb(215,21,27)" fg:x="13" fg:w="1"/><text x="1.3765%" y="335.50"></text></g><g><title>CoreFoundation`__CFTryParseBinaryPlist (1 samples, 0.09%)</title><rect x="1.1265%" y="309" width="0.0867%" height="15" fill="rgb(232,23,21)" fg:x="13" fg:w="1"/><text x="1.3765%" y="319.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.09%)</title><rect x="1.1265%" y="293" width="0.0867%" height="15" fill="rgb(244,5,23)" fg:x="13" fg:w="1"/><text x="1.3765%" y="303.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.09%)</title><rect x="1.1265%" y="277" width="0.0867%" height="15" fill="rgb(226,81,46)" fg:x="13" fg:w="1"/><text x="1.3765%" y="287.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.09%)</title><rect x="1.1265%" y="261" width="0.0867%" height="15" fill="rgb(247,70,30)" fg:x="13" fg:w="1"/><text x="1.3765%" y="271.50"></text></g><g><title>HIToolbox`ForEachInstalledHMenuDo(int (*)(MenuData*, void*), void*) (1 samples, 0.09%)</title><rect x="1.2132%" y="805" width="0.0867%" height="15" fill="rgb(212,68,19)" fg:x="14" fg:w="1"/><text x="1.4632%" y="815.50"></text></g><g><title>HIToolbox`CheckEachHMenuForKeyEvent(MenuData*, void*) (1 samples, 0.09%)</title><rect x="1.2132%" y="789" width="0.0867%" height="15" fill="rgb(240,187,13)" fg:x="14" fg:w="1"/><text x="1.4632%" y="799.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (1 samples, 0.09%)</title><rect x="1.2132%" y="773" width="0.0867%" height="15" fill="rgb(223,113,26)" fg:x="14" fg:w="1"/><text x="1.4632%" y="783.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (1 samples, 0.09%)</title><rect x="1.2132%" y="757" width="0.0867%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="1"/><text x="1.4632%" y="767.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (1 samples, 0.09%)</title><rect x="1.2132%" y="741" width="0.0867%" height="15" fill="rgb(241,108,4)" fg:x="14" fg:w="1"/><text x="1.4632%" y="751.50"></text></g><g><title>HIToolbox`CreateEvent (1 samples, 0.09%)</title><rect x="1.2132%" y="725" width="0.0867%" height="15" fill="rgb(247,173,49)" fg:x="14" fg:w="1"/><text x="1.4632%" y="735.50"></text></g><g><title>HIToolbox`GetEventFromPool (1 samples, 0.09%)</title><rect x="1.2132%" y="709" width="0.0867%" height="15" fill="rgb(224,114,35)" fg:x="14" fg:w="1"/><text x="1.4632%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.09%)</title><rect x="1.2132%" y="693" width="0.0867%" height="15" fill="rgb(245,159,27)" fg:x="14" fg:w="1"/><text x="1.4632%" y="703.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (6 samples, 0.52%)</title><rect x="0.8666%" y="917" width="0.5199%" height="15" fill="rgb(245,172,44)" fg:x="10" fg:w="6"/><text x="1.1166%" y="927.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (5 samples, 0.43%)</title><rect x="0.9532%" y="901" width="0.4333%" height="15" fill="rgb(236,23,11)" fg:x="11" fg:w="5"/><text x="1.2032%" y="911.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (5 samples, 0.43%)</title><rect x="0.9532%" y="885" width="0.4333%" height="15" fill="rgb(205,117,38)" fg:x="11" fg:w="5"/><text x="1.2032%" y="895.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (5 samples, 0.43%)</title><rect x="0.9532%" y="869" width="0.4333%" height="15" fill="rgb(237,72,25)" fg:x="11" fg:w="5"/><text x="1.2032%" y="879.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (5 samples, 0.43%)</title><rect x="0.9532%" y="853" width="0.4333%" height="15" fill="rgb(244,70,9)" fg:x="11" fg:w="5"/><text x="1.2032%" y="863.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (5 samples, 0.43%)</title><rect x="0.9532%" y="837" width="0.4333%" height="15" fill="rgb(217,125,39)" fg:x="11" fg:w="5"/><text x="1.2032%" y="847.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (5 samples, 0.43%)</title><rect x="0.9532%" y="821" width="0.4333%" height="15" fill="rgb(235,36,10)" fg:x="11" fg:w="5"/><text x="1.2032%" y="831.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (1 samples, 0.09%)</title><rect x="1.2998%" y="805" width="0.0867%" height="15" fill="rgb(251,123,47)" fg:x="15" fg:w="1"/><text x="1.5498%" y="815.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (1 samples, 0.09%)</title><rect x="1.2998%" y="789" width="0.0867%" height="15" fill="rgb(221,13,13)" fg:x="15" fg:w="1"/><text x="1.5498%" y="799.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (1 samples, 0.09%)</title><rect x="1.2998%" y="773" width="0.0867%" height="15" fill="rgb(238,131,9)" fg:x="15" fg:w="1"/><text x="1.5498%" y="783.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (1 samples, 0.09%)</title><rect x="1.2998%" y="757" width="0.0867%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="1"/><text x="1.5498%" y="767.50"></text></g><g><title>HIToolbox`TISKeyboardLayoutCapsLockIsRomanPlane (1 samples, 0.09%)</title><rect x="1.2998%" y="741" width="0.0867%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="1"/><text x="1.5498%" y="751.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.09%)</title><rect x="1.2998%" y="725" width="0.0867%" height="15" fill="rgb(242,14,37)" fg:x="15" fg:w="1"/><text x="1.5498%" y="735.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.09%)</title><rect x="1.2998%" y="709" width="0.0867%" height="15" fill="rgb(246,228,12)" fg:x="15" fg:w="1"/><text x="1.5498%" y="719.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.09%)</title><rect x="1.2998%" y="693" width="0.0867%" height="15" fill="rgb(213,55,15)" fg:x="15" fg:w="1"/><text x="1.5498%" y="703.50"></text></g><g><title>CoreFoundation`CFEqual (1 samples, 0.09%)</title><rect x="1.2998%" y="677" width="0.0867%" height="15" fill="rgb(209,9,3)" fg:x="15" fg:w="1"/><text x="1.5498%" y="687.50"></text></g><g><title>AppKit`-[NSApplication _reopenWindowsAsNecessaryIncludingRestorableState:completionHandler:] (1 samples, 0.09%)</title><rect x="1.3865%" y="773" width="0.0867%" height="15" fill="rgb(230,59,30)" fg:x="16" fg:w="1"/><text x="1.6365%" y="783.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autoreopenDocumentsIgnoringExpendable:withCompletionHandler:] (1 samples, 0.09%)</title><rect x="1.3865%" y="757" width="0.0867%" height="15" fill="rgb(209,121,21)" fg:x="16" fg:w="1"/><text x="1.6365%" y="767.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autoreopenRecordsBeingReopened] (1 samples, 0.09%)</title><rect x="1.3865%" y="741" width="0.0867%" height="15" fill="rgb(220,109,13)" fg:x="16" fg:w="1"/><text x="1.6365%" y="751.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autosaveRecordPathCreateIfNecessary:] (1 samples, 0.09%)</title><rect x="1.3865%" y="725" width="0.0867%" height="15" fill="rgb(232,18,1)" fg:x="16" fg:w="1"/><text x="1.6365%" y="735.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autosaveDirectoryURLCreateIfNecessary:] (1 samples, 0.09%)</title><rect x="1.3865%" y="709" width="0.0867%" height="15" fill="rgb(215,41,42)" fg:x="16" fg:w="1"/><text x="1.6365%" y="719.50"></text></g><g><title>Foundation`-[NSFileManager URLForDirectory:inDomain:appropriateForURL:create:error:] (1 samples, 0.09%)</title><rect x="1.3865%" y="693" width="0.0867%" height="15" fill="rgb(224,123,36)" fg:x="16" fg:w="1"/><text x="1.6365%" y="703.50"></text></g><g><title>Foundation`NSSearchPathForDirectoriesInDomains (1 samples, 0.09%)</title><rect x="1.3865%" y="677" width="0.0867%" height="15" fill="rgb(240,125,3)" fg:x="16" fg:w="1"/><text x="1.6365%" y="687.50"></text></g><g><title>Foundation`-[NSString(NSPathUtilities) stringByExpandingTildeInPath] (1 samples, 0.09%)</title><rect x="1.3865%" y="661" width="0.0867%" height="15" fill="rgb(205,98,50)" fg:x="16" fg:w="1"/><text x="1.6365%" y="671.50"></text></g><g><title>Foundation`_NSExpandTildeInPath (1 samples, 0.09%)</title><rect x="1.3865%" y="645" width="0.0867%" height="15" fill="rgb(205,185,37)" fg:x="16" fg:w="1"/><text x="1.6365%" y="655.50"></text></g><g><title>Foundation`NSHomeDirectoryForUser (1 samples, 0.09%)</title><rect x="1.3865%" y="629" width="0.0867%" height="15" fill="rgb(238,207,15)" fg:x="16" fg:w="1"/><text x="1.6365%" y="639.50"></text></g><g><title>CoreFoundation`_CFCopyHomeDirURLForUser (1 samples, 0.09%)</title><rect x="1.3865%" y="613" width="0.0867%" height="15" fill="rgb(213,199,42)" fg:x="16" fg:w="1"/><text x="1.6365%" y="623.50"></text></g><g><title>libsystem_info.dylib`getpwuid (1 samples, 0.09%)</title><rect x="1.3865%" y="597" width="0.0867%" height="15" fill="rgb(235,201,11)" fg:x="16" fg:w="1"/><text x="1.6365%" y="607.50"></text></g><g><title>libsystem_info.dylib`_fsi_get_user (1 samples, 0.09%)</title><rect x="1.3865%" y="581" width="0.0867%" height="15" fill="rgb(207,46,11)" fg:x="16" fg:w="1"/><text x="1.6365%" y="591.50"></text></g><g><title>libsystem_c.dylib`fopen (1 samples, 0.09%)</title><rect x="1.3865%" y="565" width="0.0867%" height="15" fill="rgb(241,35,35)" fg:x="16" fg:w="1"/><text x="1.6365%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.09%)</title><rect x="1.3865%" y="549" width="0.0867%" height="15" fill="rgb(243,32,47)" fg:x="16" fg:w="1"/><text x="1.6365%" y="559.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.09%)</title><rect x="1.4731%" y="437" width="0.0867%" height="15" fill="rgb(247,202,23)" fg:x="17" fg:w="1"/><text x="1.7231%" y="447.50"></text></g><g><title>CoreFoundation`CFBundleGetInfoDictionary (1 samples, 0.09%)</title><rect x="1.4731%" y="421" width="0.0867%" height="15" fill="rgb(219,102,11)" fg:x="17" fg:w="1"/><text x="1.7231%" y="431.50"></text></g><g><title>CoreFoundation`_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.09%)</title><rect x="1.4731%" y="405" width="0.0867%" height="15" fill="rgb(243,110,44)" fg:x="17" fg:w="1"/><text x="1.7231%" y="415.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.09%)</title><rect x="1.4731%" y="389" width="0.0867%" height="15" fill="rgb(222,74,54)" fg:x="17" fg:w="1"/><text x="1.7231%" y="399.50"></text></g><g><title>CoreFoundation`CFURLCreateDataAndPropertiesFromResource (1 samples, 0.09%)</title><rect x="1.4731%" y="373" width="0.0867%" height="15" fill="rgb(216,99,12)" fg:x="17" fg:w="1"/><text x="1.7231%" y="383.50"></text></g><g><title>CoreFoundation`_CFReadBytesFromFile (1 samples, 0.09%)</title><rect x="1.4731%" y="357" width="0.0867%" height="15" fill="rgb(226,22,26)" fg:x="17" fg:w="1"/><text x="1.7231%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.09%)</title><rect x="1.4731%" y="341" width="0.0867%" height="15" fill="rgb(217,163,10)" fg:x="17" fg:w="1"/><text x="1.7231%" y="351.50"></text></g><g><title>AppKit`_NXKitString (2 samples, 0.17%)</title><rect x="1.4731%" y="533" width="0.1733%" height="15" fill="rgb(213,25,53)" fg:x="17" fg:w="2"/><text x="1.7231%" y="543.50"></text></g><g><title>AppKit`_NSKitBundle (2 samples, 0.17%)</title><rect x="1.4731%" y="517" width="0.1733%" height="15" fill="rgb(252,105,26)" fg:x="17" fg:w="2"/><text x="1.7231%" y="527.50"></text></g><g><title>AppKit`_NSLocateKitBundle (2 samples, 0.17%)</title><rect x="1.4731%" y="501" width="0.1733%" height="15" fill="rgb(220,39,43)" fg:x="17" fg:w="2"/><text x="1.7231%" y="511.50"></text></g><g><title>Foundation`+[NSBundle bundleWithIdentifier:] (2 samples, 0.17%)</title><rect x="1.4731%" y="485" width="0.1733%" height="15" fill="rgb(229,68,48)" fg:x="17" fg:w="2"/><text x="1.7231%" y="495.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleWithIdentifier (2 samples, 0.17%)</title><rect x="1.4731%" y="469" width="0.1733%" height="15" fill="rgb(252,8,32)" fg:x="17" fg:w="2"/><text x="1.7231%" y="479.50"></text></g><g><title>CoreFoundation`_CFBundleEnsureBundleExistsForImagePath (2 samples, 0.17%)</title><rect x="1.4731%" y="453" width="0.1733%" height="15" fill="rgb(223,20,43)" fg:x="17" fg:w="2"/><text x="1.7231%" y="463.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnCheckLoaded (1 samples, 0.09%)</title><rect x="1.5598%" y="437" width="0.0867%" height="15" fill="rgb(229,81,49)" fg:x="18" fg:w="1"/><text x="1.8098%" y="447.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="1.5598%" y="421" width="0.0867%" height="15" fill="rgb(236,28,36)" fg:x="18" fg:w="1"/><text x="1.8098%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::findImageContaining (1 samples, 0.09%)</title><rect x="1.5598%" y="405" width="0.0867%" height="15" fill="rgb(249,185,26)" fg:x="18" fg:w="1"/><text x="1.8098%" y="415.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.09%)</title><rect x="1.5598%" y="389" width="0.0867%" height="15" fill="rgb(249,174,33)" fg:x="18" fg:w="1"/><text x="1.8098%" y="399.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageContaining (1 samples, 0.09%)</title><rect x="1.5598%" y="373" width="0.0867%" height="15" fill="rgb(233,201,37)" fg:x="18" fg:w="1"/><text x="1.8098%" y="383.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::loadAddress (1 samples, 0.09%)</title><rect x="1.5598%" y="357" width="0.0867%" height="15" fill="rgb(221,78,26)" fg:x="18" fg:w="1"/><text x="1.8098%" y="367.50"></text></g><g><title>AppKit`-[NSMenu _setMenuName:] (3 samples, 0.26%)</title><rect x="1.4731%" y="613" width="0.2600%" height="15" fill="rgb(250,127,30)" fg:x="17" fg:w="3"/><text x="1.7231%" y="623.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (3 samples, 0.26%)</title><rect x="1.4731%" y="597" width="0.2600%" height="15" fill="rgb(230,49,44)" fg:x="17" fg:w="3"/><text x="1.7231%" y="607.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (3 samples, 0.26%)</title><rect x="1.4731%" y="581" width="0.2600%" height="15" fill="rgb(229,67,23)" fg:x="17" fg:w="3"/><text x="1.7231%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (3 samples, 0.26%)</title><rect x="1.4731%" y="565" width="0.2600%" height="15" fill="rgb(249,83,47)" fg:x="17" fg:w="3"/><text x="1.7231%" y="575.50"></text></g><g><title>AppKit`_NSFindEditMenu (3 samples, 0.26%)</title><rect x="1.4731%" y="549" width="0.2600%" height="15" fill="rgb(215,43,3)" fg:x="17" fg:w="3"/><text x="1.7231%" y="559.50"></text></g><g><title>Foundation`-[NSBundle localizedStringForKey:value:table:] (1 samples, 0.09%)</title><rect x="1.6464%" y="533" width="0.0867%" height="15" fill="rgb(238,154,13)" fg:x="19" fg:w="1"/><text x="1.8964%" y="543.50"></text></g><g><title>CoreFoundation`CFBundleCopyLocalizedString (1 samples, 0.09%)</title><rect x="1.6464%" y="517" width="0.0867%" height="15" fill="rgb(219,56,2)" fg:x="19" fg:w="1"/><text x="1.8964%" y="527.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption (1 samples, 0.09%)</title><rect x="1.6464%" y="501" width="0.0867%" height="15" fill="rgb(233,0,4)" fg:x="19" fg:w="1"/><text x="1.8964%" y="511.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.09%)</title><rect x="1.6464%" y="485" width="0.0867%" height="15" fill="rgb(235,30,7)" fg:x="19" fg:w="1"/><text x="1.8964%" y="495.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.09%)</title><rect x="1.6464%" y="469" width="0.0867%" height="15" fill="rgb(250,79,13)" fg:x="19" fg:w="1"/><text x="1.8964%" y="479.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.09%)</title><rect x="1.6464%" y="453" width="0.0867%" height="15" fill="rgb(211,146,34)" fg:x="19" fg:w="1"/><text x="1.8964%" y="463.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.09%)</title><rect x="1.6464%" y="437" width="0.0867%" height="15" fill="rgb(228,22,38)" fg:x="19" fg:w="1"/><text x="1.8964%" y="447.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.09%)</title><rect x="1.6464%" y="421" width="0.0867%" height="15" fill="rgb(235,168,5)" fg:x="19" fg:w="1"/><text x="1.8964%" y="431.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.09%)</title><rect x="1.6464%" y="405" width="0.0867%" height="15" fill="rgb(221,155,16)" fg:x="19" fg:w="1"/><text x="1.8964%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.09%)</title><rect x="1.6464%" y="389" width="0.0867%" height="15" fill="rgb(215,215,53)" fg:x="19" fg:w="1"/><text x="1.8964%" y="399.50"></text></g><g><title>AppKit`-[NSMenu insertItem:atIndex:] (1 samples, 0.09%)</title><rect x="1.7331%" y="613" width="0.0867%" height="15" fill="rgb(223,4,10)" fg:x="20" fg:w="1"/><text x="1.9831%" y="623.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.09%)</title><rect x="1.7331%" y="597" width="0.0867%" height="15" fill="rgb(234,103,6)" fg:x="20" fg:w="1"/><text x="1.9831%" y="607.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (1 samples, 0.09%)</title><rect x="1.7331%" y="581" width="0.0867%" height="15" fill="rgb(227,97,0)" fg:x="20" fg:w="1"/><text x="1.9831%" y="591.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (1 samples, 0.09%)</title><rect x="1.7331%" y="565" width="0.0867%" height="15" fill="rgb(234,150,53)" fg:x="20" fg:w="1"/><text x="1.9831%" y="575.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (1 samples, 0.09%)</title><rect x="1.7331%" y="549" width="0.0867%" height="15" fill="rgb(228,201,54)" fg:x="20" fg:w="1"/><text x="1.9831%" y="559.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (1 samples, 0.09%)</title><rect x="1.7331%" y="533" width="0.0867%" height="15" fill="rgb(222,22,37)" fg:x="20" fg:w="1"/><text x="1.9831%" y="543.50"></text></g><g><title>Foundation`-[__NSObserver _doit:] (1 samples, 0.09%)</title><rect x="1.7331%" y="517" width="0.0867%" height="15" fill="rgb(237,53,32)" fg:x="20" fg:w="1"/><text x="1.9831%" y="527.50"></text></g><g><title>AppKit`___NSMenuUpdateKeyboardAwareShortcuts_block_invoke_3 (1 samples, 0.09%)</title><rect x="1.7331%" y="501" width="0.0867%" height="15" fill="rgb(233,25,53)" fg:x="20" fg:w="1"/><text x="1.9831%" y="511.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) shouldMenuItemBeUpdatedDueToNotification] (1 samples, 0.09%)</title><rect x="1.7331%" y="485" width="0.0867%" height="15" fill="rgb(210,40,34)" fg:x="20" fg:w="1"/><text x="1.9831%" y="495.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) menuItemOrSubmenuNeedsShortcutLocalization] (1 samples, 0.09%)</title><rect x="1.7331%" y="469" width="0.0867%" height="15" fill="rgb(241,220,44)" fg:x="20" fg:w="1"/><text x="1.9831%" y="479.50"></text></g><g><title>Foundation`_NSFaultInObject (1 samples, 0.09%)</title><rect x="1.7331%" y="453" width="0.0867%" height="15" fill="rgb(235,28,35)" fg:x="20" fg:w="1"/><text x="1.9831%" y="463.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (1 samples, 0.09%)</title><rect x="1.7331%" y="437" width="0.0867%" height="15" fill="rgb(210,56,17)" fg:x="20" fg:w="1"/><text x="1.9831%" y="447.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (1 samples, 0.09%)</title><rect x="1.7331%" y="421" width="0.0867%" height="15" fill="rgb(224,130,29)" fg:x="20" fg:w="1"/><text x="1.9831%" y="431.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (1 samples, 0.09%)</title><rect x="1.7331%" y="405" width="0.0867%" height="15" fill="rgb(235,212,8)" fg:x="20" fg:w="1"/><text x="1.9831%" y="415.50"></text></g><g><title>AppKit`+[NSImage(NSSystemSymbols) _imageWithSystemSymbolName:catalog:createdWithCompatibilityImageName:] (1 samples, 0.09%)</title><rect x="1.7331%" y="389" width="0.0867%" height="15" fill="rgb(223,33,50)" fg:x="20" fg:w="1"/><text x="1.9831%" y="399.50"></text></g><g><title>AppKit`-[NSImage bestRepresentationForHints:] (1 samples, 0.09%)</title><rect x="1.7331%" y="373" width="0.0867%" height="15" fill="rgb(219,149,13)" fg:x="20" fg:w="1"/><text x="1.9831%" y="383.50"></text></g><g><title>AppKit`__38-[NSImage bestRepresentationForHints:]_block_invoke (1 samples, 0.09%)</title><rect x="1.7331%" y="357" width="0.0867%" height="15" fill="rgb(250,156,29)" fg:x="20" fg:w="1"/><text x="1.9831%" y="367.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider bestRepresentationForImage:hints:] (1 samples, 0.09%)</title><rect x="1.7331%" y="341" width="0.0867%" height="15" fill="rgb(216,193,19)" fg:x="20" fg:w="1"/><text x="1.9831%" y="351.50"></text></g><g><title>AppKit`-[_NSSimpleLRUCache objectForKey:creationBlock:] (1 samples, 0.09%)</title><rect x="1.7331%" y="325" width="0.0867%" height="15" fill="rgb(216,135,14)" fg:x="20" fg:w="1"/><text x="1.9831%" y="335.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider _bestRepresentationForImage:hints:] (1 samples, 0.09%)</title><rect x="1.7331%" y="309" width="0.0867%" height="15" fill="rgb(241,47,5)" fg:x="20" fg:w="1"/><text x="1.9831%" y="319.50"></text></g><g><title>AppKit`-[CUICatalog(NSAppearanceNamesForVectorGlyph) NS_appearanceNamesForVectorGlyphWithName:] (1 samples, 0.09%)</title><rect x="1.7331%" y="293" width="0.0867%" height="15" fill="rgb(233,42,35)" fg:x="20" fg:w="1"/><text x="1.9831%" y="303.50"></text></g><g><title>CoreUI`-[CUICatalog namedVectorGlyphWithName:scaleFactor:deviceIdiom:layoutDirection:glyphSize:glyphWeight:glyphPointSize:appearanceName:] (1 samples, 0.09%)</title><rect x="1.7331%" y="277" width="0.0867%" height="15" fill="rgb(231,13,6)" fg:x="20" fg:w="1"/><text x="1.9831%" y="287.50"></text></g><g><title>CoreUI`-[CUICatalog _resolvedRenditionKeyForName:scaleFactor:deviceIdiom:deviceSubtype:displayGamut:layoutDirection:sizeClassHorizontal:sizeClassVertical:memoryClass:graphicsClass:graphicsFallBackOrder:deviceSubtypeFallBackOrder:withBaseKeySelector:adjustRenditionKeyWithBlock:] (1 samples, 0.09%)</title><rect x="1.7331%" y="261" width="0.0867%" height="15" fill="rgb(207,181,40)" fg:x="20" fg:w="1"/><text x="1.9831%" y="271.50"></text></g><g><title>CoreUI`-[CUICatalog _resolvedRenditionKeyFromThemeRef:withBaseKey:scaleFactor:deviceIdiom:deviceSubtype:displayGamut:layoutDirection:sizeClassHorizontal:sizeClassVertical:memoryClass:graphicsClass:graphicsFallBackOrder:deviceSubtypeFallBackOrder:adjustRenditionKeyWithBlock:] (1 samples, 0.09%)</title><rect x="1.7331%" y="245" width="0.0867%" height="15" fill="rgb(254,173,49)" fg:x="20" fg:w="1"/><text x="1.9831%" y="255.50"></text></g><g><title>CoreUI`-[CUICatalog _private_resolvedRenditionKeyFromThemeRef:withBaseKey:scaleFactor:deviceIdiom:deviceSubtype:displayGamut:layoutDirection:sizeClassHorizontal:sizeClassVertical:memoryClass:graphicsClass:graphicsFallBackOrder:deviceSubtypeFallBackOrder:localizationIdentifier:adjustRenditionKeyWithBlock:] (1 samples, 0.09%)</title><rect x="1.7331%" y="229" width="0.0867%" height="15" fill="rgb(221,1,38)" fg:x="20" fg:w="1"/><text x="1.9831%" y="239.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore canGetRenditionWithKey:] (1 samples, 0.09%)</title><rect x="1.7331%" y="213" width="0.0867%" height="15" fill="rgb(206,124,46)" fg:x="20" fg:w="1"/><text x="1.9831%" y="223.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore assetExistsForKey:] (1 samples, 0.09%)</title><rect x="1.7331%" y="197" width="0.0867%" height="15" fill="rgb(249,21,11)" fg:x="20" fg:w="1"/><text x="1.9831%" y="207.50"></text></g><g><title>CoreUI`-[CUICommonAssetStorage assetExistsForKeyData:length:] (1 samples, 0.09%)</title><rect x="1.7331%" y="181" width="0.0867%" height="15" fill="rgb(222,201,40)" fg:x="20" fg:w="1"/><text x="1.9831%" y="191.50"></text></g><g><title>CoreUI`BOMTreeValueExists (1 samples, 0.09%)</title><rect x="1.7331%" y="165" width="0.0867%" height="15" fill="rgb(235,61,29)" fg:x="20" fg:w="1"/><text x="1.9831%" y="175.50"></text></g><g><title>CoreUI`_findPagesForKey (1 samples, 0.09%)</title><rect x="1.7331%" y="149" width="0.0867%" height="15" fill="rgb(219,207,3)" fg:x="20" fg:w="1"/><text x="1.9831%" y="159.50"></text></g><g><title>CoreUI`_bsearchForKey (1 samples, 0.09%)</title><rect x="1.7331%" y="133" width="0.0867%" height="15" fill="rgb(222,56,46)" fg:x="20" fg:w="1"/><text x="1.9831%" y="143.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (6 samples, 0.52%)</title><rect x="1.3865%" y="901" width="0.5199%" height="15" fill="rgb(239,76,54)" fg:x="16" fg:w="6"/><text x="1.6365%" y="911.50"></text></g><g><title>AE`aeProcessAppleEvent (6 samples, 0.52%)</title><rect x="1.3865%" y="885" width="0.5199%" height="15" fill="rgb(231,124,27)" fg:x="16" fg:w="6"/><text x="1.6365%" y="895.50"></text></g><g><title>AE`0x00007ff80fd24570 (6 samples, 0.52%)</title><rect x="1.3865%" y="869" width="0.5199%" height="15" fill="rgb(249,195,6)" fg:x="16" fg:w="6"/><text x="1.6365%" y="879.50"></text></g><g><title>AE`0x00007ff80fd245ef (6 samples, 0.52%)</title><rect x="1.3865%" y="853" width="0.5199%" height="15" fill="rgb(237,174,47)" fg:x="16" fg:w="6"/><text x="1.6365%" y="863.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (6 samples, 0.52%)</title><rect x="1.3865%" y="837" width="0.5199%" height="15" fill="rgb(206,201,31)" fg:x="16" fg:w="6"/><text x="1.6365%" y="847.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (6 samples, 0.52%)</title><rect x="1.3865%" y="821" width="0.5199%" height="15" fill="rgb(231,57,52)" fg:x="16" fg:w="6"/><text x="1.6365%" y="831.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (6 samples, 0.52%)</title><rect x="1.3865%" y="805" width="0.5199%" height="15" fill="rgb(248,177,22)" fg:x="16" fg:w="6"/><text x="1.6365%" y="815.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (6 samples, 0.52%)</title><rect x="1.3865%" y="789" width="0.5199%" height="15" fill="rgb(215,211,37)" fg:x="16" fg:w="6"/><text x="1.6365%" y="799.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (5 samples, 0.43%)</title><rect x="1.4731%" y="773" width="0.4333%" height="15" fill="rgb(241,128,51)" fg:x="17" fg:w="5"/><text x="1.7231%" y="783.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (5 samples, 0.43%)</title><rect x="1.4731%" y="757" width="0.4333%" height="15" fill="rgb(227,165,31)" fg:x="17" fg:w="5"/><text x="1.7231%" y="767.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (5 samples, 0.43%)</title><rect x="1.4731%" y="741" width="0.4333%" height="15" fill="rgb(228,167,24)" fg:x="17" fg:w="5"/><text x="1.7231%" y="751.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (5 samples, 0.43%)</title><rect x="1.4731%" y="725" width="0.4333%" height="15" fill="rgb(228,143,12)" fg:x="17" fg:w="5"/><text x="1.7231%" y="735.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (5 samples, 0.43%)</title><rect x="1.4731%" y="709" width="0.4333%" height="15" fill="rgb(249,149,8)" fg:x="17" fg:w="5"/><text x="1.7231%" y="719.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (5 samples, 0.43%)</title><rect x="1.4731%" y="693" width="0.4333%" height="15" fill="rgb(243,35,44)" fg:x="17" fg:w="5"/><text x="1.7231%" y="703.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (5 samples, 0.43%)</title><rect x="1.4731%" y="677" width="0.4333%" height="15" fill="rgb(246,89,9)" fg:x="17" fg:w="5"/><text x="1.7231%" y="687.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_delegate::did_finish_launching (5 samples, 0.43%)</title><rect x="1.4731%" y="661" width="0.4333%" height="15" fill="rgb(233,213,13)" fg:x="17" fg:w="5"/><text x="1.7231%" y="671.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::launched (5 samples, 0.43%)</title><rect x="1.4731%" y="645" width="0.4333%" height="15" fill="rgb(233,141,41)" fg:x="17" fg:w="5"/><text x="1.7231%" y="655.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (5 samples, 0.43%)</title><rect x="1.4731%" y="629" width="0.4333%" height="15" fill="rgb(239,167,4)" fg:x="17" fg:w="5"/><text x="1.7231%" y="639.50"></text></g><g><title>AppKit`-[NSMenuItem setSubmenu:] (1 samples, 0.09%)</title><rect x="1.8198%" y="613" width="0.0867%" height="15" fill="rgb(209,217,16)" fg:x="21" fg:w="1"/><text x="2.0698%" y="623.50"></text></g><g><title>AppKit`-[NSMenu _menuItem:didChangeSubmenuFrom:to:] (1 samples, 0.09%)</title><rect x="1.8198%" y="597" width="0.0867%" height="15" fill="rgb(219,88,35)" fg:x="21" fg:w="1"/><text x="2.0698%" y="607.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl _menuItem:atIndex:didChangeSubmenuFrom:to:] (1 samples, 0.09%)</title><rect x="1.8198%" y="581" width="0.0867%" height="15" fill="rgb(220,193,23)" fg:x="21" fg:w="1"/><text x="2.0698%" y="591.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl _initialMenuRefCreateIfNecessary] (1 samples, 0.09%)</title><rect x="1.8198%" y="565" width="0.0867%" height="15" fill="rgb(230,90,52)" fg:x="21" fg:w="1"/><text x="2.0698%" y="575.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl _instantiateCarbonMenu] (1 samples, 0.09%)</title><rect x="1.8198%" y="549" width="0.0867%" height="15" fill="rgb(252,106,19)" fg:x="21" fg:w="1"/><text x="2.0698%" y="559.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl _createMenuRef] (1 samples, 0.09%)</title><rect x="1.8198%" y="533" width="0.0867%" height="15" fill="rgb(206,74,20)" fg:x="21" fg:w="1"/><text x="2.0698%" y="543.50"></text></g><g><title>HIToolbox`CreateNewMenu (1 samples, 0.09%)</title><rect x="1.8198%" y="517" width="0.0867%" height="15" fill="rgb(230,138,44)" fg:x="21" fg:w="1"/><text x="2.0698%" y="527.50"></text></g><g><title>HIToolbox`CreateMenuData(MenuDefSpec const*, short, unsigned char const*, unsigned int, unsigned char, MenuData**) (1 samples, 0.09%)</title><rect x="1.8198%" y="501" width="0.0867%" height="15" fill="rgb(235,182,43)" fg:x="21" fg:w="1"/><text x="2.0698%" y="511.50"></text></g><g><title>HIToolbox`HIObjectCreate (1 samples, 0.09%)</title><rect x="1.8198%" y="485" width="0.0867%" height="15" fill="rgb(242,16,51)" fg:x="21" fg:w="1"/><text x="2.0698%" y="495.50"></text></g><g><title>HIToolbox`HIObject::Create (1 samples, 0.09%)</title><rect x="1.8198%" y="469" width="0.0867%" height="15" fill="rgb(248,9,4)" fg:x="21" fg:w="1"/><text x="2.0698%" y="479.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (1 samples, 0.09%)</title><rect x="1.8198%" y="453" width="0.0867%" height="15" fill="rgb(210,31,22)" fg:x="21" fg:w="1"/><text x="2.0698%" y="463.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (1 samples, 0.09%)</title><rect x="1.8198%" y="437" width="0.0867%" height="15" fill="rgb(239,54,39)" fg:x="21" fg:w="1"/><text x="2.0698%" y="447.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (1 samples, 0.09%)</title><rect x="1.8198%" y="421" width="0.0867%" height="15" fill="rgb(230,99,41)" fg:x="21" fg:w="1"/><text x="2.0698%" y="431.50"></text></g><g><title>HIToolbox`HIObject::HandleClassHIObjectEvent (1 samples, 0.09%)</title><rect x="1.8198%" y="405" width="0.0867%" height="15" fill="rgb(253,106,12)" fg:x="21" fg:w="1"/><text x="2.0698%" y="415.50"></text></g><g><title>HIToolbox`MenuData::Initialize (1 samples, 0.09%)</title><rect x="1.8198%" y="389" width="0.0867%" height="15" fill="rgb(213,46,41)" fg:x="21" fg:w="1"/><text x="2.0698%" y="399.50"></text></g><g><title>HIToolbox`MenuData::InitializeCommon (1 samples, 0.09%)</title><rect x="1.8198%" y="373" width="0.0867%" height="15" fill="rgb(215,133,35)" fg:x="21" fg:w="1"/><text x="2.0698%" y="383.50"></text></g><g><title>HIToolbox`_MenuElementCreate (1 samples, 0.09%)</title><rect x="1.8198%" y="357" width="0.0867%" height="15" fill="rgb(213,28,5)" fg:x="21" fg:w="1"/><text x="2.0698%" y="367.50"></text></g><g><title>HIToolbox`HIObjectCreate (1 samples, 0.09%)</title><rect x="1.8198%" y="341" width="0.0867%" height="15" fill="rgb(215,77,49)" fg:x="21" fg:w="1"/><text x="2.0698%" y="351.50"></text></g><g><title>HIToolbox`HIObject::Create (1 samples, 0.09%)</title><rect x="1.8198%" y="325" width="0.0867%" height="15" fill="rgb(248,100,22)" fg:x="21" fg:w="1"/><text x="2.0698%" y="335.50"></text></g><g><title>HIToolbox`HIObject::GetEventTarget (1 samples, 0.09%)</title><rect x="1.8198%" y="309" width="0.0867%" height="15" fill="rgb(208,67,9)" fg:x="21" fg:w="1"/><text x="2.0698%" y="319.50"></text></g><g><title>HIToolbox`InstallToolboxEventHandler (1 samples, 0.09%)</title><rect x="1.8198%" y="293" width="0.0867%" height="15" fill="rgb(219,133,21)" fg:x="21" fg:w="1"/><text x="2.0698%" y="303.50"></text></g><g><title>HIToolbox`PushEventHandler(EventTargetRec*, int (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*), unsigned char, unsigned long, EventTypeSpec const*, void*, OpaqueEventHandlerRef**) (1 samples, 0.09%)</title><rect x="1.8198%" y="277" width="0.0867%" height="15" fill="rgb(246,46,29)" fg:x="21" fg:w="1"/><text x="2.0698%" y="287.50"></text></g><g><title>HIToolbox`AddHandlersToIndex(EventTargetRec*, HandlerRec*, unsigned long, EventTypeSpec const*) (1 samples, 0.09%)</title><rect x="1.8198%" y="261" width="0.0867%" height="15" fill="rgb(246,185,52)" fg:x="21" fg:w="1"/><text x="2.0698%" y="271.50"></text></g><g><title>HIToolbox`TEventTypeIndex::AddTypes (1 samples, 0.09%)</title><rect x="1.8198%" y="245" width="0.0867%" height="15" fill="rgb(252,136,11)" fg:x="21" fg:w="1"/><text x="2.0698%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.09%)</title><rect x="1.8198%" y="229" width="0.0867%" height="15" fill="rgb(219,138,53)" fg:x="21" fg:w="1"/><text x="2.0698%" y="239.50"></text></g><g><title>CoreGraphics`CGContextClearRect (1 samples, 0.09%)</title><rect x="1.9064%" y="485" width="0.0867%" height="15" fill="rgb(211,51,23)" fg:x="22" fg:w="1"/><text x="2.1564%" y="495.50"></text></g><g><title>CoreGraphics`CGContextFillRect (1 samples, 0.09%)</title><rect x="1.9064%" y="469" width="0.0867%" height="15" fill="rgb(247,221,28)" fg:x="22" fg:w="1"/><text x="2.1564%" y="479.50"></text></g><g><title>CoreGraphics`CGContextFillRects (1 samples, 0.09%)</title><rect x="1.9064%" y="453" width="0.0867%" height="15" fill="rgb(251,222,45)" fg:x="22" fg:w="1"/><text x="2.1564%" y="463.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (1 samples, 0.09%)</title><rect x="1.9064%" y="437" width="0.0867%" height="15" fill="rgb(217,162,53)" fg:x="22" fg:w="1"/><text x="2.1564%" y="447.50"></text></g><g><title>CoreGraphics`ripc_Render (1 samples, 0.09%)</title><rect x="1.9064%" y="421" width="0.0867%" height="15" fill="rgb(229,93,14)" fg:x="22" fg:w="1"/><text x="2.1564%" y="431.50"></text></g><g><title>CoreGraphics`RIPLayerBltShape (1 samples, 0.09%)</title><rect x="1.9064%" y="405" width="0.0867%" height="15" fill="rgb(209,67,49)" fg:x="22" fg:w="1"/><text x="2.1564%" y="415.50"></text></g><g><title>CoreGraphics`ripd_Lock (1 samples, 0.09%)</title><rect x="1.9064%" y="389" width="0.0867%" height="15" fill="rgb(213,87,29)" fg:x="22" fg:w="1"/><text x="2.1564%" y="399.50"></text></g><g><title>SkyLight`SLSDeviceLock (1 samples, 0.09%)</title><rect x="1.9064%" y="373" width="0.0867%" height="15" fill="rgb(205,151,52)" fg:x="22" fg:w="1"/><text x="2.1564%" y="383.50"></text></g><g><title>SkyLight`update_device_geometry_size (1 samples, 0.09%)</title><rect x="1.9064%" y="357" width="0.0867%" height="15" fill="rgb(253,215,39)" fg:x="22" fg:w="1"/><text x="2.1564%" y="367.50"></text></g><g><title>SkyLight`CGSWindowGetSize (1 samples, 0.09%)</title><rect x="1.9064%" y="341" width="0.0867%" height="15" fill="rgb(221,220,41)" fg:x="22" fg:w="1"/><text x="2.1564%" y="351.50"></text></g><g><title>HIToolbox`HIMenuBarView::EnsureBarLayout (1 samples, 0.09%)</title><rect x="1.9931%" y="485" width="0.0867%" height="15" fill="rgb(218,133,21)" fg:x="23" fg:w="1"/><text x="2.2431%" y="495.50"></text></g><g><title>HIToolbox`HIMenuBarView::ReservedStatusItemSpace (1 samples, 0.09%)</title><rect x="1.9931%" y="469" width="0.0867%" height="15" fill="rgb(221,193,43)" fg:x="23" fg:w="1"/><text x="2.2431%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="1.9931%" y="453" width="0.0867%" height="15" fill="rgb(240,128,52)" fg:x="23" fg:w="1"/><text x="2.2431%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="1.9931%" y="437" width="0.0867%" height="15" fill="rgb(253,114,12)" fg:x="23" fg:w="1"/><text x="2.2431%" y="447.50"></text></g><g><title>HIToolbox`invocation function for block in HIMenuBarView::ReservedStatusItemSpace (1 samples, 0.09%)</title><rect x="1.9931%" y="421" width="0.0867%" height="15" fill="rgb(215,223,47)" fg:x="23" fg:w="1"/><text x="2.2431%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="1.9931%" y="405" width="0.0867%" height="15" fill="rgb(248,225,23)" fg:x="23" fg:w="1"/><text x="2.2431%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="1.9931%" y="389" width="0.0867%" height="15" fill="rgb(250,108,0)" fg:x="23" fg:w="1"/><text x="2.2431%" y="399.50"></text></g><g><title>HIToolbox`invocation function for block in SkyLightLibrary() (1 samples, 0.09%)</title><rect x="1.9931%" y="373" width="0.0867%" height="15" fill="rgb(228,208,7)" fg:x="23" fg:w="1"/><text x="2.2431%" y="383.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="1.9931%" y="357" width="0.0867%" height="15" fill="rgb(244,45,10)" fg:x="23" fg:w="1"/><text x="2.2431%" y="367.50"></text></g><g><title>dyld`dyld4::APIs::findImageContaining (1 samples, 0.09%)</title><rect x="1.9931%" y="341" width="0.0867%" height="15" fill="rgb(207,125,25)" fg:x="23" fg:w="1"/><text x="2.2431%" y="351.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.09%)</title><rect x="1.9931%" y="325" width="0.0867%" height="15" fill="rgb(210,195,18)" fg:x="23" fg:w="1"/><text x="2.2431%" y="335.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageContaining (1 samples, 0.09%)</title><rect x="1.9931%" y="309" width="0.0867%" height="15" fill="rgb(249,80,12)" fg:x="23" fg:w="1"/><text x="2.2431%" y="319.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::contains (1 samples, 0.09%)</title><rect x="1.9931%" y="293" width="0.0867%" height="15" fill="rgb(221,65,9)" fg:x="23" fg:w="1"/><text x="2.2431%" y="303.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawUsingQuartz:inContext:inBounds:atScale:] (1 samples, 0.09%)</title><rect x="2.0797%" y="389" width="0.0867%" height="15" fill="rgb(235,49,36)" fg:x="24" fg:w="1"/><text x="2.3297%" y="399.50"></text></g><g><title>CoreUI`invocation function for block in CUICoreThemeRenderer::DrawMenuTitle (1 samples, 0.09%)</title><rect x="2.0797%" y="373" width="0.0867%" height="15" fill="rgb(225,32,20)" fg:x="24" fg:w="1"/><text x="2.3297%" y="383.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (1 samples, 0.09%)</title><rect x="2.0797%" y="357" width="0.0867%" height="15" fill="rgb(215,141,46)" fg:x="24" fg:w="1"/><text x="2.3297%" y="367.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (1 samples, 0.09%)</title><rect x="2.0797%" y="341" width="0.0867%" height="15" fill="rgb(250,160,47)" fg:x="24" fg:w="1"/><text x="2.3297%" y="351.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (1 samples, 0.09%)</title><rect x="2.0797%" y="325" width="0.0867%" height="15" fill="rgb(216,222,40)" fg:x="24" fg:w="1"/><text x="2.3297%" y="335.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (1 samples, 0.09%)</title><rect x="2.0797%" y="309" width="0.0867%" height="15" fill="rgb(234,217,39)" fg:x="24" fg:w="1"/><text x="2.3297%" y="319.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (1 samples, 0.09%)</title><rect x="2.0797%" y="293" width="0.0867%" height="15" fill="rgb(207,178,40)" fg:x="24" fg:w="1"/><text x="2.3297%" y="303.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (1 samples, 0.09%)</title><rect x="2.0797%" y="277" width="0.0867%" height="15" fill="rgb(221,136,13)" fg:x="24" fg:w="1"/><text x="2.3297%" y="287.50"></text></g><g><title>CoreGraphics`img_data_lock (1 samples, 0.09%)</title><rect x="2.0797%" y="261" width="0.0867%" height="15" fill="rgb(249,199,10)" fg:x="24" fg:w="1"/><text x="2.3297%" y="271.50"></text></g><g><title>CoreGraphics`img_raw_read (1 samples, 0.09%)</title><rect x="2.0797%" y="245" width="0.0867%" height="15" fill="rgb(249,222,13)" fg:x="24" fg:w="1"/><text x="2.3297%" y="255.50"></text></g><g><title>CoreGraphics`get_chunks_direct (1 samples, 0.09%)</title><rect x="2.0797%" y="229" width="0.0867%" height="15" fill="rgb(244,185,38)" fg:x="24" fg:w="1"/><text x="2.3297%" y="239.50"></text></g><g><title>CoreGraphics`CGDataProviderDirectGetBytesAtPositionInternal (1 samples, 0.09%)</title><rect x="2.0797%" y="213" width="0.0867%" height="15" fill="rgb(236,202,9)" fg:x="24" fg:w="1"/><text x="2.3297%" y="223.50"></text></g><g><title>CoreGraphics`provider_for_destination_get_bytes_at_position_inner (1 samples, 0.09%)</title><rect x="2.0797%" y="197" width="0.0867%" height="15" fill="rgb(250,229,37)" fg:x="24" fg:w="1"/><text x="2.3297%" y="207.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertUsingCMSConverter (1 samples, 0.09%)</title><rect x="2.0797%" y="181" width="0.0867%" height="15" fill="rgb(206,174,23)" fg:x="24" fg:w="1"/><text x="2.3297%" y="191.50"></text></g><g><title>CoreGraphics`convert_icc (1 samples, 0.09%)</title><rect x="2.0797%" y="165" width="0.0867%" height="15" fill="rgb(211,33,43)" fg:x="24" fg:w="1"/><text x="2.3297%" y="175.50"></text></g><g><title>CoreGraphics`convert_using_vImageConverter (1 samples, 0.09%)</title><rect x="2.0797%" y="149" width="0.0867%" height="15" fill="rgb(245,58,50)" fg:x="24" fg:w="1"/><text x="2.3297%" y="159.50"></text></g><g><title>CoreGraphics`vImageConverterConvert (1 samples, 0.09%)</title><rect x="2.0797%" y="133" width="0.0867%" height="15" fill="rgb(244,68,36)" fg:x="24" fg:w="1"/><text x="2.3297%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="2.0797%" y="117" width="0.0867%" height="15" fill="rgb(232,229,15)" fg:x="24" fg:w="1"/><text x="2.3297%" y="127.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (2 samples, 0.17%)</title><rect x="2.0797%" y="469" width="0.1733%" height="15" fill="rgb(254,30,23)" fg:x="24" fg:w="2"/><text x="2.3297%" y="479.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (2 samples, 0.17%)</title><rect x="2.0797%" y="453" width="0.1733%" height="15" fill="rgb(235,160,14)" fg:x="24" fg:w="2"/><text x="2.3297%" y="463.50"></text></g><g><title>CoreUI`CUIDraw (2 samples, 0.17%)</title><rect x="2.0797%" y="437" width="0.1733%" height="15" fill="rgb(212,155,44)" fg:x="24" fg:w="2"/><text x="2.3297%" y="447.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (2 samples, 0.17%)</title><rect x="2.0797%" y="421" width="0.1733%" height="15" fill="rgb(226,2,50)" fg:x="24" fg:w="2"/><text x="2.3297%" y="431.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (2 samples, 0.17%)</title><rect x="2.0797%" y="405" width="0.1733%" height="15" fill="rgb(234,177,6)" fg:x="24" fg:w="2"/><text x="2.3297%" y="415.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateEffectPresetFromDescription (1 samples, 0.09%)</title><rect x="2.1664%" y="389" width="0.0867%" height="15" fill="rgb(217,24,9)" fg:x="25" fg:w="1"/><text x="2.4164%" y="399.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore renditionWithKey:usingKeySignature:] (1 samples, 0.09%)</title><rect x="2.1664%" y="373" width="0.0867%" height="15" fill="rgb(220,13,46)" fg:x="25" fg:w="1"/><text x="2.4164%" y="383.50"></text></g><g><title>CoreUI`-[CUIThemeRendition initWithCSIData:forKey:] (1 samples, 0.09%)</title><rect x="2.1664%" y="357" width="0.0867%" height="15" fill="rgb(239,221,27)" fg:x="25" fg:w="1"/><text x="2.4164%" y="367.50"></text></g><g><title>CoreUI`-[CUIThemeRendition _initWithCSIData:forKey:] (1 samples, 0.09%)</title><rect x="2.1664%" y="341" width="0.0867%" height="15" fill="rgb(222,198,25)" fg:x="25" fg:w="1"/><text x="2.4164%" y="351.50"></text></g><g><title>CoreUI`-[_CUIThemeEffectRendition _initWithCSIHeader:] (1 samples, 0.09%)</title><rect x="2.1664%" y="325" width="0.0867%" height="15" fill="rgb(211,99,13)" fg:x="25" fg:w="1"/><text x="2.4164%" y="335.50"></text></g><g><title>CoreUI`-[CUIThemeDataEffectPreset initWithEffectData:forScaleFactor:] (1 samples, 0.09%)</title><rect x="2.1664%" y="309" width="0.0867%" height="15" fill="rgb(232,111,31)" fg:x="25" fg:w="1"/><text x="2.4164%" y="319.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (5 samples, 0.43%)</title><rect x="1.9064%" y="517" width="0.4333%" height="15" fill="rgb(245,82,37)" fg:x="22" fg:w="5"/><text x="2.1564%" y="527.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (5 samples, 0.43%)</title><rect x="1.9064%" y="501" width="0.4333%" height="15" fill="rgb(227,149,46)" fg:x="22" fg:w="5"/><text x="2.1564%" y="511.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (3 samples, 0.26%)</title><rect x="2.0797%" y="485" width="0.2600%" height="15" fill="rgb(218,36,50)" fg:x="24" fg:w="3"/><text x="2.3297%" y="495.50"></text></g><g><title>HIToolbox`_HIThemeGetVibrantRenderer (1 samples, 0.09%)</title><rect x="2.2530%" y="469" width="0.0867%" height="15" fill="rgb(226,80,48)" fg:x="26" fg:w="1"/><text x="2.5030%" y="479.50"></text></g><g><title>HIToolbox`_HIThemeGetRendererWithNameFromSystemAppearanceBundle(__CFString const*) (1 samples, 0.09%)</title><rect x="2.2530%" y="453" width="0.0867%" height="15" fill="rgb(238,224,15)" fg:x="26" fg:w="1"/><text x="2.5030%" y="463.50"></text></g><g><title>CoreUI`CUIRenderer::Create (1 samples, 0.09%)</title><rect x="2.2530%" y="437" width="0.0867%" height="15" fill="rgb(241,136,10)" fg:x="26" fg:w="1"/><text x="2.5030%" y="447.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CUICoreThemeRenderer (1 samples, 0.09%)</title><rect x="2.2530%" y="421" width="0.0867%" height="15" fill="rgb(208,32,45)" fg:x="26" fg:w="1"/><text x="2.5030%" y="431.50"></text></g><g><title>CoreUI`+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (1 samples, 0.09%)</title><rect x="2.2530%" y="405" width="0.0867%" height="15" fill="rgb(207,135,9)" fg:x="26" fg:w="1"/><text x="2.5030%" y="415.50"></text></g><g><title>CoreUI`PerformBlockWithThemeRefCache (1 samples, 0.09%)</title><rect x="2.2530%" y="389" width="0.0867%" height="15" fill="rgb(206,86,44)" fg:x="26" fg:w="1"/><text x="2.5030%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="2.2530%" y="373" width="0.0867%" height="15" fill="rgb(245,177,15)" fg:x="26" fg:w="1"/><text x="2.5030%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="2.2530%" y="357" width="0.0867%" height="15" fill="rgb(206,64,50)" fg:x="26" fg:w="1"/><text x="2.5030%" y="367.50"></text></g><g><title>CoreUI`__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (1 samples, 0.09%)</title><rect x="2.2530%" y="341" width="0.0867%" height="15" fill="rgb(234,36,40)" fg:x="26" fg:w="1"/><text x="2.5030%" y="351.50"></text></g><g><title>Foundation`-[NSBundle pathForResource:ofType:inDirectory:] (1 samples, 0.09%)</title><rect x="2.2530%" y="325" width="0.0867%" height="15" fill="rgb(213,64,8)" fg:x="26" fg:w="1"/><text x="2.5030%" y="335.50"></text></g><g><title>Foundation`-[NSBundle URLForResource:withExtension:subdirectory:] (1 samples, 0.09%)</title><rect x="2.2530%" y="309" width="0.0867%" height="15" fill="rgb(210,75,36)" fg:x="26" fg:w="1"/><text x="2.5030%" y="319.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.09%)</title><rect x="2.2530%" y="293" width="0.0867%" height="15" fill="rgb(229,88,21)" fg:x="26" fg:w="1"/><text x="2.5030%" y="303.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.09%)</title><rect x="2.2530%" y="277" width="0.0867%" height="15" fill="rgb(252,204,47)" fg:x="26" fg:w="1"/><text x="2.5030%" y="287.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.09%)</title><rect x="2.2530%" y="261" width="0.0867%" height="15" fill="rgb(208,77,27)" fg:x="26" fg:w="1"/><text x="2.5030%" y="271.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.09%)</title><rect x="2.2530%" y="245" width="0.0867%" height="15" fill="rgb(221,76,26)" fg:x="26" fg:w="1"/><text x="2.5030%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (1 samples, 0.09%)</title><rect x="2.2530%" y="229" width="0.0867%" height="15" fill="rgb(225,139,18)" fg:x="26" fg:w="1"/><text x="2.5030%" y="239.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (6 samples, 0.52%)</title><rect x="1.9064%" y="869" width="0.5199%" height="15" fill="rgb(230,137,11)" fg:x="22" fg:w="6"/><text x="2.1564%" y="879.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (6 samples, 0.52%)</title><rect x="1.9064%" y="853" width="0.5199%" height="15" fill="rgb(212,28,1)" fg:x="22" fg:w="6"/><text x="2.1564%" y="863.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (6 samples, 0.52%)</title><rect x="1.9064%" y="837" width="0.5199%" height="15" fill="rgb(248,164,17)" fg:x="22" fg:w="6"/><text x="2.1564%" y="847.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (6 samples, 0.52%)</title><rect x="1.9064%" y="821" width="0.5199%" height="15" fill="rgb(222,171,42)" fg:x="22" fg:w="6"/><text x="2.1564%" y="831.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (6 samples, 0.52%)</title><rect x="1.9064%" y="805" width="0.5199%" height="15" fill="rgb(243,84,45)" fg:x="22" fg:w="6"/><text x="2.1564%" y="815.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (6 samples, 0.52%)</title><rect x="1.9064%" y="789" width="0.5199%" height="15" fill="rgb(252,49,23)" fg:x="22" fg:w="6"/><text x="2.1564%" y="799.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (6 samples, 0.52%)</title><rect x="1.9064%" y="773" width="0.5199%" height="15" fill="rgb(215,19,7)" fg:x="22" fg:w="6"/><text x="2.1564%" y="783.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (6 samples, 0.52%)</title><rect x="1.9064%" y="757" width="0.5199%" height="15" fill="rgb(238,81,41)" fg:x="22" fg:w="6"/><text x="2.1564%" y="767.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (6 samples, 0.52%)</title><rect x="1.9064%" y="741" width="0.5199%" height="15" fill="rgb(210,199,37)" fg:x="22" fg:w="6"/><text x="2.1564%" y="751.50"></text></g><g><title>HIToolbox`ShowHide (6 samples, 0.52%)</title><rect x="1.9064%" y="725" width="0.5199%" height="15" fill="rgb(244,192,49)" fg:x="22" fg:w="6"/><text x="2.1564%" y="735.50"></text></g><g><title>HIToolbox`_ShowHideWindows (6 samples, 0.52%)</title><rect x="1.9064%" y="709" width="0.5199%" height="15" fill="rgb(226,211,11)" fg:x="22" fg:w="6"/><text x="2.1564%" y="719.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (6 samples, 0.52%)</title><rect x="1.9064%" y="693" width="0.5199%" height="15" fill="rgb(236,162,54)" fg:x="22" fg:w="6"/><text x="2.1564%" y="703.50"></text></g><g><title>HIToolbox`HIView::Render (6 samples, 0.52%)</title><rect x="1.9064%" y="677" width="0.5199%" height="15" fill="rgb(220,229,9)" fg:x="22" fg:w="6"/><text x="2.1564%" y="687.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (6 samples, 0.52%)</title><rect x="1.9064%" y="661" width="0.5199%" height="15" fill="rgb(250,87,22)" fg:x="22" fg:w="6"/><text x="2.1564%" y="671.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.52%)</title><rect x="1.9064%" y="645" width="0.5199%" height="15" fill="rgb(239,43,17)" fg:x="22" fg:w="6"/><text x="2.1564%" y="655.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.52%)</title><rect x="1.9064%" y="629" width="0.5199%" height="15" fill="rgb(231,177,25)" fg:x="22" fg:w="6"/><text x="2.1564%" y="639.50"></text></g><g><title>HIToolbox`HIView::SendDraw (6 samples, 0.52%)</title><rect x="1.9064%" y="613" width="0.5199%" height="15" fill="rgb(219,179,1)" fg:x="22" fg:w="6"/><text x="2.1564%" y="623.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (6 samples, 0.52%)</title><rect x="1.9064%" y="597" width="0.5199%" height="15" fill="rgb(238,219,53)" fg:x="22" fg:w="6"/><text x="2.1564%" y="607.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.52%)</title><rect x="1.9064%" y="581" width="0.5199%" height="15" fill="rgb(232,167,36)" fg:x="22" fg:w="6"/><text x="2.1564%" y="591.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.52%)</title><rect x="1.9064%" y="565" width="0.5199%" height="15" fill="rgb(244,19,51)" fg:x="22" fg:w="6"/><text x="2.1564%" y="575.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (6 samples, 0.52%)</title><rect x="1.9064%" y="549" width="0.5199%" height="15" fill="rgb(224,6,22)" fg:x="22" fg:w="6"/><text x="2.1564%" y="559.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (6 samples, 0.52%)</title><rect x="1.9064%" y="533" width="0.5199%" height="15" fill="rgb(224,145,5)" fg:x="22" fg:w="6"/><text x="2.1564%" y="543.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (1 samples, 0.09%)</title><rect x="2.3397%" y="517" width="0.0867%" height="15" fill="rgb(234,130,49)" fg:x="27" fg:w="1"/><text x="2.5897%" y="527.50"></text></g><g><title>CoreGraphics`CGContextClearRect (1 samples, 0.09%)</title><rect x="2.3397%" y="501" width="0.0867%" height="15" fill="rgb(254,6,2)" fg:x="27" fg:w="1"/><text x="2.5897%" y="511.50"></text></g><g><title>CoreGraphics`CGContextFillRect (1 samples, 0.09%)</title><rect x="2.3397%" y="485" width="0.0867%" height="15" fill="rgb(208,96,46)" fg:x="27" fg:w="1"/><text x="2.5897%" y="495.50"></text></g><g><title>CoreGraphics`CGContextFillRects (1 samples, 0.09%)</title><rect x="2.3397%" y="469" width="0.0867%" height="15" fill="rgb(239,3,39)" fg:x="27" fg:w="1"/><text x="2.5897%" y="479.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (1 samples, 0.09%)</title><rect x="2.3397%" y="453" width="0.0867%" height="15" fill="rgb(233,210,1)" fg:x="27" fg:w="1"/><text x="2.5897%" y="463.50"></text></g><g><title>CoreGraphics`ripc_Render (1 samples, 0.09%)</title><rect x="2.3397%" y="437" width="0.0867%" height="15" fill="rgb(244,137,37)" fg:x="27" fg:w="1"/><text x="2.5897%" y="447.50"></text></g><g><title>CoreGraphics`RIPLayerBltShape (1 samples, 0.09%)</title><rect x="2.3397%" y="421" width="0.0867%" height="15" fill="rgb(240,136,2)" fg:x="27" fg:w="1"/><text x="2.5897%" y="431.50"></text></g><g><title>CoreGraphics`argb32_mark (1 samples, 0.09%)</title><rect x="2.3397%" y="405" width="0.0867%" height="15" fill="rgb(239,18,37)" fg:x="27" fg:w="1"/><text x="2.5897%" y="415.50"></text></g><g><title>CoreGraphics`CGBlt_fillBytes (1 samples, 0.09%)</title><rect x="2.3397%" y="389" width="0.0867%" height="15" fill="rgb(218,185,22)" fg:x="27" fg:w="1"/><text x="2.5897%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="2.3397%" y="373" width="0.0867%" height="15" fill="rgb(225,218,4)" fg:x="27" fg:w="1"/><text x="2.5897%" y="383.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (1 samples, 0.09%)</title><rect x="2.4263%" y="869" width="0.0867%" height="15" fill="rgb(230,182,32)" fg:x="28" fg:w="1"/><text x="2.6763%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.09%)</title><rect x="2.4263%" y="853" width="0.0867%" height="15" fill="rgb(242,56,43)" fg:x="28" fg:w="1"/><text x="2.6763%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (1 samples, 0.09%)</title><rect x="2.5130%" y="837" width="0.0867%" height="15" fill="rgb(233,99,24)" fg:x="29" fg:w="1"/><text x="2.7630%" y="847.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (1 samples, 0.09%)</title><rect x="2.5130%" y="821" width="0.0867%" height="15" fill="rgb(234,209,42)" fg:x="29" fg:w="1"/><text x="2.7630%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (1 samples, 0.09%)</title><rect x="2.5130%" y="805" width="0.0867%" height="15" fill="rgb(227,7,12)" fg:x="29" fg:w="1"/><text x="2.7630%" y="815.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.09%)</title><rect x="2.5130%" y="789" width="0.0867%" height="15" fill="rgb(245,203,43)" fg:x="29" fg:w="1"/><text x="2.7630%" y="799.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.09%)</title><rect x="2.5130%" y="773" width="0.0867%" height="15" fill="rgb(238,205,33)" fg:x="29" fg:w="1"/><text x="2.7630%" y="783.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (1 samples, 0.09%)</title><rect x="2.5130%" y="757" width="0.0867%" height="15" fill="rgb(231,56,7)" fg:x="29" fg:w="1"/><text x="2.7630%" y="767.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (1 samples, 0.09%)</title><rect x="2.5130%" y="741" width="0.0867%" height="15" fill="rgb(244,186,29)" fg:x="29" fg:w="1"/><text x="2.7630%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="2.5130%" y="725" width="0.0867%" height="15" fill="rgb(234,111,31)" fg:x="29" fg:w="1"/><text x="2.7630%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.09%)</title><rect x="2.5997%" y="725" width="0.0867%" height="15" fill="rgb(241,149,10)" fg:x="30" fg:w="1"/><text x="2.8497%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (1 samples, 0.09%)</title><rect x="2.5997%" y="709" width="0.0867%" height="15" fill="rgb(249,206,44)" fg:x="30" fg:w="1"/><text x="2.8497%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (1 samples, 0.09%)</title><rect x="2.5997%" y="693" width="0.0867%" height="15" fill="rgb(251,153,30)" fg:x="30" fg:w="1"/><text x="2.8497%" y="703.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (2 samples, 0.17%)</title><rect x="2.5997%" y="821" width="0.1733%" height="15" fill="rgb(239,152,38)" fg:x="30" fg:w="2"/><text x="2.8497%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (2 samples, 0.17%)</title><rect x="2.5997%" y="805" width="0.1733%" height="15" fill="rgb(249,139,47)" fg:x="30" fg:w="2"/><text x="2.8497%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (2 samples, 0.17%)</title><rect x="2.5997%" y="789" width="0.1733%" height="15" fill="rgb(244,64,35)" fg:x="30" fg:w="2"/><text x="2.8497%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (2 samples, 0.17%)</title><rect x="2.5997%" y="773" width="0.1733%" height="15" fill="rgb(216,46,15)" fg:x="30" fg:w="2"/><text x="2.8497%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.17%)</title><rect x="2.5997%" y="757" width="0.1733%" height="15" fill="rgb(250,74,19)" fg:x="30" fg:w="2"/><text x="2.8497%" y="767.50"></text></g><g><title>libapp_launch_measurement.dylib`__alm_execute_when_main_queue_idle_with_condition_block_invoke (2 samples, 0.17%)</title><rect x="2.5997%" y="741" width="0.1733%" height="15" fill="rgb(249,42,33)" fg:x="30" fg:w="2"/><text x="2.8497%" y="751.50"></text></g><g><title>libdispatch.dylib`dispatch_after (1 samples, 0.09%)</title><rect x="2.6863%" y="725" width="0.0867%" height="15" fill="rgb(242,149,17)" fg:x="31" fg:w="1"/><text x="2.9363%" y="735.50"></text></g><g><title>libdispatch.dylib`dispatch_source_create (1 samples, 0.09%)</title><rect x="2.6863%" y="709" width="0.0867%" height="15" fill="rgb(244,29,21)" fg:x="31" fg:w="1"/><text x="2.9363%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_timer_create (1 samples, 0.09%)</title><rect x="2.6863%" y="693" width="0.0867%" height="15" fill="rgb(220,130,37)" fg:x="31" fg:w="1"/><text x="2.9363%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_calloc (1 samples, 0.09%)</title><rect x="2.6863%" y="677" width="0.0867%" height="15" fill="rgb(211,67,2)" fg:x="31" fg:w="1"/><text x="2.9363%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="2.6863%" y="661" width="0.0867%" height="15" fill="rgb(235,68,52)" fg:x="31" fg:w="1"/><text x="2.9363%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.09%)</title><rect x="2.6863%" y="645" width="0.0867%" height="15" fill="rgb(246,142,3)" fg:x="31" fg:w="1"/><text x="2.9363%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.09%)</title><rect x="2.6863%" y="629" width="0.0867%" height="15" fill="rgb(241,25,7)" fg:x="31" fg:w="1"/><text x="2.9363%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.09%)</title><rect x="2.6863%" y="613" width="0.0867%" height="15" fill="rgb(242,119,39)" fg:x="31" fg:w="1"/><text x="2.9363%" y="623.50"></text></g><g><title>HIToolbox`LMGetKbdType (1 samples, 0.09%)</title><rect x="2.7730%" y="757" width="0.0867%" height="15" fill="rgb(241,98,45)" fg:x="32" fg:w="1"/><text x="3.0230%" y="767.50"></text></g><g><title>HIToolbox`GetKeyboardType (1 samples, 0.09%)</title><rect x="2.7730%" y="741" width="0.0867%" height="15" fill="rgb(254,28,30)" fg:x="32" fg:w="1"/><text x="3.0230%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="2.7730%" y="725" width="0.0867%" height="15" fill="rgb(241,142,54)" fg:x="32" fg:w="1"/><text x="3.0230%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="2.7730%" y="709" width="0.0867%" height="15" fill="rgb(222,85,15)" fg:x="32" fg:w="1"/><text x="3.0230%" y="719.50"></text></g><g><title>HIToolbox`__SkyLightLibrary_block_invoke (1 samples, 0.09%)</title><rect x="2.7730%" y="693" width="0.0867%" height="15" fill="rgb(210,85,47)" fg:x="32" fg:w="1"/><text x="3.0230%" y="703.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="2.7730%" y="677" width="0.0867%" height="15" fill="rgb(224,206,25)" fg:x="32" fg:w="1"/><text x="3.0230%" y="687.50"></text></g><g><title>dyld`dyld4::APIs::findImageContaining (1 samples, 0.09%)</title><rect x="2.7730%" y="661" width="0.0867%" height="15" fill="rgb(243,201,19)" fg:x="32" fg:w="1"/><text x="3.0230%" y="671.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.09%)</title><rect x="2.7730%" y="645" width="0.0867%" height="15" fill="rgb(236,59,4)" fg:x="32" fg:w="1"/><text x="3.0230%" y="655.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageContaining (1 samples, 0.09%)</title><rect x="2.7730%" y="629" width="0.0867%" height="15" fill="rgb(254,179,45)" fg:x="32" fg:w="1"/><text x="3.0230%" y="639.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::contains (1 samples, 0.09%)</title><rect x="2.7730%" y="613" width="0.0867%" height="15" fill="rgb(226,14,10)" fg:x="32" fg:w="1"/><text x="3.0230%" y="623.50"></text></g><g><title>LaunchServices`UTTypeCreatePreferredIdentifierForTag (1 samples, 0.09%)</title><rect x="2.8596%" y="405" width="0.0867%" height="15" fill="rgb(244,27,41)" fg:x="33" fg:w="1"/><text x="3.1096%" y="415.50"></text></g><g><title>LaunchServices`+[UTTypeRecord typeRecordWithTag:ofClass:conformingToIdentifier:] (1 samples, 0.09%)</title><rect x="2.8596%" y="389" width="0.0867%" height="15" fill="rgb(235,35,32)" fg:x="33" fg:w="1"/><text x="3.1096%" y="399.50"></text></g><g><title>LaunchServices`LaunchServices::Database::Context::_get (1 samples, 0.09%)</title><rect x="2.8596%" y="373" width="0.0867%" height="15" fill="rgb(218,68,31)" fg:x="33" fg:w="1"/><text x="3.1096%" y="383.50"></text></g><g><title>LaunchServices`_LSContextInitCommon(LSContext*, unsigned int const*, unsigned long, NSError* __autoreleasing*) (1 samples, 0.09%)</title><rect x="2.8596%" y="357" width="0.0867%" height="15" fill="rgb(207,120,37)" fg:x="33" fg:w="1"/><text x="3.1096%" y="367.50"></text></g><g><title>LaunchServices`_LSDatabaseCreate (1 samples, 0.09%)</title><rect x="2.8596%" y="341" width="0.0867%" height="15" fill="rgb(227,98,0)" fg:x="33" fg:w="1"/><text x="3.1096%" y="351.50"></text></g><g><title>LaunchServices`_LSDatabaseCreateWithAccessQueue (1 samples, 0.09%)</title><rect x="2.8596%" y="325" width="0.0867%" height="15" fill="rgb(207,7,3)" fg:x="33" fg:w="1"/><text x="3.1096%" y="335.50"></text></g><g><title>CoreServicesStore`CSStringBindingStoreInit (1 samples, 0.09%)</title><rect x="2.8596%" y="309" width="0.0867%" height="15" fill="rgb(206,98,19)" fg:x="33" fg:w="1"/><text x="3.1096%" y="319.50"></text></g><g><title>CoreServicesStore`CSMapInit (1 samples, 0.09%)</title><rect x="2.8596%" y="293" width="0.0867%" height="15" fill="rgb(217,5,26)" fg:x="33" fg:w="1"/><text x="3.1096%" y="303.50"></text></g><g><title>CoreServicesStore`_CSStoreGetTableWithName (1 samples, 0.09%)</title><rect x="2.8596%" y="277" width="0.0867%" height="15" fill="rgb(235,190,38)" fg:x="33" fg:w="1"/><text x="3.1096%" y="287.50"></text></g><g><title>CoreServicesStore`CSStore2::Store::getTable (1 samples, 0.09%)</title><rect x="2.8596%" y="261" width="0.0867%" height="15" fill="rgb(247,86,24)" fg:x="33" fg:w="1"/><text x="3.1096%" y="271.50"></text></g><g><title>CoreServicesStore`CSStore2::Store::enumerateTables(void  (1 samples, 0.09%)</title><rect x="2.8596%" y="245" width="0.0867%" height="15" fill="rgb(205,101,16)" fg:x="33" fg:w="1"/><text x="3.1096%" y="255.50"></text></g><g><title>CoreServicesStore`CSStore2::Store::enumerateUnits(CSStore2::Table const*, void  (1 samples, 0.09%)</title><rect x="2.8596%" y="229" width="0.0867%" height="15" fill="rgb(246,168,33)" fg:x="33" fg:w="1"/><text x="3.1096%" y="239.50"></text></g><g><title>CoreServicesStore`invocation function for block in CSStore2::Store::getTable (1 samples, 0.09%)</title><rect x="2.8596%" y="213" width="0.0867%" height="15" fill="rgb(231,114,1)" fg:x="33" fg:w="1"/><text x="3.1096%" y="223.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytesNoCopy (1 samples, 0.09%)</title><rect x="2.8596%" y="197" width="0.0867%" height="15" fill="rgb(207,184,53)" fg:x="33" fg:w="1"/><text x="3.1096%" y="207.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.09%)</title><rect x="2.8596%" y="181" width="0.0867%" height="15" fill="rgb(224,95,51)" fg:x="33" fg:w="1"/><text x="3.1096%" y="191.50"></text></g><g><title>CoreFoundation`CFAllocatorAllocate (1 samples, 0.09%)</title><rect x="2.8596%" y="165" width="0.0867%" height="15" fill="rgb(212,188,45)" fg:x="33" fg:w="1"/><text x="3.1096%" y="175.50"></text></g><g><title>HIToolbox`GetInputSourceEnabledPrefsIncludingThirdParty (2 samples, 0.17%)</title><rect x="2.8596%" y="645" width="0.1733%" height="15" fill="rgb(223,154,38)" fg:x="33" fg:w="2"/><text x="3.1096%" y="655.50"></text></g><g><title>HIToolbox`CopyInputSourceEnabledPrefs (2 samples, 0.17%)</title><rect x="2.8596%" y="629" width="0.1733%" height="15" fill="rgb(251,22,52)" fg:x="33" fg:w="2"/><text x="3.1096%" y="639.50"></text></g><g><title>HIToolbox`ValidateEnabledInputSourceIDs (2 samples, 0.17%)</title><rect x="2.8596%" y="613" width="0.1733%" height="15" fill="rgb(229,209,22)" fg:x="33" fg:w="2"/><text x="3.1096%" y="623.50"></text></g><g><title>HIToolbox`islcGetInputMethodIndexFromBundleID (2 samples, 0.17%)</title><rect x="2.8596%" y="597" width="0.1733%" height="15" fill="rgb(234,138,34)" fg:x="33" fg:w="2"/><text x="3.1096%" y="607.50"></text></g><g><title>HIToolbox`GetInputSourceCacheHeader (2 samples, 0.17%)</title><rect x="2.8596%" y="581" width="0.1733%" height="15" fill="rgb(212,95,11)" fg:x="33" fg:w="2"/><text x="3.1096%" y="591.50"></text></g><g><title>HIToolbox`InitializeInputSourceCache (2 samples, 0.17%)</title><rect x="2.8596%" y="565" width="0.1733%" height="15" fill="rgb(240,179,47)" fg:x="33" fg:w="2"/><text x="3.1096%" y="575.50"></text></g><g><title>CarbonCore`IntlFCOpenComponentData (2 samples, 0.17%)</title><rect x="2.8596%" y="549" width="0.1733%" height="15" fill="rgb(240,163,11)" fg:x="33" fg:w="2"/><text x="3.1096%" y="559.50"></text></g><g><title>CarbonCore`CacheFMMapData (2 samples, 0.17%)</title><rect x="2.8596%" y="533" width="0.1733%" height="15" fill="rgb(236,37,12)" fg:x="33" fg:w="2"/><text x="3.1096%" y="543.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (2 samples, 0.17%)</title><rect x="2.8596%" y="517" width="0.1733%" height="15" fill="rgb(232,164,16)" fg:x="33" fg:w="2"/><text x="3.1096%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.17%)</title><rect x="2.8596%" y="501" width="0.1733%" height="15" fill="rgb(244,205,15)" fg:x="33" fg:w="2"/><text x="3.1096%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.17%)</title><rect x="2.8596%" y="485" width="0.1733%" height="15" fill="rgb(223,117,47)" fg:x="33" fg:w="2"/><text x="3.1096%" y="495.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (2 samples, 0.17%)</title><rect x="2.8596%" y="469" width="0.1733%" height="15" fill="rgb(244,107,35)" fg:x="33" fg:w="2"/><text x="3.1096%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.17%)</title><rect x="2.8596%" y="453" width="0.1733%" height="15" fill="rgb(205,140,8)" fg:x="33" fg:w="2"/><text x="3.1096%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.17%)</title><rect x="2.8596%" y="437" width="0.1733%" height="15" fill="rgb(228,84,46)" fg:x="33" fg:w="2"/><text x="3.1096%" y="447.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (2 samples, 0.17%)</title><rect x="2.8596%" y="421" width="0.1733%" height="15" fill="rgb(254,188,9)" fg:x="33" fg:w="2"/><text x="3.1096%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="2.9463%" y="405" width="0.0867%" height="15" fill="rgb(206,112,54)" fg:x="34" fg:w="1"/><text x="3.1963%" y="415.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.09%)</title><rect x="2.9463%" y="389" width="0.0867%" height="15" fill="rgb(216,84,49)" fg:x="34" fg:w="1"/><text x="3.1963%" y="399.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="2.9463%" y="373" width="0.0867%" height="15" fill="rgb(214,194,35)" fg:x="34" fg:w="1"/><text x="3.1963%" y="383.50"></text></g><g><title>dyld`dyld4::Loader::getLoader (1 samples, 0.09%)</title><rect x="2.9463%" y="357" width="0.0867%" height="15" fill="rgb(249,28,3)" fg:x="34" fg:w="1"/><text x="3.1963%" y="367.50"></text></g><g><title>dyld`dyld4::ProcessConfig::canonicalDylibPathInCache (1 samples, 0.09%)</title><rect x="2.9463%" y="341" width="0.0867%" height="15" fill="rgb(222,56,52)" fg:x="34" fg:w="1"/><text x="3.1963%" y="351.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::realpath (1 samples, 0.09%)</title><rect x="2.9463%" y="325" width="0.0867%" height="15" fill="rgb(245,217,50)" fg:x="34" fg:w="1"/><text x="3.1963%" y="335.50"></text></g><g><title>dyld`dyld3::open (1 samples, 0.09%)</title><rect x="2.9463%" y="309" width="0.0867%" height="15" fill="rgb(213,201,24)" fg:x="34" fg:w="1"/><text x="3.1963%" y="319.50"></text></g><g><title>dyld`open_with_subsystem (1 samples, 0.09%)</title><rect x="2.9463%" y="293" width="0.0867%" height="15" fill="rgb(248,116,28)" fg:x="34" fg:w="1"/><text x="3.1963%" y="303.50"></text></g><g><title>dyld`__open (1 samples, 0.09%)</title><rect x="2.9463%" y="277" width="0.0867%" height="15" fill="rgb(219,72,43)" fg:x="34" fg:w="1"/><text x="3.1963%" y="287.50"></text></g><g><title>AppKit`__35-[_NSMenuShortcutUpdater schedule:]_block_invoke (4 samples, 0.35%)</title><rect x="2.7730%" y="789" width="0.3466%" height="15" fill="rgb(209,138,14)" fg:x="32" fg:w="4"/><text x="3.0230%" y="799.50"></text></g><g><title>AppKit`UpdateKeyboardAwareShortcutsForCurrentInputSource (4 samples, 0.35%)</title><rect x="2.7730%" y="773" width="0.3466%" height="15" fill="rgb(222,18,33)" fg:x="32" fg:w="4"/><text x="3.0230%" y="783.50"></text></g><g><title>HIToolbox`TISCopyCurrentKeyboardLayoutInputSource (3 samples, 0.26%)</title><rect x="2.8596%" y="757" width="0.2600%" height="15" fill="rgb(213,199,7)" fg:x="33" fg:w="3"/><text x="3.1096%" y="767.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardLayoutInputSourceRefCreate (3 samples, 0.26%)</title><rect x="2.8596%" y="741" width="0.2600%" height="15" fill="rgb(250,110,10)" fg:x="33" fg:w="3"/><text x="3.1096%" y="751.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardInputSourceRefCreate (3 samples, 0.26%)</title><rect x="2.8596%" y="725" width="0.2600%" height="15" fill="rgb(248,123,6)" fg:x="33" fg:w="3"/><text x="3.1096%" y="735.50"></text></g><g><title>HIToolbox`isCreateCurrentKeyboardInputSourceRef (3 samples, 0.26%)</title><rect x="2.8596%" y="709" width="0.2600%" height="15" fill="rgb(206,91,31)" fg:x="33" fg:w="3"/><text x="3.1096%" y="719.50"></text></g><g><title>HIToolbox`_HaveOnlyOneKeyboardInputSource (3 samples, 0.26%)</title><rect x="2.8596%" y="693" width="0.2600%" height="15" fill="rgb(211,154,13)" fg:x="33" fg:w="3"/><text x="3.1096%" y="703.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (3 samples, 0.26%)</title><rect x="2.8596%" y="677" width="0.2600%" height="15" fill="rgb(225,148,7)" fg:x="33" fg:w="3"/><text x="3.1096%" y="687.50"></text></g><g><title>HIToolbox`isPrefsCreateCacheFromEnabledAndDefaultInputSources (3 samples, 0.26%)</title><rect x="2.8596%" y="661" width="0.2600%" height="15" fill="rgb(220,160,43)" fg:x="33" fg:w="3"/><text x="3.1096%" y="671.50"></text></g><g><title>HIToolbox`isPrefsGetDefaultAsciiKeyboardLayout (1 samples, 0.09%)</title><rect x="3.0329%" y="645" width="0.0867%" height="15" fill="rgb(213,52,39)" fg:x="35" fg:w="1"/><text x="3.2829%" y="655.50"></text></g><g><title>CoreFoundation`CFPasteboardCreate (1 samples, 0.09%)</title><rect x="3.0329%" y="629" width="0.0867%" height="15" fill="rgb(243,137,7)" fg:x="35" fg:w="1"/><text x="3.2829%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (1 samples, 0.09%)</title><rect x="3.0329%" y="613" width="0.0867%" height="15" fill="rgb(230,79,13)" fg:x="35" fg:w="1"/><text x="3.2829%" y="623.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.09%)</title><rect x="3.0329%" y="597" width="0.0867%" height="15" fill="rgb(247,105,23)" fg:x="35" fg:w="1"/><text x="3.2829%" y="607.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.09%)</title><rect x="3.0329%" y="581" width="0.0867%" height="15" fill="rgb(223,179,41)" fg:x="35" fg:w="1"/><text x="3.2829%" y="591.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.09%)</title><rect x="3.0329%" y="565" width="0.0867%" height="15" fill="rgb(218,9,34)" fg:x="35" fg:w="1"/><text x="3.2829%" y="575.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.09%)</title><rect x="3.0329%" y="549" width="0.0867%" height="15" fill="rgb(222,106,8)" fg:x="35" fg:w="1"/><text x="3.2829%" y="559.50"></text></g><g><title>libobjc.A.dylib`lockAndFinishInitializing(objc_class*, objc_class*) (1 samples, 0.09%)</title><rect x="3.0329%" y="533" width="0.0867%" height="15" fill="rgb(211,220,0)" fg:x="35" fg:w="1"/><text x="3.2829%" y="543.50"></text></g><g><title>libobjc.A.dylib`_finishInitializing(objc_class*, objc_class*) (1 samples, 0.09%)</title><rect x="3.0329%" y="517" width="0.0867%" height="15" fill="rgb(229,52,16)" fg:x="35" fg:w="1"/><text x="3.2829%" y="527.50"></text></g><g><title>AppKit`+[NSEvent(NSConcurrentEvents) _startConcurrentEventProcessing] (1 samples, 0.09%)</title><rect x="3.1196%" y="773" width="0.0867%" height="15" fill="rgb(212,155,18)" fg:x="36" fg:w="1"/><text x="3.3696%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.09%)</title><rect x="3.1196%" y="757" width="0.0867%" height="15" fill="rgb(242,21,14)" fg:x="36" fg:w="1"/><text x="3.3696%" y="767.50"></text></g><g><title>AppKit`-[_NSFunctionRow _setStatus:] (1 samples, 0.09%)</title><rect x="3.2062%" y="677" width="0.0867%" height="15" fill="rgb(222,19,48)" fg:x="37" fg:w="1"/><text x="3.4562%" y="687.50"></text></g><g><title>AppKit`-[NSView _windowWillOrderOnScreen] (1 samples, 0.09%)</title><rect x="3.2062%" y="661" width="0.0867%" height="15" fill="rgb(232,45,27)" fg:x="37" fg:w="1"/><text x="3.4562%" y="671.50"></text></g><g><title>AppKit`-[NSView _windowWillOrderOnScreen] (1 samples, 0.09%)</title><rect x="3.2062%" y="645" width="0.0867%" height="15" fill="rgb(249,103,42)" fg:x="37" fg:w="1"/><text x="3.4562%" y="655.50"></text></g><g><title>AppKit`-[NSView _windowWillOrderOnScreen] (1 samples, 0.09%)</title><rect x="3.2062%" y="629" width="0.0867%" height="15" fill="rgb(246,81,33)" fg:x="37" fg:w="1"/><text x="3.4562%" y="639.50"></text></g><g><title>AppKit`-[NSViewController _windowWillOrderOnScreen] (1 samples, 0.09%)</title><rect x="3.2062%" y="613" width="0.0867%" height="15" fill="rgb(252,33,42)" fg:x="37" fg:w="1"/><text x="3.4562%" y="623.50"></text></g><g><title>AppKit`+[NSStoryboardSeguePresentedControllerCenter defaultCenter] (1 samples, 0.09%)</title><rect x="3.2062%" y="597" width="0.0867%" height="15" fill="rgb(209,212,41)" fg:x="37" fg:w="1"/><text x="3.4562%" y="607.50"></text></g><g><title>AppKit`-[NSStoryboardSeguePresentedControllerCenter init] (1 samples, 0.09%)</title><rect x="3.2062%" y="581" width="0.0867%" height="15" fill="rgb(207,154,6)" fg:x="37" fg:w="1"/><text x="3.4562%" y="591.50"></text></g><g><title>Foundation` (1 samples, 0.09%)</title><rect x="3.2062%" y="565" width="0.0867%" height="15" fill="rgb(223,64,47)" fg:x="37" fg:w="1"/><text x="3.4562%" y="575.50"></text></g><g><title>AppKit`+[NSAppearance _functionRowAppearance] (1 samples, 0.09%)</title><rect x="3.2929%" y="645" width="0.0867%" height="15" fill="rgb(211,161,38)" fg:x="38" fg:w="1"/><text x="3.5429%" y="655.50"></text></g><g><title>Foundation`_NSFaultInObject (1 samples, 0.09%)</title><rect x="3.2929%" y="629" width="0.0867%" height="15" fill="rgb(219,138,40)" fg:x="38" fg:w="1"/><text x="3.5429%" y="639.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (1 samples, 0.09%)</title><rect x="3.2929%" y="613" width="0.0867%" height="15" fill="rgb(241,228,46)" fg:x="38" fg:w="1"/><text x="3.5429%" y="623.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (1 samples, 0.09%)</title><rect x="3.2929%" y="597" width="0.0867%" height="15" fill="rgb(223,209,38)" fg:x="38" fg:w="1"/><text x="3.5429%" y="607.50"></text></g><g><title>AppKit`NSCreateCoreUIRenderer (1 samples, 0.09%)</title><rect x="3.2929%" y="581" width="0.0867%" height="15" fill="rgb(236,164,45)" fg:x="38" fg:w="1"/><text x="3.5429%" y="591.50"></text></g><g><title>CoreUI`CUIRenderer::Create (1 samples, 0.09%)</title><rect x="3.2929%" y="565" width="0.0867%" height="15" fill="rgb(231,15,5)" fg:x="38" fg:w="1"/><text x="3.5429%" y="575.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CUICoreThemeRenderer (1 samples, 0.09%)</title><rect x="3.2929%" y="549" width="0.0867%" height="15" fill="rgb(252,35,15)" fg:x="38" fg:w="1"/><text x="3.5429%" y="559.50"></text></g><g><title>CoreUI`+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (1 samples, 0.09%)</title><rect x="3.2929%" y="533" width="0.0867%" height="15" fill="rgb(248,181,18)" fg:x="38" fg:w="1"/><text x="3.5429%" y="543.50"></text></g><g><title>CoreUI`PerformBlockWithThemeRefCache (1 samples, 0.09%)</title><rect x="3.2929%" y="517" width="0.0867%" height="15" fill="rgb(233,39,42)" fg:x="38" fg:w="1"/><text x="3.5429%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="3.2929%" y="501" width="0.0867%" height="15" fill="rgb(238,110,33)" fg:x="38" fg:w="1"/><text x="3.5429%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="3.2929%" y="485" width="0.0867%" height="15" fill="rgb(233,195,10)" fg:x="38" fg:w="1"/><text x="3.5429%" y="495.50"></text></g><g><title>CoreUI`__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (1 samples, 0.09%)</title><rect x="3.2929%" y="469" width="0.0867%" height="15" fill="rgb(254,105,3)" fg:x="38" fg:w="1"/><text x="3.5429%" y="479.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore initWithPath:] (1 samples, 0.09%)</title><rect x="3.2929%" y="453" width="0.0867%" height="15" fill="rgb(221,225,9)" fg:x="38" fg:w="1"/><text x="3.5429%" y="463.50"></text></g><g><title>CoreUI`-[CUICommonAssetStorage initWithPath:forWriting:] (1 samples, 0.09%)</title><rect x="3.2929%" y="437" width="0.0867%" height="15" fill="rgb(224,227,45)" fg:x="38" fg:w="1"/><text x="3.5429%" y="447.50"></text></g><g><title>CoreUI`BOMStorageOpenWithSys (1 samples, 0.09%)</title><rect x="3.2929%" y="421" width="0.0867%" height="15" fill="rgb(229,198,43)" fg:x="38" fg:w="1"/><text x="3.5429%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.09%)</title><rect x="3.2929%" y="405" width="0.0867%" height="15" fill="rgb(206,209,35)" fg:x="38" fg:w="1"/><text x="3.5429%" y="415.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (4 samples, 0.35%)</title><rect x="3.1196%" y="789" width="0.3466%" height="15" fill="rgb(245,195,53)" fg:x="36" fg:w="4"/><text x="3.3696%" y="799.50"></text></g><g><title>AppKit`__33+[NSFunctionRowDevice initialize]_block_invoke.1 (3 samples, 0.26%)</title><rect x="3.2062%" y="773" width="0.2600%" height="15" fill="rgb(240,92,26)" fg:x="37" fg:w="3"/><text x="3.4562%" y="783.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (3 samples, 0.26%)</title><rect x="3.2062%" y="757" width="0.2600%" height="15" fill="rgb(207,40,23)" fg:x="37" fg:w="3"/><text x="3.4562%" y="767.50"></text></g><g><title>Foundation`NSKeyValueDidChange (3 samples, 0.26%)</title><rect x="3.2062%" y="741" width="0.2600%" height="15" fill="rgb(223,111,35)" fg:x="37" fg:w="3"/><text x="3.4562%" y="751.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (3 samples, 0.26%)</title><rect x="3.2062%" y="725" width="0.2600%" height="15" fill="rgb(229,147,28)" fg:x="37" fg:w="3"/><text x="3.4562%" y="735.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController _sync] (3 samples, 0.26%)</title><rect x="3.2062%" y="709" width="0.2600%" height="15" fill="rgb(211,29,28)" fg:x="37" fg:w="3"/><text x="3.4562%" y="719.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController _setup] (3 samples, 0.26%)</title><rect x="3.2062%" y="693" width="0.2600%" height="15" fill="rgb(228,72,33)" fg:x="37" fg:w="3"/><text x="3.4562%" y="703.50"></text></g><g><title>AppKit`-[_NSFunctionRow initWithType:] (2 samples, 0.17%)</title><rect x="3.2929%" y="677" width="0.1733%" height="15" fill="rgb(205,214,31)" fg:x="38" fg:w="2"/><text x="3.5429%" y="687.50"></text></g><g><title>AppKit`-[_NSFunctionRow initWithDFRElementAttributes:] (2 samples, 0.17%)</title><rect x="3.2929%" y="661" width="0.1733%" height="15" fill="rgb(224,111,15)" fg:x="38" fg:w="2"/><text x="3.5429%" y="671.50"></text></g><g><title>AppKit`-[_NSFunctionRowPanel initWithFunctionRow:] (1 samples, 0.09%)</title><rect x="3.3795%" y="645" width="0.0867%" height="15" fill="rgb(253,21,26)" fg:x="39" fg:w="1"/><text x="3.6295%" y="655.50"></text></g><g><title>AppKit`-[NSPanel initWithContentRect:styleMask:backing:defer:] (1 samples, 0.09%)</title><rect x="3.3795%" y="629" width="0.0867%" height="15" fill="rgb(245,139,43)" fg:x="39" fg:w="1"/><text x="3.6295%" y="639.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (1 samples, 0.09%)</title><rect x="3.3795%" y="613" width="0.0867%" height="15" fill="rgb(252,170,7)" fg:x="39" fg:w="1"/><text x="3.6295%" y="623.50"></text></g><g><title>AppKit`-[NSPanel _initContent:styleMask:backing:defer:contentView:] (1 samples, 0.09%)</title><rect x="3.3795%" y="597" width="0.0867%" height="15" fill="rgb(231,118,14)" fg:x="39" fg:w="1"/><text x="3.6295%" y="607.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (1 samples, 0.09%)</title><rect x="3.3795%" y="581" width="0.0867%" height="15" fill="rgb(238,83,0)" fg:x="39" fg:w="1"/><text x="3.6295%" y="591.50"></text></g><g><title>AppKit`-[NSWindow setContentView:] (1 samples, 0.09%)</title><rect x="3.3795%" y="565" width="0.0867%" height="15" fill="rgb(221,39,39)" fg:x="39" fg:w="1"/><text x="3.6295%" y="575.50"></text></g><g><title>AppKit`-[NSView _updateDragRegionForHiddenStateChange] (1 samples, 0.09%)</title><rect x="3.3795%" y="549" width="0.0867%" height="15" fill="rgb(222,119,46)" fg:x="39" fg:w="1"/><text x="3.6295%" y="559.50"></text></g><g><title>HIToolbox`-[IMKClient(IMKClientConnection_XPC) remoteXPCProxyForSession:fromCaller:] (1 samples, 0.09%)</title><rect x="3.4662%" y="741" width="0.0867%" height="15" fill="rgb(222,165,49)" fg:x="40" fg:w="1"/><text x="3.7162%" y="751.50"></text></g><g><title>HIToolbox`-[IMKClient(IMKClientConnection_XPC) _getServerXPCProxyForSession:] (1 samples, 0.09%)</title><rect x="3.4662%" y="725" width="0.0867%" height="15" fill="rgb(219,113,52)" fg:x="40" fg:w="1"/><text x="3.7162%" y="735.50"></text></g><g><title>Foundation`+[NSXPCInterface interfaceWithProtocol:] (1 samples, 0.09%)</title><rect x="3.4662%" y="709" width="0.0867%" height="15" fill="rgb(214,7,15)" fg:x="40" fg:w="1"/><text x="3.7162%" y="719.50"></text></g><g><title>Foundation`-[NSXPCInterface setProtocol:] (1 samples, 0.09%)</title><rect x="3.4662%" y="693" width="0.0867%" height="15" fill="rgb(235,32,4)" fg:x="40" fg:w="1"/><text x="3.7162%" y="703.50"></text></g><g><title>Foundation`setProtocolMetadata (1 samples, 0.09%)</title><rect x="3.4662%" y="677" width="0.0867%" height="15" fill="rgb(238,90,54)" fg:x="40" fg:w="1"/><text x="3.7162%" y="687.50"></text></g><g><title>Foundation`setProtocolMetadata (1 samples, 0.09%)</title><rect x="3.4662%" y="661" width="0.0867%" height="15" fill="rgb(213,208,19)" fg:x="40" fg:w="1"/><text x="3.7162%" y="671.50"></text></g><g><title>Foundation`setProtocolMetdataWithMethods (1 samples, 0.09%)</title><rect x="3.4662%" y="645" width="0.0867%" height="15" fill="rgb(233,156,4)" fg:x="40" fg:w="1"/><text x="3.7162%" y="655.50"></text></g><g><title>Foundation`setProtocolMetadataWithSignature (1 samples, 0.09%)</title><rect x="3.4662%" y="629" width="0.0867%" height="15" fill="rgb(207,194,5)" fg:x="40" fg:w="1"/><text x="3.7162%" y="639.50"></text></g><g><title>CoreFoundation`-[NSArray initWithArray:range:copyItems:] (1 samples, 0.09%)</title><rect x="3.4662%" y="613" width="0.0867%" height="15" fill="rgb(206,111,30)" fg:x="40" fg:w="1"/><text x="3.7162%" y="623.50"></text></g><g><title>HIToolbox`__80-[IMKInputSession imkxpc_presentFunctionRowItemTextInputViewWithEndpoint:reply:]_block_invoke (1 samples, 0.09%)</title><rect x="3.5529%" y="661" width="0.0867%" height="15" fill="rgb(243,70,54)" fg:x="41" fg:w="1"/><text x="3.8029%" y="671.50"></text></g><g><title>HIToolbox`-[IMKInputSession presentFunctionRowItemTextInputViewWithEndpoint:completionHandler:] (1 samples, 0.09%)</title><rect x="3.5529%" y="645" width="0.0867%" height="15" fill="rgb(242,28,8)" fg:x="41" fg:w="1"/><text x="3.8029%" y="655.50"></text></g><g><title>ViewBridge`+[NSRemoteViewController requestViewController:fromServiceListenerEndpoint:connectionHandler:] (1 samples, 0.09%)</title><rect x="3.5529%" y="629" width="0.0867%" height="15" fill="rgb(219,106,18)" fg:x="41" fg:w="1"/><text x="3.8029%" y="639.50"></text></g><g><title>ViewBridge`+[NSRemoteViewController _onAppKitThreadRequestViewController:withBlock:] (1 samples, 0.09%)</title><rect x="3.5529%" y="613" width="0.0867%" height="15" fill="rgb(244,222,10)" fg:x="41" fg:w="1"/><text x="3.8029%" y="623.50"></text></g><g><title>ViewBridge`-[NSRemoteView advanceToRunPhaseIfNeeded:] (1 samples, 0.09%)</title><rect x="3.5529%" y="597" width="0.0867%" height="15" fill="rgb(236,179,52)" fg:x="41" fg:w="1"/><text x="3.8029%" y="607.50"></text></g><g><title>ViewBridge`-[NSRemoteView advanceToConfigPhaseIfNeeded:] (1 samples, 0.09%)</title><rect x="3.5529%" y="581" width="0.0867%" height="15" fill="rgb(213,23,39)" fg:x="41" fg:w="1"/><text x="3.8029%" y="591.50"></text></g><g><title>ViewBridge`-[NSRemoteView _advanceToConfigPhase:] (1 samples, 0.09%)</title><rect x="3.5529%" y="565" width="0.0867%" height="15" fill="rgb(238,48,10)" fg:x="41" fg:w="1"/><text x="3.8029%" y="575.50"></text></g><g><title>ViewBridge`-[NSRemoteView _informAuxServiceOfSelf:] (1 samples, 0.09%)</title><rect x="3.5529%" y="549" width="0.0867%" height="15" fill="rgb(251,196,23)" fg:x="41" fg:w="1"/><text x="3.8029%" y="559.50"></text></g><g><title>ViewBridge`-[NSRemoteView _auxiliaryProxyWithSemaphore:attemptingTo:withCompletion:] (1 samples, 0.09%)</title><rect x="3.5529%" y="533" width="0.0867%" height="15" fill="rgb(250,152,24)" fg:x="41" fg:w="1"/><text x="3.8029%" y="543.50"></text></g><g><title>ViewBridge`auxiliaryProxyFor (1 samples, 0.09%)</title><rect x="3.5529%" y="517" width="0.0867%" height="15" fill="rgb(209,150,17)" fg:x="41" fg:w="1"/><text x="3.8029%" y="527.50"></text></g><g><title>ViewBridge`__auxiliaryProxyFor_block_invoke (1 samples, 0.09%)</title><rect x="3.5529%" y="501" width="0.0867%" height="15" fill="rgb(234,202,34)" fg:x="41" fg:w="1"/><text x="3.8029%" y="511.50"></text></g><g><title>ViewBridge`+[NSXPCSharedListener connectToService:instanceIdentifier:listener:error:] (1 samples, 0.09%)</title><rect x="3.5529%" y="485" width="0.0867%" height="15" fill="rgb(253,148,53)" fg:x="41" fg:w="1"/><text x="3.8029%" y="495.50"></text></g><g><title>ViewBridge`+[NSXPCSharedListener _endpointForListenerNamed:fromServiceNamed:instanceIdentifier:queue:async:completion:] (1 samples, 0.09%)</title><rect x="3.5529%" y="469" width="0.0867%" height="15" fill="rgb(218,129,16)" fg:x="41" fg:w="1"/><text x="3.8029%" y="479.50"></text></g><g><title>ViewBridge`__108+[NSXPCSharedListener _endpointForListenerNamed:fromServiceNamed:instanceIdentifier:queue:async:completion:]_block_invoke.239 (1 samples, 0.09%)</title><rect x="3.5529%" y="453" width="0.0867%" height="15" fill="rgb(216,85,19)" fg:x="41" fg:w="1"/><text x="3.8029%" y="463.50"></text></g><g><title>ViewBridge`__74+[NSXPCSharedListener connectToService:instanceIdentifier:listener:error:]_block_invoke (1 samples, 0.09%)</title><rect x="3.5529%" y="437" width="0.0867%" height="15" fill="rgb(235,228,7)" fg:x="41" fg:w="1"/><text x="3.8029%" y="447.50"></text></g><g><title>Foundation`-[NSXPCConnection initWithListenerEndpoint:] (1 samples, 0.09%)</title><rect x="3.5529%" y="421" width="0.0867%" height="15" fill="rgb(245,175,0)" fg:x="41" fg:w="1"/><text x="3.8029%" y="431.50"></text></g><g><title>Foundation`-[NSXPCConnection init] (1 samples, 0.09%)</title><rect x="3.5529%" y="405" width="0.0867%" height="15" fill="rgb(208,168,36)" fg:x="41" fg:w="1"/><text x="3.8029%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_opt_new (1 samples, 0.09%)</title><rect x="3.5529%" y="389" width="0.0867%" height="15" fill="rgb(246,171,24)" fg:x="41" fg:w="1"/><text x="3.8029%" y="399.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.09%)</title><rect x="3.5529%" y="373" width="0.0867%" height="15" fill="rgb(215,142,24)" fg:x="41" fg:w="1"/><text x="3.8029%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="3.5529%" y="357" width="0.0867%" height="15" fill="rgb(250,187,7)" fg:x="41" fg:w="1"/><text x="3.8029%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.09%)</title><rect x="3.5529%" y="341" width="0.0867%" height="15" fill="rgb(228,66,33)" fg:x="41" fg:w="1"/><text x="3.8029%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.09%)</title><rect x="3.5529%" y="325" width="0.0867%" height="15" fill="rgb(234,215,21)" fg:x="41" fg:w="1"/><text x="3.8029%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (11 samples, 0.95%)</title><rect x="2.7730%" y="821" width="0.9532%" height="15" fill="rgb(222,191,20)" fg:x="32" fg:w="11"/><text x="3.0230%" y="831.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (11 samples, 0.95%)</title><rect x="2.7730%" y="805" width="0.9532%" height="15" fill="rgb(245,79,54)" fg:x="32" fg:w="11"/><text x="3.0230%" y="815.50"></text></g><g><title>HIToolbox`-[IMKClient fulfillServerDependentWork] (3 samples, 0.26%)</title><rect x="3.4662%" y="789" width="0.2600%" height="15" fill="rgb(240,10,37)" fg:x="40" fg:w="3"/><text x="3.7162%" y="799.50"></text></g><g><title>HIToolbox`-[IMKInputSession activateAfterServerConnection] (3 samples, 0.26%)</title><rect x="3.4662%" y="773" width="0.2600%" height="15" fill="rgb(214,192,32)" fg:x="40" fg:w="3"/><text x="3.7162%" y="783.50"></text></g><g><title>HIToolbox`-[IMKInputSession activate] (3 samples, 0.26%)</title><rect x="3.4662%" y="757" width="0.2600%" height="15" fill="rgb(209,36,54)" fg:x="40" fg:w="3"/><text x="3.7162%" y="767.50"></text></g><g><title>HIToolbox`-[IMKInputSessionXPCInvocation invocationAwaitXPCReply] (2 samples, 0.17%)</title><rect x="3.5529%" y="741" width="0.1733%" height="15" fill="rgb(220,10,11)" fg:x="41" fg:w="2"/><text x="3.8029%" y="751.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (2 samples, 0.17%)</title><rect x="3.5529%" y="725" width="0.1733%" height="15" fill="rgb(221,106,17)" fg:x="41" fg:w="2"/><text x="3.8029%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (2 samples, 0.17%)</title><rect x="3.5529%" y="709" width="0.1733%" height="15" fill="rgb(251,142,44)" fg:x="41" fg:w="2"/><text x="3.8029%" y="719.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (2 samples, 0.17%)</title><rect x="3.5529%" y="693" width="0.1733%" height="15" fill="rgb(238,13,15)" fg:x="41" fg:w="2"/><text x="3.8029%" y="703.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (2 samples, 0.17%)</title><rect x="3.5529%" y="677" width="0.1733%" height="15" fill="rgb(208,107,27)" fg:x="41" fg:w="2"/><text x="3.8029%" y="687.50"></text></g><g><title>ViewBridge`__deferBlockOntoMainThread_block_invoke_2 (1 samples, 0.09%)</title><rect x="3.6395%" y="661" width="0.0867%" height="15" fill="rgb(205,136,37)" fg:x="42" fg:w="1"/><text x="3.8895%" y="671.50"></text></g><g><title>ViewBridge`__wrapBlockWithVoucher_block_invoke (1 samples, 0.09%)</title><rect x="3.6395%" y="645" width="0.0867%" height="15" fill="rgb(250,205,27)" fg:x="42" fg:w="1"/><text x="3.8895%" y="655.50"></text></g><g><title>ViewBridge`__deferNSXPCInvocationOntoMainThread_block_invoke (1 samples, 0.09%)</title><rect x="3.6395%" y="629" width="0.0867%" height="15" fill="rgb(210,80,43)" fg:x="42" fg:w="1"/><text x="3.8895%" y="639.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (1 samples, 0.09%)</title><rect x="3.6395%" y="613" width="0.0867%" height="15" fill="rgb(247,160,36)" fg:x="42" fg:w="1"/><text x="3.8895%" y="623.50"></text></g><g><title>CoreFoundation`__invoking___ (1 samples, 0.09%)</title><rect x="3.6395%" y="597" width="0.0867%" height="15" fill="rgb(234,13,49)" fg:x="42" fg:w="1"/><text x="3.8895%" y="607.50"></text></g><g><title>ViewBridge`__40-[NSRemoteView _informAuxServiceOfSelf:]_block_invoke.1648 (1 samples, 0.09%)</title><rect x="3.6395%" y="581" width="0.0867%" height="15" fill="rgb(234,122,0)" fg:x="42" fg:w="1"/><text x="3.8895%" y="591.50"></text></g><g><title>ViewBridge`__38-[NSRemoteView _advanceToConfigPhase:]_block_invoke (1 samples, 0.09%)</title><rect x="3.6395%" y="565" width="0.0867%" height="15" fill="rgb(207,146,38)" fg:x="42" fg:w="1"/><text x="3.8895%" y="575.50"></text></g><g><title>ViewBridge`-[NSRemoteView _accessibilityParentToken] (1 samples, 0.09%)</title><rect x="3.6395%" y="549" width="0.0867%" height="15" fill="rgb(207,177,25)" fg:x="42" fg:w="1"/><text x="3.8895%" y="559.50"></text></g><g><title>AppKit`NSAccessibilityUnignoredAncestor (1 samples, 0.09%)</title><rect x="3.6395%" y="533" width="0.0867%" height="15" fill="rgb(211,178,42)" fg:x="42" fg:w="1"/><text x="3.8895%" y="543.50"></text></g><g><title>AppKit`NSAccessibilityEntryPointIsAccessibilityElement (1 samples, 0.09%)</title><rect x="3.6395%" y="517" width="0.0867%" height="15" fill="rgb(230,69,54)" fg:x="42" fg:w="1"/><text x="3.8895%" y="527.50"></text></g><g><title>AppKit`NSAccessibilityPerformEntryPointBOOL (1 samples, 0.09%)</title><rect x="3.6395%" y="501" width="0.0867%" height="15" fill="rgb(214,135,41)" fg:x="42" fg:w="1"/><text x="3.8895%" y="511.50"></text></g><g><title>AppKit`__NSAccessibilityEntryPointIsAccessibilityElement_block_invoke (1 samples, 0.09%)</title><rect x="3.6395%" y="485" width="0.0867%" height="15" fill="rgb(237,67,25)" fg:x="42" fg:w="1"/><text x="3.8895%" y="495.50"></text></g><g><title>AppKit`-[NSResponder isAccessibilitySelectorAllowed:] (1 samples, 0.09%)</title><rect x="3.6395%" y="469" width="0.0867%" height="15" fill="rgb(222,189,50)" fg:x="42" fg:w="1"/><text x="3.8895%" y="479.50"></text></g><g><title>AppKit`NSAccessibilitySetterSelectorCache (1 samples, 0.09%)</title><rect x="3.6395%" y="453" width="0.0867%" height="15" fill="rgb(245,148,34)" fg:x="42" fg:w="1"/><text x="3.8895%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="3.6395%" y="437" width="0.0867%" height="15" fill="rgb(222,29,6)" fg:x="42" fg:w="1"/><text x="3.8895%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="3.6395%" y="421" width="0.0867%" height="15" fill="rgb(221,189,43)" fg:x="42" fg:w="1"/><text x="3.8895%" y="431.50"></text></g><g><title>AppKit`___initialize_block_invoke (1 samples, 0.09%)</title><rect x="3.6395%" y="405" width="0.0867%" height="15" fill="rgb(207,36,27)" fg:x="42" fg:w="1"/><text x="3.8895%" y="415.50"></text></g><g><title>AppKit`_addAttributeAccessorInfo (1 samples, 0.09%)</title><rect x="3.6395%" y="389" width="0.0867%" height="15" fill="rgb(217,90,24)" fg:x="42" fg:w="1"/><text x="3.8895%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKey:] (1 samples, 0.09%)</title><rect x="3.6395%" y="373" width="0.0867%" height="15" fill="rgb(224,66,35)" fg:x="42" fg:w="1"/><text x="3.8895%" y="383.50"></text></g><g><title>CoreFoundation`mdict_rehashd (1 samples, 0.09%)</title><rect x="3.6395%" y="357" width="0.0867%" height="15" fill="rgb(221,13,50)" fg:x="42" fg:w="1"/><text x="3.8895%" y="367.50"></text></g><g><title>HIToolbox`SectSelectableInputSourcesArrayFromCurrentState (1 samples, 0.09%)</title><rect x="3.7262%" y="693" width="0.0867%" height="15" fill="rgb(236,68,49)" fg:x="43" fg:w="1"/><text x="3.9762%" y="703.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray (1 samples, 0.09%)</title><rect x="3.7262%" y="677" width="0.0867%" height="15" fill="rgb(229,146,28)" fg:x="43" fg:w="1"/><text x="3.9762%" y="687.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray_Mutable (1 samples, 0.09%)</title><rect x="3.7262%" y="661" width="0.0867%" height="15" fill="rgb(225,31,38)" fg:x="43" fg:w="1"/><text x="3.9762%" y="671.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.09%)</title><rect x="3.7262%" y="645" width="0.0867%" height="15" fill="rgb(250,208,3)" fg:x="43" fg:w="1"/><text x="3.9762%" y="655.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.09%)</title><rect x="3.7262%" y="629" width="0.0867%" height="15" fill="rgb(246,54,23)" fg:x="43" fg:w="1"/><text x="3.9762%" y="639.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.09%)</title><rect x="3.7262%" y="613" width="0.0867%" height="15" fill="rgb(243,76,11)" fg:x="43" fg:w="1"/><text x="3.9762%" y="623.50"></text></g><g><title>HIToolbox`islPopulateKLPropertiesFromBundle (1 samples, 0.09%)</title><rect x="3.7262%" y="597" width="0.0867%" height="15" fill="rgb(245,21,50)" fg:x="43" fg:w="1"/><text x="3.9762%" y="607.50"></text></g><g><title>CoreFoundation`CFBundleGetValueForInfoDictionaryKey (1 samples, 0.09%)</title><rect x="3.7262%" y="581" width="0.0867%" height="15" fill="rgb(228,9,43)" fg:x="43" fg:w="1"/><text x="3.9762%" y="591.50"></text></g><g><title>CoreFoundation`CFBundleGetLocalInfoDictionary (1 samples, 0.09%)</title><rect x="3.7262%" y="565" width="0.0867%" height="15" fill="rgb(208,100,47)" fg:x="43" fg:w="1"/><text x="3.9762%" y="575.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateFromXMLData (1 samples, 0.09%)</title><rect x="3.7262%" y="549" width="0.0867%" height="15" fill="rgb(232,26,8)" fg:x="43" fg:w="1"/><text x="3.9762%" y="559.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.09%)</title><rect x="3.7262%" y="533" width="0.0867%" height="15" fill="rgb(216,166,38)" fg:x="43" fg:w="1"/><text x="3.9762%" y="543.50"></text></g><g><title>CoreFoundation`__CFTryParseBinaryPlist (1 samples, 0.09%)</title><rect x="3.7262%" y="517" width="0.0867%" height="15" fill="rgb(251,202,51)" fg:x="43" fg:w="1"/><text x="3.9762%" y="527.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.09%)</title><rect x="3.7262%" y="501" width="0.0867%" height="15" fill="rgb(254,216,34)" fg:x="43" fg:w="1"/><text x="3.9762%" y="511.50"></text></g><g><title>CoreFoundation`-[NSTaggedPointerString isEqual:] (1 samples, 0.09%)</title><rect x="3.7262%" y="485" width="0.0867%" height="15" fill="rgb(251,32,27)" fg:x="43" fg:w="1"/><text x="3.9762%" y="495.50"></text></g><g><title>HIToolbox`Stop_CapsLock_KBLayoutDelayOverride_Timer (1 samples, 0.09%)</title><rect x="3.8128%" y="693" width="0.0867%" height="15" fill="rgb(208,127,28)" fg:x="44" fg:w="1"/><text x="4.0628%" y="703.50"></text></g><g><title>HIToolbox`TISIsRomanSwitchEnabled (1 samples, 0.09%)</title><rect x="3.8128%" y="677" width="0.0867%" height="15" fill="rgb(224,137,22)" fg:x="44" fg:w="1"/><text x="4.0628%" y="687.50"></text></g><g><title>HIToolbox`TISGetRomanSwitchState (1 samples, 0.09%)</title><rect x="3.8128%" y="661" width="0.0867%" height="15" fill="rgb(254,70,32)" fg:x="44" fg:w="1"/><text x="4.0628%" y="671.50"></text></g><g><title>HIServices`HIS_XPC_GetCapsLockLanguageSwitch (1 samples, 0.09%)</title><rect x="3.8128%" y="645" width="0.0867%" height="15" fill="rgb(229,75,37)" fg:x="44" fg:w="1"/><text x="4.0628%" y="655.50"></text></g><g><title>HIServices`_SendMessageToHISService (1 samples, 0.09%)</title><rect x="3.8128%" y="629" width="0.0867%" height="15" fill="rgb(252,64,23)" fg:x="44" fg:w="1"/><text x="4.0628%" y="639.50"></text></g><g><title>libxpc.dylib`xpc_connection_resume (1 samples, 0.09%)</title><rect x="3.8128%" y="613" width="0.0867%" height="15" fill="rgb(232,162,48)" fg:x="44" fg:w="1"/><text x="4.0628%" y="623.50"></text></g><g><title>libxpc.dylib`_xpc_connection_activate_if_needed (1 samples, 0.09%)</title><rect x="3.8128%" y="597" width="0.0867%" height="15" fill="rgb(246,160,12)" fg:x="44" fg:w="1"/><text x="4.0628%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_connection_init (1 samples, 0.09%)</title><rect x="3.8128%" y="581" width="0.0867%" height="15" fill="rgb(247,166,0)" fg:x="44" fg:w="1"/><text x="4.0628%" y="591.50"></text></g><g><title>libxpc.dylib`_xpc_uncork_domain (1 samples, 0.09%)</title><rect x="3.8128%" y="565" width="0.0867%" height="15" fill="rgb(249,219,21)" fg:x="44" fg:w="1"/><text x="4.0628%" y="575.50"></text></g><g><title>libxpc.dylib`xpc_bundle_get_property (1 samples, 0.09%)</title><rect x="3.8128%" y="549" width="0.0867%" height="15" fill="rgb(205,209,3)" fg:x="44" fg:w="1"/><text x="4.0628%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve (1 samples, 0.09%)</title><rect x="3.8128%" y="533" width="0.0867%" height="15" fill="rgb(243,44,1)" fg:x="44" fg:w="1"/><text x="4.0628%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="3.8128%" y="517" width="0.0867%" height="15" fill="rgb(206,159,16)" fg:x="44" fg:w="1"/><text x="4.0628%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="3.8128%" y="501" width="0.0867%" height="15" fill="rgb(244,77,30)" fg:x="44" fg:w="1"/><text x="4.0628%" y="511.50"></text></g><g><title>libxpc.dylib`___xpc_bundle_resolve_block_invoke (1 samples, 0.09%)</title><rect x="3.8128%" y="485" width="0.0867%" height="15" fill="rgb(218,69,12)" fg:x="44" fg:w="1"/><text x="4.0628%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve_sync (1 samples, 0.09%)</title><rect x="3.8128%" y="469" width="0.0867%" height="15" fill="rgb(212,87,7)" fg:x="44" fg:w="1"/><text x="4.0628%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (1 samples, 0.09%)</title><rect x="3.8128%" y="453" width="0.0867%" height="15" fill="rgb(245,114,25)" fg:x="44" fg:w="1"/><text x="4.0628%" y="463.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (3 samples, 0.26%)</title><rect x="3.7262%" y="773" width="0.2600%" height="15" fill="rgb(210,61,42)" fg:x="43" fg:w="3"/><text x="3.9762%" y="783.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (3 samples, 0.26%)</title><rect x="3.7262%" y="757" width="0.2600%" height="15" fill="rgb(211,52,33)" fg:x="43" fg:w="3"/><text x="3.9762%" y="767.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (3 samples, 0.26%)</title><rect x="3.7262%" y="741" width="0.2600%" height="15" fill="rgb(234,58,33)" fg:x="43" fg:w="3"/><text x="3.9762%" y="751.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (3 samples, 0.26%)</title><rect x="3.7262%" y="725" width="0.2600%" height="15" fill="rgb(220,115,36)" fg:x="43" fg:w="3"/><text x="3.9762%" y="735.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (3 samples, 0.26%)</title><rect x="3.7262%" y="709" width="0.2600%" height="15" fill="rgb(243,153,54)" fg:x="43" fg:w="3"/><text x="3.9762%" y="719.50"></text></g><g><title>HIToolbox`TSMCopyTextInputGlobalProperty (1 samples, 0.09%)</title><rect x="3.8995%" y="693" width="0.0867%" height="15" fill="rgb(251,47,18)" fg:x="45" fg:w="1"/><text x="4.1495%" y="703.50"></text></g><g><title>CoreFoundation`CFPasteboardCreate (1 samples, 0.09%)</title><rect x="3.8995%" y="677" width="0.0867%" height="15" fill="rgb(242,102,42)" fg:x="45" fg:w="1"/><text x="4.1495%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="3.8995%" y="661" width="0.0867%" height="15" fill="rgb(234,31,38)" fg:x="45" fg:w="1"/><text x="4.1495%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="3.8995%" y="645" width="0.0867%" height="15" fill="rgb(221,117,51)" fg:x="45" fg:w="1"/><text x="4.1495%" y="655.50"></text></g><g><title>CoreFoundation`__CFPasteboardCreate_block_invoke (1 samples, 0.09%)</title><rect x="3.8995%" y="629" width="0.0867%" height="15" fill="rgb(212,20,18)" fg:x="45" fg:w="1"/><text x="4.1495%" y="639.50"></text></g><g><title>CoreFoundation`_onqueue_CFPasteboardSetupInstance (1 samples, 0.09%)</title><rect x="3.8995%" y="613" width="0.0867%" height="15" fill="rgb(245,133,36)" fg:x="45" fg:w="1"/><text x="4.1495%" y="623.50"></text></g><g><title>CoreFoundation`_CFPBXPCSendMessageWithReplySync (1 samples, 0.09%)</title><rect x="3.8995%" y="597" width="0.0867%" height="15" fill="rgb(212,6,19)" fg:x="45" fg:w="1"/><text x="4.1495%" y="607.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.09%)</title><rect x="3.8995%" y="581" width="0.0867%" height="15" fill="rgb(218,1,36)" fg:x="45" fg:w="1"/><text x="4.1495%" y="591.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.09%)</title><rect x="3.8995%" y="565" width="0.0867%" height="15" fill="rgb(246,84,54)" fg:x="45" fg:w="1"/><text x="4.1495%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.09%)</title><rect x="3.8995%" y="549" width="0.0867%" height="15" fill="rgb(242,110,6)" fg:x="45" fg:w="1"/><text x="4.1495%" y="559.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _layoutViewTree] (1 samples, 0.09%)</title><rect x="3.9861%" y="661" width="0.0867%" height="15" fill="rgb(214,47,5)" fg:x="46" fg:w="1"/><text x="4.2361%" y="671.50"></text></g><g><title>AppKit`-[NSView _layoutSubtreeIfNeededAndAllowTemporaryEngine:] (1 samples, 0.09%)</title><rect x="3.9861%" y="645" width="0.0867%" height="15" fill="rgb(218,159,25)" fg:x="46" fg:w="1"/><text x="4.2361%" y="655.50"></text></g><g><title>AppKit`_findAnySubviewNeedingAutoLayoutEngine (1 samples, 0.09%)</title><rect x="3.9861%" y="629" width="0.0867%" height="15" fill="rgb(215,211,28)" fg:x="46" fg:w="1"/><text x="4.2361%" y="639.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.09%)</title><rect x="3.9861%" y="613" width="0.0867%" height="15" fill="rgb(238,59,32)" fg:x="46" fg:w="1"/><text x="4.2361%" y="623.50"></text></g><g><title>libobjc.A.dylib`DYLD-STUB$$_dyld_objc_class_count (1 samples, 0.09%)</title><rect x="3.9861%" y="597" width="0.0867%" height="15" fill="rgb(226,82,3)" fg:x="46" fg:w="1"/><text x="4.2361%" y="607.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForLayout_block_invoke (2 samples, 0.17%)</title><rect x="3.9861%" y="693" width="0.1733%" height="15" fill="rgb(240,164,32)" fg:x="46" fg:w="2"/><text x="4.2361%" y="703.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) layoutIfNeeded] (2 samples, 0.17%)</title><rect x="3.9861%" y="677" width="0.1733%" height="15" fill="rgb(232,46,7)" fg:x="46" fg:w="2"/><text x="4.2361%" y="687.50"></text></g><g><title>CoreAutoLayout`-[NSISEngine withBehaviors:performModifications:] (1 samples, 0.09%)</title><rect x="4.0728%" y="661" width="0.0867%" height="15" fill="rgb(229,129,53)" fg:x="47" fg:w="1"/><text x="4.3228%" y="671.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _changeWindowFrameFromConstraintsIfNecessary] (1 samples, 0.09%)</title><rect x="4.0728%" y="645" width="0.0867%" height="15" fill="rgb(234,188,29)" fg:x="47" fg:w="1"/><text x="4.3228%" y="655.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _fromConstraintsSetWindowFrame:] (1 samples, 0.09%)</title><rect x="4.0728%" y="629" width="0.0867%" height="15" fill="rgb(246,141,4)" fg:x="47" fg:w="1"/><text x="4.3228%" y="639.50"></text></g><g><title>AppKit`-[NSWindow _setFrameCommon:display:fromServer:] (1 samples, 0.09%)</title><rect x="4.0728%" y="613" width="0.0867%" height="15" fill="rgb(229,23,39)" fg:x="47" fg:w="1"/><text x="4.3228%" y="623.50"></text></g><g><title>AppKit`-[NSWindow _oldPlaceWindow:fromServer:] (1 samples, 0.09%)</title><rect x="4.0728%" y="597" width="0.0867%" height="15" fill="rgb(206,12,3)" fg:x="47" fg:w="1"/><text x="4.3228%" y="607.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _layoutViewTree] (1 samples, 0.09%)</title><rect x="4.0728%" y="581" width="0.0867%" height="15" fill="rgb(252,226,20)" fg:x="47" fg:w="1"/><text x="4.3228%" y="591.50"></text></g><g><title>AppKit`-[NSView _layoutSubtreeIfNeededAndAllowTemporaryEngine:] (1 samples, 0.09%)</title><rect x="4.0728%" y="565" width="0.0867%" height="15" fill="rgb(216,123,35)" fg:x="47" fg:w="1"/><text x="4.3228%" y="575.50"></text></g><g><title>AppKit`-[NSView resizeWithOldSuperviewSize:] (1 samples, 0.09%)</title><rect x="4.0728%" y="549" width="0.0867%" height="15" fill="rgb(212,68,40)" fg:x="47" fg:w="1"/><text x="4.3228%" y="559.50"></text></g><g><title>AppKit`-[NSView setFrame:] (1 samples, 0.09%)</title><rect x="4.0728%" y="533" width="0.0867%" height="15" fill="rgb(254,125,32)" fg:x="47" fg:w="1"/><text x="4.3228%" y="543.50"></text></g><g><title>AppKit`-[NSNextStepFrame setFrameSize:] (1 samples, 0.09%)</title><rect x="4.0728%" y="517" width="0.0867%" height="15" fill="rgb(253,97,22)" fg:x="47" fg:w="1"/><text x="4.3228%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="4.0728%" y="501" width="0.0867%" height="15" fill="rgb(241,101,14)" fg:x="47" fg:w="1"/><text x="4.3228%" y="511.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (6 samples, 0.52%)</title><rect x="3.7262%" y="789" width="0.5199%" height="15" fill="rgb(238,103,29)" fg:x="43" fg:w="6"/><text x="3.9762%" y="799.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (3 samples, 0.26%)</title><rect x="3.9861%" y="773" width="0.2600%" height="15" fill="rgb(233,195,47)" fg:x="46" fg:w="3"/><text x="4.2361%" y="783.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (3 samples, 0.26%)</title><rect x="3.9861%" y="757" width="0.2600%" height="15" fill="rgb(246,218,30)" fg:x="46" fg:w="3"/><text x="4.2361%" y="767.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (3 samples, 0.26%)</title><rect x="3.9861%" y="741" width="0.2600%" height="15" fill="rgb(219,145,47)" fg:x="46" fg:w="3"/><text x="4.2361%" y="751.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (3 samples, 0.26%)</title><rect x="3.9861%" y="725" width="0.2600%" height="15" fill="rgb(243,12,26)" fg:x="46" fg:w="3"/><text x="4.2361%" y="735.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (3 samples, 0.26%)</title><rect x="3.9861%" y="709" width="0.2600%" height="15" fill="rgb(214,87,16)" fg:x="46" fg:w="3"/><text x="4.2361%" y="719.50"></text></g><g><title>AppKit`___NSTouchBarFinderSetNeedsUpdateOnMain_block_invoke_2 (1 samples, 0.09%)</title><rect x="4.1594%" y="693" width="0.0867%" height="15" fill="rgb(208,99,42)" fg:x="48" fg:w="1"/><text x="4.4094%" y="703.50"></text></g><g><title>AppKit`_NSTouchBarFinderGatherProvidersForContainer (1 samples, 0.09%)</title><rect x="4.1594%" y="677" width="0.0867%" height="15" fill="rgb(253,99,2)" fg:x="48" fg:w="1"/><text x="4.4094%" y="687.50"></text></g><g><title>AppKit`_NSTouchBarFinderGatherProvidersForContainer (1 samples, 0.09%)</title><rect x="4.1594%" y="661" width="0.0867%" height="15" fill="rgb(220,168,23)" fg:x="48" fg:w="1"/><text x="4.4094%" y="671.50"></text></g><g><title>AppKit`_NSTouchBarFinderGatherProvidersForContainer (1 samples, 0.09%)</title><rect x="4.1594%" y="645" width="0.0867%" height="15" fill="rgb(242,38,24)" fg:x="48" fg:w="1"/><text x="4.4094%" y="655.50"></text></g><g><title>AppKit`_NSTouchBarFinderGatherProvidersForContainer (1 samples, 0.09%)</title><rect x="4.1594%" y="629" width="0.0867%" height="15" fill="rgb(225,182,9)" fg:x="48" fg:w="1"/><text x="4.4094%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="4.1594%" y="613" width="0.0867%" height="15" fill="rgb(243,178,37)" fg:x="48" fg:w="1"/><text x="4.4094%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.09%)</title><rect x="4.2461%" y="789" width="0.0867%" height="15" fill="rgb(232,139,19)" fg:x="49" fg:w="1"/><text x="4.4961%" y="799.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.09%)</title><rect x="4.2461%" y="773" width="0.0867%" height="15" fill="rgb(225,201,24)" fg:x="49" fg:w="1"/><text x="4.4961%" y="783.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_destructInstance (1 samples, 0.09%)</title><rect x="4.2461%" y="757" width="0.0867%" height="15" fill="rgb(221,47,46)" fg:x="49" fg:w="1"/><text x="4.4961%" y="767.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_begin_handler (1 samples, 0.09%)</title><rect x="4.3328%" y="789" width="0.0867%" height="15" fill="rgb(249,23,13)" fg:x="50" fg:w="1"/><text x="4.5828%" y="799.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::wakeup (1 samples, 0.09%)</title><rect x="4.3328%" y="773" width="0.0867%" height="15" fill="rgb(219,9,5)" fg:x="50" fg:w="1"/><text x="4.5828%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.09%)</title><rect x="4.3328%" y="757" width="0.0867%" height="15" fill="rgb(254,171,16)" fg:x="50" fg:w="1"/><text x="4.5828%" y="767.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.09%)</title><rect x="4.6794%" y="677" width="0.0867%" height="15" fill="rgb(230,171,20)" fg:x="54" fg:w="1"/><text x="4.9294%" y="687.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="5.2860%" y="629" width="0.0867%" height="15" fill="rgb(210,71,41)" fg:x="61" fg:w="1"/><text x="5.5360%" y="639.50"></text></g><g><title>wgpu_test`alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="5.2860%" y="613" width="0.0867%" height="15" fill="rgb(206,173,20)" fg:x="61" fg:w="1"/><text x="5.5360%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.09%)</title><rect x="5.2860%" y="597" width="0.0867%" height="15" fill="rgb(233,88,34)" fg:x="61" fg:w="1"/><text x="5.5360%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.09%)</title><rect x="5.2860%" y="581" width="0.0867%" height="15" fill="rgb(223,209,46)" fg:x="61" fg:w="1"/><text x="5.5360%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.09%)</title><rect x="5.2860%" y="565" width="0.0867%" height="15" fill="rgb(250,43,18)" fg:x="61" fg:w="1"/><text x="5.5360%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="5.2860%" y="549" width="0.0867%" height="15" fill="rgb(208,13,10)" fg:x="61" fg:w="1"/><text x="5.5360%" y="559.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn (2 samples, 0.17%)</title><rect x="5.3726%" y="629" width="0.1733%" height="15" fill="rgb(212,200,36)" fg:x="62" fg:w="2"/><text x="5.6226%" y="639.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.17%)</title><rect x="5.3726%" y="613" width="0.1733%" height="15" fill="rgb(225,90,30)" fg:x="62" fg:w="2"/><text x="5.6226%" y="623.50"></text></g><g><title>wgpu_test`async_executor::State::notify (1 samples, 0.09%)</title><rect x="5.4593%" y="597" width="0.0867%" height="15" fill="rgb(236,182,39)" fg:x="63" fg:w="1"/><text x="5.7093%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="5.4593%" y="581" width="0.0867%" height="15" fill="rgb(212,144,35)" fg:x="63" fg:w="1"/><text x="5.7093%" y="591.50"></text></g><g><title>wgpu_test`async_executor::State::notify (1 samples, 0.09%)</title><rect x="5.6326%" y="613" width="0.0867%" height="15" fill="rgb(228,63,44)" fg:x="65" fg:w="1"/><text x="5.8826%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="6.4125%" y="581" width="0.0867%" height="15" fill="rgb(228,109,6)" fg:x="74" fg:w="1"/><text x="6.6625%" y="591.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="6.4991%" y="565" width="0.0867%" height="15" fill="rgb(238,117,24)" fg:x="75" fg:w="1"/><text x="6.7491%" y="575.50"></text></g><g><title>wgpu_test`event_listener::Event::listen (1 samples, 0.09%)</title><rect x="6.5858%" y="565" width="0.0867%" height="15" fill="rgb(242,26,26)" fg:x="76" fg:w="1"/><text x="6.8358%" y="575.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.61%)</title><rect x="6.4991%" y="581" width="0.6066%" height="15" fill="rgb(221,92,48)" fg:x="75" fg:w="7"/><text x="6.7491%" y="591.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (5 samples, 0.43%)</title><rect x="6.6724%" y="565" width="0.4333%" height="15" fill="rgb(209,209,32)" fg:x="77" fg:w="5"/><text x="6.9224%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5 samples, 0.43%)</title><rect x="6.6724%" y="549" width="0.4333%" height="15" fill="rgb(221,70,22)" fg:x="77" fg:w="5"/><text x="6.9224%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (5 samples, 0.43%)</title><rect x="6.6724%" y="533" width="0.4333%" height="15" fill="rgb(248,145,5)" fg:x="77" fg:w="5"/><text x="6.9224%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="7.2790%" y="565" width="0.0867%" height="15" fill="rgb(226,116,26)" fg:x="84" fg:w="1"/><text x="7.5290%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.09%)</title><rect x="7.2790%" y="549" width="0.0867%" height="15" fill="rgb(244,5,17)" fg:x="84" fg:w="1"/><text x="7.5290%" y="559.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.35%)</title><rect x="7.1057%" y="581" width="0.3466%" height="15" fill="rgb(252,159,33)" fg:x="82" fg:w="4"/><text x="7.3557%" y="591.50"></text></g><g><title>wgpu_test`event_listener::List::notify (1 samples, 0.09%)</title><rect x="7.3657%" y="565" width="0.0867%" height="15" fill="rgb(206,71,0)" fg:x="85" fg:w="1"/><text x="7.6157%" y="575.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (1 samples, 0.09%)</title><rect x="7.3657%" y="549" width="0.0867%" height="15" fill="rgb(233,118,54)" fg:x="85" fg:w="1"/><text x="7.6157%" y="559.50"></text></g><g><title>wgpu_test`async_executor::State::notify (1 samples, 0.09%)</title><rect x="7.3657%" y="533" width="0.0867%" height="15" fill="rgb(234,83,48)" fg:x="85" fg:w="1"/><text x="7.6157%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.17%)</title><rect x="7.4523%" y="565" width="0.1733%" height="15" fill="rgb(228,3,54)" fg:x="86" fg:w="2"/><text x="7.7023%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.17%)</title><rect x="7.4523%" y="549" width="0.1733%" height="15" fill="rgb(226,155,13)" fg:x="86" fg:w="2"/><text x="7.7023%" y="559.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.26%)</title><rect x="7.4523%" y="581" width="0.2600%" height="15" fill="rgb(241,28,37)" fg:x="86" fg:w="3"/><text x="7.7023%" y="591.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.09%)</title><rect x="7.6256%" y="565" width="0.0867%" height="15" fill="rgb(233,93,10)" fg:x="88" fg:w="1"/><text x="7.8756%" y="575.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.17%)</title><rect x="7.7123%" y="565" width="0.1733%" height="15" fill="rgb(225,113,19)" fg:x="89" fg:w="2"/><text x="7.9623%" y="575.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="7.8856%" y="565" width="0.0867%" height="15" fill="rgb(241,2,18)" fg:x="91" fg:w="1"/><text x="8.1356%" y="575.50"></text></g><g><title>wgpu_test`event_listener::List::notify (1 samples, 0.09%)</title><rect x="7.8856%" y="549" width="0.0867%" height="15" fill="rgb(228,207,21)" fg:x="91" fg:w="1"/><text x="8.1356%" y="559.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (1 samples, 0.09%)</title><rect x="7.8856%" y="533" width="0.0867%" height="15" fill="rgb(213,211,35)" fg:x="91" fg:w="1"/><text x="8.1356%" y="543.50"></text></g><g><title>wgpu_test`async_executor::State::notify (1 samples, 0.09%)</title><rect x="7.8856%" y="517" width="0.0867%" height="15" fill="rgb(209,83,10)" fg:x="91" fg:w="1"/><text x="8.1356%" y="527.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.09%)</title><rect x="7.8856%" y="501" width="0.0867%" height="15" fill="rgb(209,164,1)" fg:x="91" fg:w="1"/><text x="8.1356%" y="511.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (1 samples, 0.09%)</title><rect x="7.8856%" y="485" width="0.0867%" height="15" fill="rgb(213,184,43)" fg:x="91" fg:w="1"/><text x="8.1356%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.09%)</title><rect x="7.8856%" y="469" width="0.0867%" height="15" fill="rgb(231,61,34)" fg:x="91" fg:w="1"/><text x="8.1356%" y="479.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::AssetServer::mark_unused_assets (1 samples, 0.09%)</title><rect x="7.9723%" y="549" width="0.0867%" height="15" fill="rgb(235,75,3)" fg:x="92" fg:w="1"/><text x="8.2223%" y="559.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (1 samples, 0.09%)</title><rect x="8.0589%" y="517" width="0.0867%" height="15" fill="rgb(220,106,47)" fg:x="93" fg:w="1"/><text x="8.3089%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="8.1456%" y="517" width="0.0867%" height="15" fill="rgb(210,196,33)" fg:x="94" fg:w="1"/><text x="8.3956%" y="527.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (1 samples, 0.09%)</title><rect x="8.2322%" y="517" width="0.0867%" height="15" fill="rgb(229,154,42)" fg:x="95" fg:w="1"/><text x="8.4822%" y="527.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (1 samples, 0.09%)</title><rect x="8.2322%" y="501" width="0.0867%" height="15" fill="rgb(228,114,26)" fg:x="95" fg:w="1"/><text x="8.4822%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="8.2322%" y="485" width="0.0867%" height="15" fill="rgb(208,144,1)" fg:x="95" fg:w="1"/><text x="8.4822%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="8.2322%" y="469" width="0.0867%" height="15" fill="rgb(239,112,37)" fg:x="95" fg:w="1"/><text x="8.4822%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="8.2322%" y="453" width="0.0867%" height="15" fill="rgb(210,96,50)" fg:x="95" fg:w="1"/><text x="8.4822%" y="463.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="8.2322%" y="437" width="0.0867%" height="15" fill="rgb(222,178,2)" fg:x="95" fg:w="1"/><text x="8.4822%" y="447.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="8.2322%" y="421" width="0.0867%" height="15" fill="rgb(226,74,18)" fg:x="95" fg:w="1"/><text x="8.4822%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (1 samples, 0.09%)</title><rect x="8.2322%" y="405" width="0.0867%" height="15" fill="rgb(225,67,54)" fg:x="95" fg:w="1"/><text x="8.4822%" y="415.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer blitCommandEncoder] (2 samples, 0.17%)</title><rect x="8.4055%" y="485" width="0.1733%" height="15" fill="rgb(251,92,32)" fg:x="97" fg:w="2"/><text x="8.6555%" y="495.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (2 samples, 0.17%)</title><rect x="8.4055%" y="469" width="0.1733%" height="15" fill="rgb(228,149,22)" fg:x="97" fg:w="2"/><text x="8.6555%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.17%)</title><rect x="8.4055%" y="453" width="0.1733%" height="15" fill="rgb(243,54,13)" fg:x="97" fg:w="2"/><text x="8.6555%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.17%)</title><rect x="8.4055%" y="437" width="0.1733%" height="15" fill="rgb(243,180,28)" fg:x="97" fg:w="2"/><text x="8.6555%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.17%)</title><rect x="8.4055%" y="421" width="0.1733%" height="15" fill="rgb(208,167,24)" fg:x="97" fg:w="2"/><text x="8.6555%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.09%)</title><rect x="8.4922%" y="405" width="0.0867%" height="15" fill="rgb(245,73,45)" fg:x="98" fg:w="1"/><text x="8.7422%" y="415.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::fill_buffer (4 samples, 0.35%)</title><rect x="8.3189%" y="517" width="0.3466%" height="15" fill="rgb(237,203,48)" fg:x="96" fg:w="4"/><text x="8.5689%" y="527.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::blit_commands (4 samples, 0.35%)</title><rect x="8.3189%" y="501" width="0.3466%" height="15" fill="rgb(211,197,16)" fg:x="96" fg:w="4"/><text x="8.5689%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBlitCmdEncoder fillBuffer:range:value:] (1 samples, 0.09%)</title><rect x="8.5789%" y="485" width="0.0867%" height="15" fill="rgb(243,99,51)" fg:x="99" fg:w="1"/><text x="8.8289%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_DoMemset(AMD_UBMInterfaceRec*, AMD_HwCmdBufInfoRec*, _UBM_MEMSETINFO*, RgpSqttMarkerEventType, RgpBarrierReason) (1 samples, 0.09%)</title><rect x="8.5789%" y="469" width="0.0867%" height="15" fill="rgb(215,123,29)" fg:x="99" fg:w="1"/><text x="8.8289%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`BltMgr::Memset (1 samples, 0.09%)</title><rect x="8.5789%" y="453" width="0.0867%" height="15" fill="rgb(239,186,37)" fg:x="99" fg:w="1"/><text x="8.8289%" y="463.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::Execute3dBlt (1 samples, 0.09%)</title><rect x="8.5789%" y="437" width="0.0867%" height="15" fill="rgb(252,136,39)" fg:x="99" fg:w="1"/><text x="8.8289%" y="447.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::Execute3dDrawBlt (1 samples, 0.09%)</title><rect x="8.5789%" y="421" width="0.0867%" height="15" fill="rgb(223,213,32)" fg:x="99" fg:w="1"/><text x="8.8289%" y="431.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::SetupAndWriteDrawBltSurfInfo (1 samples, 0.09%)</title><rect x="8.5789%" y="405" width="0.0867%" height="15" fill="rgb(233,115,5)" fg:x="99" fg:w="1"/><text x="8.8289%" y="415.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltDrawRegs::SetupAndWriteDepth (1 samples, 0.09%)</title><rect x="8.5789%" y="389" width="0.0867%" height="15" fill="rgb(207,226,44)" fg:x="99" fg:w="1"/><text x="8.8289%" y="399.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltDevice::SetSeqContextRegs (1 samples, 0.09%)</title><rect x="8.5789%" y="373" width="0.0867%" height="15" fill="rgb(208,126,0)" fg:x="99" fg:w="1"/><text x="8.8289%" y="383.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (9 samples, 0.78%)</title><rect x="7.9723%" y="565" width="0.7799%" height="15" fill="rgb(244,66,21)" fg:x="92" fg:w="9"/><text x="8.2223%" y="575.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.69%)</title><rect x="8.0589%" y="549" width="0.6932%" height="15" fill="rgb(222,97,12)" fg:x="93" fg:w="8"/><text x="8.3089%" y="559.50"></text></g><g><title>wgpu_test`wgpu_test::world::draw::clear_world (8 samples, 0.69%)</title><rect x="8.0589%" y="533" width="0.6932%" height="15" fill="rgb(219,213,19)" fg:x="93" fg:w="8"/><text x="8.3089%" y="543.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (1 samples, 0.09%)</title><rect x="8.6655%" y="517" width="0.0867%" height="15" fill="rgb(252,169,30)" fg:x="100" fg:w="1"/><text x="8.9155%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="8.6655%" y="501" width="0.0867%" height="15" fill="rgb(206,32,51)" fg:x="100" fg:w="1"/><text x="8.9155%" y="511.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="8.7522%" y="565" width="0.0867%" height="15" fill="rgb(250,172,42)" fg:x="101" fg:w="1"/><text x="9.0022%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="8.7522%" y="549" width="0.0867%" height="15" fill="rgb(209,34,43)" fg:x="101" fg:w="1"/><text x="9.0022%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 1.21%)</title><rect x="7.7123%" y="581" width="1.2132%" height="15" fill="rgb(223,11,35)" fg:x="89" fg:w="14"/><text x="7.9623%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (1 samples, 0.09%)</title><rect x="8.8388%" y="565" width="0.0867%" height="15" fill="rgb(251,219,26)" fg:x="102" fg:w="1"/><text x="9.0888%" y="575.50"></text></g><g><title>wgpu_test`&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="8.8388%" y="549" width="0.0867%" height="15" fill="rgb(231,119,3)" fg:x="102" fg:w="1"/><text x="9.0888%" y="559.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (3 samples, 0.26%)</title><rect x="8.9255%" y="581" width="0.2600%" height="15" fill="rgb(216,97,11)" fg:x="103" fg:w="3"/><text x="9.1755%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="9.0988%" y="565" width="0.0867%" height="15" fill="rgb(223,59,9)" fg:x="105" fg:w="1"/><text x="9.3488%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.09%)</title><rect x="9.0988%" y="549" width="0.0867%" height="15" fill="rgb(233,93,31)" fg:x="105" fg:w="1"/><text x="9.3488%" y="559.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (1 samples, 0.09%)</title><rect x="9.1854%" y="581" width="0.0867%" height="15" fill="rgb(239,81,33)" fg:x="106" fg:w="1"/><text x="9.4354%" y="591.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.09%)</title><rect x="9.1854%" y="565" width="0.0867%" height="15" fill="rgb(213,120,34)" fg:x="106" fg:w="1"/><text x="9.4354%" y="575.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.09%)</title><rect x="9.2721%" y="581" width="0.0867%" height="15" fill="rgb(243,49,53)" fg:x="107" fg:w="1"/><text x="9.5221%" y="591.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::union_with (1 samples, 0.09%)</title><rect x="9.2721%" y="565" width="0.0867%" height="15" fill="rgb(247,216,33)" fg:x="107" fg:w="1"/><text x="9.5221%" y="575.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_counters_and_queue_systems (2 samples, 0.17%)</title><rect x="9.3588%" y="581" width="0.1733%" height="15" fill="rgb(226,26,14)" fg:x="108" fg:w="2"/><text x="9.6088%" y="591.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run (45 samples, 3.90%)</title><rect x="5.7192%" y="613" width="3.8995%" height="15" fill="rgb(215,49,53)" fg:x="66" fg:w="45"/><text x="5.9692%" y="623.50">wgpu..</text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 3.38%)</title><rect x="6.2392%" y="597" width="3.3795%" height="15" fill="rgb(245,162,40)" fg:x="72" fg:w="39"/><text x="6.4892%" y="607.50">wgp..</text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::union_with (1 samples, 0.09%)</title><rect x="9.5321%" y="581" width="0.0867%" height="15" fill="rgb(229,68,17)" fg:x="110" fg:w="1"/><text x="9.7821%" y="591.50"></text></g><g><title>wgpu_test`async_executor::Executor::try_tick (50 samples, 4.33%)</title><rect x="5.5459%" y="629" width="4.3328%" height="15" fill="rgb(213,182,10)" fg:x="64" fg:w="50"/><text x="5.7959%" y="639.50">wgpu_..</text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.26%)</title><rect x="9.6187%" y="613" width="0.2600%" height="15" fill="rgb(245,125,30)" fg:x="111" fg:w="3"/><text x="9.8687%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.09%)</title><rect x="9.7920%" y="597" width="0.0867%" height="15" fill="rgb(232,202,2)" fg:x="113" fg:w="1"/><text x="10.0420%" y="607.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::spawn (1 samples, 0.09%)</title><rect x="9.8787%" y="629" width="0.0867%" height="15" fill="rgb(237,140,51)" fg:x="114" fg:w="1"/><text x="10.1287%" y="639.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::inner (1 samples, 0.09%)</title><rect x="9.8787%" y="613" width="0.0867%" height="15" fill="rgb(236,157,25)" fg:x="114" fg:w="1"/><text x="10.1287%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.09%)</title><rect x="10.0520%" y="565" width="0.0867%" height="15" fill="rgb(219,209,0)" fg:x="116" fg:w="1"/><text x="10.3020%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.09%)</title><rect x="10.0520%" y="549" width="0.0867%" height="15" fill="rgb(240,116,54)" fg:x="116" fg:w="1"/><text x="10.3020%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.09%)</title><rect x="10.0520%" y="533" width="0.0867%" height="15" fill="rgb(216,10,36)" fg:x="116" fg:w="1"/><text x="10.3020%" y="543.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run (3 samples, 0.26%)</title><rect x="10.0520%" y="613" width="0.2600%" height="15" fill="rgb(222,72,44)" fg:x="116" fg:w="3"/><text x="10.3020%" y="623.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.26%)</title><rect x="10.0520%" y="597" width="0.2600%" height="15" fill="rgb(232,159,9)" fg:x="116" fg:w="3"/><text x="10.3020%" y="607.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.26%)</title><rect x="10.0520%" y="581" width="0.2600%" height="15" fill="rgb(210,39,32)" fg:x="116" fg:w="3"/><text x="10.3020%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.17%)</title><rect x="10.1386%" y="565" width="0.1733%" height="15" fill="rgb(216,194,45)" fg:x="117" fg:w="2"/><text x="10.3886%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.17%)</title><rect x="10.1386%" y="549" width="0.1733%" height="15" fill="rgb(218,18,35)" fg:x="117" fg:w="2"/><text x="10.3886%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.09%)</title><rect x="10.2253%" y="533" width="0.0867%" height="15" fill="rgb(207,83,51)" fg:x="118" fg:w="1"/><text x="10.4753%" y="543.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::try_tick (9 samples, 0.78%)</title><rect x="9.9653%" y="629" width="0.7799%" height="15" fill="rgb(225,63,43)" fg:x="115" fg:w="9"/><text x="10.2153%" y="639.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5 samples, 0.43%)</title><rect x="10.3120%" y="613" width="0.4333%" height="15" fill="rgb(207,57,36)" fg:x="119" fg:w="5"/><text x="10.5620%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="10.8319%" y="613" width="0.0867%" height="15" fill="rgb(216,99,33)" fg:x="125" fg:w="1"/><text x="11.0819%" y="623.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="10.9185%" y="613" width="0.0867%" height="15" fill="rgb(225,42,16)" fg:x="126" fg:w="1"/><text x="11.1685%" y="623.50"></text></g><g><title>wgpu_test`alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="10.9185%" y="597" width="0.0867%" height="15" fill="rgb(220,201,45)" fg:x="126" fg:w="1"/><text x="11.1685%" y="607.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.09%)</title><rect x="11.0052%" y="597" width="0.0867%" height="15" fill="rgb(225,33,4)" fg:x="127" fg:w="1"/><text x="11.2552%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="11.0052%" y="581" width="0.0867%" height="15" fill="rgb(224,33,50)" fg:x="127" fg:w="1"/><text x="11.2552%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.09%)</title><rect x="11.0052%" y="565" width="0.0867%" height="15" fill="rgb(246,198,51)" fg:x="127" fg:w="1"/><text x="11.2552%" y="575.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.09%)</title><rect x="11.0919%" y="597" width="0.0867%" height="15" fill="rgb(205,22,4)" fg:x="128" fg:w="1"/><text x="11.3419%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.52%)</title><rect x="11.2652%" y="533" width="0.5199%" height="15" fill="rgb(206,3,8)" fg:x="130" fg:w="6"/><text x="11.5152%" y="543.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (13 samples, 1.13%)</title><rect x="10.7452%" y="629" width="1.1265%" height="15" fill="rgb(251,23,15)" fg:x="124" fg:w="13"/><text x="10.9952%" y="639.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn (10 samples, 0.87%)</title><rect x="11.0052%" y="613" width="0.8666%" height="15" fill="rgb(252,88,28)" fg:x="127" fg:w="10"/><text x="11.2552%" y="623.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::schedule (8 samples, 0.69%)</title><rect x="11.1785%" y="597" width="0.6932%" height="15" fill="rgb(212,127,14)" fg:x="129" fg:w="8"/><text x="11.4285%" y="607.50"></text></g><g><title>wgpu_test`async_executor::State::notify (8 samples, 0.69%)</title><rect x="11.1785%" y="581" width="0.6932%" height="15" fill="rgb(247,145,37)" fg:x="129" fg:w="8"/><text x="11.4285%" y="591.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (7 samples, 0.61%)</title><rect x="11.2652%" y="565" width="0.6066%" height="15" fill="rgb(209,117,53)" fg:x="130" fg:w="7"/><text x="11.5152%" y="575.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (7 samples, 0.61%)</title><rect x="11.2652%" y="549" width="0.6066%" height="15" fill="rgb(212,90,42)" fg:x="130" fg:w="7"/><text x="11.5152%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.09%)</title><rect x="11.7851%" y="533" width="0.0867%" height="15" fill="rgb(218,164,37)" fg:x="136" fg:w="1"/><text x="12.0351%" y="543.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::clone_waker (3 samples, 0.26%)</title><rect x="12.3050%" y="581" width="0.2600%" height="15" fill="rgb(246,65,34)" fg:x="142" fg:w="3"/><text x="12.5550%" y="591.50"></text></g><g><title>wgpu_test`&lt;&amp;mut F as core::future::future::Future&gt;::poll (11 samples, 0.95%)</title><rect x="11.9584%" y="613" width="0.9532%" height="15" fill="rgb(231,100,33)" fg:x="138" fg:w="11"/><text x="12.2084%" y="623.50"></text></g><g><title>wgpu_test`async_task::header::Header::register (10 samples, 0.87%)</title><rect x="12.0451%" y="597" width="0.8666%" height="15" fill="rgb(228,126,14)" fg:x="139" fg:w="10"/><text x="12.2951%" y="607.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::drop_waker (4 samples, 0.35%)</title><rect x="12.5650%" y="581" width="0.3466%" height="15" fill="rgb(215,173,21)" fg:x="145" fg:w="4"/><text x="12.8150%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (5 samples, 0.43%)</title><rect x="12.9116%" y="581" width="0.4333%" height="15" fill="rgb(210,6,40)" fg:x="149" fg:w="5"/><text x="13.1616%" y="591.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::scope (96 samples, 8.32%)</title><rect x="5.1127%" y="645" width="8.3189%" height="15" fill="rgb(212,48,18)" fg:x="59" fg:w="96"/><text x="5.3627%" y="655.50">wgpu_test`be..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 1.56%)</title><rect x="11.8718%" y="629" width="1.5598%" height="15" fill="rgb(230,214,11)" fg:x="137" fg:w="18"/><text x="12.1218%" y="639.50"></text></g><g><title>wgpu_test`parking::Parker::park (6 samples, 0.52%)</title><rect x="12.9116%" y="613" width="0.5199%" height="15" fill="rgb(254,105,39)" fg:x="149" fg:w="6"/><text x="13.1616%" y="623.50"></text></g><g><title>wgpu_test`parking::Inner::park (6 samples, 0.52%)</title><rect x="12.9116%" y="597" width="0.5199%" height="15" fill="rgb(245,158,5)" fg:x="149" fg:w="6"/><text x="13.1616%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.09%)</title><rect x="13.3449%" y="581" width="0.0867%" height="15" fill="rgb(249,208,11)" fg:x="154" fg:w="1"/><text x="13.5949%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1 samples, 0.09%)</title><rect x="13.3449%" y="565" width="0.0867%" height="15" fill="rgb(210,39,28)" fg:x="154" fg:w="1"/><text x="13.5949%" y="575.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (98 samples, 8.49%)</title><rect x="5.0260%" y="661" width="8.4922%" height="15" fill="rgb(211,56,53)" fg:x="58" fg:w="98"/><text x="5.2760%" y="671.50">wgpu_test`&lt;b..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="13.4315%" y="645" width="0.0867%" height="15" fill="rgb(226,201,30)" fg:x="155" fg:w="1"/><text x="13.6815%" y="655.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (1 samples, 0.09%)</title><rect x="13.5182%" y="661" width="0.0867%" height="15" fill="rgb(239,101,34)" fg:x="156" fg:w="1"/><text x="13.7682%" y="671.50"></text></g><g><title>wgpu_test`bevy_ecs::entity::Entities::flush (1 samples, 0.09%)</title><rect x="13.5182%" y="645" width="0.0867%" height="15" fill="rgb(226,209,5)" fg:x="156" fg:w="1"/><text x="13.7682%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="13.6049%" y="645" width="0.0867%" height="15" fill="rgb(250,105,47)" fg:x="157" fg:w="1"/><text x="13.8549%" y="655.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (104 samples, 9.01%)</title><rect x="4.7660%" y="677" width="9.0121%" height="15" fill="rgb(230,72,3)" fg:x="55" fg:w="104"/><text x="5.0160%" y="687.50">wgpu_test`&lt;be..</text></g><g><title>wgpu_test`&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2 samples, 0.17%)</title><rect x="13.6049%" y="661" width="0.1733%" height="15" fill="rgb(232,218,39)" fg:x="157" fg:w="2"/><text x="13.8549%" y="671.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::resource_scope (1 samples, 0.09%)</title><rect x="13.6915%" y="645" width="0.0867%" height="15" fill="rgb(248,166,6)" fg:x="158" fg:w="1"/><text x="13.9415%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="13.6915%" y="629" width="0.0867%" height="15" fill="rgb(247,89,20)" fg:x="158" fg:w="1"/><text x="13.9415%" y="639.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (1 samples, 0.09%)</title><rect x="13.7782%" y="677" width="0.0867%" height="15" fill="rgb(248,130,54)" fg:x="159" fg:w="1"/><text x="14.0282%" y="687.50"></text></g><g><title>wgpu_test`bevy_app::app::App::update (109 samples, 9.45%)</title><rect x="4.5927%" y="709" width="9.4454%" height="15" fill="rgb(234,196,4)" fg:x="53" fg:w="109"/><text x="4.8427%" y="719.50">wgpu_test`bevy..</text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (109 samples, 9.45%)</title><rect x="4.5927%" y="693" width="9.4454%" height="15" fill="rgb(250,143,31)" fg:x="53" fg:w="109"/><text x="4.8427%" y="703.50">wgpu_test`&lt;bev..</text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (2 samples, 0.17%)</title><rect x="13.8648%" y="677" width="0.1733%" height="15" fill="rgb(211,110,34)" fg:x="160" fg:w="2"/><text x="14.1148%" y="687.50"></text></g><g><title>wgpu_test`bevy_ecs::world::world_cell::ArchetypeComponentAccess::drop_write (1 samples, 0.09%)</title><rect x="14.0381%" y="709" width="0.0867%" height="15" fill="rgb(215,124,48)" fg:x="162" fg:w="1"/><text x="14.2881%" y="719.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_or_insert_with (1 samples, 0.09%)</title><rect x="14.0381%" y="693" width="0.0867%" height="15" fill="rgb(216,46,13)" fg:x="162" fg:w="1"/><text x="14.2881%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setDepthStencilState:] (1 samples, 0.09%)</title><rect x="14.1248%" y="693" width="0.0867%" height="15" fill="rgb(205,184,25)" fg:x="163" fg:w="1"/><text x="14.3748%" y="703.50"></text></g><g><title>Metal`-[_MTLCommandBuffer status] (1 samples, 0.09%)</title><rect x="14.2114%" y="693" width="0.0867%" height="15" fill="rgb(228,1,10)" fg:x="164" fg:w="1"/><text x="14.4614%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="14.2981%" y="693" width="0.0867%" height="15" fill="rgb(213,116,27)" fg:x="165" fg:w="1"/><text x="14.5481%" y="703.50"></text></g><g><title>CoreFoundation` (1 samples, 0.09%)</title><rect x="14.3847%" y="565" width="0.0867%" height="15" fill="rgb(241,95,50)" fg:x="166" fg:w="1"/><text x="14.6347%" y="575.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (2 samples, 0.17%)</title><rect x="14.3847%" y="677" width="0.1733%" height="15" fill="rgb(238,48,32)" fg:x="166" fg:w="2"/><text x="14.6347%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (2 samples, 0.17%)</title><rect x="14.3847%" y="661" width="0.1733%" height="15" fill="rgb(235,113,49)" fg:x="166" fg:w="2"/><text x="14.6347%" y="671.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (2 samples, 0.17%)</title><rect x="14.3847%" y="645" width="0.1733%" height="15" fill="rgb(205,127,43)" fg:x="166" fg:w="2"/><text x="14.6347%" y="655.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.17%)</title><rect x="14.3847%" y="629" width="0.1733%" height="15" fill="rgb(250,162,2)" fg:x="166" fg:w="2"/><text x="14.6347%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.17%)</title><rect x="14.3847%" y="613" width="0.1733%" height="15" fill="rgb(220,13,41)" fg:x="166" fg:w="2"/><text x="14.6347%" y="623.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.17%)</title><rect x="14.3847%" y="597" width="0.1733%" height="15" fill="rgb(249,221,25)" fg:x="166" fg:w="2"/><text x="14.6347%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.17%)</title><rect x="14.3847%" y="581" width="0.1733%" height="15" fill="rgb(215,208,19)" fg:x="166" fg:w="2"/><text x="14.6347%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.09%)</title><rect x="14.4714%" y="565" width="0.0867%" height="15" fill="rgb(236,175,2)" fg:x="167" fg:w="1"/><text x="14.7214%" y="575.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (1 samples, 0.09%)</title><rect x="14.5581%" y="677" width="0.0867%" height="15" fill="rgb(241,52,2)" fg:x="168" fg:w="1"/><text x="14.8081%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.09%)</title><rect x="14.6447%" y="677" width="0.0867%" height="15" fill="rgb(248,140,14)" fg:x="169" fg:w="1"/><text x="14.8947%" y="687.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (5 samples, 0.43%)</title><rect x="14.3847%" y="693" width="0.4333%" height="15" fill="rgb(253,22,42)" fg:x="166" fg:w="5"/><text x="14.6347%" y="703.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.09%)</title><rect x="14.7314%" y="677" width="0.0867%" height="15" fill="rgb(234,61,47)" fg:x="170" fg:w="1"/><text x="14.9814%" y="687.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (1 samples, 0.09%)</title><rect x="14.7314%" y="661" width="0.0867%" height="15" fill="rgb(208,226,15)" fg:x="170" fg:w="1"/><text x="14.9814%" y="671.50"></text></g><g><title>CoreFoundation`CFStringConvertNSStringEncodingToEncoding (1 samples, 0.09%)</title><rect x="14.7314%" y="645" width="0.0867%" height="15" fill="rgb(217,221,4)" fg:x="170" fg:w="1"/><text x="14.9814%" y="655.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.09%)</title><rect x="14.8180%" y="661" width="0.0867%" height="15" fill="rgb(212,174,34)" fg:x="171" fg:w="1"/><text x="15.0680%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="14.9047%" y="645" width="0.0867%" height="15" fill="rgb(253,83,4)" fg:x="172" fg:w="1"/><text x="15.1547%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="14.9913%" y="645" width="0.0867%" height="15" fill="rgb(250,195,49)" fg:x="173" fg:w="1"/><text x="15.2413%" y="655.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_WriteAllRegisters(GFX10_HwInfoRec const*, unsigned int*, GFX10_RenderCmdEncoderMembersRec const*, GFX10_DeviceMembersRec const*) (1 samples, 0.09%)</title><rect x="15.0780%" y="597" width="0.0867%" height="15" fill="rgb(241,192,25)" fg:x="174" fg:w="1"/><text x="15.3280%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_WriteRenderEncoderHwCtxRegs(GFX10_HwInfoRec const*, GFX10_RenderEncoderHwCtxRegsRec const*, unsigned int*, unsigned int, unsigned int) (1 samples, 0.09%)</title><rect x="15.0780%" y="581" width="0.0867%" height="15" fill="rgb(208,124,10)" fg:x="174" fg:w="1"/><text x="15.3280%" y="591.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::SetupAndWriteDrawBltState (1 samples, 0.09%)</title><rect x="15.1646%" y="501" width="0.0867%" height="15" fill="rgb(222,33,0)" fg:x="175" fg:w="1"/><text x="15.4146%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltDrawRegs::SetupAndWriteAASampleLocs (1 samples, 0.09%)</title><rect x="15.1646%" y="485" width="0.0867%" height="15" fill="rgb(234,209,28)" fg:x="175" fg:w="1"/><text x="15.4146%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::SetupRectPosTexFastConstants (1 samples, 0.09%)</title><rect x="15.2513%" y="501" width="0.0867%" height="15" fill="rgb(224,11,23)" fg:x="176" fg:w="1"/><text x="15.5013%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::Execute3dDrawBlt (3 samples, 0.26%)</title><rect x="15.1646%" y="517" width="0.2600%" height="15" fill="rgb(232,99,1)" fg:x="175" fg:w="3"/><text x="15.4146%" y="527.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltVertexShader::WriteToHw (1 samples, 0.09%)</title><rect x="15.3380%" y="501" width="0.0867%" height="15" fill="rgb(237,95,45)" fg:x="177" fg:w="1"/><text x="15.5880%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_UBMAddWideHandle(void*, _UBM_ADDWIDEHANDLE_INPUT const*) (1 samples, 0.09%)</title><rect x="15.3380%" y="485" width="0.0867%" height="15" fill="rgb(208,109,11)" fg:x="177" fg:w="1"/><text x="15.5880%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_HandleLoadActions(AMD_DeviceMembersRec*, AMD_HwCmdBufInfoRec*, AMDBitVectorRec*, AMD_LoadStoreInfo*, ATI_BOOL) (4 samples, 0.35%)</title><rect x="15.1646%" y="597" width="0.3466%" height="15" fill="rgb(216,190,48)" fg:x="175" fg:w="4"/><text x="15.4146%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_DoColorClear(AMD_DeviceMembersRec*, AMD_HwCmdBufInfoRec*, GFXAAMD_MtlTexture*, unsigned int, unsigned int, unsigned int, double const*, unsigned int*, bool, bool) (4 samples, 0.35%)</title><rect x="15.1646%" y="581" width="0.3466%" height="15" fill="rgb(251,171,36)" fg:x="175" fg:w="4"/><text x="15.4146%" y="591.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_DoClear(AMD_DeviceMembersRec*, AMD_HwCmdBufInfoRec*, _UBM_CLEARINFO*, RgpSqttMarkerEventType) (4 samples, 0.35%)</title><rect x="15.1646%" y="565" width="0.3466%" height="15" fill="rgb(230,62,22)" fg:x="175" fg:w="4"/><text x="15.4146%" y="575.50"></text></g><g><title>AMDRadeonX6000MTLDriver`BltMgr::Clear (4 samples, 0.35%)</title><rect x="15.1646%" y="549" width="0.3466%" height="15" fill="rgb(225,114,35)" fg:x="175" fg:w="4"/><text x="15.4146%" y="559.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::Execute3dBlt (4 samples, 0.35%)</title><rect x="15.1646%" y="533" width="0.3466%" height="15" fill="rgb(215,118,42)" fg:x="175" fg:w="4"/><text x="15.4146%" y="543.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::SetupAndWriteDrawBltState (1 samples, 0.09%)</title><rect x="15.4246%" y="517" width="0.0867%" height="15" fill="rgb(243,119,21)" fg:x="178" fg:w="1"/><text x="15.6746%" y="527.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_InitLoadStoreInfo(MTLRenderPassDescriptor const*, AMD_LoadStoreInfo*) (1 samples, 0.09%)</title><rect x="15.5113%" y="597" width="0.0867%" height="15" fill="rgb(252,177,53)" fg:x="179" fg:w="1"/><text x="15.7613%" y="607.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (1 samples, 0.09%)</title><rect x="15.5113%" y="581" width="0.0867%" height="15" fill="rgb(237,209,29)" fg:x="179" fg:w="1"/><text x="15.7613%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (1 samples, 0.09%)</title><rect x="15.5113%" y="565" width="0.0867%" height="15" fill="rgb(212,65,23)" fg:x="179" fg:w="1"/><text x="15.7613%" y="575.50"></text></g><g><title>Metal`+[MTLRenderPassColorAttachmentDescriptor allocWithZone:] (1 samples, 0.09%)</title><rect x="15.5113%" y="549" width="0.0867%" height="15" fill="rgb(230,222,46)" fg:x="179" fg:w="1"/><text x="15.7613%" y="559.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.09%)</title><rect x="15.5113%" y="533" width="0.0867%" height="15" fill="rgb(215,135,32)" fg:x="179" fg:w="1"/><text x="15.7613%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="15.5113%" y="517" width="0.0867%" height="15" fill="rgb(246,101,22)" fg:x="179" fg:w="1"/><text x="15.7613%" y="527.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal validate:width:height:] (1 samples, 0.09%)</title><rect x="15.5979%" y="597" width="0.0867%" height="15" fill="rgb(206,107,13)" fg:x="180" fg:w="1"/><text x="15.8479%" y="607.50"></text></g><g><title>Metal`-[MTLIOAccelTexture width] (1 samples, 0.09%)</title><rect x="15.5979%" y="581" width="0.0867%" height="15" fill="rgb(250,100,44)" fg:x="180" fg:w="1"/><text x="15.8479%" y="591.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder initWithCommandBuffer:descriptor:] (8 samples, 0.69%)</title><rect x="15.0780%" y="613" width="0.6932%" height="15" fill="rgb(231,147,38)" fg:x="174" fg:w="8"/><text x="15.3280%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="15.6846%" y="597" width="0.0867%" height="15" fill="rgb(229,8,40)" fg:x="181" fg:w="1"/><text x="15.9346%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer renderCommandEncoderWithDescriptor:] (10 samples, 0.87%)</title><rect x="15.0780%" y="629" width="0.8666%" height="15" fill="rgb(221,135,30)" fg:x="174" fg:w="10"/><text x="15.3280%" y="639.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (2 samples, 0.17%)</title><rect x="15.7712%" y="613" width="0.1733%" height="15" fill="rgb(249,193,18)" fg:x="182" fg:w="2"/><text x="16.0212%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.17%)</title><rect x="15.7712%" y="597" width="0.1733%" height="15" fill="rgb(209,133,39)" fg:x="182" fg:w="2"/><text x="16.0212%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.17%)</title><rect x="15.7712%" y="581" width="0.1733%" height="15" fill="rgb(232,100,14)" fg:x="182" fg:w="2"/><text x="16.0212%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.17%)</title><rect x="15.7712%" y="565" width="0.1733%" height="15" fill="rgb(224,185,1)" fg:x="182" fg:w="2"/><text x="16.0212%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="15.8579%" y="549" width="0.0867%" height="15" fill="rgb(223,139,8)" fg:x="183" fg:w="1"/><text x="16.1079%" y="559.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder setLabel:] (1 samples, 0.09%)</title><rect x="15.9445%" y="629" width="0.0867%" height="15" fill="rgb(232,213,38)" fg:x="184" fg:w="1"/><text x="16.1945%" y="639.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (1 samples, 0.09%)</title><rect x="15.9445%" y="613" width="0.0867%" height="15" fill="rgb(207,94,22)" fg:x="184" fg:w="1"/><text x="16.1945%" y="623.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::switch_render (12 samples, 1.04%)</title><rect x="15.0780%" y="645" width="1.0399%" height="15" fill="rgb(219,183,54)" fg:x="174" fg:w="12"/><text x="15.3280%" y="655.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (1 samples, 0.09%)</title><rect x="16.0312%" y="629" width="0.0867%" height="15" fill="rgb(216,185,54)" fg:x="185" fg:w="1"/><text x="16.2812%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="16.0312%" y="613" width="0.0867%" height="15" fill="rgb(254,217,39)" fg:x="185" fg:w="1"/><text x="16.2812%" y="623.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setFragmentTextures:withRange:] (1 samples, 0.09%)</title><rect x="16.2912%" y="629" width="0.0867%" height="15" fill="rgb(240,178,23)" fg:x="188" fg:w="1"/><text x="16.5412%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setRenderPipelineState:] (1 samples, 0.09%)</title><rect x="16.3778%" y="629" width="0.0867%" height="15" fill="rgb(218,11,47)" fg:x="189" fg:w="1"/><text x="16.6278%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_UpdatePrimBatchBinning(GFX10_RenderCmdEncoderMembersRec*) (1 samples, 0.09%)</title><rect x="16.3778%" y="613" width="0.0867%" height="15" fill="rgb(218,51,51)" fg:x="189" fg:w="1"/><text x="16.6278%" y="623.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_SetBytes(GFX10_MtlDevice*, GFX10_RenderCmdEncoderMembersRec*, unsigned int, void const*, unsigned int, unsigned int, unsigned int) (1 samples, 0.09%)</title><rect x="16.4645%" y="629" width="0.0867%" height="15" fill="rgb(238,126,27)" fg:x="190" fg:w="1"/><text x="16.7145%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_AllocTempBufferBytes(AMD_HwCmdBufInfoRec*, void const*, unsigned int, unsigned long long*, unsigned long long) (1 samples, 0.09%)</title><rect x="16.4645%" y="613" width="0.0867%" height="15" fill="rgb(249,202,22)" fg:x="190" fg:w="1"/><text x="16.7145%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="16.4645%" y="597" width="0.0867%" height="15" fill="rgb(254,195,49)" fg:x="190" fg:w="1"/><text x="16.7145%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::exec_render (1 samples, 0.09%)</title><rect x="16.5511%" y="629" width="0.0867%" height="15" fill="rgb(208,123,14)" fg:x="191" fg:w="1"/><text x="16.8011%" y="639.50"></text></g><g><title>wgpu_test`metal::encoder::RenderCommandEncoderRef::set_viewport (1 samples, 0.09%)</title><rect x="16.5511%" y="613" width="0.0867%" height="15" fill="rgb(224,200,8)" fg:x="191" fg:w="1"/><text x="16.8011%" y="623.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setViewport:] (1 samples, 0.09%)</title><rect x="16.5511%" y="597" width="0.0867%" height="15" fill="rgb(217,61,36)" fg:x="191" fg:w="1"/><text x="16.8011%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_SetViewports(GFX10_RenderCmdEncoderMembersRec*, MTLViewport const*, unsigned int) (1 samples, 0.09%)</title><rect x="16.5511%" y="581" width="0.0867%" height="15" fill="rgb(206,35,45)" fg:x="191" fg:w="1"/><text x="16.8011%" y="591.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass (22 samples, 1.91%)</title><rect x="14.8180%" y="677" width="1.9064%" height="15" fill="rgb(217,65,33)" fg:x="171" fg:w="22"/><text x="15.0680%" y="687.50">w..</text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (21 samples, 1.82%)</title><rect x="14.9047%" y="661" width="1.8198%" height="15" fill="rgb(222,158,48)" fg:x="172" fg:w="21"/><text x="15.1547%" y="671.50">w..</text></g><g><title>wgpu_test`gfx_backend_metal::command::PreRender::issue_many (7 samples, 0.61%)</title><rect x="16.1179%" y="645" width="0.6066%" height="15" fill="rgb(254,2,54)" fg:x="186" fg:w="7"/><text x="16.3679%" y="655.50"></text></g><g><title>wgpu_test`metal::encoder::RenderCommandEncoderRef::set_fragment_textures (1 samples, 0.09%)</title><rect x="16.6378%" y="629" width="0.0867%" height="15" fill="rgb(250,143,38)" fg:x="192" fg:w="1"/><text x="16.8878%" y="639.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin_render_pass (23 samples, 1.99%)</title><rect x="14.8180%" y="693" width="1.9931%" height="15" fill="rgb(248,25,0)" fg:x="171" fg:w="23"/><text x="15.0680%" y="703.50">w..</text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (1 samples, 0.09%)</title><rect x="16.7244%" y="677" width="0.0867%" height="15" fill="rgb(206,152,27)" fg:x="193" fg:w="1"/><text x="16.9744%" y="687.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (1 samples, 0.09%)</title><rect x="16.7244%" y="661" width="0.0867%" height="15" fill="rgb(240,77,30)" fg:x="193" fg:w="1"/><text x="16.9744%" y="671.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal init] (1 samples, 0.09%)</title><rect x="16.7244%" y="645" width="0.0867%" height="15" fill="rgb(231,5,3)" fg:x="193" fg:w="1"/><text x="16.9744%" y="655.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_pipeline (1 samples, 0.09%)</title><rect x="16.8111%" y="693" width="0.0867%" height="15" fill="rgb(207,226,32)" fg:x="194" fg:w="1"/><text x="17.0611%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setRenderPipelineState:] (1 samples, 0.09%)</title><rect x="16.8111%" y="677" width="0.0867%" height="15" fill="rgb(222,207,47)" fg:x="194" fg:w="1"/><text x="17.0611%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_BeginHwCmdBuf(AMD_HwCmdBufInfoRec*, unsigned int) (1 samples, 0.09%)</title><rect x="16.8111%" y="661" width="0.0867%" height="15" fill="rgb(229,115,45)" fg:x="194" fg:w="1"/><text x="17.0611%" y="671.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::draw (1 samples, 0.09%)</title><rect x="16.8977%" y="693" width="0.0867%" height="15" fill="rgb(224,191,6)" fg:x="195" fg:w="1"/><text x="17.1477%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder drawPrimitives:vertexStart:vertexCount:] (1 samples, 0.09%)</title><rect x="16.8977%" y="677" width="0.0867%" height="15" fill="rgb(230,227,24)" fg:x="195" fg:w="1"/><text x="17.1477%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_ResourceMgrValidateGfxConstState(AMD_HwCmdBufInfoRec*, GFX10_RsrcMgrRec*, GFX10_RsrcMgrConstStateRec const*, bool) (1 samples, 0.09%)</title><rect x="16.8977%" y="661" width="0.0867%" height="15" fill="rgb(228,80,19)" fg:x="195" fg:w="1"/><text x="17.1477%" y="671.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::end_render_pass (1 samples, 0.09%)</title><rect x="16.9844%" y="693" width="0.0867%" height="15" fill="rgb(247,229,0)" fg:x="196" fg:w="1"/><text x="17.2344%" y="703.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::EncoderState::end (1 samples, 0.09%)</title><rect x="16.9844%" y="677" width="0.0867%" height="15" fill="rgb(237,194,15)" fg:x="196" fg:w="1"/><text x="17.2344%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder endEncoding] (1 samples, 0.09%)</title><rect x="16.9844%" y="661" width="0.0867%" height="15" fill="rgb(219,203,20)" fg:x="196" fg:w="1"/><text x="17.2344%" y="671.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder endEncoding] (1 samples, 0.09%)</title><rect x="16.9844%" y="645" width="0.0867%" height="15" fill="rgb(234,128,8)" fg:x="196" fg:w="1"/><text x="17.2344%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.09%)</title><rect x="16.9844%" y="629" width="0.0867%" height="15" fill="rgb(248,202,8)" fg:x="196" fg:w="1"/><text x="17.2344%" y="639.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass (1 samples, 0.09%)</title><rect x="17.0711%" y="693" width="0.0867%" height="15" fill="rgb(206,104,37)" fg:x="197" fg:w="1"/><text x="17.3211%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_SetBytes(GFX10_MtlDevice*, GFX10_RenderCmdEncoderMembersRec*, unsigned int, void const*, unsigned int, unsigned int, unsigned int) (3 samples, 0.26%)</title><rect x="17.1577%" y="677" width="0.2600%" height="15" fill="rgb(223,8,27)" fg:x="198" fg:w="3"/><text x="17.4077%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_AllocTempBufferBytes(AMD_HwCmdBufInfoRec*, void const*, unsigned int, unsigned long long*, unsigned long long) (3 samples, 0.26%)</title><rect x="17.1577%" y="661" width="0.2600%" height="15" fill="rgb(216,217,28)" fg:x="198" fg:w="3"/><text x="17.4077%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.26%)</title><rect x="17.1577%" y="645" width="0.2600%" height="15" fill="rgb(249,199,1)" fg:x="198" fg:w="3"/><text x="17.4077%" y="655.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::push_graphics_constants (4 samples, 0.35%)</title><rect x="17.1577%" y="693" width="0.3466%" height="15" fill="rgb(240,85,17)" fg:x="198" fg:w="4"/><text x="17.4077%" y="703.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::update_push_constants (1 samples, 0.09%)</title><rect x="17.4177%" y="677" width="0.0867%" height="15" fill="rgb(206,108,45)" fg:x="201" fg:w="1"/><text x="17.6677%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="17.4177%" y="661" width="0.0867%" height="15" fill="rgb(245,210,41)" fg:x="201" fg:w="1"/><text x="17.6677%" y="671.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandPool as gfx_hal::pool::CommandPool&lt;gfx_backend_metal::Backend&gt;&gt;::reset (1 samples, 0.09%)</title><rect x="17.5043%" y="693" width="0.0867%" height="15" fill="rgb(206,13,37)" fg:x="202" fg:w="1"/><text x="17.7543%" y="703.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandBufferInner::reset (1 samples, 0.09%)</title><rect x="17.5043%" y="677" width="0.0867%" height="15" fill="rgb(250,61,18)" fg:x="202" fg:w="1"/><text x="17.7543%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (1 samples, 0.09%)</title><rect x="17.5043%" y="661" width="0.0867%" height="15" fill="rgb(235,172,48)" fg:x="202" fg:w="1"/><text x="17.7543%" y="671.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (1 samples, 0.09%)</title><rect x="17.5043%" y="645" width="0.0867%" height="15" fill="rgb(249,201,17)" fg:x="202" fg:w="1"/><text x="17.7543%" y="655.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.09%)</title><rect x="17.5043%" y="629" width="0.0867%" height="15" fill="rgb(219,208,6)" fg:x="202" fg:w="1"/><text x="17.7543%" y="639.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (1 samples, 0.09%)</title><rect x="17.5043%" y="613" width="0.0867%" height="15" fill="rgb(248,31,23)" fg:x="202" fg:w="1"/><text x="17.7543%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.09%)</title><rect x="17.5043%" y="597" width="0.0867%" height="15" fill="rgb(245,15,42)" fg:x="202" fg:w="1"/><text x="17.7543%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.09%)</title><rect x="17.5043%" y="581" width="0.0867%" height="15" fill="rgb(222,217,39)" fg:x="202" fg:w="1"/><text x="17.7543%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (1 samples, 0.09%)</title><rect x="17.6776%" y="645" width="0.0867%" height="15" fill="rgb(210,219,27)" fg:x="204" fg:w="1"/><text x="17.9276%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_wakeup (1 samples, 0.09%)</title><rect x="17.6776%" y="629" width="0.0867%" height="15" fill="rgb(252,166,36)" fg:x="204" fg:w="1"/><text x="17.9276%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer presentDrawable:] (2 samples, 0.17%)</title><rect x="17.6776%" y="661" width="0.1733%" height="15" fill="rgb(245,132,34)" fg:x="204" fg:w="2"/><text x="17.9276%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="17.7643%" y="645" width="0.0867%" height="15" fill="rgb(236,54,3)" fg:x="205" fg:w="1"/><text x="18.0143%" y="655.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::present (4 samples, 0.35%)</title><rect x="17.5910%" y="693" width="0.3466%" height="15" fill="rgb(241,173,43)" fg:x="203" fg:w="4"/><text x="17.8410%" y="703.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (4 samples, 0.35%)</title><rect x="17.5910%" y="677" width="0.3466%" height="15" fill="rgb(215,190,9)" fg:x="203" fg:w="4"/><text x="17.8410%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBuffer] (1 samples, 0.09%)</title><rect x="17.8510%" y="661" width="0.0867%" height="15" fill="rgb(242,101,16)" fg:x="206" fg:w="1"/><text x="18.1010%" y="671.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="17.8510%" y="645" width="0.0867%" height="15" fill="rgb(223,190,21)" fg:x="206" fg:w="1"/><text x="18.1010%" y="655.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="17.8510%" y="629" width="0.0867%" height="15" fill="rgb(215,228,25)" fg:x="206" fg:w="1"/><text x="18.1010%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="17.8510%" y="613" width="0.0867%" height="15" fill="rgb(225,36,22)" fg:x="206" fg:w="1"/><text x="18.1010%" y="623.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer akResourceList] (1 samples, 0.09%)</title><rect x="17.8510%" y="597" width="0.0867%" height="15" fill="rgb(251,106,46)" fg:x="206" fg:w="1"/><text x="18.1010%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (1 samples, 0.09%)</title><rect x="17.9376%" y="661" width="0.0867%" height="15" fill="rgb(208,90,1)" fg:x="207" fg:w="1"/><text x="18.1876%" y="671.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="17.9376%" y="645" width="0.0867%" height="15" fill="rgb(243,10,4)" fg:x="207" fg:w="1"/><text x="18.1876%" y="655.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="17.9376%" y="629" width="0.0867%" height="15" fill="rgb(212,137,27)" fg:x="207" fg:w="1"/><text x="18.1876%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="17.9376%" y="613" width="0.0867%" height="15" fill="rgb(231,220,49)" fg:x="207" fg:w="1"/><text x="18.1876%" y="623.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="17.9376%" y="597" width="0.0867%" height="15" fill="rgb(237,96,20)" fg:x="207" fg:w="1"/><text x="18.1876%" y="607.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="17.9376%" y="581" width="0.0867%" height="15" fill="rgb(239,229,30)" fg:x="207" fg:w="1"/><text x="18.1876%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="17.9376%" y="565" width="0.0867%" height="15" fill="rgb(219,65,33)" fg:x="207" fg:w="1"/><text x="18.1876%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.09%)</title><rect x="18.0243%" y="661" width="0.0867%" height="15" fill="rgb(243,134,7)" fg:x="208" fg:w="1"/><text x="18.2743%" y="671.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (3 samples, 0.26%)</title><rect x="17.9376%" y="693" width="0.2600%" height="15" fill="rgb(216,177,54)" fg:x="207" fg:w="3"/><text x="18.1876%" y="703.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (3 samples, 0.26%)</title><rect x="17.9376%" y="677" width="0.2600%" height="15" fill="rgb(211,160,20)" fg:x="207" fg:w="3"/><text x="18.1876%" y="687.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="18.1109%" y="661" width="0.0867%" height="15" fill="rgb(239,85,39)" fg:x="209" fg:w="1"/><text x="18.3609%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.09%)</title><rect x="18.1976%" y="629" width="0.0867%" height="15" fill="rgb(232,125,22)" fg:x="210" fg:w="1"/><text x="18.4476%" y="639.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::reset_fence (2 samples, 0.17%)</title><rect x="18.1976%" y="693" width="0.1733%" height="15" fill="rgb(244,57,34)" fg:x="210" fg:w="2"/><text x="18.4476%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (2 samples, 0.17%)</title><rect x="18.1976%" y="677" width="0.1733%" height="15" fill="rgb(214,203,32)" fg:x="210" fg:w="2"/><text x="18.4476%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (2 samples, 0.17%)</title><rect x="18.1976%" y="661" width="0.1733%" height="15" fill="rgb(207,58,43)" fg:x="210" fg:w="2"/><text x="18.4476%" y="671.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (2 samples, 0.17%)</title><rect x="18.1976%" y="645" width="0.1733%" height="15" fill="rgb(215,193,15)" fg:x="210" fg:w="2"/><text x="18.4476%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.09%)</title><rect x="18.2842%" y="629" width="0.0867%" height="15" fill="rgb(232,15,44)" fg:x="211" fg:w="1"/><text x="18.5342%" y="639.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__error (1 samples, 0.09%)</title><rect x="18.5442%" y="661" width="0.0867%" height="15" fill="rgb(212,3,48)" fg:x="214" fg:w="1"/><text x="18.7942%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`cerror (1 samples, 0.09%)</title><rect x="18.7175%" y="645" width="0.0867%" height="15" fill="rgb(218,128,7)" fg:x="216" fg:w="1"/><text x="18.9675%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (1 samples, 0.09%)</title><rect x="18.7175%" y="629" width="0.0867%" height="15" fill="rgb(226,216,39)" fg:x="216" fg:w="1"/><text x="18.9675%" y="639.50"></text></g><g><title>libsystem_c.dylib`nanosleep (27 samples, 2.34%)</title><rect x="18.6308%" y="661" width="2.3397%" height="15" fill="rgb(243,47,51)" fg:x="215" fg:w="27"/><text x="18.8808%" y="671.50">l..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (25 samples, 2.17%)</title><rect x="18.8042%" y="645" width="2.1664%" height="15" fill="rgb(241,183,40)" fg:x="217" fg:w="25"/><text x="19.0542%" y="655.50">l..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (24 samples, 2.08%)</title><rect x="18.8908%" y="629" width="2.0797%" height="15" fill="rgb(231,217,32)" fg:x="218" fg:w="24"/><text x="19.1408%" y="639.50">l..</text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::wait_for_fence (72 samples, 6.24%)</title><rect x="18.3709%" y="693" width="6.2392%" height="15" fill="rgb(229,61,38)" fg:x="212" fg:w="72"/><text x="18.6209%" y="703.50">wgpu_tes..</text></g><g><title>wgpu_test`std::thread::sleep (70 samples, 6.07%)</title><rect x="18.5442%" y="677" width="6.0659%" height="15" fill="rgb(225,210,5)" fg:x="214" fg:w="70"/><text x="18.7942%" y="687.50">wgpu_tes..</text></g><g><title>libsystem_kernel.dylib`__semwait_signal (42 samples, 3.64%)</title><rect x="20.9705%" y="661" width="3.6395%" height="15" fill="rgb(231,79,45)" fg:x="242" fg:w="42"/><text x="21.2205%" y="671.50">libs..</text></g><g><title>CoreFoundation`__NSArrayM_new (1 samples, 0.09%)</title><rect x="24.6101%" y="629" width="0.0867%" height="15" fill="rgb(224,100,7)" fg:x="284" fg:w="1"/><text x="24.8601%" y="639.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (1 samples, 0.09%)</title><rect x="24.6101%" y="613" width="0.0867%" height="15" fill="rgb(241,198,18)" fg:x="284" fg:w="1"/><text x="24.8601%" y="623.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.09%)</title><rect x="24.6101%" y="597" width="0.0867%" height="15" fill="rgb(252,97,53)" fg:x="284" fg:w="1"/><text x="24.8601%" y="607.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (14 samples, 1.21%)</title><rect x="24.6101%" y="645" width="1.2132%" height="15" fill="rgb(220,88,7)" fg:x="284" fg:w="14"/><text x="24.8601%" y="655.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent init] (13 samples, 1.13%)</title><rect x="24.6967%" y="629" width="1.1265%" height="15" fill="rgb(213,176,14)" fg:x="285" fg:w="13"/><text x="24.9467%" y="639.50"></text></g><g><title>IOKit`IOConnectCallMethod (13 samples, 1.13%)</title><rect x="24.6967%" y="613" width="1.1265%" height="15" fill="rgb(246,73,7)" fg:x="285" fg:w="13"/><text x="24.9467%" y="623.50"></text></g><g><title>IOKit`io_connect_method (13 samples, 1.13%)</title><rect x="24.6967%" y="597" width="1.1265%" height="15" fill="rgb(245,64,36)" fg:x="285" fg:w="13"/><text x="24.9467%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (13 samples, 1.13%)</title><rect x="24.6967%" y="581" width="1.1265%" height="15" fill="rgb(245,80,10)" fg:x="285" fg:w="13"/><text x="24.9467%" y="591.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (1 samples, 0.09%)</title><rect x="25.8232%" y="645" width="0.0867%" height="15" fill="rgb(232,107,50)" fg:x="298" fg:w="1"/><text x="26.0732%" y="655.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (1 samples, 0.09%)</title><rect x="25.8232%" y="629" width="0.0867%" height="15" fill="rgb(253,3,0)" fg:x="298" fg:w="1"/><text x="26.0732%" y="639.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (1 samples, 0.09%)</title><rect x="25.8232%" y="613" width="0.0867%" height="15" fill="rgb(212,99,53)" fg:x="298" fg:w="1"/><text x="26.0732%" y="623.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (1 samples, 0.09%)</title><rect x="25.8232%" y="597" width="0.0867%" height="15" fill="rgb(249,111,54)" fg:x="298" fg:w="1"/><text x="26.0732%" y="607.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::create_window::_{{closure}} (247 samples, 21.40%)</title><rect x="4.5927%" y="725" width="21.4038%" height="15" fill="rgb(249,55,30)" fg:x="53" fg:w="247"/><text x="4.8427%" y="735.50">wgpu_test`wgpu_test::rendering::cr..</text></g><g><title>wgpu_test`wgpu_test::rendering::render::render_draw (137 samples, 11.87%)</title><rect x="14.1248%" y="709" width="11.8718%" height="15" fill="rgb(237,47,42)" fg:x="163" fg:w="137"/><text x="14.3748%" y="719.50">wgpu_test`wgpu_tes..</text></g><g><title>wgpu_test`&lt;gfx_backend_metal::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_metal::Backend&gt;&gt;::acquire_image (16 samples, 1.39%)</title><rect x="24.6101%" y="693" width="1.3865%" height="15" fill="rgb(211,20,18)" fg:x="284" fg:w="16"/><text x="24.8601%" y="703.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (16 samples, 1.39%)</title><rect x="24.6101%" y="677" width="1.3865%" height="15" fill="rgb(231,203,46)" fg:x="284" fg:w="16"/><text x="24.8601%" y="687.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (16 samples, 1.39%)</title><rect x="24.6101%" y="661" width="1.3865%" height="15" fill="rgb(237,142,3)" fg:x="284" fg:w="16"/><text x="24.8601%" y="671.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (1 samples, 0.09%)</title><rect x="25.9099%" y="645" width="0.0867%" height="15" fill="rgb(241,107,1)" fg:x="299" fg:w="1"/><text x="26.1599%" y="655.50"></text></g><g><title>QuartzCore`CA::Render::create_iosurface_with_pixel_format (1 samples, 0.09%)</title><rect x="25.9099%" y="629" width="0.0867%" height="15" fill="rgb(229,83,13)" fg:x="299" fg:w="1"/><text x="26.1599%" y="639.50"></text></g><g><title>QuartzCore`CA::SurfaceUtil::CAIOSurfaceCreate (1 samples, 0.09%)</title><rect x="25.9099%" y="613" width="0.0867%" height="15" fill="rgb(241,91,40)" fg:x="299" fg:w="1"/><text x="26.1599%" y="623.50"></text></g><g><title>IOSurface`-[IOSurface initWithProperties:] (1 samples, 0.09%)</title><rect x="25.9099%" y="597" width="0.0867%" height="15" fill="rgb(225,3,45)" fg:x="299" fg:w="1"/><text x="26.1599%" y="607.50"></text></g><g><title>IOSurface`IOSurfaceClientCreateChild (1 samples, 0.09%)</title><rect x="25.9099%" y="581" width="0.0867%" height="15" fill="rgb(244,223,14)" fg:x="299" fg:w="1"/><text x="26.1599%" y="591.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.09%)</title><rect x="25.9099%" y="565" width="0.0867%" height="15" fill="rgb(224,124,37)" fg:x="299" fg:w="1"/><text x="26.1599%" y="575.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.09%)</title><rect x="25.9099%" y="549" width="0.0867%" height="15" fill="rgb(251,171,30)" fg:x="299" fg:w="1"/><text x="26.1599%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="25.9099%" y="533" width="0.0867%" height="15" fill="rgb(236,46,54)" fg:x="299" fg:w="1"/><text x="26.1599%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (262 samples, 22.70%)</title><rect x="3.7262%" y="805" width="22.7036%" height="15" fill="rgb(245,213,5)" fg:x="43" fg:w="262"/><text x="3.9762%" y="815.50">CoreFoundation`__CFRUNLOOP_IS_CALLIN..</text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_end_handler (254 samples, 22.01%)</title><rect x="4.4194%" y="789" width="22.0104%" height="15" fill="rgb(230,144,27)" fg:x="51" fg:w="254"/><text x="4.6694%" y="799.50">wgpu_test`winit::platform_impl::pla..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::cleared (253 samples, 21.92%)</title><rect x="4.5061%" y="773" width="21.9237%" height="15" fill="rgb(220,86,6)" fg:x="52" fg:w="253"/><text x="4.7561%" y="783.50">wgpu_test`winit::platform_impl::pla..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (252 samples, 21.84%)</title><rect x="4.5927%" y="757" width="21.8371%" height="15" fill="rgb(240,20,13)" fg:x="53" fg:w="252"/><text x="4.8427%" y="767.50">wgpu_test`winit::platform_impl::pla..</text></g><g><title>wgpu_test`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (252 samples, 21.84%)</title><rect x="4.5927%" y="741" width="21.8371%" height="15" fill="rgb(217,89,34)" fg:x="53" fg:w="252"/><text x="4.8427%" y="751.50">wgpu_test`&lt;winit::platform_impl::pl..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::queue_redraw (5 samples, 0.43%)</title><rect x="25.9965%" y="725" width="0.4333%" height="15" fill="rgb(229,13,5)" fg:x="300" fg:w="5"/><text x="26.2465%" y="735.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (5 samples, 0.43%)</title><rect x="25.9965%" y="709" width="0.4333%" height="15" fill="rgb(244,67,35)" fg:x="300" fg:w="5"/><text x="26.2465%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.43%)</title><rect x="25.9965%" y="693" width="0.4333%" height="15" fill="rgb(221,40,2)" fg:x="300" fg:w="5"/><text x="26.2465%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (1 samples, 0.09%)</title><rect x="26.4298%" y="805" width="0.0867%" height="15" fill="rgb(237,157,21)" fg:x="305" fg:w="1"/><text x="26.6798%" y="815.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (1 samples, 0.09%)</title><rect x="26.4298%" y="789" width="0.0867%" height="15" fill="rgb(222,94,11)" fg:x="305" fg:w="1"/><text x="26.6798%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.09%)</title><rect x="26.4298%" y="773" width="0.0867%" height="15" fill="rgb(249,113,6)" fg:x="305" fg:w="1"/><text x="26.6798%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.09%)</title><rect x="26.4298%" y="757" width="0.0867%" height="15" fill="rgb(238,137,36)" fg:x="305" fg:w="1"/><text x="26.6798%" y="767.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (264 samples, 22.88%)</title><rect x="3.7262%" y="821" width="22.8769%" height="15" fill="rgb(210,102,26)" fg:x="43" fg:w="264"/><text x="3.9762%" y="831.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="26.5165%" y="805" width="0.0867%" height="15" fill="rgb(218,30,30)" fg:x="306" fg:w="1"/><text x="26.7665%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (37 samples, 3.21%)</title><rect x="26.6898%" y="805" width="3.2062%" height="15" fill="rgb(214,67,26)" fg:x="308" fg:w="37"/><text x="26.9398%" y="815.50">Cor..</text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (1 samples, 0.09%)</title><rect x="29.8094%" y="789" width="0.0867%" height="15" fill="rgb(251,9,53)" fg:x="344" fg:w="1"/><text x="30.0594%" y="799.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (1 samples, 0.09%)</title><rect x="29.8094%" y="773" width="0.0867%" height="15" fill="rgb(228,204,25)" fg:x="344" fg:w="1"/><text x="30.0594%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.09%)</title><rect x="29.8094%" y="757" width="0.0867%" height="15" fill="rgb(207,153,8)" fg:x="344" fg:w="1"/><text x="30.0594%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (1 samples, 0.09%)</title><rect x="29.8094%" y="741" width="0.0867%" height="15" fill="rgb(242,9,16)" fg:x="344" fg:w="1"/><text x="30.0594%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (1 samples, 0.09%)</title><rect x="29.8094%" y="725" width="0.0867%" height="15" fill="rgb(217,211,10)" fg:x="344" fg:w="1"/><text x="30.0594%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (39 samples, 3.38%)</title><rect x="26.6031%" y="821" width="3.3795%" height="15" fill="rgb(219,228,52)" fg:x="307" fg:w="39"/><text x="26.8531%" y="831.50">Cor..</text></g><g><title>libsystem_kernel.dylib`kdebug_trace (1 samples, 0.09%)</title><rect x="29.8960%" y="805" width="0.0867%" height="15" fill="rgb(231,92,29)" fg:x="345" fg:w="1"/><text x="30.1460%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (1 samples, 0.09%)</title><rect x="29.8960%" y="789" width="0.0867%" height="15" fill="rgb(232,8,23)" fg:x="345" fg:w="1"/><text x="30.1460%" y="799.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (1 samples, 0.09%)</title><rect x="29.9827%" y="821" width="0.0867%" height="15" fill="rgb(216,211,34)" fg:x="346" fg:w="1"/><text x="30.2327%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="29.9827%" y="805" width="0.0867%" height="15" fill="rgb(236,151,0)" fg:x="346" fg:w="1"/><text x="30.2327%" y="815.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (321 samples, 27.82%)</title><rect x="2.5130%" y="853" width="27.8163%" height="15" fill="rgb(209,168,3)" fg:x="29" fg:w="321"/><text x="2.7630%" y="863.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>CoreFoundation`__CFRunLoopRun (320 samples, 27.73%)</title><rect x="2.5997%" y="837" width="27.7296%" height="15" fill="rgb(208,129,28)" fg:x="30" fg:w="320"/><text x="2.8497%" y="847.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (3 samples, 0.26%)</title><rect x="30.0693%" y="821" width="0.2600%" height="15" fill="rgb(229,78,22)" fg:x="347" fg:w="3"/><text x="30.3193%" y="831.50"></text></g><g><title>AE`aeInstallRunLoopDispatcher (1 samples, 0.09%)</title><rect x="30.3293%" y="837" width="0.0867%" height="15" fill="rgb(228,187,13)" fg:x="350" fg:w="1"/><text x="30.5793%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="30.3293%" y="821" width="0.0867%" height="15" fill="rgb(240,119,24)" fg:x="350" fg:w="1"/><text x="30.5793%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="30.3293%" y="805" width="0.0867%" height="15" fill="rgb(209,194,42)" fg:x="350" fg:w="1"/><text x="30.5793%" y="815.50"></text></g><g><title>AE`0x00007ff80fd1f8d8 (1 samples, 0.09%)</title><rect x="30.3293%" y="789" width="0.0867%" height="15" fill="rgb(247,200,46)" fg:x="350" fg:w="1"/><text x="30.5793%" y="799.50"></text></g><g><title>AE`0x00007ff80fd1fdae (1 samples, 0.09%)</title><rect x="30.3293%" y="773" width="0.0867%" height="15" fill="rgb(218,76,16)" fg:x="350" fg:w="1"/><text x="30.5793%" y="783.50"></text></g><g><title>AE`_AECreateAEReceivePortInRunLoopWithSource (1 samples, 0.09%)</title><rect x="30.3293%" y="757" width="0.0867%" height="15" fill="rgb(225,21,48)" fg:x="350" fg:w="1"/><text x="30.5793%" y="767.50"></text></g><g><title>AE`0x00007ff80fd1ff2a (1 samples, 0.09%)</title><rect x="30.3293%" y="741" width="0.0867%" height="15" fill="rgb(239,223,50)" fg:x="350" fg:w="1"/><text x="30.5793%" y="751.50"></text></g><g><title>AE`0x00007ff80fd2039b (1 samples, 0.09%)</title><rect x="30.3293%" y="725" width="0.0867%" height="15" fill="rgb(244,45,21)" fg:x="350" fg:w="1"/><text x="30.5793%" y="735.50"></text></g><g><title>AE`0x00007ff80fd4fd3f (1 samples, 0.09%)</title><rect x="30.3293%" y="709" width="0.0867%" height="15" fill="rgb(232,33,43)" fg:x="350" fg:w="1"/><text x="30.5793%" y="719.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (1 samples, 0.09%)</title><rect x="30.3293%" y="693" width="0.0867%" height="15" fill="rgb(209,8,3)" fg:x="350" fg:w="1"/><text x="30.5793%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (1 samples, 0.09%)</title><rect x="30.3293%" y="677" width="0.0867%" height="15" fill="rgb(214,25,53)" fg:x="350" fg:w="1"/><text x="30.5793%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (1 samples, 0.09%)</title><rect x="30.3293%" y="661" width="0.0867%" height="15" fill="rgb(254,186,54)" fg:x="350" fg:w="1"/><text x="30.5793%" y="671.50"></text></g><g><title>HIToolbox`_FirstEventTime (2 samples, 0.17%)</title><rect x="30.3293%" y="853" width="0.1733%" height="15" fill="rgb(208,174,49)" fg:x="350" fg:w="2"/><text x="30.5793%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="30.4159%" y="837" width="0.0867%" height="15" fill="rgb(233,191,51)" fg:x="351" fg:w="1"/><text x="30.6659%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="30.4159%" y="821" width="0.0867%" height="15" fill="rgb(222,134,10)" fg:x="351" fg:w="1"/><text x="30.6659%" y="831.50"></text></g><g><title>HIToolbox`__INIT_AppleEvents_block_invoke (1 samples, 0.09%)</title><rect x="30.4159%" y="805" width="0.0867%" height="15" fill="rgb(230,226,20)" fg:x="351" fg:w="1"/><text x="30.6659%" y="815.50"></text></g><g><title>AE`aeInitializeFromHIToolbox (1 samples, 0.09%)</title><rect x="30.4159%" y="789" width="0.0867%" height="15" fill="rgb(251,111,25)" fg:x="351" fg:w="1"/><text x="30.6659%" y="799.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformation (1 samples, 0.09%)</title><rect x="30.4159%" y="773" width="0.0867%" height="15" fill="rgb(224,40,46)" fg:x="351" fg:w="1"/><text x="30.6659%" y="783.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.09%)</title><rect x="30.4159%" y="757" width="0.0867%" height="15" fill="rgb(236,108,47)" fg:x="351" fg:w="1"/><text x="30.6659%" y="767.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value_and_vend (1 samples, 0.09%)</title><rect x="30.4159%" y="741" width="0.0867%" height="15" fill="rgb(234,93,0)" fg:x="351" fg:w="1"/><text x="30.6659%" y="751.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value (1 samples, 0.09%)</title><rect x="30.4159%" y="725" width="0.0867%" height="15" fill="rgb(224,213,32)" fg:x="351" fg:w="1"/><text x="30.6659%" y="735.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_deserialize (1 samples, 0.09%)</title><rect x="30.4159%" y="709" width="0.0867%" height="15" fill="rgb(251,11,48)" fg:x="351" fg:w="1"/><text x="30.6659%" y="719.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_deserialize_apply (1 samples, 0.09%)</title><rect x="30.4159%" y="693" width="0.0867%" height="15" fill="rgb(236,173,5)" fg:x="351" fg:w="1"/><text x="30.6659%" y="703.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value (1 samples, 0.09%)</title><rect x="30.4159%" y="677" width="0.0867%" height="15" fill="rgb(230,95,12)" fg:x="351" fg:w="1"/><text x="30.6659%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_deserialize (1 samples, 0.09%)</title><rect x="30.4159%" y="661" width="0.0867%" height="15" fill="rgb(232,209,1)" fg:x="351" fg:w="1"/><text x="30.6659%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_deserialize_apply (1 samples, 0.09%)</title><rect x="30.4159%" y="645" width="0.0867%" height="15" fill="rgb(232,6,1)" fg:x="351" fg:w="1"/><text x="30.6659%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_insert (1 samples, 0.09%)</title><rect x="30.4159%" y="629" width="0.0867%" height="15" fill="rgb(210,224,50)" fg:x="351" fg:w="1"/><text x="30.6659%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_alloc (1 samples, 0.09%)</title><rect x="30.4159%" y="613" width="0.0867%" height="15" fill="rgb(228,127,35)" fg:x="351" fg:w="1"/><text x="30.6659%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="30.4159%" y="597" width="0.0867%" height="15" fill="rgb(245,102,45)" fg:x="351" fg:w="1"/><text x="30.6659%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.09%)</title><rect x="30.4159%" y="581" width="0.0867%" height="15" fill="rgb(214,1,49)" fg:x="351" fg:w="1"/><text x="30.6659%" y="591.50"></text></g><g><title>wgpu_test`0x103481e03 (352 samples, 30.50%)</title><rect x="0.0867%" y="981" width="30.5026%" height="15" fill="rgb(226,163,40)" fg:x="1" fg:w="352"/><text x="0.3367%" y="991.50">wgpu_test`0x103481e03</text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (352 samples, 30.50%)</title><rect x="0.0867%" y="965" width="30.5026%" height="15" fill="rgb(239,212,28)" fg:x="1" fg:w="352"/><text x="0.3367%" y="975.50">wgpu_test`winit::platform_impl::platform::event_l..</text></g><g><title>AppKit`-[NSApplication run] (352 samples, 30.50%)</title><rect x="0.0867%" y="949" width="30.5026%" height="15" fill="rgb(220,20,13)" fg:x="1" fg:w="352"/><text x="0.3367%" y="959.50">AppKit`-[NSApplication run]</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (343 samples, 29.72%)</title><rect x="0.8666%" y="933" width="29.7227%" height="15" fill="rgb(210,164,35)" fg:x="10" fg:w="343"/><text x="1.1166%" y="943.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchi..</text></g><g><title>AppKit`_DPSNextEvent (337 samples, 29.20%)</title><rect x="1.3865%" y="917" width="29.2028%" height="15" fill="rgb(248,109,41)" fg:x="16" fg:w="337"/><text x="1.6365%" y="927.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (331 samples, 28.68%)</title><rect x="1.9064%" y="901" width="28.6828%" height="15" fill="rgb(238,23,50)" fg:x="22" fg:w="331"/><text x="2.1564%" y="911.50">HIToolbox`_BlockUntilNextEventMatchingListInMo..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (331 samples, 28.68%)</title><rect x="1.9064%" y="885" width="28.6828%" height="15" fill="rgb(211,48,49)" fg:x="22" fg:w="331"/><text x="2.1564%" y="895.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (324 samples, 28.08%)</title><rect x="2.5130%" y="869" width="28.0763%" height="15" fill="rgb(223,36,21)" fg:x="29" fg:w="324"/><text x="2.7630%" y="879.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (1 samples, 0.09%)</title><rect x="30.5026%" y="853" width="0.0867%" height="15" fill="rgb(207,123,46)" fg:x="352" fg:w="1"/><text x="30.7526%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.09%)</title><rect x="30.5026%" y="837" width="0.0867%" height="15" fill="rgb(240,218,32)" fg:x="352" fg:w="1"/><text x="30.7526%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="30.5893%" y="981" width="0.0867%" height="15" fill="rgb(252,5,43)" fg:x="353" fg:w="1"/><text x="30.8393%" y="991.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="30.5893%" y="965" width="0.0867%" height="15" fill="rgb(252,84,19)" fg:x="353" fg:w="1"/><text x="30.8393%" y="975.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue dealloc] (1 samples, 0.09%)</title><rect x="30.5893%" y="949" width="0.0867%" height="15" fill="rgb(243,152,39)" fg:x="353" fg:w="1"/><text x="30.8393%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue dealloc] (1 samples, 0.09%)</title><rect x="30.5893%" y="933" width="0.0867%" height="15" fill="rgb(234,160,15)" fg:x="353" fg:w="1"/><text x="30.8393%" y="943.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.09%)</title><rect x="30.5893%" y="917" width="0.0867%" height="15" fill="rgb(237,34,20)" fg:x="353" fg:w="1"/><text x="30.8393%" y="927.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueFinalize (1 samples, 0.09%)</title><rect x="30.5893%" y="901" width="0.0867%" height="15" fill="rgb(229,97,13)" fg:x="353" fg:w="1"/><text x="30.8393%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (1 samples, 0.09%)</title><rect x="30.5893%" y="885" width="0.0867%" height="15" fill="rgb(234,71,50)" fg:x="353" fg:w="1"/><text x="30.8393%" y="895.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue initWithDevice:maxCommandBufferCount:] (1 samples, 0.09%)</title><rect x="30.6759%" y="901" width="0.0867%" height="15" fill="rgb(253,155,4)" fg:x="354" fg:w="1"/><text x="30.9259%" y="911.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue initWithDevice:descriptor:] (1 samples, 0.09%)</title><rect x="30.6759%" y="885" width="0.0867%" height="15" fill="rgb(222,185,37)" fg:x="354" fg:w="1"/><text x="30.9259%" y="895.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueCreateWithQoS (1 samples, 0.09%)</title><rect x="30.6759%" y="869" width="0.0867%" height="15" fill="rgb(251,177,13)" fg:x="354" fg:w="1"/><text x="30.9259%" y="879.50"></text></g><g><title>IOKit`IOServiceOpen (1 samples, 0.09%)</title><rect x="30.6759%" y="853" width="0.0867%" height="15" fill="rgb(250,179,40)" fg:x="354" fg:w="1"/><text x="30.9259%" y="863.50"></text></g><g><title>IOKit`io_service_open_extended (1 samples, 0.09%)</title><rect x="30.6759%" y="837" width="0.0867%" height="15" fill="rgb(242,44,2)" fg:x="354" fg:w="1"/><text x="30.9259%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="30.6759%" y="821" width="0.0867%" height="15" fill="rgb(216,177,13)" fg:x="354" fg:w="1"/><text x="30.9259%" y="831.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::enumerate_adapters (2 samples, 0.17%)</title><rect x="30.6759%" y="981" width="0.1733%" height="15" fill="rgb(216,106,43)" fg:x="354" fg:w="2"/><text x="30.9259%" y="991.50"></text></g><g><title>wgpu_test`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="30.6759%" y="965" width="0.1733%" height="15" fill="rgb(216,183,2)" fg:x="354" fg:w="2"/><text x="30.9259%" y="975.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.17%)</title><rect x="30.6759%" y="949" width="0.1733%" height="15" fill="rgb(249,75,3)" fg:x="354" fg:w="2"/><text x="30.9259%" y="959.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::enumerate_adapters::_{{closure}} (2 samples, 0.17%)</title><rect x="30.6759%" y="933" width="0.1733%" height="15" fill="rgb(219,67,39)" fg:x="354" fg:w="2"/><text x="30.9259%" y="943.50"></text></g><g><title>wgpu_test`gfx_backend_metal::Shared::new (2 samples, 0.17%)</title><rect x="30.6759%" y="917" width="0.1733%" height="15" fill="rgb(253,228,2)" fg:x="354" fg:w="2"/><text x="30.9259%" y="927.50"></text></g><g><title>wgpu_test`gfx_backend_metal::internal::ServicePipes::new (1 samples, 0.09%)</title><rect x="30.7626%" y="901" width="0.0867%" height="15" fill="rgb(235,138,27)" fg:x="355" fg:w="1"/><text x="31.0126%" y="911.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_compute_pipeline_state (1 samples, 0.09%)</title><rect x="30.7626%" y="885" width="0.0867%" height="15" fill="rgb(236,97,51)" fg:x="355" fg:w="1"/><text x="31.0126%" y="895.50"></text></g><g><title>Metal`-[_MTLDevice newComputePipelineStateWithDescriptor:error:] (1 samples, 0.09%)</title><rect x="30.7626%" y="869" width="0.0867%" height="15" fill="rgb(240,80,30)" fg:x="355" fg:w="1"/><text x="31.0126%" y="879.50"></text></g><g><title>Metal`-[MTLCompiler newComputePipelineStateWithDescriptor:options:reflection:error:completionHandler:] (1 samples, 0.09%)</title><rect x="30.7626%" y="853" width="0.0867%" height="15" fill="rgb(230,178,19)" fg:x="355" fg:w="1"/><text x="31.0126%" y="863.50"></text></g><g><title>Metal`-[MTLCompiler newComputePipelineStateWithDescriptorInternal:options:pipelineCache:destinationBinaryArchive:reflection:error:completionHandler:] (1 samples, 0.09%)</title><rect x="30.7626%" y="837" width="0.0867%" height="15" fill="rgb(210,190,27)" fg:x="355" fg:w="1"/><text x="31.0126%" y="847.50"></text></g><g><title>Metal`-[MTLCompiler computeVariantEntryWithDescriptor:options:serializedComputeDataDescriptor:asyncCompile:pipelineCache:destinationBinaryArchive:computeProgram:kernelDriverCompileTimeData:compileTimeStatistics:] (1 samples, 0.09%)</title><rect x="30.7626%" y="821" width="0.0867%" height="15" fill="rgb(222,107,31)" fg:x="355" fg:w="1"/><text x="31.0126%" y="831.50"></text></g><g><title>Metal`-[MTLCompiler compileFunctionRequestInternal:frameworkLinking:linkDataSize:reflectionOnly:completionHandler:] (1 samples, 0.09%)</title><rect x="30.7626%" y="805" width="0.0867%" height="15" fill="rgb(216,127,34)" fg:x="355" fg:w="1"/><text x="31.0126%" y="815.50"></text></g><g><title>Metal`MultiLevelPipelineCache::getElement (1 samples, 0.09%)</title><rect x="30.7626%" y="789" width="0.0867%" height="15" fill="rgb(234,116,52)" fg:x="355" fg:w="1"/><text x="31.0126%" y="799.50"></text></g><g><title>Metal`MTLCompilerFSCache::getElement (1 samples, 0.09%)</title><rect x="30.7626%" y="773" width="0.0867%" height="15" fill="rgb(222,124,15)" fg:x="355" fg:w="1"/><text x="31.0126%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="30.7626%" y="757" width="0.0867%" height="15" fill="rgb(231,179,28)" fg:x="355" fg:w="1"/><text x="31.0126%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="30.7626%" y="741" width="0.0867%" height="15" fill="rgb(226,93,45)" fg:x="355" fg:w="1"/><text x="31.0126%" y="751.50"></text></g><g><title>Metal`invocation function for block in MTLCompilerFSCache::getElement (1 samples, 0.09%)</title><rect x="30.7626%" y="725" width="0.0867%" height="15" fill="rgb(215,8,51)" fg:x="355" fg:w="1"/><text x="31.0126%" y="735.50"></text></g><g><title>Metal`MTLCompilerFSCache::openSync (1 samples, 0.09%)</title><rect x="30.7626%" y="709" width="0.0867%" height="15" fill="rgb(223,106,5)" fg:x="355" fg:w="1"/><text x="31.0126%" y="719.50"></text></g><g><title>Metal`getCacheMainFolder(char*, unsigned long) (1 samples, 0.09%)</title><rect x="30.7626%" y="693" width="0.0867%" height="15" fill="rgb(250,191,5)" fg:x="355" fg:w="1"/><text x="31.0126%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`stat$INODE64 (1 samples, 0.09%)</title><rect x="30.7626%" y="677" width="0.0867%" height="15" fill="rgb(242,132,44)" fg:x="355" fg:w="1"/><text x="31.0126%" y="687.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice initWithAcceleratorPort:] (1 samples, 0.09%)</title><rect x="30.8492%" y="773" width="0.0867%" height="15" fill="rgb(251,152,29)" fg:x="356" fg:w="1"/><text x="31.0992%" y="783.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice initializeDevice:sharedRef:] (1 samples, 0.09%)</title><rect x="30.8492%" y="757" width="0.0867%" height="15" fill="rgb(218,179,5)" fg:x="356" fg:w="1"/><text x="31.0992%" y="767.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`idvarInitDebugVariables (1 samples, 0.09%)</title><rect x="30.8492%" y="741" width="0.0867%" height="15" fill="rgb(227,67,19)" fg:x="356" fg:w="1"/><text x="31.0992%" y="751.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.09%)</title><rect x="30.8492%" y="725" width="0.0867%" height="15" fill="rgb(233,119,31)" fg:x="356" fg:w="1"/><text x="31.0992%" y="735.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.09%)</title><rect x="30.8492%" y="709" width="0.0867%" height="15" fill="rgb(241,120,22)" fg:x="356" fg:w="1"/><text x="31.0992%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="30.8492%" y="693" width="0.0867%" height="15" fill="rgb(224,102,30)" fg:x="356" fg:w="1"/><text x="31.0992%" y="703.50"></text></g><g><title>IOKit`_IOObjectConformsTo (1 samples, 0.09%)</title><rect x="30.9359%" y="773" width="0.0867%" height="15" fill="rgb(210,164,37)" fg:x="357" fg:w="1"/><text x="31.1859%" y="783.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (1 samples, 0.09%)</title><rect x="30.9359%" y="757" width="0.0867%" height="15" fill="rgb(226,191,16)" fg:x="357" fg:w="1"/><text x="31.1859%" y="767.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (1 samples, 0.09%)</title><rect x="30.9359%" y="741" width="0.0867%" height="15" fill="rgb(214,40,45)" fg:x="357" fg:w="1"/><text x="31.1859%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="30.9359%" y="725" width="0.0867%" height="15" fill="rgb(244,29,26)" fg:x="357" fg:w="1"/><text x="31.1859%" y="735.50"></text></g><g><title>Foundation`-[NSBundle classNamed:] (1 samples, 0.09%)</title><rect x="31.0225%" y="757" width="0.0867%" height="15" fill="rgb(216,16,5)" fg:x="358" fg:w="1"/><text x="31.2725%" y="767.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (1 samples, 0.09%)</title><rect x="31.0225%" y="741" width="0.0867%" height="15" fill="rgb(249,76,35)" fg:x="358" fg:w="1"/><text x="31.2725%" y="751.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (1 samples, 0.09%)</title><rect x="31.0225%" y="725" width="0.0867%" height="15" fill="rgb(207,11,44)" fg:x="358" fg:w="1"/><text x="31.2725%" y="735.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadBundle (1 samples, 0.09%)</title><rect x="31.0225%" y="709" width="0.0867%" height="15" fill="rgb(228,190,49)" fg:x="358" fg:w="1"/><text x="31.2725%" y="719.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="31.0225%" y="693" width="0.0867%" height="15" fill="rgb(214,173,12)" fg:x="358" fg:w="1"/><text x="31.2725%" y="703.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.09%)</title><rect x="31.0225%" y="677" width="0.0867%" height="15" fill="rgb(218,26,35)" fg:x="358" fg:w="1"/><text x="31.2725%" y="687.50"></text></g><g><title>dyld`dyld4::RuntimeState::incWritable (1 samples, 0.09%)</title><rect x="31.0225%" y="661" width="0.0867%" height="15" fill="rgb(220,200,19)" fg:x="358" fg:w="1"/><text x="31.2725%" y="671.50"></text></g><g><title>dyld`mprotect (1 samples, 0.09%)</title><rect x="31.0225%" y="645" width="0.0867%" height="15" fill="rgb(239,95,49)" fg:x="358" fg:w="1"/><text x="31.2725%" y="655.50"></text></g><g><title>wgpu_test`gfx_backend_metal::Instance::create_surface_from_nsview (4 samples, 0.35%)</title><rect x="30.8492%" y="981" width="0.3466%" height="15" fill="rgb(235,85,53)" fg:x="356" fg:w="4"/><text x="31.0992%" y="991.50"></text></g><g><title>QuartzCore`-[CAMetalLayer init] (4 samples, 0.35%)</title><rect x="30.8492%" y="965" width="0.3466%" height="15" fill="rgb(233,133,31)" fg:x="356" fg:w="4"/><text x="31.0992%" y="975.50"></text></g><g><title>QuartzCore`CAMetalContextCreate (4 samples, 0.35%)</title><rect x="30.8492%" y="949" width="0.3466%" height="15" fill="rgb(218,25,20)" fg:x="356" fg:w="4"/><text x="31.0992%" y="959.50"></text></g><g><title>Metal`MTLCopyAllDevices (4 samples, 0.35%)</title><rect x="30.8492%" y="933" width="0.3466%" height="15" fill="rgb(252,210,38)" fg:x="356" fg:w="4"/><text x="31.0992%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.35%)</title><rect x="30.8492%" y="917" width="0.3466%" height="15" fill="rgb(242,134,21)" fg:x="356" fg:w="4"/><text x="31.0992%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.35%)</title><rect x="30.8492%" y="901" width="0.3466%" height="15" fill="rgb(213,28,48)" fg:x="356" fg:w="4"/><text x="31.0992%" y="911.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (4 samples, 0.35%)</title><rect x="30.8492%" y="885" width="0.3466%" height="15" fill="rgb(250,196,2)" fg:x="356" fg:w="4"/><text x="31.0992%" y="895.50"></text></g><g><title>Metal`+[MTLIOAccelDevice registerDevices] (4 samples, 0.35%)</title><rect x="30.8492%" y="869" width="0.3466%" height="15" fill="rgb(227,5,17)" fg:x="356" fg:w="4"/><text x="31.0992%" y="879.50"></text></g><g><title>Metal`MTLIOAccelServiceRegisterService (4 samples, 0.35%)</title><rect x="30.8492%" y="853" width="0.3466%" height="15" fill="rgb(221,226,24)" fg:x="356" fg:w="4"/><text x="31.0992%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (4 samples, 0.35%)</title><rect x="30.8492%" y="837" width="0.3466%" height="15" fill="rgb(211,5,48)" fg:x="356" fg:w="4"/><text x="31.0992%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.35%)</title><rect x="30.8492%" y="821" width="0.3466%" height="15" fill="rgb(219,150,6)" fg:x="356" fg:w="4"/><text x="31.0992%" y="831.50"></text></g><g><title>Metal`+[MTLIOAccelService registerService:] (4 samples, 0.35%)</title><rect x="30.8492%" y="805" width="0.3466%" height="15" fill="rgb(251,46,16)" fg:x="356" fg:w="4"/><text x="31.0992%" y="815.50"></text></g><g><title>Metal`-[MTLIOAccelService initWithAcceleratorPort:] (4 samples, 0.35%)</title><rect x="30.8492%" y="789" width="0.3466%" height="15" fill="rgb(220,204,40)" fg:x="356" fg:w="4"/><text x="31.0992%" y="799.50"></text></g><g><title>Metal`getMetalPluginClassForService (2 samples, 0.17%)</title><rect x="31.0225%" y="773" width="0.1733%" height="15" fill="rgb(211,85,2)" fg:x="358" fg:w="2"/><text x="31.2725%" y="783.50"></text></g><g><title>Foundation`-[NSBundle principalClass] (1 samples, 0.09%)</title><rect x="31.1092%" y="757" width="0.0867%" height="15" fill="rgb(229,17,7)" fg:x="359" fg:w="1"/><text x="31.3592%" y="767.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (1 samples, 0.09%)</title><rect x="31.1092%" y="741" width="0.0867%" height="15" fill="rgb(239,72,28)" fg:x="359" fg:w="1"/><text x="31.3592%" y="751.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (1 samples, 0.09%)</title><rect x="31.1092%" y="725" width="0.0867%" height="15" fill="rgb(230,47,54)" fg:x="359" fg:w="1"/><text x="31.3592%" y="735.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadBundle (1 samples, 0.09%)</title><rect x="31.1092%" y="709" width="0.0867%" height="15" fill="rgb(214,50,8)" fg:x="359" fg:w="1"/><text x="31.3592%" y="719.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="31.1092%" y="693" width="0.0867%" height="15" fill="rgb(216,198,43)" fg:x="359" fg:w="1"/><text x="31.3592%" y="703.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.09%)</title><rect x="31.1092%" y="677" width="0.0867%" height="15" fill="rgb(234,20,35)" fg:x="359" fg:w="1"/><text x="31.3592%" y="687.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="31.1092%" y="661" width="0.0867%" height="15" fill="rgb(254,45,19)" fg:x="359" fg:w="1"/><text x="31.3592%" y="671.50"></text></g><g><title>dyld`dyld4::Loader::getLoader (1 samples, 0.09%)</title><rect x="31.1092%" y="645" width="0.0867%" height="15" fill="rgb(219,14,44)" fg:x="359" fg:w="1"/><text x="31.3592%" y="655.50"></text></g><g><title>dyld`dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void  (1 samples, 0.09%)</title><rect x="31.1092%" y="629" width="0.0867%" height="15" fill="rgb(217,220,26)" fg:x="359" fg:w="1"/><text x="31.3592%" y="639.50"></text></g><g><title>dyld`dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, dyld3::Platform, bool, bool&amp;, void  (1 samples, 0.09%)</title><rect x="31.1092%" y="613" width="0.0867%" height="15" fill="rgb(213,158,28)" fg:x="359" fg:w="1"/><text x="31.3592%" y="623.50"></text></g><g><title>dyld`dyld4::ProcessConfig::PathOverrides::getFrameworkPartialPath (1 samples, 0.09%)</title><rect x="31.1092%" y="597" width="0.0867%" height="15" fill="rgb(252,51,52)" fg:x="359" fg:w="1"/><text x="31.3592%" y="607.50"></text></g><g><title>dyld`strncmp (1 samples, 0.09%)</title><rect x="31.1092%" y="581" width="0.0867%" height="15" fill="rgb(246,89,16)" fg:x="359" fg:w="1"/><text x="31.3592%" y="591.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::memory::create_image (1 samples, 0.09%)</title><rect x="31.1958%" y="981" width="0.0867%" height="15" fill="rgb(216,158,49)" fg:x="360" fg:w="1"/><text x="31.4458%" y="991.50"></text></g><g><title>wgpu_test`metal::resource::ResourceRef::set_label (1 samples, 0.09%)</title><rect x="31.1958%" y="965" width="0.0867%" height="15" fill="rgb(236,107,19)" fg:x="360" fg:w="1"/><text x="31.4458%" y="975.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_library_with_source (1 samples, 0.09%)</title><rect x="31.2825%" y="917" width="0.0867%" height="15" fill="rgb(228,185,30)" fg:x="361" fg:w="1"/><text x="31.5325%" y="927.50"></text></g><g><title>Metal`-[_MTLDevice newLibraryWithSource:options:error:] (1 samples, 0.09%)</title><rect x="31.2825%" y="901" width="0.0867%" height="15" fill="rgb(246,134,8)" fg:x="361" fg:w="1"/><text x="31.5325%" y="911.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithSource(id&lt;MTLDevice&gt;, NSString*, MTLCompileOptions*, bool, void (id (1 samples, 0.09%)</title><rect x="31.2825%" y="885" width="0.0867%" height="15" fill="rgb(214,143,50)" fg:x="361" fg:w="1"/><text x="31.5325%" y="895.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithRequestDataAndHash(MTLLibraryRequestData, MTLUINT256_t const&amp;, void (id (1 samples, 0.09%)</title><rect x="31.2825%" y="869" width="0.0867%" height="15" fill="rgb(228,75,8)" fg:x="361" fg:w="1"/><text x="31.5325%" y="879.50"></text></g><g><title>Metal`MTLLibraryBuilder::initLibraryContainerWithRequestData(MTLLibraryContainer*, MTLLibraryRequestData const&amp;, void  (1 samples, 0.09%)</title><rect x="31.2825%" y="853" width="0.0867%" height="15" fill="rgb(207,175,4)" fg:x="361" fg:w="1"/><text x="31.5325%" y="863.50"></text></g><g><title>Metal`MultiLevelPipelineCache::getElement (1 samples, 0.09%)</title><rect x="31.2825%" y="837" width="0.0867%" height="15" fill="rgb(205,108,24)" fg:x="361" fg:w="1"/><text x="31.5325%" y="847.50"></text></g><g><title>Metal`MTLCompilerFSCache::getElement (1 samples, 0.09%)</title><rect x="31.2825%" y="821" width="0.0867%" height="15" fill="rgb(244,120,49)" fg:x="361" fg:w="1"/><text x="31.5325%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="31.2825%" y="805" width="0.0867%" height="15" fill="rgb(223,47,38)" fg:x="361" fg:w="1"/><text x="31.5325%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="31.2825%" y="789" width="0.0867%" height="15" fill="rgb(229,179,11)" fg:x="361" fg:w="1"/><text x="31.5325%" y="799.50"></text></g><g><title>Metal`invocation function for block in MTLCompilerFSCache::getElement (1 samples, 0.09%)</title><rect x="31.2825%" y="773" width="0.0867%" height="15" fill="rgb(231,122,1)" fg:x="361" fg:w="1"/><text x="31.5325%" y="783.50"></text></g><g><title>Metal`getHash (1 samples, 0.09%)</title><rect x="31.2825%" y="757" width="0.0867%" height="15" fill="rgb(245,119,9)" fg:x="361" fg:w="1"/><text x="31.5325%" y="767.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA256_Update (1 samples, 0.09%)</title><rect x="31.2825%" y="741" width="0.0867%" height="15" fill="rgb(241,163,25)" fg:x="361" fg:w="1"/><text x="31.5325%" y="751.50"></text></g><g><title>libcommonCrypto.dylib`ccdigest_process (1 samples, 0.09%)</title><rect x="31.2825%" y="725" width="0.0867%" height="15" fill="rgb(217,214,3)" fg:x="361" fg:w="1"/><text x="31.5325%" y="735.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA256_compress_AVX2 (1 samples, 0.09%)</title><rect x="31.2825%" y="709" width="0.0867%" height="15" fill="rgb(240,86,28)" fg:x="361" fg:w="1"/><text x="31.5325%" y="719.50"></text></g><g><title>wgpu_test`sc_internal_compiler_delete (1 samples, 0.09%)</title><rect x="31.3692%" y="917" width="0.0867%" height="15" fill="rgb(215,47,9)" fg:x="362" fg:w="1"/><text x="31.6192%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::~CompilerMSL (1 samples, 0.09%)</title><rect x="31.3692%" y="901" width="0.0867%" height="15" fill="rgb(252,25,45)" fg:x="362" fg:w="1"/><text x="31.6192%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::ParsedIR::~ParsedIR (1 samples, 0.09%)</title><rect x="31.3692%" y="885" width="0.0867%" height="15" fill="rgb(251,164,9)" fg:x="362" fg:w="1"/><text x="31.6192%" y="895.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt;, spirv_cross::Meta&gt;, std::__1::__unordered_map_hasher&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt;, std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt;, spirv_cross::Meta&gt;, std::__1::hash&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt; &gt;, std::__1::equal_to&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt;, std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt;, spirv_cross::Meta&gt;, std::__1::equal_to&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt; &gt;, std::__1::hash&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)0&gt;, spirv_cross::Meta&gt; &gt; &gt;::__deallocate_node(std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt; (1 samples, 0.09%)</title><rect x="31.3692%" y="869" width="0.0867%" height="15" fill="rgb(233,194,0)" fg:x="362" fg:w="1"/><text x="31.6192%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.09%)</title><rect x="31.3692%" y="853" width="0.0867%" height="15" fill="rgb(249,111,24)" fg:x="362" fg:w="1"/><text x="31.6192%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.09%)</title><rect x="31.3692%" y="837" width="0.0867%" height="15" fill="rgb(250,223,3)" fg:x="362" fg:w="1"/><text x="31.6192%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::build_function_control_flow_graphs_and_analyze (1 samples, 0.09%)</title><rect x="31.4558%" y="869" width="0.0867%" height="15" fill="rgb(236,178,37)" fg:x="363" fg:w="1"/><text x="31.7058%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::analyze_variable_scope (1 samples, 0.09%)</title><rect x="31.4558%" y="853" width="0.0867%" height="15" fill="rgb(241,158,50)" fg:x="363" fg:w="1"/><text x="31.7058%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.09%)</title><rect x="31.4558%" y="837" width="0.0867%" height="15" fill="rgb(213,121,41)" fg:x="363" fg:w="1"/><text x="31.7058%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::AnalyzeVariableScopeAccessHandler::handle (1 samples, 0.09%)</title><rect x="31.4558%" y="821" width="0.0867%" height="15" fill="rgb(240,92,3)" fg:x="363" fg:w="1"/><text x="31.7058%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::AnalyzeVariableScopeAccessHandler::notify_variable_access (1 samples, 0.09%)</title><rect x="31.4558%" y="805" width="0.0867%" height="15" fill="rgb(205,123,3)" fg:x="363" fg:w="1"/><text x="31.7058%" y="815.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::operator[] (1 samples, 0.09%)</title><rect x="31.4558%" y="789" width="0.0867%" height="15" fill="rgb(205,97,47)" fg:x="363" fg:w="1"/><text x="31.7058%" y="799.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, std::__1::__unordered_map_hasher&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, std::__1::hash&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, std::__1::equal_to&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, std::__1::equal_to&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, std::__1::hash&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt; &gt; &gt; &gt;::__rehash (1 samples, 0.09%)</title><rect x="31.4558%" y="773" width="0.0867%" height="15" fill="rgb(247,152,14)" fg:x="363" fg:w="1"/><text x="31.7058%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="31.4558%" y="757" width="0.0867%" height="15" fill="rgb(248,195,53)" fg:x="363" fg:w="1"/><text x="31.7058%" y="767.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_function (1 samples, 0.09%)</title><rect x="31.5425%" y="869" width="0.0867%" height="15" fill="rgb(226,201,16)" fg:x="364" fg:w="1"/><text x="31.7925%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.09%)</title><rect x="31.5425%" y="853" width="0.0867%" height="15" fill="rgb(205,98,0)" fg:x="364" fg:w="1"/><text x="31.7925%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::branch(spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, unsigned int, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt; (1 samples, 0.09%)</title><rect x="31.5425%" y="837" width="0.0867%" height="15" fill="rgb(214,191,48)" fg:x="364" fg:w="1"/><text x="31.7925%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.09%)</title><rect x="31.5425%" y="821" width="0.0867%" height="15" fill="rgb(237,112,39)" fg:x="364" fg:w="1"/><text x="31.7925%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::branch(spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, unsigned int, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt; (1 samples, 0.09%)</title><rect x="31.5425%" y="805" width="0.0867%" height="15" fill="rgb(247,203,27)" fg:x="364" fg:w="1"/><text x="31.7925%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.09%)</title><rect x="31.5425%" y="789" width="0.0867%" height="15" fill="rgb(235,124,28)" fg:x="364" fg:w="1"/><text x="31.7925%" y="799.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::emit_instruction (1 samples, 0.09%)</title><rect x="31.5425%" y="773" width="0.0867%" height="15" fill="rgb(208,207,46)" fg:x="364" fg:w="1"/><text x="31.7925%" y="783.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_instruction (1 samples, 0.09%)</title><rect x="31.5425%" y="757" width="0.0867%" height="15" fill="rgb(234,176,4)" fg:x="364" fg:w="1"/><text x="31.7925%" y="767.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::to_func_call_arg (1 samples, 0.09%)</title><rect x="31.5425%" y="741" width="0.0867%" height="15" fill="rgb(230,133,28)" fg:x="364" fg:w="1"/><text x="31.7925%" y="751.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_func_call_arg (1 samples, 0.09%)</title><rect x="31.5425%" y="725" width="0.0867%" height="15" fill="rgb(211,137,40)" fg:x="364" fg:w="1"/><text x="31.7925%" y="735.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_expression (1 samples, 0.09%)</title><rect x="31.5425%" y="709" width="0.0867%" height="15" fill="rgb(254,35,13)" fg:x="364" fg:w="1"/><text x="31.7925%" y="719.50"></text></g><g><title>wgpu_test`spirv_cross::msl::_&lt;impl spirv_cross::spirv::Compile&lt;spirv_cross::msl::Target&gt; for spirv_cross::spirv::Ast&lt;spirv_cross::msl::Target&gt;&gt;::compile (3 samples, 0.26%)</title><rect x="31.4558%" y="917" width="0.2600%" height="15" fill="rgb(225,49,51)" fg:x="363" fg:w="3"/><text x="31.7058%" y="927.50"></text></g><g><title>wgpu_test`sc_internal_compiler_msl_compile (3 samples, 0.26%)</title><rect x="31.4558%" y="901" width="0.2600%" height="15" fill="rgb(251,10,15)" fg:x="363" fg:w="3"/><text x="31.7058%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::compile (3 samples, 0.26%)</title><rect x="31.4558%" y="885" width="0.2600%" height="15" fill="rgb(228,207,15)" fg:x="363" fg:w="3"/><text x="31.7058%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::preprocess_op_codes (1 samples, 0.09%)</title><rect x="31.6291%" y="869" width="0.0867%" height="15" fill="rgb(241,99,19)" fg:x="365" fg:w="1"/><text x="31.8791%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.09%)</title><rect x="31.6291%" y="853" width="0.0867%" height="15" fill="rgb(207,104,49)" fg:x="365" fg:w="1"/><text x="31.8791%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.09%)</title><rect x="31.6291%" y="837" width="0.0867%" height="15" fill="rgb(234,99,18)" fg:x="365" fg:w="1"/><text x="31.8791%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.09%)</title><rect x="31.6291%" y="821" width="0.0867%" height="15" fill="rgb(213,191,49)" fg:x="365" fg:w="1"/><text x="31.8791%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.09%)</title><rect x="31.6291%" y="805" width="0.0867%" height="15" fill="rgb(210,226,19)" fg:x="365" fg:w="1"/><text x="31.8791%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::OpCodePreprocessor::handle (1 samples, 0.09%)</title><rect x="31.6291%" y="789" width="0.0867%" height="15" fill="rgb(229,97,18)" fg:x="365" fg:w="1"/><text x="31.8791%" y="799.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::register_read (1 samples, 0.09%)</title><rect x="31.6291%" y="773" width="0.0867%" height="15" fill="rgb(211,167,15)" fg:x="365" fg:w="1"/><text x="31.8791%" y="783.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::is_immutable (1 samples, 0.09%)</title><rect x="31.6291%" y="757" width="0.0867%" height="15" fill="rgb(210,169,34)" fg:x="365" fg:w="1"/><text x="31.8791%" y="767.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::expression_type_id (1 samples, 0.09%)</title><rect x="31.6291%" y="741" width="0.0867%" height="15" fill="rgb(241,121,31)" fg:x="365" fg:w="1"/><text x="31.8791%" y="751.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::create_graphics_pipeline (6 samples, 0.52%)</title><rect x="31.2825%" y="965" width="0.5199%" height="15" fill="rgb(232,40,11)" fg:x="361" fg:w="6"/><text x="31.5325%" y="975.50"></text></g><g><title>wgpu_test`gfx_backend_metal::device::Device::load_shader (6 samples, 0.52%)</title><rect x="31.2825%" y="949" width="0.5199%" height="15" fill="rgb(205,86,26)" fg:x="361" fg:w="6"/><text x="31.5325%" y="959.50"></text></g><g><title>wgpu_test`gfx_backend_metal::device::Device::compile_shader_library (6 samples, 0.52%)</title><rect x="31.2825%" y="933" width="0.5199%" height="15" fill="rgb(231,126,28)" fg:x="361" fg:w="6"/><text x="31.5325%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::msl::_&lt;impl spirv_cross::spirv::Parse&lt;spirv_cross::msl::Target&gt; for spirv_cross::spirv::Ast&lt;spirv_cross::msl::Target&gt;&gt;::parse (1 samples, 0.09%)</title><rect x="31.7158%" y="917" width="0.0867%" height="15" fill="rgb(219,221,18)" fg:x="366" fg:w="1"/><text x="31.9658%" y="927.50"></text></g><g><title>wgpu_test`sc_internal_compiler_msl_new (1 samples, 0.09%)</title><rect x="31.7158%" y="901" width="0.0867%" height="15" fill="rgb(211,40,0)" fg:x="366" fg:w="1"/><text x="31.9658%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::CompilerMSL (1 samples, 0.09%)</title><rect x="31.7158%" y="885" width="0.0867%" height="15" fill="rgb(239,85,43)" fg:x="366" fg:w="1"/><text x="31.9658%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::CompilerGLSL (1 samples, 0.09%)</title><rect x="31.7158%" y="869" width="0.0867%" height="15" fill="rgb(231,55,21)" fg:x="366" fg:w="1"/><text x="31.9658%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::Compiler (1 samples, 0.09%)</title><rect x="31.7158%" y="853" width="0.0867%" height="15" fill="rgb(225,184,43)" fg:x="366" fg:w="1"/><text x="31.9658%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::Parser::parse (1 samples, 0.09%)</title><rect x="31.7158%" y="837" width="0.0867%" height="15" fill="rgb(251,158,41)" fg:x="366" fg:w="1"/><text x="31.9658%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::Parser::parse (1 samples, 0.09%)</title><rect x="31.7158%" y="821" width="0.0867%" height="15" fill="rgb(234,159,37)" fg:x="366" fg:w="1"/><text x="31.9658%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::SPIRVariable* spirv_cross::ObjectPool&lt;spirv_cross::SPIRVariable&gt;::allocate&lt;unsigned int&amp;, spv::StorageClass&amp;, unsigned int&amp;&gt; (1 samples, 0.09%)</title><rect x="31.7158%" y="805" width="0.0867%" height="15" fill="rgb(216,204,22)" fg:x="366" fg:w="1"/><text x="31.9658%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::SmallVector&lt;spirv_cross::SPIRVariable*, 0ul&gt;::push_back (1 samples, 0.09%)</title><rect x="31.7158%" y="789" width="0.0867%" height="15" fill="rgb(214,17,3)" fg:x="366" fg:w="1"/><text x="31.9658%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.09%)</title><rect x="31.7158%" y="773" width="0.0867%" height="15" fill="rgb(212,111,17)" fg:x="366" fg:w="1"/><text x="31.9658%" y="783.50"></text></g><g><title>wgpu_test`glslang::GlslangToSpv(glslang::TIntermediate const&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (1 samples, 0.09%)</title><rect x="31.8024%" y="885" width="0.0867%" height="15" fill="rgb(221,157,24)" fg:x="367" fg:w="1"/><text x="32.0524%" y="895.50"></text></g><g><title>wgpu_test`glslang::GlslangToSpv(glslang::TIntermediate const&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (1 samples, 0.09%)</title><rect x="31.8024%" y="869" width="0.0867%" height="15" fill="rgb(252,16,13)" fg:x="367" fg:w="1"/><text x="32.0524%" y="879.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TGlslangToSpvTraverser::~TGlslangToSpvTraverser (1 samples, 0.09%)</title><rect x="31.8024%" y="853" width="0.0867%" height="15" fill="rgb(221,62,2)" fg:x="367" fg:w="1"/><text x="32.0524%" y="863.50"></text></g><g><title>wgpu_test`spv::Builder::~Builder (1 samples, 0.09%)</title><rect x="31.8024%" y="837" width="0.0867%" height="15" fill="rgb(247,87,22)" fg:x="367" fg:w="1"/><text x="32.0524%" y="847.50"></text></g><g><title>wgpu_test`spv::Function::~Function (1 samples, 0.09%)</title><rect x="31.8024%" y="821" width="0.0867%" height="15" fill="rgb(215,73,9)" fg:x="367" fg:w="1"/><text x="32.0524%" y="831.50"></text></g><g><title>wgpu_test`spv::Function::~Function (1 samples, 0.09%)</title><rect x="31.8024%" y="805" width="0.0867%" height="15" fill="rgb(207,175,33)" fg:x="367" fg:w="1"/><text x="32.0524%" y="815.50"></text></g><g><title>wgpu_test`spv::Block::~Block (1 samples, 0.09%)</title><rect x="31.8024%" y="789" width="0.0867%" height="15" fill="rgb(243,129,54)" fg:x="367" fg:w="1"/><text x="32.0524%" y="799.50"></text></g><g><title>wgpu_test`spv::Block::~Block (1 samples, 0.09%)</title><rect x="31.8024%" y="773" width="0.0867%" height="15" fill="rgb(227,119,45)" fg:x="367" fg:w="1"/><text x="32.0524%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="31.8024%" y="757" width="0.0867%" height="15" fill="rgb(205,109,36)" fg:x="367" fg:w="1"/><text x="32.0524%" y="767.50"></text></g><g><title>wgpu_test`(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.09%)</title><rect x="31.8891%" y="837" width="0.0867%" height="15" fill="rgb(205,6,39)" fg:x="368" fg:w="1"/><text x="32.1391%" y="847.50"></text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (1 samples, 0.09%)</title><rect x="31.8891%" y="821" width="0.0867%" height="15" fill="rgb(221,32,16)" fg:x="368" fg:w="1"/><text x="32.1391%" y="831.50"></text></g><g><title>wgpu_test`yyparse(glslang::TParseContext*) (1 samples, 0.09%)</title><rect x="31.8891%" y="805" width="0.0867%" height="15" fill="rgb(228,144,50)" fg:x="368" fg:w="1"/><text x="32.1391%" y="815.50"></text></g><g><title>wgpu_test`yylex(YYSTYPE*, glslang::TParseContext&amp;) (1 samples, 0.09%)</title><rect x="31.8891%" y="789" width="0.0867%" height="15" fill="rgb(229,201,53)" fg:x="368" fg:w="1"/><text x="32.1391%" y="799.50"></text></g><g><title>wgpu_test`glslang::TScanContext::tokenize (1 samples, 0.09%)</title><rect x="31.8891%" y="773" width="0.0867%" height="15" fill="rgb(249,153,27)" fg:x="368" fg:w="1"/><text x="32.1391%" y="783.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tokenize (1 samples, 0.09%)</title><rect x="31.8891%" y="757" width="0.0867%" height="15" fill="rgb(227,106,25)" fg:x="368" fg:w="1"/><text x="32.1391%" y="767.50"></text></g><g><title>wgpu_test`glslang::TPpContext::MacroExpand (1 samples, 0.09%)</title><rect x="31.8891%" y="741" width="0.0867%" height="15" fill="rgb(230,65,29)" fg:x="368" fg:w="1"/><text x="32.1391%" y="751.50"></text></g><g><title>wgpu_test`std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits (1 samples, 0.09%)</title><rect x="31.8891%" y="725" width="0.0867%" height="15" fill="rgb(221,57,46)" fg:x="368" fg:w="1"/><text x="32.1391%" y="735.50"></text></g><g><title>wgpu_test`(anonymous namespace)::AddContextSpecificSymbols (2 samples, 0.17%)</title><rect x="31.8891%" y="853" width="0.1733%" height="15" fill="rgb(229,161,17)" fg:x="368" fg:w="2"/><text x="32.1391%" y="863.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::TBuiltIns (1 samples, 0.09%)</title><rect x="31.9757%" y="837" width="0.0867%" height="15" fill="rgb(222,213,11)" fg:x="369" fg:w="1"/><text x="32.2257%" y="847.50"></text></g><g><title>wgpu_test`glslang::GetThreadPoolAllocator (1 samples, 0.09%)</title><rect x="31.9757%" y="821" width="0.0867%" height="15" fill="rgb(235,35,13)" fg:x="369" fg:w="1"/><text x="32.2257%" y="831.50"></text></g><g><title>wgpu_test`(anonymous namespace)::CreateParseContext(glslang::TSymbolTable&amp;, glslang::TIntermediate&amp;, int, EProfile, glslang::EShSource, EShLanguage, TInfoSink&amp;, glslang::SpvVersion, bool, EShMessages, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.09%)</title><rect x="32.0624%" y="821" width="0.0867%" height="15" fill="rgb(233,158,34)" fg:x="370" fg:w="1"/><text x="32.3124%" y="831.50"></text></g><g><title>wgpu_test`glslang::TParseContext::TParseContext(glslang::TSymbolTable&amp;, glslang::TIntermediate&amp;, bool, int, EProfile, glslang::SpvVersion const&amp;, EShLanguage, TInfoSink&amp;, bool, EShMessages, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.09%)</title><rect x="32.0624%" y="805" width="0.0867%" height="15" fill="rgb(215,151,48)" fg:x="370" fg:w="1"/><text x="32.3124%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.35%)</title><rect x="32.1490%" y="805" width="0.3466%" height="15" fill="rgb(229,84,14)" fg:x="371" fg:w="4"/><text x="32.3990%" y="815.50"></text></g><g><title>wgpu_test`DYLD-STUB$$memcpy (1 samples, 0.09%)</title><rect x="32.4957%" y="805" width="0.0867%" height="15" fill="rgb(229,68,14)" fg:x="375" fg:w="1"/><text x="32.7457%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 1.65%)</title><rect x="33.7088%" y="789" width="1.6464%" height="15" fill="rgb(243,106,26)" fg:x="389" fg:w="19"/><text x="33.9588%" y="799.50"></text></g><g><title>wgpu_test`glslang::TFunction::TFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.17%)</title><rect x="35.3553%" y="789" width="0.1733%" height="15" fill="rgb(206,45,38)" fg:x="408" fg:w="2"/><text x="35.6053%" y="799.50"></text></g><g><title>wgpu_test`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; std::__1::operator+&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.09%)</title><rect x="35.4419%" y="773" width="0.0867%" height="15" fill="rgb(226,6,15)" fg:x="409" fg:w="1"/><text x="35.6919%" y="783.50"></text></g><g><title>wgpu_test`glslang::TFunction::addParameter (4 samples, 0.35%)</title><rect x="35.5286%" y="789" width="0.3466%" height="15" fill="rgb(232,22,54)" fg:x="410" fg:w="4"/><text x="35.7786%" y="799.50"></text></g><g><title>wgpu_test`glslang::TType::appendMangledName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.17%)</title><rect x="35.7019%" y="773" width="0.1733%" height="15" fill="rgb(229,222,32)" fg:x="412" fg:w="2"/><text x="35.9519%" y="783.50"></text></g><g><title>wgpu_test`glslang::TType::buildMangledName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.17%)</title><rect x="35.7019%" y="757" width="0.1733%" height="15" fill="rgb(228,62,29)" fg:x="412" fg:w="2"/><text x="35.9519%" y="767.50"></text></g><g><title>wgpu_test`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (2 samples, 0.17%)</title><rect x="35.7019%" y="741" width="0.1733%" height="15" fill="rgb(251,103,34)" fg:x="412" fg:w="2"/><text x="35.9519%" y="751.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.09%)</title><rect x="35.9619%" y="773" width="0.0867%" height="15" fill="rgb(233,12,30)" fg:x="415" fg:w="1"/><text x="36.2119%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="36.0485%" y="757" width="0.0867%" height="15" fill="rgb(238,52,0)" fg:x="416" fg:w="1"/><text x="36.2985%" y="767.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (4 samples, 0.35%)</title><rect x="36.1352%" y="757" width="0.3466%" height="15" fill="rgb(223,98,5)" fg:x="417" fg:w="4"/><text x="36.3852%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.09%)</title><rect x="36.3951%" y="741" width="0.0867%" height="15" fill="rgb(228,75,37)" fg:x="420" fg:w="1"/><text x="36.6451%" y="751.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (1 samples, 0.09%)</title><rect x="36.4818%" y="741" width="0.0867%" height="15" fill="rgb(205,115,49)" fg:x="421" fg:w="1"/><text x="36.7318%" y="751.50"></text></g><g><title>wgpu_test`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (13 samples, 1.13%)</title><rect x="36.5685%" y="741" width="1.1265%" height="15" fill="rgb(250,154,43)" fg:x="422" fg:w="13"/><text x="36.8185%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (4 samples, 0.35%)</title><rect x="37.3484%" y="725" width="0.3466%" height="15" fill="rgb(226,43,29)" fg:x="431" fg:w="4"/><text x="37.5984%" y="735.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::insert (20 samples, 1.73%)</title><rect x="36.0485%" y="773" width="1.7331%" height="15" fill="rgb(249,228,39)" fg:x="416" fg:w="20"/><text x="36.2985%" y="783.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (15 samples, 1.30%)</title><rect x="36.4818%" y="757" width="1.2998%" height="15" fill="rgb(216,79,43)" fg:x="421" fg:w="15"/><text x="36.7318%" y="767.50"></text></g><g><title>wgpu_test`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (1 samples, 0.09%)</title><rect x="37.6950%" y="741" width="0.0867%" height="15" fill="rgb(228,95,12)" fg:x="435" fg:w="1"/><text x="37.9450%" y="751.50"></text></g><g><title>wgpu_test`glslang::TType::isStruct (1 samples, 0.09%)</title><rect x="37.7816%" y="773" width="0.0867%" height="15" fill="rgb(249,221,15)" fg:x="436" fg:w="1"/><text x="38.0316%" y="783.50"></text></g><g><title>wgpu_test`glslang::TParseContext::handleFunctionDeclarator (31 samples, 2.69%)</title><rect x="35.8752%" y="789" width="2.6863%" height="15" fill="rgb(233,34,13)" fg:x="414" fg:w="31"/><text x="36.1252%" y="799.50">wg..</text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (8 samples, 0.69%)</title><rect x="37.8683%" y="773" width="0.6932%" height="15" fill="rgb(214,103,39)" fg:x="437" fg:w="8"/><text x="38.1183%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.52%)</title><rect x="38.0416%" y="757" width="0.5199%" height="15" fill="rgb(251,126,39)" fg:x="439" fg:w="6"/><text x="38.2916%" y="767.50"></text></g><g><title>wgpu_test`glslang::TParseContext::mergeQualifiers (1 samples, 0.09%)</title><rect x="38.5615%" y="789" width="0.0867%" height="15" fill="rgb(214,216,36)" fg:x="445" fg:w="1"/><text x="38.8115%" y="799.50"></text></g><g><title>wgpu_test`glslang::TShaderQualifiers::merge (1 samples, 0.09%)</title><rect x="38.6482%" y="789" width="0.0867%" height="15" fill="rgb(220,221,8)" fg:x="446" fg:w="1"/><text x="38.8982%" y="799.50"></text></g><g><title>wgpu_test`glslang::TSmallArrayVector::push_back (1 samples, 0.09%)</title><rect x="38.7348%" y="789" width="0.0867%" height="15" fill="rgb(240,216,3)" fg:x="447" fg:w="1"/><text x="38.9848%" y="799.50"></text></g><g><title>wgpu_test`glslang::TType::TType (3 samples, 0.26%)</title><rect x="38.8215%" y="789" width="0.2600%" height="15" fill="rgb(232,218,17)" fg:x="448" fg:w="3"/><text x="39.0715%" y="799.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::scan (2 samples, 0.17%)</title><rect x="39.3414%" y="757" width="0.1733%" height="15" fill="rgb(229,163,45)" fg:x="454" fg:w="2"/><text x="39.5914%" y="767.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$os_unfair_lock_unlock (1 samples, 0.09%)</title><rect x="40.2080%" y="661" width="0.0867%" height="15" fill="rgb(231,110,42)" fg:x="464" fg:w="1"/><text x="40.4580%" y="671.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (1 samples, 0.09%)</title><rect x="40.2946%" y="661" width="0.0867%" height="15" fill="rgb(208,170,48)" fg:x="465" fg:w="1"/><text x="40.5446%" y="671.50"></text></g><g><title>libsystem_c.dylib`localeconv_l (1 samples, 0.09%)</title><rect x="40.3813%" y="661" width="0.0867%" height="15" fill="rgb(239,116,25)" fg:x="466" fg:w="1"/><text x="40.6313%" y="671.50"></text></g><g><title>libsystem_c.dylib`snprintf (12 samples, 1.04%)</title><rect x="39.6880%" y="741" width="1.0399%" height="15" fill="rgb(219,200,50)" fg:x="458" fg:w="12"/><text x="39.9380%" y="751.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (12 samples, 1.04%)</title><rect x="39.6880%" y="725" width="1.0399%" height="15" fill="rgb(245,200,0)" fg:x="458" fg:w="12"/><text x="39.9380%" y="735.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (12 samples, 1.04%)</title><rect x="39.6880%" y="709" width="1.0399%" height="15" fill="rgb(245,119,33)" fg:x="458" fg:w="12"/><text x="39.9380%" y="719.50"></text></g><g><title>libsystem_c.dylib`__v2printf (11 samples, 0.95%)</title><rect x="39.7747%" y="693" width="0.9532%" height="15" fill="rgb(231,125,12)" fg:x="459" fg:w="11"/><text x="40.0247%" y="703.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (10 samples, 0.87%)</title><rect x="39.8614%" y="677" width="0.8666%" height="15" fill="rgb(216,96,41)" fg:x="460" fg:w="10"/><text x="40.1114%" y="687.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (3 samples, 0.26%)</title><rect x="40.4679%" y="661" width="0.2600%" height="15" fill="rgb(248,43,45)" fg:x="467" fg:w="3"/><text x="40.7179%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="40.7279%" y="725" width="0.0867%" height="15" fill="rgb(217,222,7)" fg:x="470" fg:w="1"/><text x="40.9779%" y="735.50"></text></g><g><title>wgpu_test`glslang::GetThreadPoolAllocator (1 samples, 0.09%)</title><rect x="40.8146%" y="725" width="0.0867%" height="15" fill="rgb(233,28,6)" fg:x="471" fg:w="1"/><text x="41.0646%" y="735.50"></text></g><g><title>wgpu_test`glslang::TPpContext::MacroExpand (10 samples, 0.87%)</title><rect x="40.7279%" y="741" width="0.8666%" height="15" fill="rgb(231,218,15)" fg:x="470" fg:w="10"/><text x="40.9779%" y="751.50"></text></g><g><title>wgpu_test`std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits (8 samples, 0.69%)</title><rect x="40.9012%" y="725" width="0.6932%" height="15" fill="rgb(226,171,48)" fg:x="472" fg:w="8"/><text x="41.1512%" y="735.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::getch (18 samples, 1.56%)</title><rect x="42.2010%" y="725" width="1.5598%" height="15" fill="rgb(235,201,9)" fg:x="487" fg:w="18"/><text x="42.4510%" y="735.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::get (13 samples, 1.13%)</title><rect x="42.6343%" y="709" width="1.1265%" height="15" fill="rgb(217,80,15)" fg:x="492" fg:w="13"/><text x="42.8843%" y="719.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::scan (27 samples, 2.34%)</title><rect x="41.5945%" y="741" width="2.3397%" height="15" fill="rgb(219,152,8)" fg:x="480" fg:w="27"/><text x="41.8445%" y="751.50">w..</text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::ungetch (2 samples, 0.17%)</title><rect x="43.7608%" y="725" width="0.1733%" height="15" fill="rgb(243,107,38)" fg:x="505" fg:w="2"/><text x="44.0108%" y="735.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::unget (2 samples, 0.17%)</title><rect x="43.7608%" y="709" width="0.1733%" height="15" fill="rgb(231,17,5)" fg:x="505" fg:w="2"/><text x="44.0108%" y="719.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tokenize (52 samples, 4.51%)</title><rect x="39.5147%" y="757" width="4.5061%" height="15" fill="rgb(209,25,54)" fg:x="456" fg:w="52"/><text x="39.7647%" y="767.50">wgpu_..</text></g><g><title>wgpu_test`glslang::TPpContext::tokenPaste (1 samples, 0.09%)</title><rect x="43.9341%" y="741" width="0.0867%" height="15" fill="rgb(219,0,2)" fg:x="507" fg:w="1"/><text x="44.1841%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.09%)</title><rect x="44.1075%" y="741" width="0.0867%" height="15" fill="rgb(246,9,5)" fg:x="509" fg:w="1"/><text x="44.3575%" y="751.50"></text></g><g><title>wgpu_test`glslang::TScanContext::identifierOrType (12 samples, 1.04%)</title><rect x="44.0208%" y="757" width="1.0399%" height="15" fill="rgb(226,159,4)" fg:x="508" fg:w="12"/><text x="44.2708%" y="767.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (10 samples, 0.87%)</title><rect x="44.1941%" y="741" width="0.8666%" height="15" fill="rgb(219,175,34)" fg:x="510" fg:w="10"/><text x="44.4441%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.52%)</title><rect x="44.5407%" y="725" width="0.5199%" height="15" fill="rgb(236,10,46)" fg:x="514" fg:w="6"/><text x="44.7907%" y="735.50"></text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (167 samples, 14.47%)</title><rect x="32.1490%" y="821" width="14.4714%" height="15" fill="rgb(240,211,16)" fg:x="371" fg:w="167"/><text x="32.3990%" y="831.50">wgpu_test`glslang::TPa..</text></g><g><title>wgpu_test`yyparse(glslang::TParseContext*) (162 samples, 14.04%)</title><rect x="32.5823%" y="805" width="14.0381%" height="15" fill="rgb(205,3,43)" fg:x="376" fg:w="162"/><text x="32.8323%" y="815.50">wgpu_test`yyparse(gls..</text></g><g><title>wgpu_test`yylex(YYSTYPE*, glslang::TParseContext&amp;) (87 samples, 7.54%)</title><rect x="39.0815%" y="789" width="7.5390%" height="15" fill="rgb(245,7,22)" fg:x="451" fg:w="87"/><text x="39.3315%" y="799.50">wgpu_test`..</text></g><g><title>wgpu_test`glslang::TScanContext::tokenize (87 samples, 7.54%)</title><rect x="39.0815%" y="773" width="7.5390%" height="15" fill="rgb(239,132,32)" fg:x="451" fg:w="87"/><text x="39.3315%" y="783.50">wgpu_test`..</text></g><g><title>wgpu_test`glslang::TScanContext::tokenizeIdentifier (18 samples, 1.56%)</title><rect x="45.0607%" y="757" width="1.5598%" height="15" fill="rgb(228,202,34)" fg:x="520" fg:w="18"/><text x="45.3107%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (2 samples, 0.17%)</title><rect x="46.4471%" y="741" width="0.1733%" height="15" fill="rgb(254,200,22)" fg:x="536" fg:w="2"/><text x="46.6971%" y="751.50"></text></g><g><title>wgpu_test`glslang::TPpContext::TPpContext(glslang::TParseContextBase&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.09%)</title><rect x="46.6205%" y="821" width="0.0867%" height="15" fill="rgb(219,10,39)" fg:x="538" fg:w="1"/><text x="46.8705%" y="831.50"></text></g><g><title>wgpu_test`glslang::TStringAtomMap::TStringAtomMap (1 samples, 0.09%)</title><rect x="46.6205%" y="805" width="0.0867%" height="15" fill="rgb(226,210,39)" fg:x="538" fg:w="1"/><text x="46.8705%" y="815.50"></text></g><g><title>wgpu_test`glslang::TStringAtomMap::addAtomFixed (1 samples, 0.09%)</title><rect x="46.6205%" y="789" width="0.0867%" height="15" fill="rgb(208,219,16)" fg:x="538" fg:w="1"/><text x="46.8705%" y="799.50"></text></g><g><title>wgpu_test`(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (170 samples, 14.73%)</title><rect x="32.0624%" y="837" width="14.7314%" height="15" fill="rgb(216,158,51)" fg:x="370" fg:w="170"/><text x="32.3124%" y="847.50">wgpu_test`(anonymous n..</text></g><g><title>wgpu_test`glslang::TPpContext::~TPpContext (1 samples, 0.09%)</title><rect x="46.7071%" y="821" width="0.0867%" height="15" fill="rgb(233,14,44)" fg:x="539" fg:w="1"/><text x="46.9571%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (4 samples, 0.35%)</title><rect x="46.8804%" y="821" width="0.3466%" height="15" fill="rgb(237,97,39)" fg:x="541" fg:w="4"/><text x="47.1304%" y="831.50"></text></g><g><title>wgpu_test`DYLD-STUB$$strlen (1 samples, 0.09%)</title><rect x="47.2270%" y="821" width="0.0867%" height="15" fill="rgb(218,198,43)" fg:x="545" fg:w="1"/><text x="47.4770%" y="831.50"></text></g><g><title>wgpu_test`glslang::BuiltInVariable (1 samples, 0.09%)</title><rect x="47.3137%" y="821" width="0.0867%" height="15" fill="rgb(231,104,20)" fg:x="546" fg:w="1"/><text x="47.5637%" y="831.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.09%)</title><rect x="47.3137%" y="805" width="0.0867%" height="15" fill="rgb(254,36,13)" fg:x="546" fg:w="1"/><text x="47.5637%" y="815.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.09%)</title><rect x="47.4003%" y="805" width="0.0867%" height="15" fill="rgb(248,14,50)" fg:x="547" fg:w="1"/><text x="47.6503%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.09%)</title><rect x="47.5737%" y="789" width="0.0867%" height="15" fill="rgb(217,107,29)" fg:x="549" fg:w="1"/><text x="47.8237%" y="799.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::relateTabledBuiltins (4 samples, 0.35%)</title><rect x="47.4003%" y="821" width="0.3466%" height="15" fill="rgb(251,169,33)" fg:x="547" fg:w="4"/><text x="47.6503%" y="831.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::relateToOperator (3 samples, 0.26%)</title><rect x="47.4870%" y="805" width="0.2600%" height="15" fill="rgb(217,108,32)" fg:x="548" fg:w="3"/><text x="47.7370%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.09%)</title><rect x="47.6603%" y="789" width="0.0867%" height="15" fill="rgb(219,66,42)" fg:x="550" fg:w="1"/><text x="47.9103%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (3 samples, 0.26%)</title><rect x="48.7002%" y="805" width="0.2600%" height="15" fill="rgb(206,180,7)" fg:x="562" fg:w="3"/><text x="48.9502%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (2 samples, 0.17%)</title><rect x="48.9601%" y="805" width="0.1733%" height="15" fill="rgb(208,226,31)" fg:x="565" fg:w="2"/><text x="49.2101%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (3 samples, 0.26%)</title><rect x="49.1334%" y="805" width="0.2600%" height="15" fill="rgb(218,26,49)" fg:x="567" fg:w="3"/><text x="49.3834%" y="815.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::relateToOperator (20 samples, 1.73%)</title><rect x="47.7470%" y="821" width="1.7331%" height="15" fill="rgb(233,197,48)" fg:x="551" fg:w="20"/><text x="47.9970%" y="831.50"></text></g><g><title>wgpu_test`spvtools::opt::analysis::NullConstant::AsNullConstant (1 samples, 0.09%)</title><rect x="49.3934%" y="805" width="0.0867%" height="15" fill="rgb(252,181,51)" fg:x="570" fg:w="1"/><text x="49.6434%" y="815.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::identifyBuiltIns (33 samples, 2.86%)</title><rect x="46.7938%" y="837" width="2.8596%" height="15" fill="rgb(253,90,19)" fg:x="540" fg:w="33"/><text x="47.0438%" y="847.50">wg..</text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::setFunctionExtensions (2 samples, 0.17%)</title><rect x="49.4801%" y="821" width="0.1733%" height="15" fill="rgb(215,171,30)" fg:x="571" fg:w="2"/><text x="49.7301%" y="831.50"></text></g><g><title>wgpu_test`glslang::TSymbol::setExtensions (1 samples, 0.09%)</title><rect x="49.5667%" y="805" width="0.0867%" height="15" fill="rgb(214,222,9)" fg:x="572" fg:w="1"/><text x="49.8167%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.09%)</title><rect x="49.5667%" y="789" width="0.0867%" height="15" fill="rgb(223,3,22)" fg:x="572" fg:w="1"/><text x="49.8167%" y="799.50"></text></g><g><title>libsystem_c.dylib`snprintf (2 samples, 0.17%)</title><rect x="49.7400%" y="821" width="0.1733%" height="15" fill="rgb(225,196,46)" fg:x="574" fg:w="2"/><text x="49.9900%" y="831.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (2 samples, 0.17%)</title><rect x="49.7400%" y="805" width="0.1733%" height="15" fill="rgb(209,110,37)" fg:x="574" fg:w="2"/><text x="49.9900%" y="815.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (2 samples, 0.17%)</title><rect x="49.7400%" y="789" width="0.1733%" height="15" fill="rgb(249,89,12)" fg:x="574" fg:w="2"/><text x="49.9900%" y="799.50"></text></g><g><title>libsystem_c.dylib`__v2printf (2 samples, 0.17%)</title><rect x="49.7400%" y="773" width="0.1733%" height="15" fill="rgb(226,27,33)" fg:x="574" fg:w="2"/><text x="49.9900%" y="783.50"></text></g><g><title>wgpu_test`DYLD-STUB$$strlen (1 samples, 0.09%)</title><rect x="49.9133%" y="805" width="0.0867%" height="15" fill="rgb(213,82,22)" fg:x="576" fg:w="1"/><text x="50.1633%" y="815.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::initialize (6 samples, 0.52%)</title><rect x="49.6534%" y="837" width="0.5199%" height="15" fill="rgb(248,140,0)" fg:x="573" fg:w="6"/><text x="49.9034%" y="847.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::add2ndGenerationSamplingImaging (3 samples, 0.26%)</title><rect x="49.9133%" y="821" width="0.2600%" height="15" fill="rgb(228,106,3)" fg:x="576" fg:w="3"/><text x="50.1633%" y="831.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::addSamplingFunctions(glslang::TSampler, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.17%)</title><rect x="50.0000%" y="805" width="0.1733%" height="15" fill="rgb(209,23,37)" fg:x="577" fg:w="2"/><text x="50.2500%" y="815.50"></text></g><g><title>wgpu_test`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (2 samples, 0.17%)</title><rect x="50.0000%" y="789" width="0.1733%" height="15" fill="rgb(241,93,50)" fg:x="577" fg:w="2"/><text x="50.2500%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="50.0867%" y="773" width="0.0867%" height="15" fill="rgb(253,46,43)" fg:x="578" fg:w="1"/><text x="50.3367%" y="783.50"></text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (1 samples, 0.09%)</title><rect x="50.1733%" y="837" width="0.0867%" height="15" fill="rgb(226,206,43)" fg:x="579" fg:w="1"/><text x="50.4233%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (2 samples, 0.17%)</title><rect x="50.2600%" y="805" width="0.1733%" height="15" fill="rgb(217,54,7)" fg:x="580" fg:w="2"/><text x="50.5100%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.17%)</title><rect x="50.2600%" y="789" width="0.1733%" height="15" fill="rgb(223,5,52)" fg:x="580" fg:w="2"/><text x="50.5100%" y="799.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::~TPoolAllocator (4 samples, 0.35%)</title><rect x="50.2600%" y="837" width="0.3466%" height="15" fill="rgb(206,52,46)" fg:x="580" fg:w="4"/><text x="50.5100%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.35%)</title><rect x="50.2600%" y="821" width="0.3466%" height="15" fill="rgb(253,136,11)" fg:x="580" fg:w="4"/><text x="50.5100%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (2 samples, 0.17%)</title><rect x="50.4333%" y="805" width="0.1733%" height="15" fill="rgb(208,106,33)" fg:x="582" fg:w="2"/><text x="50.6833%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.17%)</title><rect x="50.4333%" y="789" width="0.1733%" height="15" fill="rgb(206,54,4)" fg:x="582" fg:w="2"/><text x="50.6833%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.09%)</title><rect x="51.5598%" y="773" width="0.0867%" height="15" fill="rgb(213,3,15)" fg:x="595" fg:w="1"/><text x="51.8098%" y="783.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (1 samples, 0.09%)</title><rect x="51.6464%" y="773" width="0.0867%" height="15" fill="rgb(252,211,39)" fg:x="596" fg:w="1"/><text x="51.8964%" y="783.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.09%)</title><rect x="51.6464%" y="757" width="0.0867%" height="15" fill="rgb(223,6,36)" fg:x="596" fg:w="1"/><text x="51.8964%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="51.6464%" y="741" width="0.0867%" height="15" fill="rgb(252,169,45)" fg:x="596" fg:w="1"/><text x="51.8964%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.09%)</title><rect x="51.6464%" y="725" width="0.0867%" height="15" fill="rgb(212,48,26)" fg:x="596" fg:w="1"/><text x="51.8964%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.09%)</title><rect x="51.6464%" y="709" width="0.0867%" height="15" fill="rgb(251,102,48)" fg:x="596" fg:w="1"/><text x="51.8964%" y="719.50"></text></g><g><title>wgpu_test`glslang::TSymbol::TSymbol (5 samples, 0.43%)</title><rect x="51.7331%" y="773" width="0.4333%" height="15" fill="rgb(243,208,16)" fg:x="597" fg:w="5"/><text x="51.9831%" y="783.50"></text></g><g><title>wgpu_test`glslang::TSymbol::setExtensions (1 samples, 0.09%)</title><rect x="52.1664%" y="773" width="0.0867%" height="15" fill="rgb(219,96,24)" fg:x="602" fg:w="1"/><text x="52.4164%" y="783.50"></text></g><g><title>wgpu_test`glslang::GetThreadPoolAllocator (1 samples, 0.09%)</title><rect x="52.1664%" y="757" width="0.0867%" height="15" fill="rgb(219,33,29)" fg:x="602" fg:w="1"/><text x="52.4164%" y="767.50"></text></g><g><title>wgpu_test`glslang::OS_GetTLSValue (1 samples, 0.09%)</title><rect x="52.1664%" y="741" width="0.0867%" height="15" fill="rgb(223,176,5)" fg:x="602" fg:w="1"/><text x="52.4164%" y="751.50"></text></g><g><title>wgpu_test`glslang::TFunction::TFunction (23 samples, 1.99%)</title><rect x="50.7799%" y="789" width="1.9931%" height="15" fill="rgb(228,140,14)" fg:x="586" fg:w="23"/><text x="51.0299%" y="799.50">w..</text></g><g><title>wgpu_test`glslang::TType::deepCopy(glslang::TType const&amp;, glslang::TMap&lt;glslang::TVector&lt;glslang::TTypeLoc&gt;*, glslang::TVector&lt;glslang::TTypeLoc&gt;*, std::__1::less&lt;glslang::TVector (6 samples, 0.52%)</title><rect x="52.2530%" y="773" width="0.5199%" height="15" fill="rgb(217,179,31)" fg:x="603" fg:w="6"/><text x="52.5030%" y="783.50"></text></g><g><title>wgpu_test`glslang::TFunction::clone (24 samples, 2.08%)</title><rect x="50.7799%" y="805" width="2.0797%" height="15" fill="rgb(230,9,30)" fg:x="586" fg:w="24"/><text x="51.0299%" y="815.50">w..</text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (1 samples, 0.09%)</title><rect x="52.7730%" y="789" width="0.0867%" height="15" fill="rgb(230,136,20)" fg:x="609" fg:w="1"/><text x="53.0230%" y="799.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.09%)</title><rect x="52.7730%" y="773" width="0.0867%" height="15" fill="rgb(215,210,22)" fg:x="609" fg:w="1"/><text x="53.0230%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="52.7730%" y="757" width="0.0867%" height="15" fill="rgb(218,43,5)" fg:x="609" fg:w="1"/><text x="53.0230%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.09%)</title><rect x="52.7730%" y="741" width="0.0867%" height="15" fill="rgb(216,11,5)" fg:x="609" fg:w="1"/><text x="53.0230%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.09%)</title><rect x="52.7730%" y="725" width="0.0867%" height="15" fill="rgb(209,82,29)" fg:x="609" fg:w="1"/><text x="53.0230%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.09%)</title><rect x="52.7730%" y="709" width="0.0867%" height="15" fill="rgb(244,115,12)" fg:x="609" fg:w="1"/><text x="53.0230%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.09%)</title><rect x="52.7730%" y="693" width="0.0867%" height="15" fill="rgb(222,82,18)" fg:x="609" fg:w="1"/><text x="53.0230%" y="703.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.17%)</title><rect x="52.8596%" y="789" width="0.1733%" height="15" fill="rgb(249,227,8)" fg:x="610" fg:w="2"/><text x="53.1096%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.09%)</title><rect x="52.9463%" y="773" width="0.0867%" height="15" fill="rgb(253,141,45)" fg:x="611" fg:w="1"/><text x="53.1963%" y="783.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.09%)</title><rect x="53.0329%" y="773" width="0.0867%" height="15" fill="rgb(234,184,4)" fg:x="612" fg:w="1"/><text x="53.2829%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.09%)</title><rect x="53.1196%" y="773" width="0.0867%" height="15" fill="rgb(218,194,23)" fg:x="613" fg:w="1"/><text x="53.3696%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="53.2062%" y="773" width="0.0867%" height="15" fill="rgb(235,66,41)" fg:x="614" fg:w="1"/><text x="53.4562%" y="783.50"></text></g><g><title>wgpu_test`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (9 samples, 0.78%)</title><rect x="53.2929%" y="773" width="0.7799%" height="15" fill="rgb(245,217,1)" fg:x="615" fg:w="9"/><text x="53.5429%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.52%)</title><rect x="53.5529%" y="757" width="0.5199%" height="15" fill="rgb(229,91,1)" fg:x="618" fg:w="6"/><text x="53.8029%" y="767.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::clone (41 samples, 3.55%)</title><rect x="50.6066%" y="821" width="3.5529%" height="15" fill="rgb(207,101,30)" fg:x="584" fg:w="41"/><text x="50.8566%" y="831.50">wgpu..</text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::insert (15 samples, 1.30%)</title><rect x="52.8596%" y="805" width="1.2998%" height="15" fill="rgb(223,82,49)" fg:x="610" fg:w="15"/><text x="53.1096%" y="815.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (13 samples, 1.13%)</title><rect x="53.0329%" y="789" width="1.1265%" height="15" fill="rgb(218,167,17)" fg:x="612" fg:w="13"/><text x="53.2829%" y="799.50"></text></g><g><title>wgpu_test`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (1 samples, 0.09%)</title><rect x="54.0728%" y="773" width="0.0867%" height="15" fill="rgb(208,103,14)" fg:x="624" fg:w="1"/><text x="54.3228%" y="783.50"></text></g><g><title>wgpu_test`glslang::TSymbolTable::copyTable (42 samples, 3.64%)</title><rect x="50.6066%" y="837" width="3.6395%" height="15" fill="rgb(238,20,8)" fg:x="584" fg:w="42"/><text x="50.8566%" y="847.50">wgpu..</text></g><g><title>wgpu_test`spvtools::opt::analysis::Constant::AsCompositeConstant (1 samples, 0.09%)</title><rect x="54.1594%" y="821" width="0.0867%" height="15" fill="rgb(218,80,54)" fg:x="625" fg:w="1"/><text x="54.4094%" y="831.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::readOnly (9 samples, 0.78%)</title><rect x="54.2461%" y="837" width="0.7799%" height="15" fill="rgb(240,144,17)" fg:x="626" fg:w="9"/><text x="54.4961%" y="847.50"></text></g><g><title>wgpu_test`(anonymous namespace)::SetupBuiltinSymbolTable (269 samples, 23.31%)</title><rect x="32.0624%" y="853" width="23.3102%" height="15" fill="rgb(245,27,50)" fg:x="370" fg:w="269"/><text x="32.3124%" y="863.50">wgpu_test`(anonymous namespace)::Setu..</text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::~TSymbolTableLevel (4 samples, 0.35%)</title><rect x="55.0260%" y="837" width="0.3466%" height="15" fill="rgb(251,51,7)" fg:x="635" fg:w="4"/><text x="55.2760%" y="847.50"></text></g><g><title>wgpu_test`glslang::TFunction::~TFunction (4 samples, 0.35%)</title><rect x="55.0260%" y="821" width="0.3466%" height="15" fill="rgb(245,217,29)" fg:x="635" fg:w="4"/><text x="55.2760%" y="831.50"></text></g><g><title>wgpu_test`glslang::TIntermediate::postProcess (1 samples, 0.09%)</title><rect x="55.3726%" y="853" width="0.0867%" height="15" fill="rgb(221,176,29)" fg:x="639" fg:w="1"/><text x="55.6226%" y="863.50"></text></g><g><title>wgpu_test`glslang::PropagateNoContraction (1 samples, 0.09%)</title><rect x="55.3726%" y="837" width="0.0867%" height="15" fill="rgb(212,180,24)" fg:x="639" fg:w="1"/><text x="55.6226%" y="847.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="821" width="0.0867%" height="15" fill="rgb(254,24,2)" fg:x="639" fg:w="1"/><text x="55.6226%" y="831.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate (1 samples, 0.09%)</title><rect x="55.3726%" y="805" width="0.0867%" height="15" fill="rgb(230,100,2)" fg:x="639" fg:w="1"/><text x="55.6226%" y="815.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="789" width="0.0867%" height="15" fill="rgb(219,142,25)" fg:x="639" fg:w="1"/><text x="55.6226%" y="799.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate (1 samples, 0.09%)</title><rect x="55.3726%" y="773" width="0.0867%" height="15" fill="rgb(240,73,43)" fg:x="639" fg:w="1"/><text x="55.6226%" y="783.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="757" width="0.0867%" height="15" fill="rgb(214,114,15)" fg:x="639" fg:w="1"/><text x="55.6226%" y="767.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate (1 samples, 0.09%)</title><rect x="55.3726%" y="741" width="0.0867%" height="15" fill="rgb(207,130,4)" fg:x="639" fg:w="1"/><text x="55.6226%" y="751.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="725" width="0.0867%" height="15" fill="rgb(221,25,40)" fg:x="639" fg:w="1"/><text x="55.6226%" y="735.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate (1 samples, 0.09%)</title><rect x="55.3726%" y="709" width="0.0867%" height="15" fill="rgb(241,184,7)" fg:x="639" fg:w="1"/><text x="55.6226%" y="719.50"></text></g><g><title>wgpu_test`glslang::TIntermLoop::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="693" width="0.0867%" height="15" fill="rgb(235,159,4)" fg:x="639" fg:w="1"/><text x="55.6226%" y="703.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="677" width="0.0867%" height="15" fill="rgb(214,87,48)" fg:x="639" fg:w="1"/><text x="55.6226%" y="687.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate (1 samples, 0.09%)</title><rect x="55.3726%" y="661" width="0.0867%" height="15" fill="rgb(246,198,24)" fg:x="639" fg:w="1"/><text x="55.6226%" y="671.50"></text></g><g><title>wgpu_test`glslang::TIntermBinary::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="645" width="0.0867%" height="15" fill="rgb(209,66,40)" fg:x="639" fg:w="1"/><text x="55.6226%" y="655.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitBinary (1 samples, 0.09%)</title><rect x="55.3726%" y="629" width="0.0867%" height="15" fill="rgb(233,147,39)" fg:x="639" fg:w="1"/><text x="55.6226%" y="639.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.09%)</title><rect x="55.3726%" y="613" width="0.0867%" height="15" fill="rgb(231,145,52)" fg:x="639" fg:w="1"/><text x="55.6226%" y="623.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate (1 samples, 0.09%)</title><rect x="55.3726%" y="597" width="0.0867%" height="15" fill="rgb(206,20,26)" fg:x="639" fg:w="1"/><text x="55.6226%" y="607.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitSymbol (1 samples, 0.09%)</title><rect x="55.3726%" y="581" width="0.0867%" height="15" fill="rgb(238,220,4)" fg:x="639" fg:w="1"/><text x="55.6226%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="55.3726%" y="565" width="0.0867%" height="15" fill="rgb(252,195,42)" fg:x="639" fg:w="1"/><text x="55.6226%" y="575.50"></text></g><g><title>wgpu_test`glslang::TParseContext::handleFunctionCall (1 samples, 0.09%)</title><rect x="55.4593%" y="821" width="0.0867%" height="15" fill="rgb(209,10,6)" fg:x="640" fg:w="1"/><text x="55.7093%" y="831.50"></text></g><g><title>wgpu_test`glslang::TFunction::getParamCount (1 samples, 0.09%)</title><rect x="55.4593%" y="805" width="0.0867%" height="15" fill="rgb(229,3,52)" fg:x="640" fg:w="1"/><text x="55.7093%" y="815.50"></text></g><g><title>wgpu_test`shaderc::Compiler::compile_into_spirv (275 samples, 23.83%)</title><rect x="31.8024%" y="949" width="23.8302%" height="15" fill="rgb(253,49,37)" fg:x="367" fg:w="275"/><text x="32.0524%" y="959.50">wgpu_test`shaderc::Compiler::compile_i..</text></g><g><title>wgpu_test`shaderc_compile_into_spv (275 samples, 23.83%)</title><rect x="31.8024%" y="933" width="23.8302%" height="15" fill="rgb(240,103,49)" fg:x="367" fg:w="275"/><text x="32.0524%" y="943.50">wgpu_test`shaderc_compile_into_spv</text></g><g><title>wgpu_test`(anonymous namespace)::CompileToSpecifiedOutputType (275 samples, 23.83%)</title><rect x="31.8024%" y="917" width="23.8302%" height="15" fill="rgb(250,182,30)" fg:x="367" fg:w="275"/><text x="32.0524%" y="927.50">wgpu_test`(anonymous namespace)::Compi..</text></g><g><title>wgpu_test`shaderc_util::Compiler::Compile(shaderc_util::string_piece const&amp;, EShLanguage, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, char const*, std::__1::function&lt;EShLanguage (std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;*, shaderc_util::string_piece const&amp;)&gt; const&amp;, shaderc_util::CountingIncluder&amp;, shaderc_util::Compiler::OutputType, std::__1::basic_ostream&lt;char, std::__1::char_traits (275 samples, 23.83%)</title><rect x="31.8024%" y="901" width="23.8302%" height="15" fill="rgb(248,8,30)" fg:x="367" fg:w="275"/><text x="32.0524%" y="911.50">wgpu_test`shaderc_util::Compiler::Comp..</text></g><g><title>wgpu_test`glslang::TShader::parse (274 samples, 23.74%)</title><rect x="31.8891%" y="885" width="23.7435%" height="15" fill="rgb(237,120,30)" fg:x="368" fg:w="274"/><text x="32.1391%" y="895.50">wgpu_test`glslang::TShader::parse</text></g><g><title>wgpu_test`(anonymous namespace)::CompileDeferred(TCompiler*, char const* const*, int, int const*, char const* const*, char const*, EShOptimizationLevel, TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TIntermediate&amp;, glslang::TShader::Includer&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (274 samples, 23.74%)</title><rect x="31.8891%" y="869" width="23.7435%" height="15" fill="rgb(221,146,34)" fg:x="368" fg:w="274"/><text x="32.1391%" y="879.50">wgpu_test`(anonymous namespace)::Compi..</text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (2 samples, 0.17%)</title><rect x="55.4593%" y="853" width="0.1733%" height="15" fill="rgb(242,55,13)" fg:x="640" fg:w="2"/><text x="55.7093%" y="863.50"></text></g><g><title>wgpu_test`yyparse(glslang::TParseContext*) (2 samples, 0.17%)</title><rect x="55.4593%" y="837" width="0.1733%" height="15" fill="rgb(242,112,31)" fg:x="640" fg:w="2"/><text x="55.7093%" y="847.50"></text></g><g><title>wgpu_test`yylex(YYSTYPE*, glslang::TParseContext&amp;) (1 samples, 0.09%)</title><rect x="55.5459%" y="821" width="0.0867%" height="15" fill="rgb(249,192,27)" fg:x="641" fg:w="1"/><text x="55.7959%" y="831.50"></text></g><g><title>wgpu_test`glslang::TScanContext::tokenize (1 samples, 0.09%)</title><rect x="55.5459%" y="805" width="0.0867%" height="15" fill="rgb(208,204,44)" fg:x="641" fg:w="1"/><text x="55.7959%" y="815.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tokenize (1 samples, 0.09%)</title><rect x="55.5459%" y="789" width="0.0867%" height="15" fill="rgb(208,93,54)" fg:x="641" fg:w="1"/><text x="55.7959%" y="799.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::scan (1 samples, 0.09%)</title><rect x="55.5459%" y="773" width="0.0867%" height="15" fill="rgb(242,1,31)" fg:x="641" fg:w="1"/><text x="55.7959%" y="783.50"></text></g><g><title>wgpu_test`shaderc::Compiler::new (1 samples, 0.09%)</title><rect x="55.6326%" y="949" width="0.0867%" height="15" fill="rgb(241,83,25)" fg:x="642" fg:w="1"/><text x="55.8826%" y="959.50"></text></g><g><title>wgpu_test`shaderc_compiler_initialize (1 samples, 0.09%)</title><rect x="55.6326%" y="933" width="0.0867%" height="15" fill="rgb(205,169,50)" fg:x="642" fg:w="1"/><text x="55.8826%" y="943.50"></text></g><g><title>wgpu_test`shaderc_util::GlslangInitializer::GlslangInitializer (1 samples, 0.09%)</title><rect x="55.6326%" y="917" width="0.0867%" height="15" fill="rgb(239,186,37)" fg:x="642" fg:w="1"/><text x="55.8826%" y="927.50"></text></g><g><title>wgpu_test`glslang::InitializeProcess (1 samples, 0.09%)</title><rect x="55.6326%" y="901" width="0.0867%" height="15" fill="rgb(205,221,10)" fg:x="642" fg:w="1"/><text x="55.8826%" y="911.50"></text></g><g><title>wgpu_test`ShInitialize (1 samples, 0.09%)</title><rect x="55.6326%" y="885" width="0.0867%" height="15" fill="rgb(218,196,15)" fg:x="642" fg:w="1"/><text x="55.8826%" y="895.50"></text></g><g><title>wgpu_test`glslang::TScanContext::fillInKeywordMap (1 samples, 0.09%)</title><rect x="55.6326%" y="869" width="0.0867%" height="15" fill="rgb(218,196,35)" fg:x="642" fg:w="1"/><text x="55.8826%" y="879.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;char const*, int, (anonymous namespace)::str_hash, (anonymous namespace)::str_eq, std::__1::allocator&lt;std::__1::pair&lt;char const* const, int&gt; &gt; &gt;::operator[] (1 samples, 0.09%)</title><rect x="55.6326%" y="853" width="0.0867%" height="15" fill="rgb(233,63,24)" fg:x="642" fg:w="1"/><text x="55.8826%" y="863.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;char const*, int&gt;, std::__1::__unordered_map_hasher&lt;char const*, std::__1::__hash_value_type&lt;char const*, int&gt;, (anonymous namespace)::str_hash, (anonymous namespace)::str_eq, true&gt;, std::__1::__unordered_map_equal&lt;char const*, std::__1::__hash_value_type&lt;char const*, int&gt;, (anonymous namespace)::str_eq, (anonymous namespace)::str_hash, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;char const*, int&gt; &gt; &gt;::__rehash (1 samples, 0.09%)</title><rect x="55.6326%" y="837" width="0.0867%" height="15" fill="rgb(225,8,4)" fg:x="642" fg:w="1"/><text x="55.8826%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.09%)</title><rect x="55.6326%" y="821" width="0.0867%" height="15" fill="rgb(234,105,35)" fg:x="642" fg:w="1"/><text x="55.8826%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.09%)</title><rect x="55.6326%" y="805" width="0.0867%" height="15" fill="rgb(236,21,32)" fg:x="642" fg:w="1"/><text x="55.8826%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.09%)</title><rect x="55.7192%" y="869" width="0.0867%" height="15" fill="rgb(228,109,6)" fg:x="643" fg:w="1"/><text x="55.9692%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.09%)</title><rect x="55.7192%" y="853" width="0.0867%" height="15" fill="rgb(229,215,31)" fg:x="643" fg:w="1"/><text x="55.9692%" y="863.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::~TPoolAllocator (4 samples, 0.35%)</title><rect x="55.7192%" y="901" width="0.3466%" height="15" fill="rgb(221,52,54)" fg:x="643" fg:w="4"/><text x="55.9692%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.35%)</title><rect x="55.7192%" y="885" width="0.3466%" height="15" fill="rgb(252,129,43)" fg:x="643" fg:w="4"/><text x="55.9692%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (3 samples, 0.26%)</title><rect x="55.8059%" y="869" width="0.2600%" height="15" fill="rgb(248,183,27)" fg:x="644" fg:w="3"/><text x="56.0559%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.26%)</title><rect x="55.8059%" y="853" width="0.2600%" height="15" fill="rgb(250,0,22)" fg:x="644" fg:w="3"/><text x="56.0559%" y="863.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::~TSymbolTableLevel (3 samples, 0.26%)</title><rect x="56.0659%" y="901" width="0.2600%" height="15" fill="rgb(213,166,10)" fg:x="647" fg:w="3"/><text x="56.3159%" y="911.50"></text></g><g><title>wgpu_test`glslang::TFunction::~TFunction (1 samples, 0.09%)</title><rect x="56.2392%" y="885" width="0.0867%" height="15" fill="rgb(207,163,36)" fg:x="649" fg:w="1"/><text x="56.4892%" y="895.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::pipeline::make_pipeline (290 samples, 25.13%)</title><rect x="31.2825%" y="981" width="25.1300%" height="15" fill="rgb(208,122,22)" fg:x="361" fg:w="290"/><text x="31.5325%" y="991.50">wgpu_test`wgpu_test::rendering::construc..</text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::pipeline::compile_shader (284 samples, 24.61%)</title><rect x="31.8024%" y="965" width="24.6101%" height="15" fill="rgb(207,104,49)" fg:x="367" fg:w="284"/><text x="32.0524%" y="975.50">wgpu_test`wgpu_test::rendering::constru..</text></g><g><title>wgpu_test`shaderc_compiler_release (8 samples, 0.69%)</title><rect x="55.7192%" y="949" width="0.6932%" height="15" fill="rgb(248,211,50)" fg:x="643" fg:w="8"/><text x="55.9692%" y="959.50"></text></g><g><title>wgpu_test`shaderc_util::GlslangInitializer::~GlslangInitializer (8 samples, 0.69%)</title><rect x="55.7192%" y="933" width="0.6932%" height="15" fill="rgb(217,13,45)" fg:x="643" fg:w="8"/><text x="55.9692%" y="943.50"></text></g><g><title>wgpu_test`ShFinalize (8 samples, 0.69%)</title><rect x="55.7192%" y="917" width="0.6932%" height="15" fill="rgb(211,216,49)" fg:x="643" fg:w="8"/><text x="55.9692%" y="927.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="901" width="0.0867%" height="15" fill="rgb(221,58,53)" fg:x="650" fg:w="1"/><text x="56.5758%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="885" width="0.0867%" height="15" fill="rgb(220,112,41)" fg:x="650" fg:w="1"/><text x="56.5758%" y="895.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="869" width="0.0867%" height="15" fill="rgb(236,38,28)" fg:x="650" fg:w="1"/><text x="56.5758%" y="879.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="853" width="0.0867%" height="15" fill="rgb(227,195,22)" fg:x="650" fg:w="1"/><text x="56.5758%" y="863.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="837" width="0.0867%" height="15" fill="rgb(214,55,33)" fg:x="650" fg:w="1"/><text x="56.5758%" y="847.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="821" width="0.0867%" height="15" fill="rgb(248,80,13)" fg:x="650" fg:w="1"/><text x="56.5758%" y="831.50"></text></g><g><title>wgpu_test`std::__1::__tree&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, glslang::TVariable*&gt;, std::__1::less&lt;int&gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;int, glslang::TVariable*&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (1 samples, 0.09%)</title><rect x="56.3258%" y="805" width="0.0867%" height="15" fill="rgb(238,52,6)" fg:x="650" fg:w="1"/><text x="56.5758%" y="815.50"></text></g><g><title>AppKit`+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders] (1 samples, 0.09%)</title><rect x="56.4125%" y="917" width="0.0867%" height="15" fill="rgb(224,198,47)" fg:x="651" fg:w="1"/><text x="56.6625%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="56.4125%" y="901" width="0.0867%" height="15" fill="rgb(233,171,20)" fg:x="651" fg:w="1"/><text x="56.6625%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.4125%" y="885" width="0.0867%" height="15" fill="rgb(241,30,25)" fg:x="651" fg:w="1"/><text x="56.6625%" y="895.50"></text></g><g><title>AppKit`__71+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders]_block_invoke (1 samples, 0.09%)</title><rect x="56.4125%" y="869" width="0.0867%" height="15" fill="rgb(207,171,38)" fg:x="651" fg:w="1"/><text x="56.6625%" y="879.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.09%)</title><rect x="56.4125%" y="853" width="0.0867%" height="15" fill="rgb(234,70,1)" fg:x="651" fg:w="1"/><text x="56.6625%" y="863.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(dyld3::Array (1 samples, 0.09%)</title><rect x="56.4125%" y="837" width="0.0867%" height="15" fill="rgb(232,178,18)" fg:x="651" fg:w="1"/><text x="56.6625%" y="847.50"></text></g><g><title>libobjc.A.dylib`map_images (1 samples, 0.09%)</title><rect x="56.4125%" y="821" width="0.0867%" height="15" fill="rgb(241,78,40)" fg:x="651" fg:w="1"/><text x="56.6625%" y="831.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (1 samples, 0.09%)</title><rect x="56.4125%" y="805" width="0.0867%" height="15" fill="rgb(222,35,25)" fg:x="651" fg:w="1"/><text x="56.6625%" y="815.50"></text></g><g><title>libobjc.A.dylib`_read_images (1 samples, 0.09%)</title><rect x="56.4125%" y="789" width="0.0867%" height="15" fill="rgb(207,92,16)" fg:x="651" fg:w="1"/><text x="56.6625%" y="799.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (1 samples, 0.09%)</title><rect x="56.4991%" y="821" width="0.0867%" height="15" fill="rgb(216,59,51)" fg:x="652" fg:w="1"/><text x="56.7491%" y="831.50"></text></g><g><title>AppKit`+[NSAppearance _vibrantLightAppearance] (1 samples, 0.09%)</title><rect x="56.4991%" y="805" width="0.0867%" height="15" fill="rgb(213,80,28)" fg:x="652" fg:w="1"/><text x="56.7491%" y="815.50"></text></g><g><title>Foundation`_NSFaultInObject (1 samples, 0.09%)</title><rect x="56.4991%" y="789" width="0.0867%" height="15" fill="rgb(220,93,7)" fg:x="652" fg:w="1"/><text x="56.7491%" y="799.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (1 samples, 0.09%)</title><rect x="56.4991%" y="773" width="0.0867%" height="15" fill="rgb(225,24,44)" fg:x="652" fg:w="1"/><text x="56.7491%" y="783.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (1 samples, 0.09%)</title><rect x="56.4991%" y="757" width="0.0867%" height="15" fill="rgb(243,74,40)" fg:x="652" fg:w="1"/><text x="56.7491%" y="767.50"></text></g><g><title>AppKit`NSCreateCoreUIRenderer (1 samples, 0.09%)</title><rect x="56.4991%" y="741" width="0.0867%" height="15" fill="rgb(228,39,7)" fg:x="652" fg:w="1"/><text x="56.7491%" y="751.50"></text></g><g><title>CoreUI`CUIRenderer::Create (1 samples, 0.09%)</title><rect x="56.4991%" y="725" width="0.0867%" height="15" fill="rgb(227,79,8)" fg:x="652" fg:w="1"/><text x="56.7491%" y="735.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CUICoreThemeRenderer (1 samples, 0.09%)</title><rect x="56.4991%" y="709" width="0.0867%" height="15" fill="rgb(236,58,11)" fg:x="652" fg:w="1"/><text x="56.7491%" y="719.50"></text></g><g><title>CoreUI`+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (1 samples, 0.09%)</title><rect x="56.4991%" y="693" width="0.0867%" height="15" fill="rgb(249,63,35)" fg:x="652" fg:w="1"/><text x="56.7491%" y="703.50"></text></g><g><title>CoreUI`PerformBlockWithThemeRefCache (1 samples, 0.09%)</title><rect x="56.4991%" y="677" width="0.0867%" height="15" fill="rgb(252,114,16)" fg:x="652" fg:w="1"/><text x="56.7491%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="56.4991%" y="661" width="0.0867%" height="15" fill="rgb(254,151,24)" fg:x="652" fg:w="1"/><text x="56.7491%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.4991%" y="645" width="0.0867%" height="15" fill="rgb(253,54,39)" fg:x="652" fg:w="1"/><text x="56.7491%" y="655.50"></text></g><g><title>CoreUI`__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (1 samples, 0.09%)</title><rect x="56.4991%" y="629" width="0.0867%" height="15" fill="rgb(243,25,45)" fg:x="652" fg:w="1"/><text x="56.7491%" y="639.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore initWithPath:] (1 samples, 0.09%)</title><rect x="56.4991%" y="613" width="0.0867%" height="15" fill="rgb(234,134,9)" fg:x="652" fg:w="1"/><text x="56.7491%" y="623.50"></text></g><g><title>CoreUI`-[CUICommonAssetStorage initWithPath:forWriting:] (1 samples, 0.09%)</title><rect x="56.4991%" y="597" width="0.0867%" height="15" fill="rgb(227,166,31)" fg:x="652" fg:w="1"/><text x="56.7491%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.09%)</title><rect x="56.4991%" y="581" width="0.0867%" height="15" fill="rgb(245,143,41)" fg:x="652" fg:w="1"/><text x="56.7491%" y="591.50"></text></g><g><title>AppKit`NSColorGetUserAccentColor (1 samples, 0.09%)</title><rect x="56.5858%" y="773" width="0.0867%" height="15" fill="rgb(238,181,32)" fg:x="653" fg:w="1"/><text x="56.8358%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="757" width="0.0867%" height="15" fill="rgb(224,113,18)" fg:x="653" fg:w="1"/><text x="56.8358%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="741" width="0.0867%" height="15" fill="rgb(240,229,28)" fg:x="653" fg:w="1"/><text x="56.8358%" y="751.50"></text></g><g><title>AppKit`__NSUserAccentHasHardwareColor_block_invoke (1 samples, 0.09%)</title><rect x="56.5858%" y="725" width="0.0867%" height="15" fill="rgb(250,185,3)" fg:x="653" fg:w="1"/><text x="56.8358%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="709" width="0.0867%" height="15" fill="rgb(212,59,25)" fg:x="653" fg:w="1"/><text x="56.8358%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="693" width="0.0867%" height="15" fill="rgb(221,87,20)" fg:x="653" fg:w="1"/><text x="56.8358%" y="703.50"></text></g><g><title>AppKit`__NSUserAccentColorGetHardwareAccentColorName_block_invoke (1 samples, 0.09%)</title><rect x="56.5858%" y="677" width="0.0867%" height="15" fill="rgb(213,74,28)" fg:x="653" fg:w="1"/><text x="56.8358%" y="687.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f7773 (1 samples, 0.09%)</title><rect x="56.5858%" y="661" width="0.0867%" height="15" fill="rgb(224,132,34)" fg:x="653" fg:w="1"/><text x="56.8358%" y="671.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f4cad (1 samples, 0.09%)</title><rect x="56.5858%" y="645" width="0.0867%" height="15" fill="rgb(222,101,24)" fg:x="653" fg:w="1"/><text x="56.8358%" y="655.50"></text></g><g><title>libMobileGestalt.dylib`is_restore_os (1 samples, 0.09%)</title><rect x="56.5858%" y="629" width="0.0867%" height="15" fill="rgb(254,142,4)" fg:x="653" fg:w="1"/><text x="56.8358%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="613" width="0.0867%" height="15" fill="rgb(230,229,49)" fg:x="653" fg:w="1"/><text x="56.8358%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="597" width="0.0867%" height="15" fill="rgb(238,70,47)" fg:x="653" fg:w="1"/><text x="56.8358%" y="607.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f85f3 (1 samples, 0.09%)</title><rect x="56.5858%" y="581" width="0.0867%" height="15" fill="rgb(231,160,17)" fg:x="653" fg:w="1"/><text x="56.8358%" y="591.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f8604 (1 samples, 0.09%)</title><rect x="56.5858%" y="565" width="0.0867%" height="15" fill="rgb(218,68,53)" fg:x="653" fg:w="1"/><text x="56.8358%" y="575.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e501cc4 (1 samples, 0.09%)</title><rect x="56.5858%" y="549" width="0.0867%" height="15" fill="rgb(236,111,10)" fg:x="653" fg:w="1"/><text x="56.8358%" y="559.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f4cfe (1 samples, 0.09%)</title><rect x="56.5858%" y="533" width="0.0867%" height="15" fill="rgb(224,34,41)" fg:x="653" fg:w="1"/><text x="56.8358%" y="543.50"></text></g><g><title>CoreFoundation`_CFCopySystemVersionDictionary (1 samples, 0.09%)</title><rect x="56.5858%" y="517" width="0.0867%" height="15" fill="rgb(241,118,19)" fg:x="653" fg:w="1"/><text x="56.8358%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="501" width="0.0867%" height="15" fill="rgb(238,129,25)" fg:x="653" fg:w="1"/><text x="56.8358%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.5858%" y="485" width="0.0867%" height="15" fill="rgb(238,22,31)" fg:x="653" fg:w="1"/><text x="56.8358%" y="495.50"></text></g><g><title>CoreFoundation`___CFCopySystemVersionDictionary_block_invoke (1 samples, 0.09%)</title><rect x="56.5858%" y="469" width="0.0867%" height="15" fill="rgb(222,174,48)" fg:x="653" fg:w="1"/><text x="56.8358%" y="479.50"></text></g><g><title>CoreFoundation`_CFCopyVersionDictionary (1 samples, 0.09%)</title><rect x="56.5858%" y="453" width="0.0867%" height="15" fill="rgb(206,152,40)" fg:x="653" fg:w="1"/><text x="56.8358%" y="463.50"></text></g><g><title>CoreFoundation`_CFCopyLocalizedVersionKey (1 samples, 0.09%)</title><rect x="56.5858%" y="437" width="0.0867%" height="15" fill="rgb(218,99,54)" fg:x="653" fg:w="1"/><text x="56.8358%" y="447.50"></text></g><g><title>CoreFoundation`CFBundleCopyLocalizedString (1 samples, 0.09%)</title><rect x="56.5858%" y="421" width="0.0867%" height="15" fill="rgb(220,174,26)" fg:x="653" fg:w="1"/><text x="56.8358%" y="431.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption (1 samples, 0.09%)</title><rect x="56.5858%" y="405" width="0.0867%" height="15" fill="rgb(245,116,9)" fg:x="653" fg:w="1"/><text x="56.8358%" y="415.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.09%)</title><rect x="56.5858%" y="389" width="0.0867%" height="15" fill="rgb(209,72,35)" fg:x="653" fg:w="1"/><text x="56.8358%" y="399.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.09%)</title><rect x="56.5858%" y="373" width="0.0867%" height="15" fill="rgb(226,126,21)" fg:x="653" fg:w="1"/><text x="56.8358%" y="383.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.09%)</title><rect x="56.5858%" y="357" width="0.0867%" height="15" fill="rgb(227,192,1)" fg:x="653" fg:w="1"/><text x="56.8358%" y="367.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.09%)</title><rect x="56.5858%" y="341" width="0.0867%" height="15" fill="rgb(237,180,29)" fg:x="653" fg:w="1"/><text x="56.8358%" y="351.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.09%)</title><rect x="56.5858%" y="325" width="0.0867%" height="15" fill="rgb(230,197,35)" fg:x="653" fg:w="1"/><text x="56.8358%" y="335.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.09%)</title><rect x="56.5858%" y="309" width="0.0867%" height="15" fill="rgb(246,193,31)" fg:x="653" fg:w="1"/><text x="56.8358%" y="319.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.09%)</title><rect x="56.5858%" y="293" width="0.0867%" height="15" fill="rgb(241,36,4)" fg:x="653" fg:w="1"/><text x="56.8358%" y="303.50"></text></g><g><title>CoreFoundation`CFStringCreateWithCString (1 samples, 0.09%)</title><rect x="56.5858%" y="277" width="0.0867%" height="15" fill="rgb(241,130,17)" fg:x="653" fg:w="1"/><text x="56.8358%" y="287.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.09%)</title><rect x="56.5858%" y="261" width="0.0867%" height="15" fill="rgb(206,137,32)" fg:x="653" fg:w="1"/><text x="56.8358%" y="271.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (1 samples, 0.09%)</title><rect x="56.5858%" y="245" width="0.0867%" height="15" fill="rgb(237,228,51)" fg:x="653" fg:w="1"/><text x="56.8358%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.09%)</title><rect x="56.5858%" y="229" width="0.0867%" height="15" fill="rgb(243,6,42)" fg:x="653" fg:w="1"/><text x="56.8358%" y="239.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (3 samples, 0.26%)</title><rect x="56.4991%" y="917" width="0.2600%" height="15" fill="rgb(251,74,28)" fg:x="652" fg:w="3"/><text x="56.7491%" y="927.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (3 samples, 0.26%)</title><rect x="56.4991%" y="901" width="0.2600%" height="15" fill="rgb(218,20,49)" fg:x="652" fg:w="3"/><text x="56.7491%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.26%)</title><rect x="56.4991%" y="885" width="0.2600%" height="15" fill="rgb(238,28,14)" fg:x="652" fg:w="3"/><text x="56.7491%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.26%)</title><rect x="56.4991%" y="869" width="0.2600%" height="15" fill="rgb(229,40,46)" fg:x="652" fg:w="3"/><text x="56.7491%" y="879.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (3 samples, 0.26%)</title><rect x="56.4991%" y="853" width="0.2600%" height="15" fill="rgb(244,195,20)" fg:x="652" fg:w="3"/><text x="56.7491%" y="863.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (3 samples, 0.26%)</title><rect x="56.4991%" y="837" width="0.2600%" height="15" fill="rgb(253,56,35)" fg:x="652" fg:w="3"/><text x="56.7491%" y="847.50"></text></g><g><title>AppKit`_NSAppearanceCurrentSystemAppearance (2 samples, 0.17%)</title><rect x="56.5858%" y="821" width="0.1733%" height="15" fill="rgb(210,149,44)" fg:x="653" fg:w="2"/><text x="56.8358%" y="831.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (2 samples, 0.17%)</title><rect x="56.5858%" y="805" width="0.1733%" height="15" fill="rgb(240,135,12)" fg:x="653" fg:w="2"/><text x="56.8358%" y="815.50"></text></g><g><title>AppKit`+[NSAppearance _aquaAppearance] (2 samples, 0.17%)</title><rect x="56.5858%" y="789" width="0.1733%" height="15" fill="rgb(251,24,50)" fg:x="653" fg:w="2"/><text x="56.8358%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="56.6724%" y="773" width="0.0867%" height="15" fill="rgb(243,200,47)" fg:x="654" fg:w="1"/><text x="56.9224%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="56.6724%" y="757" width="0.0867%" height="15" fill="rgb(224,166,26)" fg:x="654" fg:w="1"/><text x="56.9224%" y="767.50"></text></g><g><title>AppKit`__33+[NSAppearance _initializeCoreUI]_block_invoke (1 samples, 0.09%)</title><rect x="56.6724%" y="741" width="0.0867%" height="15" fill="rgb(233,0,47)" fg:x="654" fg:w="1"/><text x="56.9224%" y="751.50"></text></g><g><title>Foundation`_NSFaultInObject (1 samples, 0.09%)</title><rect x="56.6724%" y="725" width="0.0867%" height="15" fill="rgb(253,80,5)" fg:x="654" fg:w="1"/><text x="56.9224%" y="735.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (1 samples, 0.09%)</title><rect x="56.6724%" y="709" width="0.0867%" height="15" fill="rgb(214,133,25)" fg:x="654" fg:w="1"/><text x="56.9224%" y="719.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (1 samples, 0.09%)</title><rect x="56.6724%" y="693" width="0.0867%" height="15" fill="rgb(209,27,14)" fg:x="654" fg:w="1"/><text x="56.9224%" y="703.50"></text></g><g><title>Foundation`-[NSBundle bundleIdentifier] (1 samples, 0.09%)</title><rect x="56.6724%" y="677" width="0.0867%" height="15" fill="rgb(219,102,51)" fg:x="654" fg:w="1"/><text x="56.9224%" y="687.50"></text></g><g><title>Foundation`-[NSBundle infoDictionary] (1 samples, 0.09%)</title><rect x="56.6724%" y="661" width="0.0867%" height="15" fill="rgb(237,18,16)" fg:x="654" fg:w="1"/><text x="56.9224%" y="671.50"></text></g><g><title>Foundation`-[NSBundle _cfBundle] (1 samples, 0.09%)</title><rect x="56.6724%" y="645" width="0.0867%" height="15" fill="rgb(241,85,17)" fg:x="654" fg:w="1"/><text x="56.9224%" y="655.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.09%)</title><rect x="56.6724%" y="629" width="0.0867%" height="15" fill="rgb(236,90,42)" fg:x="654" fg:w="1"/><text x="56.9224%" y="639.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleVersionForURL (1 samples, 0.09%)</title><rect x="56.6724%" y="613" width="0.0867%" height="15" fill="rgb(249,57,21)" fg:x="654" fg:w="1"/><text x="56.9224%" y="623.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.09%)</title><rect x="56.6724%" y="597" width="0.0867%" height="15" fill="rgb(243,12,36)" fg:x="654" fg:w="1"/><text x="56.9224%" y="607.50"></text></g><g><title>libsystem_c.dylib`__opendir2$INODE64 (1 samples, 0.09%)</title><rect x="56.6724%" y="581" width="0.0867%" height="15" fill="rgb(253,128,47)" fg:x="654" fg:w="1"/><text x="56.9224%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.09%)</title><rect x="56.6724%" y="565" width="0.0867%" height="15" fill="rgb(207,33,20)" fg:x="654" fg:w="1"/><text x="56.9224%" y="575.50"></text></g><g><title>AppKit`-[_NSScreenMenuBarHeights _initWithDisplayID:] (1 samples, 0.09%)</title><rect x="56.7591%" y="837" width="0.0867%" height="15" fill="rgb(233,215,35)" fg:x="655" fg:w="1"/><text x="57.0091%" y="847.50"></text></g><g><title>HIToolbox`_HIMenuGetMenuBarHeightWithOptions (1 samples, 0.09%)</title><rect x="56.7591%" y="821" width="0.0867%" height="15" fill="rgb(249,188,52)" fg:x="655" fg:w="1"/><text x="57.0091%" y="831.50"></text></g><g><title>HIToolbox`_HIPresentationInstanceActiveOnDisplay (1 samples, 0.09%)</title><rect x="56.7591%" y="805" width="0.0867%" height="15" fill="rgb(225,12,32)" fg:x="655" fg:w="1"/><text x="57.0091%" y="815.50"></text></g><g><title>HIToolbox`GetCurrentSpaceForDisplay (1 samples, 0.09%)</title><rect x="56.7591%" y="789" width="0.0867%" height="15" fill="rgb(247,98,14)" fg:x="655" fg:w="1"/><text x="57.0091%" y="799.50"></text></g><g><title>HIToolbox`CopyDisplayUUIDAsString (1 samples, 0.09%)</title><rect x="56.7591%" y="773" width="0.0867%" height="15" fill="rgb(247,219,48)" fg:x="655" fg:w="1"/><text x="57.0091%" y="783.50"></text></g><g><title>SkyLight`SLSCopyDisplayUUID (1 samples, 0.09%)</title><rect x="56.7591%" y="757" width="0.0867%" height="15" fill="rgb(253,60,48)" fg:x="655" fg:w="1"/><text x="57.0091%" y="767.50"></text></g><g><title>SkyLight`get_current_display_system_state() (1 samples, 0.09%)</title><rect x="56.7591%" y="741" width="0.0867%" height="15" fill="rgb(245,15,52)" fg:x="655" fg:w="1"/><text x="57.0091%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="56.7591%" y="725" width="0.0867%" height="15" fill="rgb(220,133,28)" fg:x="655" fg:w="1"/><text x="57.0091%" y="735.50"></text></g><g><title>SkyLight`SLDisplayCopyAllDisplayModes (1 samples, 0.09%)</title><rect x="56.8458%" y="725" width="0.0867%" height="15" fill="rgb(217,180,4)" fg:x="656" fg:w="1"/><text x="57.0958%" y="735.50"></text></g><g><title>SkyLight`findDirectDisplay (1 samples, 0.09%)</title><rect x="56.8458%" y="709" width="0.0867%" height="15" fill="rgb(251,24,1)" fg:x="656" fg:w="1"/><text x="57.0958%" y="719.50"></text></g><g><title>SkyLight`findDisplay (1 samples, 0.09%)</title><rect x="56.8458%" y="693" width="0.0867%" height="15" fill="rgb(212,185,49)" fg:x="656" fg:w="1"/><text x="57.0958%" y="703.50"></text></g><g><title>SkyLight`initDisplayModeList (1 samples, 0.09%)</title><rect x="56.8458%" y="677" width="0.0867%" height="15" fill="rgb(215,175,22)" fg:x="656" fg:w="1"/><text x="57.0958%" y="687.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (1 samples, 0.09%)</title><rect x="56.8458%" y="661" width="0.0867%" height="15" fill="rgb(250,205,14)" fg:x="656" fg:w="1"/><text x="57.0958%" y="671.50"></text></g><g><title>ColorSync`ColorSyncVerifyGenericGrayGamma2_2Data (1 samples, 0.09%)</title><rect x="56.9324%" y="661" width="0.0867%" height="15" fill="rgb(225,211,22)" fg:x="657" fg:w="1"/><text x="57.1824%" y="671.50"></text></g><g><title>ColorSync`create (1 samples, 0.09%)</title><rect x="56.9324%" y="645" width="0.0867%" height="15" fill="rgb(251,179,42)" fg:x="657" fg:w="1"/><text x="57.1824%" y="655.50"></text></g><g><title>CoreFoundation`CFDictionaryContainsValue (1 samples, 0.09%)</title><rect x="56.9324%" y="629" width="0.0867%" height="15" fill="rgb(208,216,51)" fg:x="657" fg:w="1"/><text x="57.1824%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="56.9324%" y="613" width="0.0867%" height="15" fill="rgb(235,36,11)" fg:x="657" fg:w="1"/><text x="57.1824%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (4 samples, 0.35%)</title><rect x="56.7591%" y="917" width="0.3466%" height="15" fill="rgb(213,189,28)" fg:x="655" fg:w="4"/><text x="57.0091%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.35%)</title><rect x="56.7591%" y="901" width="0.3466%" height="15" fill="rgb(227,203,42)" fg:x="655" fg:w="4"/><text x="57.0091%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.35%)</title><rect x="56.7591%" y="885" width="0.3466%" height="15" fill="rgb(244,72,36)" fg:x="655" fg:w="4"/><text x="57.0091%" y="895.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (4 samples, 0.35%)</title><rect x="56.7591%" y="869" width="0.3466%" height="15" fill="rgb(213,53,17)" fg:x="655" fg:w="4"/><text x="57.0091%" y="879.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (4 samples, 0.35%)</title><rect x="56.7591%" y="853" width="0.3466%" height="15" fill="rgb(207,167,3)" fg:x="655" fg:w="4"/><text x="57.0091%" y="863.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (3 samples, 0.26%)</title><rect x="56.8458%" y="837" width="0.2600%" height="15" fill="rgb(216,98,30)" fg:x="656" fg:w="3"/><text x="57.0958%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.26%)</title><rect x="56.8458%" y="821" width="0.2600%" height="15" fill="rgb(236,123,15)" fg:x="656" fg:w="3"/><text x="57.0958%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.26%)</title><rect x="56.8458%" y="805" width="0.2600%" height="15" fill="rgb(248,81,50)" fg:x="656" fg:w="3"/><text x="57.0958%" y="815.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (3 samples, 0.26%)</title><rect x="56.8458%" y="789" width="0.2600%" height="15" fill="rgb(214,120,4)" fg:x="656" fg:w="3"/><text x="57.0958%" y="799.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (3 samples, 0.26%)</title><rect x="56.8458%" y="773" width="0.2600%" height="15" fill="rgb(208,179,34)" fg:x="656" fg:w="3"/><text x="57.0958%" y="783.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (3 samples, 0.26%)</title><rect x="56.8458%" y="757" width="0.2600%" height="15" fill="rgb(227,140,7)" fg:x="656" fg:w="3"/><text x="57.0958%" y="767.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (3 samples, 0.26%)</title><rect x="56.8458%" y="741" width="0.2600%" height="15" fill="rgb(214,22,6)" fg:x="656" fg:w="3"/><text x="57.0958%" y="751.50"></text></g><g><title>SkyLight`SLSCopyDisplayColorSpace (2 samples, 0.17%)</title><rect x="56.9324%" y="725" width="0.1733%" height="15" fill="rgb(207,137,27)" fg:x="657" fg:w="2"/><text x="57.1824%" y="735.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryCopyColorSpace (2 samples, 0.17%)</title><rect x="56.9324%" y="709" width="0.1733%" height="15" fill="rgb(210,8,46)" fg:x="657" fg:w="2"/><text x="57.1824%" y="719.50"></text></g><g><title>CoreGraphics`CGColorSpaceFromICCDataCacheGetRetained (2 samples, 0.17%)</title><rect x="56.9324%" y="693" width="0.1733%" height="15" fill="rgb(240,16,54)" fg:x="657" fg:w="2"/><text x="57.1824%" y="703.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithICCDataInternal (2 samples, 0.17%)</title><rect x="56.9324%" y="677" width="0.1733%" height="15" fill="rgb(211,209,29)" fg:x="657" fg:w="2"/><text x="57.1824%" y="687.50"></text></g><g><title>CoreGraphics`CGColorSpaceFindMatchingSingleton (1 samples, 0.09%)</title><rect x="57.0191%" y="661" width="0.0867%" height="15" fill="rgb(226,228,24)" fg:x="658" fg:w="1"/><text x="57.2691%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="57.0191%" y="645" width="0.0867%" height="15" fill="rgb(222,84,9)" fg:x="658" fg:w="1"/><text x="57.2691%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="57.0191%" y="629" width="0.0867%" height="15" fill="rgb(234,203,30)" fg:x="658" fg:w="1"/><text x="57.2691%" y="639.50"></text></g><g><title>CoreGraphics`__CGColorSpaceFindMatchingSingleton_block_invoke_2 (1 samples, 0.09%)</title><rect x="57.0191%" y="613" width="0.0867%" height="15" fill="rgb(238,109,14)" fg:x="658" fg:w="1"/><text x="57.2691%" y="623.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.09%)</title><rect x="57.0191%" y="597" width="0.0867%" height="15" fill="rgb(233,206,34)" fg:x="658" fg:w="1"/><text x="57.2691%" y="607.50"></text></g><g><title>CoreGraphics`CGColorSpaceLinearSRGB (1 samples, 0.09%)</title><rect x="57.0191%" y="581" width="0.0867%" height="15" fill="rgb(220,167,47)" fg:x="658" fg:w="1"/><text x="57.2691%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="57.0191%" y="565" width="0.0867%" height="15" fill="rgb(238,105,10)" fg:x="658" fg:w="1"/><text x="57.2691%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="57.0191%" y="549" width="0.0867%" height="15" fill="rgb(213,227,17)" fg:x="658" fg:w="1"/><text x="57.2691%" y="559.50"></text></g><g><title>CoreGraphics`__CGColorSpaceLinearSRGB_block_invoke (1 samples, 0.09%)</title><rect x="57.0191%" y="533" width="0.0867%" height="15" fill="rgb(217,132,38)" fg:x="658" fg:w="1"/><text x="57.2691%" y="543.50"></text></g><g><title>CoreGraphics`color_space_state_create_linear_srgb (1 samples, 0.09%)</title><rect x="57.0191%" y="517" width="0.0867%" height="15" fill="rgb(242,146,4)" fg:x="658" fg:w="1"/><text x="57.2691%" y="527.50"></text></g><g><title>CoreGraphics`create_from_profile (1 samples, 0.09%)</title><rect x="57.0191%" y="501" width="0.0867%" height="15" fill="rgb(212,61,9)" fg:x="658" fg:w="1"/><text x="57.2691%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="57.0191%" y="485" width="0.0867%" height="15" fill="rgb(247,126,22)" fg:x="658" fg:w="1"/><text x="57.2691%" y="495.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.09%)</title><rect x="57.1057%" y="917" width="0.0867%" height="15" fill="rgb(220,196,2)" fg:x="659" fg:w="1"/><text x="57.3557%" y="927.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.09%)</title><rect x="57.1057%" y="901" width="0.0867%" height="15" fill="rgb(208,46,4)" fg:x="659" fg:w="1"/><text x="57.3557%" y="911.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.09%)</title><rect x="57.1057%" y="885" width="0.0867%" height="15" fill="rgb(252,104,46)" fg:x="659" fg:w="1"/><text x="57.3557%" y="895.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.09%)</title><rect x="57.1057%" y="869" width="0.0867%" height="15" fill="rgb(237,152,48)" fg:x="659" fg:w="1"/><text x="57.3557%" y="879.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.09%)</title><rect x="57.1057%" y="853" width="0.0867%" height="15" fill="rgb(221,59,37)" fg:x="659" fg:w="1"/><text x="57.3557%" y="863.50"></text></g><g><title>Foundation`+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:] (1 samples, 0.09%)</title><rect x="57.1057%" y="837" width="0.0867%" height="15" fill="rgb(209,202,51)" fg:x="659" fg:w="1"/><text x="57.3557%" y="847.50"></text></g><g><title>Foundation`__84+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:]_block_invoke (1 samples, 0.09%)</title><rect x="57.1057%" y="821" width="0.0867%" height="15" fill="rgb(228,81,30)" fg:x="659" fg:w="1"/><text x="57.3557%" y="831.50"></text></g><g><title>Foundation`NSResolvedSelectorForName (1 samples, 0.09%)</title><rect x="57.1057%" y="805" width="0.0867%" height="15" fill="rgb(227,42,39)" fg:x="659" fg:w="1"/><text x="57.3557%" y="815.50"></text></g><g><title>libobjc.A.dylib`sel_lookUpByName (1 samples, 0.09%)</title><rect x="57.1057%" y="789" width="0.0867%" height="15" fill="rgb(221,26,2)" fg:x="659" fg:w="1"/><text x="57.3557%" y="799.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (1 samples, 0.09%)</title><rect x="57.1057%" y="773" width="0.0867%" height="15" fill="rgb(254,61,31)" fg:x="659" fg:w="1"/><text x="57.3557%" y="783.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (1 samples, 0.09%)</title><rect x="57.1057%" y="757" width="0.0867%" height="15" fill="rgb(222,173,38)" fg:x="659" fg:w="1"/><text x="57.3557%" y="767.50"></text></g><g><title>SkyLight`CGSScoreboard (1 samples, 0.09%)</title><rect x="57.1924%" y="677" width="0.0867%" height="15" fill="rgb(218,50,12)" fg:x="660" fg:w="1"/><text x="57.4424%" y="687.50"></text></g><g><title>SkyLight`SLSServerPort (1 samples, 0.09%)</title><rect x="57.1924%" y="661" width="0.0867%" height="15" fill="rgb(223,88,40)" fg:x="660" fg:w="1"/><text x="57.4424%" y="671.50"></text></g><g><title>SkyLight`get_session_port (1 samples, 0.09%)</title><rect x="57.1924%" y="645" width="0.0867%" height="15" fill="rgb(237,54,19)" fg:x="660" fg:w="1"/><text x="57.4424%" y="655.50"></text></g><g><title>SkyLight`CGSLookupServerRootPort (1 samples, 0.09%)</title><rect x="57.1924%" y="629" width="0.0867%" height="15" fill="rgb(251,129,25)" fg:x="660" fg:w="1"/><text x="57.4424%" y="639.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up2 (1 samples, 0.09%)</title><rect x="57.1924%" y="613" width="0.0867%" height="15" fill="rgb(238,97,19)" fg:x="660" fg:w="1"/><text x="57.4424%" y="623.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up3 (1 samples, 0.09%)</title><rect x="57.1924%" y="597" width="0.0867%" height="15" fill="rgb(240,169,18)" fg:x="660" fg:w="1"/><text x="57.4424%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_interface_routine (1 samples, 0.09%)</title><rect x="57.1924%" y="581" width="0.0867%" height="15" fill="rgb(230,187,49)" fg:x="660" fg:w="1"/><text x="57.4424%" y="591.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.09%)</title><rect x="57.1924%" y="565" width="0.0867%" height="15" fill="rgb(209,44,26)" fg:x="660" fg:w="1"/><text x="57.4424%" y="575.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.09%)</title><rect x="57.1924%" y="549" width="0.0867%" height="15" fill="rgb(244,0,6)" fg:x="660" fg:w="1"/><text x="57.4424%" y="559.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.09%)</title><rect x="57.1924%" y="533" width="0.0867%" height="15" fill="rgb(248,18,21)" fg:x="660" fg:w="1"/><text x="57.4424%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.09%)</title><rect x="57.1924%" y="517" width="0.0867%" height="15" fill="rgb(245,180,19)" fg:x="660" fg:w="1"/><text x="57.4424%" y="527.50"></text></g><g><title>SkyLight`CGS_CHECK_INIT (2 samples, 0.17%)</title><rect x="57.1924%" y="773" width="0.1733%" height="15" fill="rgb(252,118,36)" fg:x="660" fg:w="2"/><text x="57.4424%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.17%)</title><rect x="57.1924%" y="757" width="0.1733%" height="15" fill="rgb(210,224,19)" fg:x="660" fg:w="2"/><text x="57.4424%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.17%)</title><rect x="57.1924%" y="741" width="0.1733%" height="15" fill="rgb(218,30,24)" fg:x="660" fg:w="2"/><text x="57.4424%" y="751.50"></text></g><g><title>SkyLight`__SLSInitialize_block_invoke (2 samples, 0.17%)</title><rect x="57.1924%" y="725" width="0.1733%" height="15" fill="rgb(219,75,50)" fg:x="660" fg:w="2"/><text x="57.4424%" y="735.50"></text></g><g><title>SkyLight`initDisplayMappings() (2 samples, 0.17%)</title><rect x="57.1924%" y="709" width="0.1733%" height="15" fill="rgb(234,72,50)" fg:x="660" fg:w="2"/><text x="57.4424%" y="719.50"></text></g><g><title>SkyLight`initDisplayState() (2 samples, 0.17%)</title><rect x="57.1924%" y="693" width="0.1733%" height="15" fill="rgb(219,100,48)" fg:x="660" fg:w="2"/><text x="57.4424%" y="703.50"></text></g><g><title>SkyLight`get_current_display_system_state() (1 samples, 0.09%)</title><rect x="57.2790%" y="677" width="0.0867%" height="15" fill="rgb(253,5,41)" fg:x="661" fg:w="1"/><text x="57.5290%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="57.2790%" y="661" width="0.0867%" height="15" fill="rgb(247,181,11)" fg:x="661" fg:w="1"/><text x="57.5290%" y="671.50"></text></g><g><title>HIToolbox`IsMenuBarVisible (3 samples, 0.26%)</title><rect x="57.1924%" y="901" width="0.2600%" height="15" fill="rgb(222,223,25)" fg:x="660" fg:w="3"/><text x="57.4424%" y="911.50"></text></g><g><title>HIToolbox`GetUserSpaceMenuBar() (3 samples, 0.26%)</title><rect x="57.1924%" y="885" width="0.2600%" height="15" fill="rgb(214,198,28)" fg:x="660" fg:w="3"/><text x="57.4424%" y="895.50"></text></g><g><title>HIToolbox`MenuBarInstance::MenuBarInstance (3 samples, 0.26%)</title><rect x="57.1924%" y="869" width="0.2600%" height="15" fill="rgb(230,46,43)" fg:x="660" fg:w="3"/><text x="57.4424%" y="879.50"></text></g><g><title>HIToolbox`MBWindows::Get (3 samples, 0.26%)</title><rect x="57.1924%" y="853" width="0.2600%" height="15" fill="rgb(233,65,53)" fg:x="660" fg:w="3"/><text x="57.4424%" y="863.50"></text></g><g><title>HIToolbox`MBWindows::MBWindows (3 samples, 0.26%)</title><rect x="57.1924%" y="837" width="0.2600%" height="15" fill="rgb(221,121,27)" fg:x="660" fg:w="3"/><text x="57.4424%" y="847.50"></text></g><g><title>HIToolbox`RegisterForDisplayConfigChangeNotificationsIfNecessary (3 samples, 0.26%)</title><rect x="57.1924%" y="821" width="0.2600%" height="15" fill="rgb(247,70,47)" fg:x="660" fg:w="3"/><text x="57.4424%" y="831.50"></text></g><g><title>HIToolbox`RegisterCallbackInternal(unsigned int, void (*)(unsigned int, void*, void*), unsigned int, void*, unsigned int) (3 samples, 0.26%)</title><rect x="57.1924%" y="805" width="0.2600%" height="15" fill="rgb(228,85,35)" fg:x="660" fg:w="3"/><text x="57.4424%" y="815.50"></text></g><g><title>SkyLight`SLSMainConnectionID (3 samples, 0.26%)</title><rect x="57.1924%" y="789" width="0.2600%" height="15" fill="rgb(209,50,18)" fg:x="660" fg:w="3"/><text x="57.4424%" y="799.50"></text></g><g><title>SkyLight`SLSNewConnection (1 samples, 0.09%)</title><rect x="57.3657%" y="773" width="0.0867%" height="15" fill="rgb(250,19,35)" fg:x="662" fg:w="1"/><text x="57.6157%" y="783.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertyForKey (1 samples, 0.09%)</title><rect x="57.3657%" y="757" width="0.0867%" height="15" fill="rgb(253,107,29)" fg:x="662" fg:w="1"/><text x="57.6157%" y="767.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKeyInternal(__CFURL const*, __CFString const*, void*, void*, __CFError**, unsigned char) (1 samples, 0.09%)</title><rect x="57.3657%" y="741" width="0.0867%" height="15" fill="rgb(252,179,29)" fg:x="662" fg:w="1"/><text x="57.6157%" y="751.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetForURL(__CFURL const*, void*) (1 samples, 0.09%)</title><rect x="57.3657%" y="725" width="0.0867%" height="15" fill="rgb(238,194,6)" fg:x="662" fg:w="1"/><text x="57.6157%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="57.3657%" y="709" width="0.0867%" height="15" fill="rgb(238,164,29)" fg:x="662" fg:w="1"/><text x="57.6157%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="57.3657%" y="693" width="0.0867%" height="15" fill="rgb(224,25,9)" fg:x="662" fg:w="1"/><text x="57.6157%" y="703.50"></text></g><g><title>CoreServicesInternal`invocation function for block in initGlobalsOnce() (1 samples, 0.09%)</title><rect x="57.3657%" y="677" width="0.0867%" height="15" fill="rgb(244,153,23)" fg:x="662" fg:w="1"/><text x="57.6157%" y="687.50"></text></g><g><title>CoreServicesInternal`init_logging() (1 samples, 0.09%)</title><rect x="57.3657%" y="661" width="0.0867%" height="15" fill="rgb(212,203,14)" fg:x="662" fg:w="1"/><text x="57.6157%" y="671.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.09%)</title><rect x="57.3657%" y="645" width="0.0867%" height="15" fill="rgb(220,164,20)" fg:x="662" fg:w="1"/><text x="57.6157%" y="655.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preferences_refresh (1 samples, 0.09%)</title><rect x="57.3657%" y="629" width="0.0867%" height="15" fill="rgb(222,203,48)" fg:x="662" fg:w="1"/><text x="57.6157%" y="639.50"></text></g><g><title>libsystem_trace.dylib`_os_log_stream_filter_refresh (1 samples, 0.09%)</title><rect x="57.3657%" y="613" width="0.0867%" height="15" fill="rgb(215,159,22)" fg:x="662" fg:w="1"/><text x="57.6157%" y="623.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_dictionary (1 samples, 0.09%)</title><rect x="57.3657%" y="597" width="0.0867%" height="15" fill="rgb(216,183,47)" fg:x="662" fg:w="1"/><text x="57.6157%" y="607.50"></text></g><g><title>libxpc.dylib`xpc_get_type (1 samples, 0.09%)</title><rect x="57.3657%" y="581" width="0.0867%" height="15" fill="rgb(229,195,25)" fg:x="662" fg:w="1"/><text x="57.6157%" y="591.50"></text></g><g><title>LaunchServices`_LSRegisterSelf (1 samples, 0.09%)</title><rect x="57.4523%" y="821" width="0.0867%" height="15" fill="rgb(224,132,51)" fg:x="663" fg:w="1"/><text x="57.7023%" y="831.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCProxyForServiceClass (1 samples, 0.09%)</title><rect x="57.4523%" y="805" width="0.0867%" height="15" fill="rgb(240,63,7)" fg:x="663" fg:w="1"/><text x="57.7023%" y="815.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCConnection (1 samples, 0.09%)</title><rect x="57.4523%" y="789" width="0.0867%" height="15" fill="rgb(249,182,41)" fg:x="663" fg:w="1"/><text x="57.7023%" y="799.50"></text></g><g><title>LaunchServices`_LSLazyLoadObjectForKey (1 samples, 0.09%)</title><rect x="57.4523%" y="773" width="0.0867%" height="15" fill="rgb(243,47,26)" fg:x="663" fg:w="1"/><text x="57.7023%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.09%)</title><rect x="57.4523%" y="757" width="0.0867%" height="15" fill="rgb(233,48,2)" fg:x="663" fg:w="1"/><text x="57.7023%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="57.4523%" y="741" width="0.0867%" height="15" fill="rgb(244,165,34)" fg:x="663" fg:w="1"/><text x="57.7023%" y="751.50"></text></g><g><title>LaunchServices`___LSLazyLoadObjectForKey_block_invoke.54 (1 samples, 0.09%)</title><rect x="57.4523%" y="725" width="0.0867%" height="15" fill="rgb(207,89,7)" fg:x="663" fg:w="1"/><text x="57.7023%" y="735.50"></text></g><g><title>LaunchServices`___LSDServiceGetXPCConnection_block_invoke_2 (1 samples, 0.09%)</title><rect x="57.4523%" y="709" width="0.0867%" height="15" fill="rgb(244,117,36)" fg:x="663" fg:w="1"/><text x="57.7023%" y="719.50"></text></g><g><title>LaunchServices`+[_LSDModifyService XPCInterface] (1 samples, 0.09%)</title><rect x="57.4523%" y="693" width="0.0867%" height="15" fill="rgb(226,144,34)" fg:x="663" fg:w="1"/><text x="57.7023%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="57.4523%" y="677" width="0.0867%" height="15" fill="rgb(213,23,19)" fg:x="663" fg:w="1"/><text x="57.7023%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="57.4523%" y="661" width="0.0867%" height="15" fill="rgb(217,75,12)" fg:x="663" fg:w="1"/><text x="57.7023%" y="671.50"></text></g><g><title>LaunchServices`__33+[_LSDModifyService XPCInterface]_block_invoke (1 samples, 0.09%)</title><rect x="57.4523%" y="645" width="0.0867%" height="15" fill="rgb(224,159,17)" fg:x="663" fg:w="1"/><text x="57.7023%" y="655.50"></text></g><g><title>Foundation`+[NSXPCInterface interfaceWithProtocol:] (1 samples, 0.09%)</title><rect x="57.4523%" y="629" width="0.0867%" height="15" fill="rgb(217,118,1)" fg:x="663" fg:w="1"/><text x="57.7023%" y="639.50"></text></g><g><title>Foundation`-[NSXPCInterface setProtocol:] (1 samples, 0.09%)</title><rect x="57.4523%" y="613" width="0.0867%" height="15" fill="rgb(232,180,48)" fg:x="663" fg:w="1"/><text x="57.7023%" y="623.50"></text></g><g><title>Foundation`setProtocolMetadata (1 samples, 0.09%)</title><rect x="57.4523%" y="597" width="0.0867%" height="15" fill="rgb(230,27,33)" fg:x="663" fg:w="1"/><text x="57.7023%" y="607.50"></text></g><g><title>Foundation`setProtocolMetadata (1 samples, 0.09%)</title><rect x="57.4523%" y="581" width="0.0867%" height="15" fill="rgb(205,31,21)" fg:x="663" fg:w="1"/><text x="57.7023%" y="591.50"></text></g><g><title>Foundation`setProtocolMetdataWithMethods (1 samples, 0.09%)</title><rect x="57.4523%" y="565" width="0.0867%" height="15" fill="rgb(253,59,4)" fg:x="663" fg:w="1"/><text x="57.7023%" y="575.50"></text></g><g><title>Foundation`setProtocolMetadataWithSignature (1 samples, 0.09%)</title><rect x="57.4523%" y="549" width="0.0867%" height="15" fill="rgb(224,201,9)" fg:x="663" fg:w="1"/><text x="57.7023%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSSetI containsObject:] (1 samples, 0.09%)</title><rect x="57.4523%" y="533" width="0.0867%" height="15" fill="rgb(229,206,30)" fg:x="663" fg:w="1"/><text x="57.7023%" y="543.50"></text></g><g><title>AppKit`_NSInitializeAppContext (5 samples, 0.43%)</title><rect x="57.1924%" y="917" width="0.4333%" height="15" fill="rgb(212,67,47)" fg:x="660" fg:w="5"/><text x="57.4424%" y="927.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (2 samples, 0.17%)</title><rect x="57.4523%" y="901" width="0.1733%" height="15" fill="rgb(211,96,50)" fg:x="663" fg:w="2"/><text x="57.7023%" y="911.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (2 samples, 0.17%)</title><rect x="57.4523%" y="885" width="0.1733%" height="15" fill="rgb(252,114,18)" fg:x="663" fg:w="2"/><text x="57.7023%" y="895.50"></text></g><g><title>HIServices`GetCurrentProcess (2 samples, 0.17%)</title><rect x="57.4523%" y="869" width="0.1733%" height="15" fill="rgb(223,58,37)" fg:x="663" fg:w="2"/><text x="57.7023%" y="879.50"></text></g><g><title>HIServices`_RegisterApplication (2 samples, 0.17%)</title><rect x="57.4523%" y="853" width="0.1733%" height="15" fill="rgb(237,70,4)" fg:x="663" fg:w="2"/><text x="57.7023%" y="863.50"></text></g><g><title>LaunchServices`_LSApplicationCheckIn (2 samples, 0.17%)</title><rect x="57.4523%" y="837" width="0.1733%" height="15" fill="rgb(244,85,46)" fg:x="663" fg:w="2"/><text x="57.7023%" y="847.50"></text></g><g><title>dyld`dyld4::APIs::forEachImageVersion(mach_header const*, void  (1 samples, 0.09%)</title><rect x="57.5390%" y="821" width="0.0867%" height="15" fill="rgb(223,39,52)" fg:x="664" fg:w="1"/><text x="57.7890%" y="831.50"></text></g><g><title>LaunchServices`___LSApplicationCheckIn_block_invoke.11 (1 samples, 0.09%)</title><rect x="57.5390%" y="805" width="0.0867%" height="15" fill="rgb(218,200,14)" fg:x="664" fg:w="1"/><text x="57.7890%" y="815.50"></text></g><g><title>LaunchServices`_LSVersionNumberCopyStringRepresentation (1 samples, 0.09%)</title><rect x="57.5390%" y="789" width="0.0867%" height="15" fill="rgb(208,171,16)" fg:x="664" fg:w="1"/><text x="57.7890%" y="799.50"></text></g><g><title>LaunchServices`LaunchServices::VersionNumber::copyStringRepresentation (1 samples, 0.09%)</title><rect x="57.5390%" y="773" width="0.0867%" height="15" fill="rgb(234,200,18)" fg:x="664" fg:w="1"/><text x="57.7890%" y="783.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::operator&lt;&lt; (1 samples, 0.09%)</title><rect x="57.5390%" y="757" width="0.0867%" height="15" fill="rgb(228,45,11)" fg:x="664" fg:w="1"/><text x="57.7890%" y="767.50"></text></g><g><title>libc++.1.dylib`std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt;::do_put(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.09%)</title><rect x="57.5390%" y="741" width="0.0867%" height="15" fill="rgb(237,182,11)" fg:x="664" fg:w="1"/><text x="57.7890%" y="751.50"></text></g><g><title>libc+ (1 samples, 0.09%)</title><rect x="57.5390%" y="725" width="0.0867%" height="15" fill="rgb(241,175,49)" fg:x="664" fg:w="1"/><text x="57.7890%" y="735.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.09%)</title><rect x="57.6256%" y="917" width="0.0867%" height="15" fill="rgb(247,38,35)" fg:x="665" fg:w="1"/><text x="57.8756%" y="927.50"></text></g><g><title>Foundation`NSKeyValuePropertyForIsaAndKeyPath (1 samples, 0.09%)</title><rect x="57.6256%" y="901" width="0.0867%" height="15" fill="rgb(228,39,49)" fg:x="665" fg:w="1"/><text x="57.8756%" y="911.50"></text></g><g><title>Foundation`NSKeyValuePropertyForIsaAndKeyPathInner (1 samples, 0.09%)</title><rect x="57.6256%" y="885" width="0.0867%" height="15" fill="rgb(226,101,26)" fg:x="665" fg:w="1"/><text x="57.8756%" y="895.50"></text></g><g><title>Foundation`-[NSKeyValueUnnestedProperty _initWithContainerClass:key:propertiesBeingInitialized:] (1 samples, 0.09%)</title><rect x="57.6256%" y="869" width="0.0867%" height="15" fill="rgb(206,141,19)" fg:x="665" fg:w="1"/><text x="57.8756%" y="879.50"></text></g><g><title>Foundation`-[NSKeyValueUnnestedProperty _givenPropertiesBeingInitialized:getAffectingProperties:] (1 samples, 0.09%)</title><rect x="57.6256%" y="853" width="0.0867%" height="15" fill="rgb(211,200,13)" fg:x="665" fg:w="1"/><text x="57.8756%" y="863.50"></text></g><g><title>Foundation`+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:] (1 samples, 0.09%)</title><rect x="57.6256%" y="837" width="0.0867%" height="15" fill="rgb(241,121,6)" fg:x="665" fg:w="1"/><text x="57.8756%" y="847.50"></text></g><g><title>Foundation`__84+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:]_block_invoke (1 samples, 0.09%)</title><rect x="57.6256%" y="821" width="0.0867%" height="15" fill="rgb(234,221,29)" fg:x="665" fg:w="1"/><text x="57.8756%" y="831.50"></text></g><g><title>Foundation`NSResolvedSelectorForName (1 samples, 0.09%)</title><rect x="57.6256%" y="805" width="0.0867%" height="15" fill="rgb(229,136,5)" fg:x="665" fg:w="1"/><text x="57.8756%" y="815.50"></text></g><g><title>libobjc.A.dylib`sel_lookUpByName (1 samples, 0.09%)</title><rect x="57.6256%" y="789" width="0.0867%" height="15" fill="rgb(238,36,11)" fg:x="665" fg:w="1"/><text x="57.8756%" y="799.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (1 samples, 0.09%)</title><rect x="57.6256%" y="773" width="0.0867%" height="15" fill="rgb(251,55,41)" fg:x="665" fg:w="1"/><text x="57.8756%" y="783.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (1 samples, 0.09%)</title><rect x="57.6256%" y="757" width="0.0867%" height="15" fill="rgb(242,34,40)" fg:x="665" fg:w="1"/><text x="57.8756%" y="767.50"></text></g><g><title>dyld`strcmp (1 samples, 0.09%)</title><rect x="57.6256%" y="741" width="0.0867%" height="15" fill="rgb(215,42,17)" fg:x="665" fg:w="1"/><text x="57.8756%" y="751.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (16 samples, 1.39%)</title><rect x="56.4125%" y="949" width="1.3865%" height="15" fill="rgb(207,44,46)" fg:x="651" fg:w="16"/><text x="56.6625%" y="959.50"></text></g><g><title>AppKit`-[NSApplication init] (16 samples, 1.39%)</title><rect x="56.4125%" y="933" width="1.3865%" height="15" fill="rgb(211,206,28)" fg:x="651" fg:w="16"/><text x="56.6625%" y="943.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.09%)</title><rect x="57.7123%" y="917" width="0.0867%" height="15" fill="rgb(237,167,16)" fg:x="666" fg:w="1"/><text x="57.9623%" y="927.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.09%)</title><rect x="57.7123%" y="901" width="0.0867%" height="15" fill="rgb(233,66,6)" fg:x="666" fg:w="1"/><text x="57.9623%" y="911.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.09%)</title><rect x="57.7123%" y="885" width="0.0867%" height="15" fill="rgb(246,123,29)" fg:x="666" fg:w="1"/><text x="57.9623%" y="895.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.09%)</title><rect x="57.7123%" y="869" width="0.0867%" height="15" fill="rgb(209,62,40)" fg:x="666" fg:w="1"/><text x="57.9623%" y="879.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.09%)</title><rect x="57.7123%" y="853" width="0.0867%" height="15" fill="rgb(218,4,25)" fg:x="666" fg:w="1"/><text x="57.9623%" y="863.50"></text></g><g><title>AppKit`+[NSEvent initialize] (1 samples, 0.09%)</title><rect x="57.7123%" y="837" width="0.0867%" height="15" fill="rgb(253,91,49)" fg:x="666" fg:w="1"/><text x="57.9623%" y="847.50"></text></g><g><title>AppKit`+[NSEvent addLocalMonitorForEventsMatchingMask:placement:handler:] (1 samples, 0.09%)</title><rect x="57.7123%" y="821" width="0.0867%" height="15" fill="rgb(228,155,29)" fg:x="666" fg:w="1"/><text x="57.9623%" y="831.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.09%)</title><rect x="57.7123%" y="805" width="0.0867%" height="15" fill="rgb(243,57,37)" fg:x="666" fg:w="1"/><text x="57.9623%" y="815.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.09%)</title><rect x="57.7123%" y="789" width="0.0867%" height="15" fill="rgb(244,167,17)" fg:x="666" fg:w="1"/><text x="57.9623%" y="799.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.09%)</title><rect x="57.7123%" y="773" width="0.0867%" height="15" fill="rgb(207,181,38)" fg:x="666" fg:w="1"/><text x="57.9623%" y="783.50"></text></g><g><title>libobjc.A.dylib`realizeClassMaybeSwiftMaybeRelock(objc_class*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.09%)</title><rect x="57.7123%" y="757" width="0.0867%" height="15" fill="rgb(211,8,23)" fg:x="666" fg:w="1"/><text x="57.9623%" y="767.50"></text></g><g><title>libobjc.A.dylib`realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.09%)</title><rect x="57.7123%" y="741" width="0.0867%" height="15" fill="rgb(235,11,44)" fg:x="666" fg:w="1"/><text x="57.9623%" y="751.50"></text></g><g><title>AppKit`+[NSApplication _initializeRegisteredDefaults] (1 samples, 0.09%)</title><rect x="57.7990%" y="837" width="0.0867%" height="15" fill="rgb(248,18,52)" fg:x="667" fg:w="1"/><text x="58.0490%" y="847.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) registerDefaults:] (1 samples, 0.09%)</title><rect x="57.7990%" y="821" width="0.0867%" height="15" fill="rgb(208,4,7)" fg:x="667" fg:w="1"/><text x="58.0490%" y="831.50"></text></g><g><title>Foundation`+[NSNotificationCenter defaultCenter] (1 samples, 0.09%)</title><rect x="57.7990%" y="805" width="0.0867%" height="15" fill="rgb(240,17,39)" fg:x="667" fg:w="1"/><text x="58.0490%" y="815.50"></text></g><g><title>wgpu_test`winit::event_loop::EventLoop&lt;()&gt;::new (18 samples, 1.56%)</title><rect x="56.4125%" y="981" width="1.5598%" height="15" fill="rgb(207,170,3)" fg:x="651" fg:w="18"/><text x="56.6625%" y="991.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (18 samples, 1.56%)</title><rect x="56.4125%" y="965" width="1.5598%" height="15" fill="rgb(236,100,52)" fg:x="651" fg:w="18"/><text x="56.6625%" y="975.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (2 samples, 0.17%)</title><rect x="57.7990%" y="949" width="0.1733%" height="15" fill="rgb(246,78,51)" fg:x="667" fg:w="2"/><text x="58.0490%" y="959.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (2 samples, 0.17%)</title><rect x="57.7990%" y="933" width="0.1733%" height="15" fill="rgb(211,17,15)" fg:x="667" fg:w="2"/><text x="58.0490%" y="943.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (2 samples, 0.17%)</title><rect x="57.7990%" y="917" width="0.1733%" height="15" fill="rgb(209,59,46)" fg:x="667" fg:w="2"/><text x="58.0490%" y="927.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.17%)</title><rect x="57.7990%" y="901" width="0.1733%" height="15" fill="rgb(210,92,25)" fg:x="667" fg:w="2"/><text x="58.0490%" y="911.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.17%)</title><rect x="57.7990%" y="885" width="0.1733%" height="15" fill="rgb(238,174,52)" fg:x="667" fg:w="2"/><text x="58.0490%" y="895.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (2 samples, 0.17%)</title><rect x="57.7990%" y="869" width="0.1733%" height="15" fill="rgb(230,73,7)" fg:x="667" fg:w="2"/><text x="58.0490%" y="879.50"></text></g><g><title>AppKit`+[NSApplication initialize] (2 samples, 0.17%)</title><rect x="57.7990%" y="853" width="0.1733%" height="15" fill="rgb(243,124,40)" fg:x="667" fg:w="2"/><text x="58.0490%" y="863.50"></text></g><g><title>Foundation`+[NSUserDefaults(NSUserDefaults) standardUserDefaults] (1 samples, 0.09%)</title><rect x="57.8856%" y="837" width="0.0867%" height="15" fill="rgb(244,170,11)" fg:x="668" fg:w="1"/><text x="58.1356%" y="847.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) init] (1 samples, 0.09%)</title><rect x="57.8856%" y="821" width="0.0867%" height="15" fill="rgb(207,114,54)" fg:x="668" fg:w="1"/><text x="58.1356%" y="831.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.09%)</title><rect x="57.8856%" y="805" width="0.0867%" height="15" fill="rgb(205,42,20)" fg:x="668" fg:w="1"/><text x="58.1356%" y="815.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.09%)</title><rect x="57.8856%" y="789" width="0.0867%" height="15" fill="rgb(230,30,28)" fg:x="668" fg:w="1"/><text x="58.1356%" y="799.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.09%)</title><rect x="57.8856%" y="773" width="0.0867%" height="15" fill="rgb(205,73,54)" fg:x="668" fg:w="1"/><text x="58.1356%" y="783.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.09%)</title><rect x="57.8856%" y="757" width="0.0867%" height="15" fill="rgb(254,227,23)" fg:x="668" fg:w="1"/><text x="58.1356%" y="767.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchLists:] (1 samples, 0.09%)</title><rect x="57.8856%" y="741" width="0.0867%" height="15" fill="rgb(228,202,34)" fg:x="668" fg:w="1"/><text x="58.1356%" y="751.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke.160 (1 samples, 0.09%)</title><rect x="57.8856%" y="725" width="0.0867%" height="15" fill="rgb(222,225,37)" fg:x="668" fg:w="1"/><text x="58.1356%" y="735.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource addSourceForIdentifier:user:byHost:container:] (1 samples, 0.09%)</title><rect x="57.8856%" y="709" width="0.0867%" height="15" fill="rgb(221,14,54)" fg:x="668" fg:w="1"/><text x="58.1356%" y="719.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 0.09%)</title><rect x="57.8856%" y="693" width="0.0867%" height="15" fill="rgb(254,102,2)" fg:x="668" fg:w="1"/><text x="58.1356%" y="703.50"></text></g><g><title>CoreFoundation`__96-[_CFXPreferences(SourceAdditions) withSourceForIdentifier:user:byHost:container:cloud:perform:]_block_invoke.191 (1 samples, 0.09%)</title><rect x="57.8856%" y="677" width="0.0867%" height="15" fill="rgb(232,104,17)" fg:x="668" fg:w="1"/><text x="58.1356%" y="687.50"></text></g><g><title>CoreFoundation`_CFCopyHomeDirURLForUser (1 samples, 0.09%)</title><rect x="57.8856%" y="661" width="0.0867%" height="15" fill="rgb(250,220,14)" fg:x="668" fg:w="1"/><text x="58.1356%" y="671.50"></text></g><g><title>libsystem_info.dylib`getpwuid (1 samples, 0.09%)</title><rect x="57.8856%" y="645" width="0.0867%" height="15" fill="rgb(241,158,9)" fg:x="668" fg:w="1"/><text x="58.1356%" y="655.50"></text></g><g><title>libsystem_info.dylib`_fsi_get_user (1 samples, 0.09%)</title><rect x="57.8856%" y="629" width="0.0867%" height="15" fill="rgb(246,9,43)" fg:x="668" fg:w="1"/><text x="58.1356%" y="639.50"></text></g><g><title>libsystem_info.dylib`_fsi_get_line (1 samples, 0.09%)</title><rect x="57.8856%" y="613" width="0.0867%" height="15" fill="rgb(206,73,33)" fg:x="668" fg:w="1"/><text x="58.1356%" y="623.50"></text></g><g><title>libsystem_c.dylib`fgets (1 samples, 0.09%)</title><rect x="57.8856%" y="597" width="0.0867%" height="15" fill="rgb(222,79,8)" fg:x="668" fg:w="1"/><text x="58.1356%" y="607.50"></text></g><g><title>libsystem_c.dylib`__srefill (1 samples, 0.09%)</title><rect x="57.8856%" y="581" width="0.0867%" height="15" fill="rgb(234,8,54)" fg:x="668" fg:w="1"/><text x="58.1356%" y="591.50"></text></g><g><title>libsystem_c.dylib`__srefill0 (1 samples, 0.09%)</title><rect x="57.8856%" y="565" width="0.0867%" height="15" fill="rgb(209,134,38)" fg:x="668" fg:w="1"/><text x="58.1356%" y="575.50"></text></g><g><title>libsystem_c.dylib`__smakebuf (1 samples, 0.09%)</title><rect x="57.8856%" y="549" width="0.0867%" height="15" fill="rgb(230,127,29)" fg:x="668" fg:w="1"/><text x="58.1356%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.09%)</title><rect x="57.8856%" y="533" width="0.0867%" height="15" fill="rgb(242,44,41)" fg:x="668" fg:w="1"/><text x="58.1356%" y="543.50"></text></g><g><title>libsystem_c.dylib`__loadevp (1 samples, 0.09%)</title><rect x="57.8856%" y="517" width="0.0867%" height="15" fill="rgb(222,56,43)" fg:x="668" fg:w="1"/><text x="58.1356%" y="527.50"></text></g><g><title>libsystem_c.dylib`getenv (1 samples, 0.09%)</title><rect x="57.8856%" y="501" width="0.0867%" height="15" fill="rgb(238,39,47)" fg:x="668" fg:w="1"/><text x="58.1356%" y="511.50"></text></g><g><title>libsystem_c.dylib`__findenv_locked (1 samples, 0.09%)</title><rect x="57.8856%" y="485" width="0.0867%" height="15" fill="rgb(226,79,43)" fg:x="668" fg:w="1"/><text x="58.1356%" y="495.50"></text></g><g><title>AppKit`-[NSWindowTitleController _propertiesChanged:] (1 samples, 0.09%)</title><rect x="57.9723%" y="933" width="0.0867%" height="15" fill="rgb(242,105,53)" fg:x="669" fg:w="1"/><text x="58.2223%" y="943.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.09%)</title><rect x="57.9723%" y="917" width="0.0867%" height="15" fill="rgb(251,132,46)" fg:x="669" fg:w="1"/><text x="58.2223%" y="927.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (1 samples, 0.09%)</title><rect x="57.9723%" y="901" width="0.0867%" height="15" fill="rgb(231,77,14)" fg:x="669" fg:w="1"/><text x="58.2223%" y="911.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (1 samples, 0.09%)</title><rect x="57.9723%" y="885" width="0.0867%" height="15" fill="rgb(240,135,9)" fg:x="669" fg:w="1"/><text x="58.2223%" y="895.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (1 samples, 0.09%)</title><rect x="57.9723%" y="869" width="0.0867%" height="15" fill="rgb(248,109,14)" fg:x="669" fg:w="1"/><text x="58.2223%" y="879.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (1 samples, 0.09%)</title><rect x="57.9723%" y="853" width="0.0867%" height="15" fill="rgb(227,146,52)" fg:x="669" fg:w="1"/><text x="58.2223%" y="863.50"></text></g><g><title>AppKit`-[NSNextStepFrame _updateTitleProperties:] (1 samples, 0.09%)</title><rect x="57.9723%" y="837" width="0.0867%" height="15" fill="rgb(232,54,3)" fg:x="669" fg:w="1"/><text x="58.2223%" y="847.50"></text></g><g><title>AppKit`-[NSNextStepFrame setTitle:andDefeatWrap:] (1 samples, 0.09%)</title><rect x="57.9723%" y="821" width="0.0867%" height="15" fill="rgb(229,201,43)" fg:x="669" fg:w="1"/><text x="58.2223%" y="831.50"></text></g><g><title>AppKit`-[NSTextFieldCell initTextCell:] (1 samples, 0.09%)</title><rect x="57.9723%" y="805" width="0.0867%" height="15" fill="rgb(252,161,33)" fg:x="669" fg:w="1"/><text x="58.2223%" y="815.50"></text></g><g><title>AppKit`-[NSCell initTextCell:] (1 samples, 0.09%)</title><rect x="57.9723%" y="789" width="0.0867%" height="15" fill="rgb(226,146,40)" fg:x="669" fg:w="1"/><text x="58.2223%" y="799.50"></text></g><g><title>AppKit`-[NSCell setStringValue:] (1 samples, 0.09%)</title><rect x="57.9723%" y="773" width="0.0867%" height="15" fill="rgb(219,47,25)" fg:x="669" fg:w="1"/><text x="58.2223%" y="783.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (1 samples, 0.09%)</title><rect x="57.9723%" y="757" width="0.0867%" height="15" fill="rgb(250,135,13)" fg:x="669" fg:w="1"/><text x="58.2223%" y="767.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (1 samples, 0.09%)</title><rect x="57.9723%" y="741" width="0.0867%" height="15" fill="rgb(219,229,18)" fg:x="669" fg:w="1"/><text x="58.2223%" y="751.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (1 samples, 0.09%)</title><rect x="57.9723%" y="725" width="0.0867%" height="15" fill="rgb(217,152,27)" fg:x="669" fg:w="1"/><text x="58.2223%" y="735.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (1 samples, 0.09%)</title><rect x="57.9723%" y="709" width="0.0867%" height="15" fill="rgb(225,71,47)" fg:x="669" fg:w="1"/><text x="58.2223%" y="719.50"></text></g><g><title>Foundation`probeGC (1 samples, 0.09%)</title><rect x="57.9723%" y="693" width="0.0867%" height="15" fill="rgb(220,139,14)" fg:x="669" fg:w="1"/><text x="58.2223%" y="703.50"></text></g><g><title>CoreText`TDescriptor::Hash (1 samples, 0.09%)</title><rect x="57.9723%" y="677" width="0.0867%" height="15" fill="rgb(247,54,32)" fg:x="669" fg:w="1"/><text x="58.2223%" y="687.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (1 samples, 0.09%)</title><rect x="57.9723%" y="661" width="0.0867%" height="15" fill="rgb(252,131,39)" fg:x="669" fg:w="1"/><text x="58.2223%" y="671.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (1 samples, 0.09%)</title><rect x="57.9723%" y="645" width="0.0867%" height="15" fill="rgb(210,108,39)" fg:x="669" fg:w="1"/><text x="58.2223%" y="655.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (1 samples, 0.09%)</title><rect x="57.9723%" y="629" width="0.0867%" height="15" fill="rgb(205,23,29)" fg:x="669" fg:w="1"/><text x="58.2223%" y="639.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (1 samples, 0.09%)</title><rect x="57.9723%" y="613" width="0.0867%" height="15" fill="rgb(246,139,46)" fg:x="669" fg:w="1"/><text x="58.2223%" y="623.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (1 samples, 0.09%)</title><rect x="57.9723%" y="597" width="0.0867%" height="15" fill="rgb(250,81,26)" fg:x="669" fg:w="1"/><text x="58.2223%" y="607.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (1 samples, 0.09%)</title><rect x="57.9723%" y="581" width="0.0867%" height="15" fill="rgb(214,104,7)" fg:x="669" fg:w="1"/><text x="58.2223%" y="591.50"></text></g><g><title>CoreText`TDescriptorSource::CopyXTypeFontWithName (1 samples, 0.09%)</title><rect x="57.9723%" y="565" width="0.0867%" height="15" fill="rgb(233,189,8)" fg:x="669" fg:w="1"/><text x="58.2223%" y="575.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontWithName (1 samples, 0.09%)</title><rect x="57.9723%" y="549" width="0.0867%" height="15" fill="rgb(228,141,17)" fg:x="669" fg:w="1"/><text x="58.2223%" y="559.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::TGlobalFontRegistry (1 samples, 0.09%)</title><rect x="57.9723%" y="533" width="0.0867%" height="15" fill="rgb(247,157,1)" fg:x="669" fg:w="1"/><text x="58.2223%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.09%)</title><rect x="57.9723%" y="517" width="0.0867%" height="15" fill="rgb(249,225,5)" fg:x="669" fg:w="1"/><text x="58.2223%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.09%)</title><rect x="57.9723%" y="501" width="0.0867%" height="15" fill="rgb(242,55,13)" fg:x="669" fg:w="1"/><text x="58.2223%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.09%)</title><rect x="57.9723%" y="485" width="0.0867%" height="15" fill="rgb(230,49,50)" fg:x="669" fg:w="1"/><text x="58.2223%" y="495.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::CreateRegistry (1 samples, 0.09%)</title><rect x="57.9723%" y="469" width="0.0867%" height="15" fill="rgb(241,111,38)" fg:x="669" fg:w="1"/><text x="58.2223%" y="479.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistryImp::RendezvousWithServer (1 samples, 0.09%)</title><rect x="57.9723%" y="453" width="0.0867%" height="15" fill="rgb(252,155,4)" fg:x="669" fg:w="1"/><text x="58.2223%" y="463.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient XTRendezvous:] (1 samples, 0.09%)</title><rect x="57.9723%" y="437" width="0.0867%" height="15" fill="rgb(212,69,32)" fg:x="669" fg:w="1"/><text x="58.2223%" y="447.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient run:errorHandler:] (1 samples, 0.09%)</title><rect x="57.9723%" y="421" width="0.0867%" height="15" fill="rgb(243,107,47)" fg:x="669" fg:w="1"/><text x="58.2223%" y="431.50"></text></g><g><title>libFontRegistry.dylib`__31-[XTypeXPCClient XTRendezvous:]_block_invoke (1 samples, 0.09%)</title><rect x="57.9723%" y="405" width="0.0867%" height="15" fill="rgb(247,130,12)" fg:x="669" fg:w="1"/><text x="58.2223%" y="415.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend1 (1 samples, 0.09%)</title><rect x="57.9723%" y="389" width="0.0867%" height="15" fill="rgb(233,74,16)" fg:x="669" fg:w="1"/><text x="58.2223%" y="399.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:] (1 samples, 0.09%)</title><rect x="57.9723%" y="373" width="0.0867%" height="15" fill="rgb(208,58,18)" fg:x="669" fg:w="1"/><text x="58.2223%" y="383.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.09%)</title><rect x="57.9723%" y="357" width="0.0867%" height="15" fill="rgb(242,225,1)" fg:x="669" fg:w="1"/><text x="58.2223%" y="367.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (1 samples, 0.09%)</title><rect x="57.9723%" y="341" width="0.0867%" height="15" fill="rgb(249,39,40)" fg:x="669" fg:w="1"/><text x="58.2223%" y="351.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (1 samples, 0.09%)</title><rect x="57.9723%" y="325" width="0.0867%" height="15" fill="rgb(207,72,44)" fg:x="669" fg:w="1"/><text x="58.2223%" y="335.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeReplyFromXPCObject:forSelector:interface:] (1 samples, 0.09%)</title><rect x="57.9723%" y="309" width="0.0867%" height="15" fill="rgb(215,193,12)" fg:x="669" fg:w="1"/><text x="58.2223%" y="319.50"></text></g><g><title>Foundation`-[NSXPCDecoder __decodeXPCObject:allowingSimpleMessageSend:outInvocation:outArguments:outArgumentsMaxCount:outMethodSignature:outSelector:isReply:replySelector:interface:] (1 samples, 0.09%)</title><rect x="57.9723%" y="293" width="0.0867%" height="15" fill="rgb(248,41,39)" fg:x="669" fg:w="1"/><text x="58.2223%" y="303.50"></text></g><g><title>Foundation`_NSXPCSerializationDecodeInvocationArgumentArray (1 samples, 0.09%)</title><rect x="57.9723%" y="277" width="0.0867%" height="15" fill="rgb(253,85,4)" fg:x="669" fg:w="1"/><text x="58.2223%" y="287.50"></text></g><g><title>Foundation`_NSXPCSerializationDecodeTypedObjCValuesFromArray (1 samples, 0.09%)</title><rect x="57.9723%" y="261" width="0.0867%" height="15" fill="rgb(243,70,31)" fg:x="669" fg:w="1"/><text x="58.2223%" y="271.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeObjectOfClasses:atObject:] (1 samples, 0.09%)</title><rect x="57.9723%" y="245" width="0.0867%" height="15" fill="rgb(253,195,26)" fg:x="669" fg:w="1"/><text x="58.2223%" y="255.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.09%)</title><rect x="57.9723%" y="229" width="0.0867%" height="15" fill="rgb(243,42,11)" fg:x="669" fg:w="1"/><text x="58.2223%" y="239.50"></text></g><g><title>Foundation`-[NSDictionary(NSDictionary) initWithCoder:] (1 samples, 0.09%)</title><rect x="57.9723%" y="213" width="0.0867%" height="15" fill="rgb(239,66,17)" fg:x="669" fg:w="1"/><text x="58.2223%" y="223.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeArrayOfObjectsForKey:] (1 samples, 0.09%)</title><rect x="57.9723%" y="197" width="0.0867%" height="15" fill="rgb(217,132,21)" fg:x="669" fg:w="1"/><text x="58.2223%" y="207.50"></text></g><g><title>Foundation`_NSXPCSerializationIterateArrayObject (1 samples, 0.09%)</title><rect x="57.9723%" y="181" width="0.0867%" height="15" fill="rgb(252,202,21)" fg:x="669" fg:w="1"/><text x="58.2223%" y="191.50"></text></g><g><title>Foundation`__44-[NSXPCDecoder _decodeArrayOfObjectsForKey:]_block_invoke (1 samples, 0.09%)</title><rect x="57.9723%" y="165" width="0.0867%" height="15" fill="rgb(233,98,36)" fg:x="669" fg:w="1"/><text x="58.2223%" y="175.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.09%)</title><rect x="57.9723%" y="149" width="0.0867%" height="15" fill="rgb(216,153,54)" fg:x="669" fg:w="1"/><text x="58.2223%" y="159.50"></text></g><g><title>Foundation`-[NSURL(NSURL) initWithCoder:] (1 samples, 0.09%)</title><rect x="57.9723%" y="133" width="0.0867%" height="15" fill="rgb(250,99,7)" fg:x="669" fg:w="1"/><text x="58.2223%" y="143.50"></text></g><g><title>Foundation`-[NSXPCDecoder decodeObjectOfClass:forKey:] (1 samples, 0.09%)</title><rect x="57.9723%" y="117" width="0.0867%" height="15" fill="rgb(207,56,50)" fg:x="669" fg:w="1"/><text x="58.2223%" y="127.50"></text></g><g><title>Foundation`_decodeObjectAfterSettingWhitelistForKey (1 samples, 0.09%)</title><rect x="57.9723%" y="101" width="0.0867%" height="15" fill="rgb(244,61,34)" fg:x="669" fg:w="1"/><text x="58.2223%" y="111.50"></text></g><g><title>Foundation`_NSXPCSerializationStringForObject (1 samples, 0.09%)</title><rect x="57.9723%" y="85" width="0.0867%" height="15" fill="rgb(241,50,38)" fg:x="669" fg:w="1"/><text x="58.2223%" y="95.50"></text></g><g><title>Foundation`_getStringAtMarker (1 samples, 0.09%)</title><rect x="57.9723%" y="69" width="0.0867%" height="15" fill="rgb(212,166,30)" fg:x="669" fg:w="1"/><text x="58.2223%" y="79.50"></text></g><g><title>CoreFoundation`CFStringCreateWithCharacters (1 samples, 0.09%)</title><rect x="57.9723%" y="53" width="0.0867%" height="15" fill="rgb(249,127,32)" fg:x="669" fg:w="1"/><text x="58.2223%" y="63.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.09%)</title><rect x="57.9723%" y="37" width="0.0867%" height="15" fill="rgb(209,103,0)" fg:x="669" fg:w="1"/><text x="58.2223%" y="47.50"></text></g><g><title>AppKit`-[NSWindow _dosetTitle:andDefeatWrap:] (2 samples, 0.17%)</title><rect x="57.9723%" y="949" width="0.1733%" height="15" fill="rgb(238,209,51)" fg:x="669" fg:w="2"/><text x="58.2223%" y="959.50"></text></g><g><title>SkyLight`SLSSetWindowProperty (1 samples, 0.09%)</title><rect x="58.0589%" y="933" width="0.0867%" height="15" fill="rgb(237,56,23)" fg:x="670" fg:w="1"/><text x="58.3089%" y="943.50"></text></g><g><title>SkyLight`CGSPropertyListPerformWithSerializedBytes (1 samples, 0.09%)</title><rect x="58.0589%" y="917" width="0.0867%" height="15" fill="rgb(215,153,46)" fg:x="670" fg:w="1"/><text x="58.3089%" y="927.50"></text></g><g><title>SkyLight`CGSPropertyListCreateSerializedBytes (1 samples, 0.09%)</title><rect x="58.0589%" y="901" width="0.0867%" height="15" fill="rgb(224,49,31)" fg:x="670" fg:w="1"/><text x="58.3089%" y="911.50"></text></g><g><title>SkyLight`CGSPropertyListCreateSerializedData (1 samples, 0.09%)</title><rect x="58.0589%" y="885" width="0.0867%" height="15" fill="rgb(250,18,42)" fg:x="670" fg:w="1"/><text x="58.3089%" y="895.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateData (1 samples, 0.09%)</title><rect x="58.0589%" y="869" width="0.0867%" height="15" fill="rgb(215,176,39)" fg:x="670" fg:w="1"/><text x="58.3089%" y="879.50"></text></g><g><title>CoreFoundation`CFPropertyListWrite (1 samples, 0.09%)</title><rect x="58.0589%" y="853" width="0.0867%" height="15" fill="rgb(223,77,29)" fg:x="670" fg:w="1"/><text x="58.3089%" y="863.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistWriteOrPresize (1 samples, 0.09%)</title><rect x="58.0589%" y="837" width="0.0867%" height="15" fill="rgb(234,94,52)" fg:x="670" fg:w="1"/><text x="58.3089%" y="847.50"></text></g><g><title>CoreFoundation`__CFBasicHashRehash (1 samples, 0.09%)</title><rect x="58.0589%" y="821" width="0.0867%" height="15" fill="rgb(220,154,50)" fg:x="670" fg:w="1"/><text x="58.3089%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="58.0589%" y="805" width="0.0867%" height="15" fill="rgb(212,11,10)" fg:x="670" fg:w="1"/><text x="58.3089%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.09%)</title><rect x="58.0589%" y="789" width="0.0867%" height="15" fill="rgb(205,166,19)" fg:x="670" fg:w="1"/><text x="58.3089%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.09%)</title><rect x="58.0589%" y="773" width="0.0867%" height="15" fill="rgb(244,198,16)" fg:x="670" fg:w="1"/><text x="58.3089%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="58.0589%" y="757" width="0.0867%" height="15" fill="rgb(219,69,12)" fg:x="670" fg:w="1"/><text x="58.3089%" y="767.50"></text></g><g><title>dyld`dyld4::APIs::dyld_image_header_containing_address (1 samples, 0.09%)</title><rect x="58.1456%" y="805" width="0.0867%" height="15" fill="rgb(245,30,7)" fg:x="671" fg:w="1"/><text x="58.3956%" y="815.50"></text></g><g><title>dyld`dyld4::APIs::findImageMappedAt (1 samples, 0.09%)</title><rect x="58.1456%" y="789" width="0.0867%" height="15" fill="rgb(218,221,48)" fg:x="671" fg:w="1"/><text x="58.3956%" y="799.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.09%)</title><rect x="58.1456%" y="773" width="0.0867%" height="15" fill="rgb(216,66,15)" fg:x="671" fg:w="1"/><text x="58.3956%" y="783.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageMappedAt (1 samples, 0.09%)</title><rect x="58.1456%" y="757" width="0.0867%" height="15" fill="rgb(226,122,50)" fg:x="671" fg:w="1"/><text x="58.3956%" y="767.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::contains (1 samples, 0.09%)</title><rect x="58.1456%" y="741" width="0.0867%" height="15" fill="rgb(239,156,16)" fg:x="671" fg:w="1"/><text x="58.3956%" y="751.50"></text></g><g><title>AppKit`-[NSResponder init] (2 samples, 0.17%)</title><rect x="58.1456%" y="901" width="0.1733%" height="15" fill="rgb(224,27,38)" fg:x="671" fg:w="2"/><text x="58.3956%" y="911.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (2 samples, 0.17%)</title><rect x="58.1456%" y="885" width="0.1733%" height="15" fill="rgb(224,39,27)" fg:x="671" fg:w="2"/><text x="58.3956%" y="895.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.17%)</title><rect x="58.1456%" y="869" width="0.1733%" height="15" fill="rgb(215,92,29)" fg:x="671" fg:w="2"/><text x="58.3956%" y="879.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.17%)</title><rect x="58.1456%" y="853" width="0.1733%" height="15" fill="rgb(207,159,16)" fg:x="671" fg:w="2"/><text x="58.3956%" y="863.50"></text></g><g><title>AppKit`initializePropertyInfo (2 samples, 0.17%)</title><rect x="58.1456%" y="837" width="0.1733%" height="15" fill="rgb(238,163,47)" fg:x="671" fg:w="2"/><text x="58.3956%" y="847.50"></text></g><g><title>AppKit`+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (2 samples, 0.17%)</title><rect x="58.1456%" y="821" width="0.1733%" height="15" fill="rgb(219,91,49)" fg:x="671" fg:w="2"/><text x="58.3956%" y="831.50"></text></g><g><title>libobjc.A.dylib`DYLD-STUB$$strcmp (1 samples, 0.09%)</title><rect x="58.2322%" y="805" width="0.0867%" height="15" fill="rgb(227,167,31)" fg:x="672" fg:w="1"/><text x="58.4822%" y="815.50"></text></g><g><title>AppKit`-[NSNextStepFrame initWithFrame:styleMask:owner:] (2 samples, 0.17%)</title><rect x="58.3189%" y="885" width="0.1733%" height="15" fill="rgb(234,80,54)" fg:x="673" fg:w="2"/><text x="58.5689%" y="895.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (2 samples, 0.17%)</title><rect x="58.3189%" y="869" width="0.1733%" height="15" fill="rgb(212,114,2)" fg:x="673" fg:w="2"/><text x="58.5689%" y="879.50"></text></g><g><title>AppKit`-[NSResponder init] (2 samples, 0.17%)</title><rect x="58.3189%" y="853" width="0.1733%" height="15" fill="rgb(234,50,24)" fg:x="673" fg:w="2"/><text x="58.5689%" y="863.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (2 samples, 0.17%)</title><rect x="58.3189%" y="837" width="0.1733%" height="15" fill="rgb(221,68,8)" fg:x="673" fg:w="2"/><text x="58.5689%" y="847.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.17%)</title><rect x="58.3189%" y="821" width="0.1733%" height="15" fill="rgb(254,180,31)" fg:x="673" fg:w="2"/><text x="58.5689%" y="831.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.17%)</title><rect x="58.3189%" y="805" width="0.1733%" height="15" fill="rgb(247,130,50)" fg:x="673" fg:w="2"/><text x="58.5689%" y="815.50"></text></g><g><title>AppKit`initializePropertyInfo (2 samples, 0.17%)</title><rect x="58.3189%" y="789" width="0.1733%" height="15" fill="rgb(211,109,4)" fg:x="673" fg:w="2"/><text x="58.5689%" y="799.50"></text></g><g><title>AppKit`+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (2 samples, 0.17%)</title><rect x="58.3189%" y="773" width="0.1733%" height="15" fill="rgb(238,50,21)" fg:x="673" fg:w="2"/><text x="58.5689%" y="783.50"></text></g><g><title>dyld`dyld4::APIs::dyld_image_header_containing_address (2 samples, 0.17%)</title><rect x="58.3189%" y="757" width="0.1733%" height="15" fill="rgb(225,57,45)" fg:x="673" fg:w="2"/><text x="58.5689%" y="767.50"></text></g><g><title>dyld`dyld4::APIs::findImageMappedAt (2 samples, 0.17%)</title><rect x="58.3189%" y="741" width="0.1733%" height="15" fill="rgb(209,196,50)" fg:x="673" fg:w="2"/><text x="58.5689%" y="751.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (2 samples, 0.17%)</title><rect x="58.3189%" y="725" width="0.1733%" height="15" fill="rgb(242,140,13)" fg:x="673" fg:w="2"/><text x="58.5689%" y="735.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageMappedAt (2 samples, 0.17%)</title><rect x="58.3189%" y="709" width="0.1733%" height="15" fill="rgb(217,111,7)" fg:x="673" fg:w="2"/><text x="58.5689%" y="719.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::contains (2 samples, 0.17%)</title><rect x="58.3189%" y="693" width="0.1733%" height="15" fill="rgb(253,193,51)" fg:x="673" fg:w="2"/><text x="58.5689%" y="703.50"></text></g><g><title>dyld`dyld4::RuntimeState::cachedDylibLoadAddress (1 samples, 0.09%)</title><rect x="58.4055%" y="677" width="0.0867%" height="15" fill="rgb(252,70,29)" fg:x="674" fg:w="1"/><text x="58.6555%" y="687.50"></text></g><g><title>AppKit`-[NSWindow _setColorSpace:sendNotification:displayIfChanged:] (1 samples, 0.09%)</title><rect x="58.4922%" y="869" width="0.0867%" height="15" fill="rgb(232,127,12)" fg:x="675" fg:w="1"/><text x="58.7422%" y="879.50"></text></g><g><title>AppKit`-[NSWindow _adjustDynamicDepthLimit] (1 samples, 0.09%)</title><rect x="58.4922%" y="853" width="0.0867%" height="15" fill="rgb(211,180,21)" fg:x="675" fg:w="1"/><text x="58.7422%" y="863.50"></text></g><g><title>AppKit`-[NSColorSpace(NSColorGamut) colorGamut] (1 samples, 0.09%)</title><rect x="58.4922%" y="837" width="0.0867%" height="15" fill="rgb(229,72,13)" fg:x="675" fg:w="1"/><text x="58.7422%" y="847.50"></text></g><g><title>AppKit`+[_NSAxisAlignedVolumeColorGamut gamutWithCGColorSpace:] (1 samples, 0.09%)</title><rect x="58.4922%" y="821" width="0.0867%" height="15" fill="rgb(240,211,49)" fg:x="675" fg:w="1"/><text x="58.7422%" y="831.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertComponentData (1 samples, 0.09%)</title><rect x="58.4922%" y="805" width="0.0867%" height="15" fill="rgb(219,149,40)" fg:x="675" fg:w="1"/><text x="58.7422%" y="815.50"></text></g><g><title>CoreGraphics`CGColorTransformConvert (1 samples, 0.09%)</title><rect x="58.4922%" y="789" width="0.0867%" height="15" fill="rgb(210,127,46)" fg:x="675" fg:w="1"/><text x="58.7422%" y="799.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvert (1 samples, 0.09%)</title><rect x="58.4922%" y="773" width="0.0867%" height="15" fill="rgb(220,106,7)" fg:x="675" fg:w="1"/><text x="58.7422%" y="783.50"></text></g><g><title>CoreGraphics`convert_icc (1 samples, 0.09%)</title><rect x="58.4922%" y="757" width="0.0867%" height="15" fill="rgb(249,31,22)" fg:x="675" fg:w="1"/><text x="58.7422%" y="767.50"></text></g><g><title>CoreGraphics`convert_using_vImageConverter (1 samples, 0.09%)</title><rect x="58.4922%" y="741" width="0.0867%" height="15" fill="rgb(253,1,49)" fg:x="675" fg:w="1"/><text x="58.7422%" y="751.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreateCachedCGvImageConverter (1 samples, 0.09%)</title><rect x="58.4922%" y="725" width="0.0867%" height="15" fill="rgb(227,144,33)" fg:x="675" fg:w="1"/><text x="58.7422%" y="735.50"></text></g><g><title>CoreGraphics`CGvImageConverterCacheGetRetained (1 samples, 0.09%)</title><rect x="58.4922%" y="709" width="0.0867%" height="15" fill="rgb(249,163,44)" fg:x="675" fg:w="1"/><text x="58.7422%" y="719.50"></text></g><g><title>CoreGraphics`CGvImageConverterInitializeShared (1 samples, 0.09%)</title><rect x="58.4922%" y="693" width="0.0867%" height="15" fill="rgb(234,15,39)" fg:x="675" fg:w="1"/><text x="58.7422%" y="703.50"></text></g><g><title>vImage`vImageConverter_CreateWithCGColorConversionInfo (1 samples, 0.09%)</title><rect x="58.4922%" y="677" width="0.0867%" height="15" fill="rgb(207,66,16)" fg:x="675" fg:w="1"/><text x="58.7422%" y="687.50"></text></g><g><title>libCGInterfaces.dylib`GetColorspaceTransformsWithTransformWithCGColorConversionInfo (1 samples, 0.09%)</title><rect x="58.4922%" y="661" width="0.0867%" height="15" fill="rgb(233,112,24)" fg:x="675" fg:w="1"/><text x="58.7422%" y="671.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoIterateFunctionsWithCallbacks (1 samples, 0.09%)</title><rect x="58.4922%" y="645" width="0.0867%" height="15" fill="rgb(230,90,22)" fg:x="675" fg:w="1"/><text x="58.7422%" y="655.50"></text></g><g><title>ColorSync`ColorSyncTransformIterate (1 samples, 0.09%)</title><rect x="58.4922%" y="629" width="0.0867%" height="15" fill="rgb(229,61,13)" fg:x="675" fg:w="1"/><text x="58.7422%" y="639.50"></text></g><g><title>CoreGraphics`__CGColorConversionInfoIterateFunctionsWithCallbacks_block_invoke.60 (1 samples, 0.09%)</title><rect x="58.4922%" y="613" width="0.0867%" height="15" fill="rgb(225,57,24)" fg:x="675" fg:w="1"/><text x="58.7422%" y="623.50"></text></g><g><title>libCGInterfaces.dylib`__GetColorspaceTransformsWithTransformWithCGColorConversionInfo_block_invoke_3 (1 samples, 0.09%)</title><rect x="58.4922%" y="597" width="0.0867%" height="15" fill="rgb(208,169,48)" fg:x="675" fg:w="1"/><text x="58.7422%" y="607.50"></text></g><g><title>CoreGraphics`CGColorFunctionGetInputRange (1 samples, 0.09%)</title><rect x="58.4922%" y="581" width="0.0867%" height="15" fill="rgb(244,218,51)" fg:x="675" fg:w="1"/><text x="58.7422%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="58.4922%" y="565" width="0.0867%" height="15" fill="rgb(214,148,10)" fg:x="675" fg:w="1"/><text x="58.7422%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="58.4922%" y="549" width="0.0867%" height="15" fill="rgb(225,174,27)" fg:x="675" fg:w="1"/><text x="58.7422%" y="559.50"></text></g><g><title>CoreGraphics`__matrix_get_input_range_block_invoke (1 samples, 0.09%)</title><rect x="58.4922%" y="533" width="0.0867%" height="15" fill="rgb(230,96,26)" fg:x="675" fg:w="1"/><text x="58.7422%" y="543.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.09%)</title><rect x="58.4922%" y="517" width="0.0867%" height="15" fill="rgb(232,10,30)" fg:x="675" fg:w="1"/><text x="58.7422%" y="527.50"></text></g><g><title>dyld`dyld4::APIs::validLoader (1 samples, 0.09%)</title><rect x="58.4922%" y="501" width="0.0867%" height="15" fill="rgb(222,8,50)" fg:x="675" fg:w="1"/><text x="58.7422%" y="511.50"></text></g><g><title>dyld`dyld4::RuntimeState::inPrebuiltLoader (1 samples, 0.09%)</title><rect x="58.4922%" y="485" width="0.0867%" height="15" fill="rgb(213,81,27)" fg:x="675" fg:w="1"/><text x="58.7422%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (4 samples, 0.35%)</title><rect x="58.3189%" y="901" width="0.3466%" height="15" fill="rgb(245,50,10)" fg:x="673" fg:w="4"/><text x="58.5689%" y="911.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (2 samples, 0.17%)</title><rect x="58.4922%" y="885" width="0.1733%" height="15" fill="rgb(216,100,18)" fg:x="675" fg:w="2"/><text x="58.7422%" y="895.50"></text></g><g><title>AppKit`_NSCreateWindowWithOpaqueShape2 (1 samples, 0.09%)</title><rect x="58.5789%" y="869" width="0.0867%" height="15" fill="rgb(236,147,54)" fg:x="676" fg:w="1"/><text x="58.8289%" y="879.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:] (1 samples, 0.09%)</title><rect x="58.5789%" y="853" width="0.0867%" height="15" fill="rgb(205,143,26)" fg:x="676" fg:w="1"/><text x="58.8289%" y="863.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:] (1 samples, 0.09%)</title><rect x="58.5789%" y="837" width="0.0867%" height="15" fill="rgb(236,26,9)" fg:x="676" fg:w="1"/><text x="58.8289%" y="847.50"></text></g><g><title>SkyLight`SLSNewWindowWithOpaqueShape (1 samples, 0.09%)</title><rect x="58.5789%" y="821" width="0.0867%" height="15" fill="rgb(221,165,53)" fg:x="676" fg:w="1"/><text x="58.8289%" y="831.50"></text></g><g><title>SkyLight`SLSNewWindowWithOpaqueShapeAndContext (1 samples, 0.09%)</title><rect x="58.5789%" y="805" width="0.0867%" height="15" fill="rgb(214,110,17)" fg:x="676" fg:w="1"/><text x="58.8289%" y="815.50"></text></g><g><title>SkyLight`_CGSGetDebugOptions (1 samples, 0.09%)</title><rect x="58.5789%" y="789" width="0.0867%" height="15" fill="rgb(237,197,12)" fg:x="676" fg:w="1"/><text x="58.8289%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="58.5789%" y="773" width="0.0867%" height="15" fill="rgb(205,84,17)" fg:x="676" fg:w="1"/><text x="58.8289%" y="783.50"></text></g><g><title>dyld`start (678 samples, 58.75%)</title><rect x="0.0000%" y="1125" width="58.7522%" height="15" fill="rgb(237,18,45)" fg:x="0" fg:w="678"/><text x="0.2500%" y="1135.50">dyld`start</text></g><g><title>wgpu_test`main (678 samples, 58.75%)</title><rect x="0.0000%" y="1109" width="58.7522%" height="15" fill="rgb(221,87,14)" fg:x="0" fg:w="678"/><text x="0.2500%" y="1119.50">wgpu_test`main</text></g><g><title>wgpu_test`std::rt::lang_start_internal (678 samples, 58.75%)</title><rect x="0.0000%" y="1093" width="58.7522%" height="15" fill="rgb(238,186,15)" fg:x="0" fg:w="678"/><text x="0.2500%" y="1103.50">wgpu_test`std::rt::lang_start_internal</text></g><g><title>wgpu_test`std::rt::lang_start::_{{closure}} (678 samples, 58.75%)</title><rect x="0.0000%" y="1077" width="58.7522%" height="15" fill="rgb(208,115,11)" fg:x="0" fg:w="678"/><text x="0.2500%" y="1087.50">wgpu_test`std::rt::lang_start::_{{closure}}</text></g><g><title>wgpu_test`std::sys_common::backtrace::__rust_begin_short_backtrace (678 samples, 58.75%)</title><rect x="0.0000%" y="1061" width="58.7522%" height="15" fill="rgb(254,175,0)" fg:x="0" fg:w="678"/><text x="0.2500%" y="1071.50">wgpu_test`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>wgpu_test`wgpu_test::main (678 samples, 58.75%)</title><rect x="0.0000%" y="1045" width="58.7522%" height="15" fill="rgb(227,24,42)" fg:x="0" fg:w="678"/><text x="0.2500%" y="1055.50">wgpu_test`wgpu_test::main</text></g><g><title>wgpu_test`bevy_app::app::App::run (677 samples, 58.67%)</title><rect x="0.0867%" y="1029" width="58.6655%" height="15" fill="rgb(223,211,37)" fg:x="1" fg:w="677"/><text x="0.3367%" y="1039.50">wgpu_test`bevy_app::app::App::run</text></g><g><title>wgpu_test`&lt;wgpu_test::rendering::CtklrRenderPlugin as bevy_app::plugin::Plugin&gt;::build::_{{closure}} (677 samples, 58.67%)</title><rect x="0.0867%" y="1013" width="58.6655%" height="15" fill="rgb(235,49,27)" fg:x="1" fg:w="677"/><text x="0.3367%" y="1023.50">wgpu_test`&lt;wgpu_test::rendering::CtklrRenderPlugin as bevy_app::plugin::Plugin&gt;::build::_{{closur..</text></g><g><title>wgpu_test`wgpu_test::rendering::create_window (677 samples, 58.67%)</title><rect x="0.0867%" y="997" width="58.6655%" height="15" fill="rgb(254,97,51)" fg:x="1" fg:w="677"/><text x="0.3367%" y="1007.50">wgpu_test`wgpu_test::rendering::create_window</text></g><g><title>wgpu_test`winit::platform_impl::platform::window::UnownedWindow::new (9 samples, 0.78%)</title><rect x="57.9723%" y="981" width="0.7799%" height="15" fill="rgb(249,51,40)" fg:x="669" fg:w="9"/><text x="58.2223%" y="991.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (9 samples, 0.78%)</title><rect x="57.9723%" y="965" width="0.7799%" height="15" fill="rgb(210,128,45)" fg:x="669" fg:w="9"/><text x="58.2223%" y="975.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (7 samples, 0.61%)</title><rect x="58.1456%" y="949" width="0.6066%" height="15" fill="rgb(224,137,50)" fg:x="671" fg:w="7"/><text x="58.3956%" y="959.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (7 samples, 0.61%)</title><rect x="58.1456%" y="933" width="0.6066%" height="15" fill="rgb(242,15,9)" fg:x="671" fg:w="7"/><text x="58.3956%" y="943.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (7 samples, 0.61%)</title><rect x="58.1456%" y="917" width="0.6066%" height="15" fill="rgb(233,187,41)" fg:x="671" fg:w="7"/><text x="58.3956%" y="927.50"></text></g><g><title>AppKit`-[NSWindow setContentView:] (1 samples, 0.09%)</title><rect x="58.6655%" y="901" width="0.0867%" height="15" fill="rgb(227,2,29)" fg:x="677" fg:w="1"/><text x="58.9155%" y="911.50"></text></g><g><title>AppKit`-[NSView addSubview:] (1 samples, 0.09%)</title><rect x="58.6655%" y="885" width="0.0867%" height="15" fill="rgb(222,70,3)" fg:x="677" fg:w="1"/><text x="58.9155%" y="895.50"></text></g><g><title>AppKit`-[NSView _setSuperview:] (1 samples, 0.09%)</title><rect x="58.6655%" y="869" width="0.0867%" height="15" fill="rgb(213,11,42)" fg:x="677" fg:w="1"/><text x="58.9155%" y="879.50"></text></g><g><title>AppKit`-[NSView _viewDidChangeAppearance:] (1 samples, 0.09%)</title><rect x="58.6655%" y="853" width="0.0867%" height="15" fill="rgb(225,150,9)" fg:x="677" fg:w="1"/><text x="58.9155%" y="863.50"></text></g><g><title>AppKit`-[NSView setNeedsLayout:] (1 samples, 0.09%)</title><rect x="58.6655%" y="837" width="0.0867%" height="15" fill="rgb(230,162,45)" fg:x="677" fg:w="1"/><text x="58.9155%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_timer_heap_resift (1 samples, 0.09%)</title><rect x="58.7522%" y="1125" width="0.0867%" height="15" fill="rgb(222,14,52)" fg:x="678" fg:w="1"/><text x="59.0022%" y="1135.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (6 samples, 0.52%)</title><rect x="58.8388%" y="1125" width="0.5199%" height="15" fill="rgb(254,198,14)" fg:x="679" fg:w="6"/><text x="59.0888%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.17%)</title><rect x="59.3588%" y="1125" width="0.1733%" height="15" fill="rgb(220,217,30)" fg:x="685" fg:w="2"/><text x="59.6088%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (87 samples, 7.54%)</title><rect x="60.0520%" y="1109" width="7.5390%" height="15" fill="rgb(215,146,41)" fg:x="693" fg:w="87"/><text x="60.3020%" y="1119.50">libsystem_..</text></g><g><title>libdispatch.dylib`_dispatch_event_loop_leave_deferred (1 samples, 0.09%)</title><rect x="67.6776%" y="1093" width="0.0867%" height="15" fill="rgb(217,27,36)" fg:x="781" fg:w="1"/><text x="67.9276%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.17%)</title><rect x="67.9376%" y="1061" width="0.1733%" height="15" fill="rgb(219,218,39)" fg:x="784" fg:w="2"/><text x="68.1876%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.17%)</title><rect x="67.9376%" y="1045" width="0.1733%" height="15" fill="rgb(219,4,42)" fg:x="784" fg:w="2"/><text x="68.1876%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (3 samples, 0.26%)</title><rect x="67.9376%" y="1077" width="0.2600%" height="15" fill="rgb(249,119,36)" fg:x="784" fg:w="3"/><text x="68.1876%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`mach_get_times (1 samples, 0.09%)</title><rect x="68.1109%" y="1061" width="0.0867%" height="15" fill="rgb(209,23,33)" fg:x="786" fg:w="1"/><text x="68.3609%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.09%)</title><rect x="68.1109%" y="1045" width="0.0867%" height="15" fill="rgb(211,10,0)" fg:x="786" fg:w="1"/><text x="68.3609%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (1 samples, 0.09%)</title><rect x="68.1976%" y="1077" width="0.0867%" height="15" fill="rgb(208,99,37)" fg:x="787" fg:w="1"/><text x="68.4476%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notification_merge_msg (1 samples, 0.09%)</title><rect x="68.1976%" y="1061" width="0.0867%" height="15" fill="rgb(213,132,31)" fg:x="787" fg:w="1"/><text x="68.4476%" y="1071.50"></text></g><g><title>libdispatch.dylib`libdispatch_internal_protocol_server (1 samples, 0.09%)</title><rect x="68.1976%" y="1045" width="0.0867%" height="15" fill="rgb(243,129,40)" fg:x="787" fg:w="1"/><text x="68.4476%" y="1055.50"></text></g><g><title>libdispatch.dylib`_Xmach_notify_send_possible (1 samples, 0.09%)</title><rect x="68.1976%" y="1029" width="0.0867%" height="15" fill="rgb(210,66,33)" fg:x="787" fg:w="1"/><text x="68.4476%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notify_send_possible (1 samples, 0.09%)</title><rect x="68.1976%" y="1013" width="0.0867%" height="15" fill="rgb(209,189,4)" fg:x="787" fg:w="1"/><text x="68.4476%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notify_merge (1 samples, 0.09%)</title><rect x="68.1976%" y="997" width="0.0867%" height="15" fill="rgb(214,107,37)" fg:x="787" fg:w="1"/><text x="68.4476%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_notify_resume (1 samples, 0.09%)</title><rect x="68.1976%" y="981" width="0.0867%" height="15" fill="rgb(245,88,54)" fg:x="787" fg:w="1"/><text x="68.4476%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_request_notification_trap (1 samples, 0.09%)</title><rect x="68.1976%" y="965" width="0.0867%" height="15" fill="rgb(205,146,20)" fg:x="787" fg:w="1"/><text x="68.4476%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (1 samples, 0.09%)</title><rect x="68.2842%" y="1077" width="0.0867%" height="15" fill="rgb(220,161,25)" fg:x="788" fg:w="1"/><text x="68.5342%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (8 samples, 0.69%)</title><rect x="67.7643%" y="1093" width="0.6932%" height="15" fill="rgb(215,152,15)" fg:x="782" fg:w="8"/><text x="68.0143%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.09%)</title><rect x="68.3709%" y="1077" width="0.0867%" height="15" fill="rgb(233,192,44)" fg:x="789" fg:w="1"/><text x="68.6209%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1 samples, 0.09%)</title><rect x="68.3709%" y="1061" width="0.0867%" height="15" fill="rgb(240,170,46)" fg:x="789" fg:w="1"/><text x="68.6209%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1 samples, 0.09%)</title><rect x="68.4575%" y="1093" width="0.0867%" height="15" fill="rgb(207,104,33)" fg:x="790" fg:w="1"/><text x="68.7075%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.09%)</title><rect x="69.5841%" y="1061" width="0.0867%" height="15" fill="rgb(219,21,39)" fg:x="803" fg:w="1"/><text x="69.8341%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (2 samples, 0.17%)</title><rect x="69.5841%" y="1077" width="0.1733%" height="15" fill="rgb(214,133,29)" fg:x="803" fg:w="2"/><text x="69.8341%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (1 samples, 0.09%)</title><rect x="69.6707%" y="1061" width="0.0867%" height="15" fill="rgb(226,93,6)" fg:x="804" fg:w="1"/><text x="69.9207%" y="1071.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (1 samples, 0.09%)</title><rect x="70.0173%" y="965" width="0.0867%" height="15" fill="rgb(252,222,34)" fg:x="808" fg:w="1"/><text x="70.2673%" y="975.50"></text></g><g><title>libobjc.A.dylib`-[NSObject isEqual:] (1 samples, 0.09%)</title><rect x="70.1040%" y="965" width="0.0867%" height="15" fill="rgb(252,92,48)" fg:x="809" fg:w="1"/><text x="70.3540%" y="975.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (3 samples, 0.26%)</title><rect x="70.0173%" y="981" width="0.2600%" height="15" fill="rgb(245,223,24)" fg:x="808" fg:w="3"/><text x="70.2673%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.09%)</title><rect x="70.1906%" y="965" width="0.0867%" height="15" fill="rgb(205,176,3)" fg:x="810" fg:w="1"/><text x="70.4406%" y="975.50"></text></g><g><title>CoreFoundation`_NSIsNSArray (1 samples, 0.09%)</title><rect x="70.2773%" y="981" width="0.0867%" height="15" fill="rgb(235,151,15)" fg:x="811" fg:w="1"/><text x="70.5273%" y="991.50"></text></g><g><title>libobjc.A.dylib`object_getMethodImplementation (1 samples, 0.09%)</title><rect x="70.2773%" y="965" width="0.0867%" height="15" fill="rgb(237,209,11)" fg:x="811" fg:w="1"/><text x="70.5273%" y="975.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (5 samples, 0.43%)</title><rect x="70.0173%" y="997" width="0.4333%" height="15" fill="rgb(243,227,24)" fg:x="808" fg:w="5"/><text x="70.2673%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="70.3640%" y="981" width="0.0867%" height="15" fill="rgb(239,193,16)" fg:x="812" fg:w="1"/><text x="70.6140%" y="991.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.09%)</title><rect x="70.4506%" y="949" width="0.0867%" height="15" fill="rgb(231,27,9)" fg:x="813" fg:w="1"/><text x="70.7006%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="70.4506%" y="933" width="0.0867%" height="15" fill="rgb(219,169,10)" fg:x="813" fg:w="1"/><text x="70.7006%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (2 samples, 0.17%)</title><rect x="70.4506%" y="997" width="0.1733%" height="15" fill="rgb(244,229,43)" fg:x="813" fg:w="2"/><text x="70.7006%" y="1007.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (2 samples, 0.17%)</title><rect x="70.4506%" y="981" width="0.1733%" height="15" fill="rgb(254,38,20)" fg:x="813" fg:w="2"/><text x="70.7006%" y="991.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (2 samples, 0.17%)</title><rect x="70.4506%" y="965" width="0.1733%" height="15" fill="rgb(250,47,30)" fg:x="813" fg:w="2"/><text x="70.7006%" y="975.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (1 samples, 0.09%)</title><rect x="70.5373%" y="949" width="0.0867%" height="15" fill="rgb(224,124,36)" fg:x="814" fg:w="1"/><text x="70.7873%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (1 samples, 0.09%)</title><rect x="70.5373%" y="933" width="0.0867%" height="15" fill="rgb(246,68,51)" fg:x="814" fg:w="1"/><text x="70.7873%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (1 samples, 0.09%)</title><rect x="70.6239%" y="997" width="0.0867%" height="15" fill="rgb(253,43,49)" fg:x="815" fg:w="1"/><text x="70.8739%" y="1007.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (9 samples, 0.78%)</title><rect x="70.0173%" y="1013" width="0.7799%" height="15" fill="rgb(219,54,36)" fg:x="808" fg:w="9"/><text x="70.2673%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="70.7106%" y="997" width="0.0867%" height="15" fill="rgb(227,133,34)" fg:x="816" fg:w="1"/><text x="70.9606%" y="1007.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (10 samples, 0.87%)</title><rect x="70.0173%" y="1029" width="0.8666%" height="15" fill="rgb(247,227,15)" fg:x="808" fg:w="10"/><text x="70.2673%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="70.7972%" y="1013" width="0.0867%" height="15" fill="rgb(229,96,14)" fg:x="817" fg:w="1"/><text x="71.0472%" y="1023.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (1 samples, 0.09%)</title><rect x="70.8839%" y="1029" width="0.0867%" height="15" fill="rgb(220,79,17)" fg:x="818" fg:w="1"/><text x="71.1339%" y="1039.50"></text></g><g><title>AppKit`__35-[NSDockConnection startConnection]_block_invoke.37 (1 samples, 0.09%)</title><rect x="70.9705%" y="1013" width="0.0867%" height="15" fill="rgb(205,131,53)" fg:x="819" fg:w="1"/><text x="71.2205%" y="1023.50"></text></g><g><title>AppKit`-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (1 samples, 0.09%)</title><rect x="70.9705%" y="997" width="0.0867%" height="15" fill="rgb(209,50,29)" fg:x="819" fg:w="1"/><text x="71.2205%" y="1007.50"></text></g><g><title>SkyLight`SLSessionCopyCurrentDictionary (1 samples, 0.09%)</title><rect x="70.9705%" y="981" width="0.0867%" height="15" fill="rgb(245,86,46)" fg:x="819" fg:w="1"/><text x="71.2205%" y="991.50"></text></g><g><title>SkyLight`SLSCopyCurrentSessionPropertiesInternalBridge (1 samples, 0.09%)</title><rect x="70.9705%" y="965" width="0.0867%" height="15" fill="rgb(235,66,46)" fg:x="819" fg:w="1"/><text x="71.2205%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.09%)</title><rect x="70.9705%" y="949" width="0.0867%" height="15" fill="rgb(232,148,31)" fg:x="819" fg:w="1"/><text x="71.2205%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.09%)</title><rect x="70.9705%" y="933" width="0.0867%" height="15" fill="rgb(217,149,8)" fg:x="819" fg:w="1"/><text x="71.2205%" y="943.50"></text></g><g><title>SkyLight`__loginframework_vtable_block_invoke (1 samples, 0.09%)</title><rect x="70.9705%" y="917" width="0.0867%" height="15" fill="rgb(209,183,11)" fg:x="819" fg:w="1"/><text x="71.2205%" y="927.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.09%)</title><rect x="70.9705%" y="901" width="0.0867%" height="15" fill="rgb(208,55,20)" fg:x="819" fg:w="1"/><text x="71.2205%" y="911.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.09%)</title><rect x="70.9705%" y="885" width="0.0867%" height="15" fill="rgb(218,39,14)" fg:x="819" fg:w="1"/><text x="71.2205%" y="895.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.09%)</title><rect x="70.9705%" y="869" width="0.0867%" height="15" fill="rgb(216,169,33)" fg:x="819" fg:w="1"/><text x="71.2205%" y="879.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.09%)</title><rect x="70.9705%" y="853" width="0.0867%" height="15" fill="rgb(233,80,24)" fg:x="819" fg:w="1"/><text x="71.2205%" y="863.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.09%)</title><rect x="70.9705%" y="837" width="0.0867%" height="15" fill="rgb(213,179,31)" fg:x="819" fg:w="1"/><text x="71.2205%" y="847.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.09%)</title><rect x="70.9705%" y="821" width="0.0867%" height="15" fill="rgb(209,19,5)" fg:x="819" fg:w="1"/><text x="71.2205%" y="831.50"></text></g><g><title>dyld`dyld3::MachOLoaded::trieWalk (1 samples, 0.09%)</title><rect x="70.9705%" y="805" width="0.0867%" height="15" fill="rgb(219,18,35)" fg:x="819" fg:w="1"/><text x="71.2205%" y="815.50"></text></g><g><title>DFRFoundation`__DFRElementUpdate (1 samples, 0.09%)</title><rect x="71.0572%" y="1013" width="0.0867%" height="15" fill="rgb(209,169,16)" fg:x="820" fg:w="1"/><text x="71.3072%" y="1023.50"></text></g><g><title>DFRFoundation`DFR_SessionClientRegisterElement (1 samples, 0.09%)</title><rect x="71.0572%" y="997" width="0.0867%" height="15" fill="rgb(245,90,51)" fg:x="820" fg:w="1"/><text x="71.3072%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="71.0572%" y="981" width="0.0867%" height="15" fill="rgb(220,99,45)" fg:x="820" fg:w="1"/><text x="71.3072%" y="991.50"></text></g><g><title>RunningBoardServices`__27-[RBSConnection _handshake]_block_invoke (1 samples, 0.09%)</title><rect x="71.1438%" y="1013" width="0.0867%" height="15" fill="rgb(249,89,25)" fg:x="821" fg:w="1"/><text x="71.3938%" y="1023.50"></text></g><g><title>RunningBoardServices`-[RBSXPCMessage invokeOnConnection:withReturnClass:error:] (1 samples, 0.09%)</title><rect x="71.1438%" y="997" width="0.0867%" height="15" fill="rgb(239,193,0)" fg:x="821" fg:w="1"/><text x="71.3938%" y="1007.50"></text></g><g><title>RunningBoardServices`-[RBSXPCMessage invokeOnConnection:withReturnCollectionClass:entryClass:error:] (1 samples, 0.09%)</title><rect x="71.1438%" y="981" width="0.0867%" height="15" fill="rgb(231,126,1)" fg:x="821" fg:w="1"/><text x="71.3938%" y="991.50"></text></g><g><title>RunningBoardServices`_BSXPCDecodeObjectForKey (1 samples, 0.09%)</title><rect x="71.1438%" y="965" width="0.0867%" height="15" fill="rgb(243,166,3)" fg:x="821" fg:w="1"/><text x="71.3938%" y="975.50"></text></g><g><title>RunningBoardServices`_BSXPCDecodeObject (1 samples, 0.09%)</title><rect x="71.1438%" y="949" width="0.0867%" height="15" fill="rgb(223,22,34)" fg:x="821" fg:w="1"/><text x="71.3938%" y="959.50"></text></g><g><title>RunningBoardServices`-[RBSHandshakeResponse initWithRBSXPCCoder:] (1 samples, 0.09%)</title><rect x="71.1438%" y="933" width="0.0867%" height="15" fill="rgb(251,52,51)" fg:x="821" fg:w="1"/><text x="71.3938%" y="943.50"></text></g><g><title>RunningBoardServices`_BSXPCDecodeObjectForKey (1 samples, 0.09%)</title><rect x="71.1438%" y="917" width="0.0867%" height="15" fill="rgb(221,165,28)" fg:x="821" fg:w="1"/><text x="71.3938%" y="927.50"></text></g><g><title>RunningBoardServices`_BSXPCDecodeObject (1 samples, 0.09%)</title><rect x="71.1438%" y="901" width="0.0867%" height="15" fill="rgb(218,121,47)" fg:x="821" fg:w="1"/><text x="71.3938%" y="911.50"></text></g><g><title>RunningBoardServices`-[RBSProcessHandle initWithRBSXPCCoder:] (1 samples, 0.09%)</title><rect x="71.1438%" y="885" width="0.0867%" height="15" fill="rgb(209,120,9)" fg:x="821" fg:w="1"/><text x="71.3938%" y="895.50"></text></g><g><title>RunningBoardServices`_BSXPCDecodeObjectForKey (1 samples, 0.09%)</title><rect x="71.1438%" y="869" width="0.0867%" height="15" fill="rgb(236,68,12)" fg:x="821" fg:w="1"/><text x="71.3938%" y="879.50"></text></g><g><title>RunningBoardServices`_BSXPCDecodeObject (1 samples, 0.09%)</title><rect x="71.1438%" y="853" width="0.0867%" height="15" fill="rgb(225,194,26)" fg:x="821" fg:w="1"/><text x="71.3938%" y="863.50"></text></g><g><title>RunningBoardServices`RBSCreateDeserializedStringFromXPCDictionaryWithKey (1 samples, 0.09%)</title><rect x="71.1438%" y="837" width="0.0867%" height="15" fill="rgb(231,84,39)" fg:x="821" fg:w="1"/><text x="71.3938%" y="847.50"></text></g><g><title>CoreFoundation`CFStringCreateWithCString (1 samples, 0.09%)</title><rect x="71.1438%" y="821" width="0.0867%" height="15" fill="rgb(210,11,45)" fg:x="821" fg:w="1"/><text x="71.3938%" y="831.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.09%)</title><rect x="71.1438%" y="805" width="0.0867%" height="15" fill="rgb(224,54,52)" fg:x="821" fg:w="1"/><text x="71.3938%" y="815.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.09%)</title><rect x="71.1438%" y="789" width="0.0867%" height="15" fill="rgb(238,102,14)" fg:x="821" fg:w="1"/><text x="71.3938%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="71.1438%" y="773" width="0.0867%" height="15" fill="rgb(243,160,52)" fg:x="821" fg:w="1"/><text x="71.3938%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.09%)</title><rect x="71.1438%" y="757" width="0.0867%" height="15" fill="rgb(216,114,19)" fg:x="821" fg:w="1"/><text x="71.3938%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.09%)</title><rect x="71.1438%" y="741" width="0.0867%" height="15" fill="rgb(244,166,37)" fg:x="821" fg:w="1"/><text x="71.3938%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="71.1438%" y="725" width="0.0867%" height="15" fill="rgb(246,29,44)" fg:x="821" fg:w="1"/><text x="71.3938%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (4 samples, 0.35%)</title><rect x="70.9705%" y="1029" width="0.3466%" height="15" fill="rgb(215,56,53)" fg:x="819" fg:w="4"/><text x="71.2205%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.09%)</title><rect x="71.2305%" y="1013" width="0.0867%" height="15" fill="rgb(217,60,2)" fg:x="822" fg:w="1"/><text x="71.4805%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (1 samples, 0.09%)</title><rect x="71.2305%" y="997" width="0.0867%" height="15" fill="rgb(207,26,24)" fg:x="822" fg:w="1"/><text x="71.4805%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (1 samples, 0.09%)</title><rect x="71.2305%" y="981" width="0.0867%" height="15" fill="rgb(252,210,15)" fg:x="822" fg:w="1"/><text x="71.4805%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (16 samples, 1.39%)</title><rect x="70.0173%" y="1045" width="1.3865%" height="15" fill="rgb(253,209,26)" fg:x="808" fg:w="16"/><text x="70.2673%" y="1055.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (1 samples, 0.09%)</title><rect x="71.3172%" y="1029" width="0.0867%" height="15" fill="rgb(238,170,14)" fg:x="823" fg:w="1"/><text x="71.5672%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.09%)</title><rect x="71.3172%" y="1013" width="0.0867%" height="15" fill="rgb(216,178,15)" fg:x="823" fg:w="1"/><text x="71.5672%" y="1023.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.09%)</title><rect x="71.3172%" y="997" width="0.0867%" height="15" fill="rgb(250,197,2)" fg:x="823" fg:w="1"/><text x="71.5672%" y="1007.50"></text></g><g><title>IOKit`__IONotificationPortSetDispatchQueue_block_invoke (1 samples, 0.09%)</title><rect x="71.7504%" y="1013" width="0.0867%" height="15" fill="rgb(212,70,42)" fg:x="828" fg:w="1"/><text x="72.0004%" y="1023.50"></text></g><g><title>IOAccelerator`DYLD-STUB$$CFGetTypeID (1 samples, 0.09%)</title><rect x="72.0971%" y="949" width="0.0867%" height="15" fill="rgb(227,213,9)" fg:x="832" fg:w="1"/><text x="72.3471%" y="959.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (62 samples, 5.37%)</title><rect x="72.1837%" y="949" width="5.3726%" height="15" fill="rgb(245,99,25)" fg:x="833" fg:w="62"/><text x="72.4337%" y="959.50">IOAccel..</text></g><g><title>IOKit`IOConnectCallMethod (62 samples, 5.37%)</title><rect x="72.1837%" y="933" width="5.3726%" height="15" fill="rgb(250,82,29)" fg:x="833" fg:w="62"/><text x="72.4337%" y="943.50">IOKit`I..</text></g><g><title>IOKit`io_connect_method (62 samples, 5.37%)</title><rect x="72.1837%" y="917" width="5.3726%" height="15" fill="rgb(241,226,54)" fg:x="833" fg:w="62"/><text x="72.4337%" y="927.50">IOKit`i..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (62 samples, 5.37%)</title><rect x="72.1837%" y="901" width="5.3726%" height="15" fill="rgb(221,99,41)" fg:x="833" fg:w="62"/><text x="72.4337%" y="911.50">libsyst..</text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue submitCommandBuffers:count:] (65 samples, 5.63%)</title><rect x="72.0104%" y="981" width="5.6326%" height="15" fill="rgb(213,90,21)" fg:x="831" fg:w="65"/><text x="72.2604%" y="991.50">AMDRade..</text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (65 samples, 5.63%)</title><rect x="72.0104%" y="965" width="5.6326%" height="15" fill="rgb(205,208,24)" fg:x="831" fg:w="65"/><text x="72.2604%" y="975.50">Metal`-..</text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.09%)</title><rect x="77.5563%" y="949" width="0.0867%" height="15" fill="rgb(246,31,12)" fg:x="895" fg:w="1"/><text x="77.8063%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="77.5563%" y="933" width="0.0867%" height="15" fill="rgb(213,154,6)" fg:x="895" fg:w="1"/><text x="77.8063%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.09%)</title><rect x="77.5563%" y="917" width="0.0867%" height="15" fill="rgb(222,163,29)" fg:x="895" fg:w="1"/><text x="77.8063%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.09%)</title><rect x="77.5563%" y="901" width="0.0867%" height="15" fill="rgb(227,201,8)" fg:x="895" fg:w="1"/><text x="77.8063%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.09%)</title><rect x="77.5563%" y="885" width="0.0867%" height="15" fill="rgb(233,9,32)" fg:x="895" fg:w="1"/><text x="77.8063%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (1 samples, 0.09%)</title><rect x="77.6430%" y="965" width="0.0867%" height="15" fill="rgb(217,54,24)" fg:x="896" fg:w="1"/><text x="77.8930%" y="975.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (2 samples, 0.17%)</title><rect x="77.6430%" y="981" width="0.1733%" height="15" fill="rgb(235,192,0)" fg:x="896" fg:w="2"/><text x="77.8930%" y="991.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (1 samples, 0.09%)</title><rect x="77.7296%" y="965" width="0.0867%" height="15" fill="rgb(235,45,9)" fg:x="897" fg:w="1"/><text x="77.9796%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObjects:count:atIndex:] (1 samples, 0.09%)</title><rect x="77.7296%" y="949" width="0.0867%" height="15" fill="rgb(246,42,40)" fg:x="897" fg:w="1"/><text x="77.9796%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="77.7296%" y="933" width="0.0867%" height="15" fill="rgb(248,111,24)" fg:x="897" fg:w="1"/><text x="77.9796%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.09%)</title><rect x="77.7296%" y="917" width="0.0867%" height="15" fill="rgb(249,65,22)" fg:x="897" fg:w="1"/><text x="77.9796%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.09%)</title><rect x="77.7296%" y="901" width="0.0867%" height="15" fill="rgb(238,111,51)" fg:x="897" fg:w="1"/><text x="77.9796%" y="911.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (1 samples, 0.09%)</title><rect x="77.8163%" y="981" width="0.0867%" height="15" fill="rgb(250,118,22)" fg:x="898" fg:w="1"/><text x="78.0663%" y="991.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (74 samples, 6.41%)</title><rect x="71.9237%" y="997" width="6.4125%" height="15" fill="rgb(234,84,26)" fg:x="830" fg:w="74"/><text x="72.1737%" y="1007.50">Metal`-[..</text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (5 samples, 0.43%)</title><rect x="77.9029%" y="981" width="0.4333%" height="15" fill="rgb(243,172,12)" fg:x="899" fg:w="5"/><text x="78.1529%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (5 samples, 0.43%)</title><rect x="77.9029%" y="965" width="0.4333%" height="15" fill="rgb(236,150,49)" fg:x="899" fg:w="5"/><text x="78.1529%" y="975.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (1 samples, 0.09%)</title><rect x="78.3362%" y="933" width="0.0867%" height="15" fill="rgb(225,197,26)" fg:x="904" fg:w="1"/><text x="78.5862%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM countByEnumeratingWithState:objects:count:] (1 samples, 0.09%)</title><rect x="78.4229%" y="933" width="0.0867%" height="15" fill="rgb(214,17,42)" fg:x="905" fg:w="1"/><text x="78.6729%" y="943.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.09%)</title><rect x="78.5095%" y="805" width="0.0867%" height="15" fill="rgb(224,165,40)" fg:x="906" fg:w="1"/><text x="78.7595%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.09%)</title><rect x="78.5095%" y="789" width="0.0867%" height="15" fill="rgb(246,100,4)" fg:x="906" fg:w="1"/><text x="78.7595%" y="799.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.09%)</title><rect x="78.5095%" y="773" width="0.0867%" height="15" fill="rgb(222,103,0)" fg:x="906" fg:w="1"/><text x="78.7595%" y="783.50"></text></g><g><title>AMDRadeonX6000MTLDriver`CmdBufferMembersRec::~CmdBufferMembersRec (1 samples, 0.09%)</title><rect x="78.5095%" y="757" width="0.0867%" height="15" fill="rgb(227,189,26)" fg:x="906" fg:w="1"/><text x="78.7595%" y="767.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (2 samples, 0.17%)</title><rect x="78.5095%" y="917" width="0.1733%" height="15" fill="rgb(214,202,17)" fg:x="906" fg:w="2"/><text x="78.7595%" y="927.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (2 samples, 0.17%)</title><rect x="78.5095%" y="901" width="0.1733%" height="15" fill="rgb(229,111,3)" fg:x="906" fg:w="2"/><text x="78.7595%" y="911.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (2 samples, 0.17%)</title><rect x="78.5095%" y="885" width="0.1733%" height="15" fill="rgb(229,172,15)" fg:x="906" fg:w="2"/><text x="78.7595%" y="895.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (2 samples, 0.17%)</title><rect x="78.5095%" y="869" width="0.1733%" height="15" fill="rgb(230,224,35)" fg:x="906" fg:w="2"/><text x="78.7595%" y="879.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (2 samples, 0.17%)</title><rect x="78.5095%" y="853" width="0.1733%" height="15" fill="rgb(251,141,6)" fg:x="906" fg:w="2"/><text x="78.7595%" y="863.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.17%)</title><rect x="78.5095%" y="837" width="0.1733%" height="15" fill="rgb(225,208,6)" fg:x="906" fg:w="2"/><text x="78.7595%" y="847.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (2 samples, 0.17%)</title><rect x="78.5095%" y="821" width="0.1733%" height="15" fill="rgb(246,181,16)" fg:x="906" fg:w="2"/><text x="78.7595%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.09%)</title><rect x="78.5962%" y="805" width="0.0867%" height="15" fill="rgb(227,129,36)" fg:x="907" fg:w="1"/><text x="78.8462%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.09%)</title><rect x="78.5962%" y="789" width="0.0867%" height="15" fill="rgb(248,117,24)" fg:x="907" fg:w="1"/><text x="78.8462%" y="799.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (6 samples, 0.52%)</title><rect x="78.3362%" y="981" width="0.5199%" height="15" fill="rgb(214,185,35)" fg:x="904" fg:w="6"/><text x="78.5862%" y="991.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (6 samples, 0.52%)</title><rect x="78.3362%" y="965" width="0.5199%" height="15" fill="rgb(236,150,34)" fg:x="904" fg:w="6"/><text x="78.5862%" y="975.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (6 samples, 0.52%)</title><rect x="78.3362%" y="949" width="0.5199%" height="15" fill="rgb(243,228,27)" fg:x="904" fg:w="6"/><text x="78.5862%" y="959.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didScheduledPresent] (4 samples, 0.35%)</title><rect x="78.5095%" y="933" width="0.3466%" height="15" fill="rgb(245,77,44)" fg:x="906" fg:w="4"/><text x="78.7595%" y="943.50"></text></g><g><title>Metal`__37-[_MTLCommandBuffer presentDrawable:]_block_invoke.291 (2 samples, 0.17%)</title><rect x="78.6828%" y="917" width="0.1733%" height="15" fill="rgb(235,214,42)" fg:x="908" fg:w="2"/><text x="78.9328%" y="927.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (5 samples, 0.43%)</title><rect x="78.8562%" y="981" width="0.4333%" height="15" fill="rgb(221,74,3)" fg:x="910" fg:w="5"/><text x="79.1062%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.35%)</title><rect x="78.9428%" y="965" width="0.3466%" height="15" fill="rgb(206,121,29)" fg:x="911" fg:w="4"/><text x="79.1928%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.35%)</title><rect x="78.9428%" y="949" width="0.3466%" height="15" fill="rgb(249,131,53)" fg:x="911" fg:w="4"/><text x="79.1928%" y="959.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (12 samples, 1.04%)</title><rect x="78.3362%" y="997" width="1.0399%" height="15" fill="rgb(236,170,29)" fg:x="904" fg:w="12"/><text x="78.5862%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="79.2894%" y="981" width="0.0867%" height="15" fill="rgb(247,96,15)" fg:x="915" fg:w="1"/><text x="79.5394%" y="991.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (9 samples, 0.78%)</title><rect x="79.5494%" y="885" width="0.7799%" height="15" fill="rgb(211,210,7)" fg:x="918" fg:w="9"/><text x="79.7994%" y="895.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.78%)</title><rect x="79.5494%" y="869" width="0.7799%" height="15" fill="rgb(240,88,50)" fg:x="918" fg:w="9"/><text x="79.7994%" y="879.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.78%)</title><rect x="79.5494%" y="853" width="0.7799%" height="15" fill="rgb(209,229,26)" fg:x="918" fg:w="9"/><text x="79.7994%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (9 samples, 0.78%)</title><rect x="79.5494%" y="837" width="0.7799%" height="15" fill="rgb(210,68,23)" fg:x="918" fg:w="9"/><text x="79.7994%" y="847.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (1 samples, 0.09%)</title><rect x="80.3293%" y="885" width="0.0867%" height="15" fill="rgb(229,180,13)" fg:x="927" fg:w="1"/><text x="80.5793%" y="895.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.09%)</title><rect x="80.3293%" y="869" width="0.0867%" height="15" fill="rgb(236,53,44)" fg:x="927" fg:w="1"/><text x="80.5793%" y="879.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.09%)</title><rect x="80.3293%" y="853" width="0.0867%" height="15" fill="rgb(244,214,29)" fg:x="927" fg:w="1"/><text x="80.5793%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="80.3293%" y="837" width="0.0867%" height="15" fill="rgb(220,75,29)" fg:x="927" fg:w="1"/><text x="80.5793%" y="847.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (12 samples, 1.04%)</title><rect x="79.4627%" y="901" width="1.0399%" height="15" fill="rgb(214,183,37)" fg:x="917" fg:w="12"/><text x="79.7127%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.09%)</title><rect x="80.4159%" y="885" width="0.0867%" height="15" fill="rgb(239,117,29)" fg:x="928" fg:w="1"/><text x="80.6659%" y="895.50"></text></g><g><title>Metal`MTLDispatchListApply (13 samples, 1.13%)</title><rect x="79.4627%" y="917" width="1.1265%" height="15" fill="rgb(237,171,35)" fg:x="917" fg:w="13"/><text x="79.7127%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.09%)</title><rect x="80.5026%" y="901" width="0.0867%" height="15" fill="rgb(229,178,53)" fg:x="929" fg:w="1"/><text x="80.7526%" y="911.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (15 samples, 1.30%)</title><rect x="79.4627%" y="933" width="1.2998%" height="15" fill="rgb(210,102,19)" fg:x="917" fg:w="15"/><text x="79.7127%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (2 samples, 0.17%)</title><rect x="80.5893%" y="917" width="0.1733%" height="15" fill="rgb(235,127,22)" fg:x="930" fg:w="2"/><text x="80.8393%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (1 samples, 0.09%)</title><rect x="80.6759%" y="901" width="0.0867%" height="15" fill="rgb(244,31,31)" fg:x="931" fg:w="1"/><text x="80.9259%" y="911.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (1 samples, 0.09%)</title><rect x="80.7626%" y="901" width="0.0867%" height="15" fill="rgb(231,43,21)" fg:x="932" fg:w="1"/><text x="81.0126%" y="911.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (2 samples, 0.17%)</title><rect x="80.7626%" y="917" width="0.1733%" height="15" fill="rgb(217,131,35)" fg:x="932" fg:w="2"/><text x="81.0126%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.09%)</title><rect x="80.8492%" y="901" width="0.0867%" height="15" fill="rgb(221,149,4)" fg:x="933" fg:w="1"/><text x="81.0992%" y="911.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (7 samples, 0.61%)</title><rect x="80.7626%" y="933" width="0.6066%" height="15" fill="rgb(232,170,28)" fg:x="932" fg:w="7"/><text x="81.0126%" y="943.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer didCompleteWithStartTime:endTime:error:] (5 samples, 0.43%)</title><rect x="80.9359%" y="917" width="0.4333%" height="15" fill="rgb(238,56,10)" fg:x="934" fg:w="5"/><text x="81.1859%" y="927.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (5 samples, 0.43%)</title><rect x="80.9359%" y="901" width="0.4333%" height="15" fill="rgb(235,196,14)" fg:x="934" fg:w="5"/><text x="81.1859%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (5 samples, 0.43%)</title><rect x="80.9359%" y="885" width="0.4333%" height="15" fill="rgb(216,45,48)" fg:x="934" fg:w="5"/><text x="81.1859%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (5 samples, 0.43%)</title><rect x="80.9359%" y="869" width="0.4333%" height="15" fill="rgb(238,213,17)" fg:x="934" fg:w="5"/><text x="81.1859%" y="879.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (1 samples, 0.09%)</title><rect x="81.3692%" y="933" width="0.0867%" height="15" fill="rgb(212,13,2)" fg:x="939" fg:w="1"/><text x="81.6192%" y="943.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (1 samples, 0.09%)</title><rect x="81.4558%" y="917" width="0.0867%" height="15" fill="rgb(240,114,20)" fg:x="940" fg:w="1"/><text x="81.7058%" y="927.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (1 samples, 0.09%)</title><rect x="81.4558%" y="901" width="0.0867%" height="15" fill="rgb(228,41,40)" fg:x="940" fg:w="1"/><text x="81.7058%" y="911.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.09%)</title><rect x="81.4558%" y="885" width="0.0867%" height="15" fill="rgb(244,132,35)" fg:x="940" fg:w="1"/><text x="81.7058%" y="895.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (1 samples, 0.09%)</title><rect x="81.4558%" y="869" width="0.0867%" height="15" fill="rgb(253,189,4)" fg:x="940" fg:w="1"/><text x="81.7058%" y="879.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (1 samples, 0.09%)</title><rect x="81.4558%" y="853" width="0.0867%" height="15" fill="rgb(224,37,19)" fg:x="940" fg:w="1"/><text x="81.7058%" y="863.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.09%)</title><rect x="81.4558%" y="837" width="0.0867%" height="15" fill="rgb(235,223,18)" fg:x="940" fg:w="1"/><text x="81.7058%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.09%)</title><rect x="81.4558%" y="821" width="0.0867%" height="15" fill="rgb(235,163,25)" fg:x="940" fg:w="1"/><text x="81.7058%" y="831.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.09%)</title><rect x="81.4558%" y="805" width="0.0867%" height="15" fill="rgb(217,145,28)" fg:x="940" fg:w="1"/><text x="81.7058%" y="815.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o40o (1 samples, 0.09%)</title><rect x="81.5425%" y="917" width="0.0867%" height="15" fill="rgb(223,223,32)" fg:x="941" fg:w="1"/><text x="81.7925%" y="927.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_dispose (1 samples, 0.09%)</title><rect x="81.5425%" y="901" width="0.0867%" height="15" fill="rgb(227,189,39)" fg:x="941" fg:w="1"/><text x="81.7925%" y="911.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.26%)</title><rect x="81.4558%" y="933" width="0.2600%" height="15" fill="rgb(248,10,22)" fg:x="940" fg:w="3"/><text x="81.7058%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.09%)</title><rect x="81.6291%" y="917" width="0.0867%" height="15" fill="rgb(248,46,39)" fg:x="942" fg:w="1"/><text x="81.8791%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (1 samples, 0.09%)</title><rect x="81.6291%" y="901" width="0.0867%" height="15" fill="rgb(248,113,48)" fg:x="942" fg:w="1"/><text x="81.8791%" y="911.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (27 samples, 2.34%)</title><rect x="79.4627%" y="949" width="2.3397%" height="15" fill="rgb(245,16,25)" fg:x="917" fg:w="27"/><text x="79.7127%" y="959.50">I..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.09%)</title><rect x="81.7158%" y="933" width="0.0867%" height="15" fill="rgb(249,152,16)" fg:x="943" fg:w="1"/><text x="81.9658%" y="943.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (31 samples, 2.69%)</title><rect x="79.3761%" y="981" width="2.6863%" height="15" fill="rgb(250,16,1)" fg:x="916" fg:w="31"/><text x="79.6261%" y="991.50">IO..</text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (31 samples, 2.69%)</title><rect x="79.3761%" y="965" width="2.6863%" height="15" fill="rgb(249,138,3)" fg:x="916" fg:w="31"/><text x="79.6261%" y="975.50">IO..</text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (3 samples, 0.26%)</title><rect x="81.8024%" y="949" width="0.2600%" height="15" fill="rgb(227,71,41)" fg:x="944" fg:w="3"/><text x="82.0524%" y="959.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (3 samples, 0.26%)</title><rect x="81.8024%" y="933" width="0.2600%" height="15" fill="rgb(209,184,23)" fg:x="944" fg:w="3"/><text x="82.0524%" y="943.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (3 samples, 0.26%)</title><rect x="81.8024%" y="917" width="0.2600%" height="15" fill="rgb(223,215,31)" fg:x="944" fg:w="3"/><text x="82.0524%" y="927.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (2 samples, 0.17%)</title><rect x="81.8891%" y="901" width="0.1733%" height="15" fill="rgb(210,146,28)" fg:x="945" fg:w="2"/><text x="82.1391%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.17%)</title><rect x="81.8891%" y="885" width="0.1733%" height="15" fill="rgb(209,183,41)" fg:x="945" fg:w="2"/><text x="82.1391%" y="895.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (2 samples, 0.17%)</title><rect x="82.0624%" y="981" width="0.1733%" height="15" fill="rgb(209,224,45)" fg:x="947" fg:w="2"/><text x="82.3124%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.09%)</title><rect x="82.2357%" y="981" width="0.0867%" height="15" fill="rgb(224,209,51)" fg:x="949" fg:w="1"/><text x="82.4857%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (133 samples, 11.53%)</title><rect x="71.8371%" y="1013" width="11.5251%" height="15" fill="rgb(223,17,39)" fg:x="829" fg:w="133"/><text x="72.0871%" y="1023.50">libdispatch.dylib..</text></g><g><title>libdispatch.dylib`dispatch_mig_server (46 samples, 3.99%)</title><rect x="79.3761%" y="997" width="3.9861%" height="15" fill="rgb(234,204,37)" fg:x="916" fg:w="46"/><text x="79.6261%" y="1007.50">libd..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (12 samples, 1.04%)</title><rect x="82.3224%" y="981" width="1.0399%" height="15" fill="rgb(236,120,5)" fg:x="950" fg:w="12"/><text x="82.5724%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (136 samples, 11.79%)</title><rect x="71.6638%" y="1029" width="11.7851%" height="15" fill="rgb(248,97,27)" fg:x="827" fg:w="136"/><text x="71.9138%" y="1039.50">libdispatch.dylib..</text></g><g><title>libdispatch.dylib`dispatch_mig_server (1 samples, 0.09%)</title><rect x="83.3622%" y="1013" width="0.0867%" height="15" fill="rgb(240,66,17)" fg:x="962" fg:w="1"/><text x="83.6122%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (2 samples, 0.17%)</title><rect x="83.4489%" y="1029" width="0.1733%" height="15" fill="rgb(210,79,3)" fg:x="963" fg:w="2"/><text x="83.6989%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_dispose (2 samples, 0.17%)</title><rect x="83.4489%" y="1013" width="0.1733%" height="15" fill="rgb(214,176,27)" fg:x="963" fg:w="2"/><text x="83.6989%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.09%)</title><rect x="83.5355%" y="997" width="0.0867%" height="15" fill="rgb(235,185,3)" fg:x="964" fg:w="1"/><text x="83.7855%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (1 samples, 0.09%)</title><rect x="83.6222%" y="1029" width="0.0867%" height="15" fill="rgb(227,24,12)" fg:x="965" fg:w="1"/><text x="83.8722%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (143 samples, 12.39%)</title><rect x="71.4038%" y="1045" width="12.3917%" height="15" fill="rgb(252,169,48)" fg:x="824" fg:w="143"/><text x="71.6538%" y="1055.50">libdispatch.dylib`_..</text></g><g><title>libdispatch.dylib`_dispatch_source_handler_dispose (1 samples, 0.09%)</title><rect x="83.7088%" y="1029" width="0.0867%" height="15" fill="rgb(212,65,1)" fg:x="966" fg:w="1"/><text x="83.9588%" y="1039.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (1 samples, 0.09%)</title><rect x="83.7088%" y="1013" width="0.0867%" height="15" fill="rgb(242,39,24)" fg:x="966" fg:w="1"/><text x="83.9588%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.09%)</title><rect x="83.7088%" y="997" width="0.0867%" height="15" fill="rgb(249,32,23)" fg:x="966" fg:w="1"/><text x="83.9588%" y="1007.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.09%)</title><rect x="83.7088%" y="981" width="0.0867%" height="15" fill="rgb(251,195,23)" fg:x="966" fg:w="1"/><text x="83.9588%" y="991.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (1 samples, 0.09%)</title><rect x="83.7088%" y="965" width="0.0867%" height="15" fill="rgb(236,174,8)" fg:x="966" fg:w="1"/><text x="83.9588%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (162 samples, 14.04%)</title><rect x="69.8440%" y="1061" width="14.0381%" height="15" fill="rgb(220,197,8)" fg:x="806" fg:w="162"/><text x="70.0940%" y="1071.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_os_object_release_internal_n (1 samples, 0.09%)</title><rect x="83.7955%" y="1045" width="0.0867%" height="15" fill="rgb(240,108,37)" fg:x="967" fg:w="1"/><text x="84.0455%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (282 samples, 24.44%)</title><rect x="59.5321%" y="1125" width="24.4367%" height="15" fill="rgb(232,176,24)" fg:x="687" fg:w="282"/><text x="59.7821%" y="1135.50">libsystem_pthread.dylib`start_wqthread</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (189 samples, 16.38%)</title><rect x="67.5910%" y="1109" width="16.3778%" height="15" fill="rgb(243,35,29)" fg:x="780" fg:w="189"/><text x="67.8410%" y="1119.50">libsystem_pthread.dylib`_..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (178 samples, 15.42%)</title><rect x="68.5442%" y="1093" width="15.4246%" height="15" fill="rgb(210,37,18)" fg:x="791" fg:w="178"/><text x="68.7942%" y="1103.50">libdispatch.dylib`_dispa..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (164 samples, 14.21%)</title><rect x="69.7574%" y="1077" width="14.2114%" height="15" fill="rgb(224,184,40)" fg:x="805" fg:w="164"/><text x="70.0074%" y="1087.50">libdispatch.dylib`_dis..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1 samples, 0.09%)</title><rect x="83.8821%" y="1061" width="0.0867%" height="15" fill="rgb(236,39,29)" fg:x="968" fg:w="1"/><text x="84.1321%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (1 samples, 0.09%)</title><rect x="83.9688%" y="1045" width="0.0867%" height="15" fill="rgb(232,48,39)" fg:x="969" fg:w="1"/><text x="84.2188%" y="1055.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (1 samples, 0.09%)</title><rect x="83.9688%" y="1029" width="0.0867%" height="15" fill="rgb(236,34,42)" fg:x="969" fg:w="1"/><text x="84.2188%" y="1039.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (1 samples, 0.09%)</title><rect x="83.9688%" y="1013" width="0.0867%" height="15" fill="rgb(243,106,37)" fg:x="969" fg:w="1"/><text x="84.2188%" y="1023.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (1 samples, 0.09%)</title><rect x="83.9688%" y="997" width="0.0867%" height="15" fill="rgb(218,96,6)" fg:x="969" fg:w="1"/><text x="84.2188%" y="1007.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (1 samples, 0.09%)</title><rect x="83.9688%" y="981" width="0.0867%" height="15" fill="rgb(235,130,12)" fg:x="969" fg:w="1"/><text x="84.2188%" y="991.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (1 samples, 0.09%)</title><rect x="83.9688%" y="965" width="0.0867%" height="15" fill="rgb(231,95,0)" fg:x="969" fg:w="1"/><text x="84.2188%" y="975.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (1 samples, 0.09%)</title><rect x="83.9688%" y="949" width="0.0867%" height="15" fill="rgb(228,12,23)" fg:x="969" fg:w="1"/><text x="84.2188%" y="959.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (1 samples, 0.09%)</title><rect x="83.9688%" y="933" width="0.0867%" height="15" fill="rgb(216,12,1)" fg:x="969" fg:w="1"/><text x="84.2188%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="83.9688%" y="917" width="0.0867%" height="15" fill="rgb(219,59,3)" fg:x="969" fg:w="1"/><text x="84.2188%" y="927.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (1 samples, 0.09%)</title><rect x="84.0555%" y="1045" width="0.0867%" height="15" fill="rgb(215,208,46)" fg:x="970" fg:w="1"/><text x="84.3055%" y="1055.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (1 samples, 0.09%)</title><rect x="84.0555%" y="1029" width="0.0867%" height="15" fill="rgb(254,224,29)" fg:x="970" fg:w="1"/><text x="84.3055%" y="1039.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (1 samples, 0.09%)</title><rect x="84.1421%" y="1029" width="0.0867%" height="15" fill="rgb(232,14,29)" fg:x="971" fg:w="1"/><text x="84.3921%" y="1039.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (1 samples, 0.09%)</title><rect x="84.1421%" y="1013" width="0.0867%" height="15" fill="rgb(208,45,52)" fg:x="971" fg:w="1"/><text x="84.3921%" y="1023.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.09%)</title><rect x="84.1421%" y="997" width="0.0867%" height="15" fill="rgb(234,191,28)" fg:x="971" fg:w="1"/><text x="84.3921%" y="1007.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.09%)</title><rect x="84.1421%" y="981" width="0.0867%" height="15" fill="rgb(244,67,43)" fg:x="971" fg:w="1"/><text x="84.3921%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.09%)</title><rect x="84.1421%" y="965" width="0.0867%" height="15" fill="rgb(236,189,24)" fg:x="971" fg:w="1"/><text x="84.3921%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.09%)</title><rect x="84.1421%" y="949" width="0.0867%" height="15" fill="rgb(239,214,33)" fg:x="971" fg:w="1"/><text x="84.3921%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.09%)</title><rect x="84.1421%" y="933" width="0.0867%" height="15" fill="rgb(226,176,41)" fg:x="971" fg:w="1"/><text x="84.3921%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="84.1421%" y="917" width="0.0867%" height="15" fill="rgb(248,47,8)" fg:x="971" fg:w="1"/><text x="84.3921%" y="927.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (4 samples, 0.35%)</title><rect x="83.9688%" y="1061" width="0.3466%" height="15" fill="rgb(218,81,44)" fg:x="969" fg:w="4"/><text x="84.2188%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (2 samples, 0.17%)</title><rect x="84.1421%" y="1045" width="0.1733%" height="15" fill="rgb(213,98,6)" fg:x="971" fg:w="2"/><text x="84.3921%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.09%)</title><rect x="84.2288%" y="1029" width="0.0867%" height="15" fill="rgb(222,85,22)" fg:x="972" fg:w="1"/><text x="84.4788%" y="1039.50"></text></g><g><title>AppKit`_NSEventThread (5 samples, 0.43%)</title><rect x="83.9688%" y="1093" width="0.4333%" height="15" fill="rgb(239,46,39)" fg:x="969" fg:w="5"/><text x="84.2188%" y="1103.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (5 samples, 0.43%)</title><rect x="83.9688%" y="1077" width="0.4333%" height="15" fill="rgb(237,12,29)" fg:x="969" fg:w="5"/><text x="84.2188%" y="1087.50"></text></g><g><title>libdispatch.dylib`-[OS_voucher release] (1 samples, 0.09%)</title><rect x="84.3154%" y="1061" width="0.0867%" height="15" fill="rgb(214,77,8)" fg:x="973" fg:w="1"/><text x="84.5654%" y="1071.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.35%)</title><rect x="84.4887%" y="1013" width="0.3466%" height="15" fill="rgb(217,168,37)" fg:x="975" fg:w="4"/><text x="84.7387%" y="1023.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.26%)</title><rect x="84.5754%" y="997" width="0.2600%" height="15" fill="rgb(221,217,23)" fg:x="976" fg:w="3"/><text x="84.8254%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.26%)</title><rect x="84.5754%" y="981" width="0.2600%" height="15" fill="rgb(243,229,36)" fg:x="976" fg:w="3"/><text x="84.8254%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.17%)</title><rect x="85.0087%" y="997" width="0.1733%" height="15" fill="rgb(251,163,40)" fg:x="981" fg:w="2"/><text x="85.2587%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (1 samples, 0.09%)</title><rect x="85.1820%" y="997" width="0.0867%" height="15" fill="rgb(237,222,12)" fg:x="983" fg:w="1"/><text x="85.4320%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.09%)</title><rect x="86.1352%" y="981" width="0.0867%" height="15" fill="rgb(248,132,6)" fg:x="994" fg:w="1"/><text x="86.3852%" y="991.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.26%)</title><rect x="86.2218%" y="981" width="0.2600%" height="15" fill="rgb(227,167,50)" fg:x="995" fg:w="3"/><text x="86.4718%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5 samples, 0.43%)</title><rect x="86.4818%" y="965" width="0.4333%" height="15" fill="rgb(242,84,37)" fg:x="998" fg:w="5"/><text x="86.7318%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (5 samples, 0.43%)</title><rect x="86.4818%" y="949" width="0.4333%" height="15" fill="rgb(212,4,50)" fg:x="998" fg:w="5"/><text x="86.7318%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="86.9151%" y="965" width="0.0867%" height="15" fill="rgb(230,228,32)" fg:x="1003" fg:w="1"/><text x="87.1651%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.09%)</title><rect x="86.9151%" y="949" width="0.0867%" height="15" fill="rgb(248,217,23)" fg:x="1003" fg:w="1"/><text x="87.1651%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.35%)</title><rect x="87.0017%" y="965" width="0.3466%" height="15" fill="rgb(238,197,32)" fg:x="1004" fg:w="4"/><text x="87.2517%" y="975.50"></text></g><g><title>wgpu_test`async_executor::Ticker::sleep (12 samples, 1.04%)</title><rect x="86.4818%" y="981" width="1.0399%" height="15" fill="rgb(236,106,1)" fg:x="998" fg:w="12"/><text x="86.7318%" y="991.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::clone_waker (2 samples, 0.17%)</title><rect x="87.3484%" y="965" width="0.1733%" height="15" fill="rgb(219,228,13)" fg:x="1008" fg:w="2"/><text x="87.5984%" y="975.50"></text></g><g><title>wgpu_test`async_executor::Ticker::wake (1 samples, 0.09%)</title><rect x="87.5217%" y="981" width="0.0867%" height="15" fill="rgb(238,30,35)" fg:x="1010" fg:w="1"/><text x="87.7717%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="87.5217%" y="965" width="0.0867%" height="15" fill="rgb(236,70,23)" fg:x="1010" fg:w="1"/><text x="87.7717%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.09%)</title><rect x="87.5217%" y="949" width="0.0867%" height="15" fill="rgb(249,104,48)" fg:x="1010" fg:w="1"/><text x="87.7717%" y="959.50"></text></g><g><title>wgpu_test`async_executor::steal (5 samples, 0.43%)</title><rect x="87.6083%" y="981" width="0.4333%" height="15" fill="rgb(254,117,50)" fg:x="1011" fg:w="5"/><text x="87.8583%" y="991.50"></text></g><g><title>wgpu_test`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (5 samples, 0.43%)</title><rect x="88.0416%" y="981" width="0.4333%" height="15" fill="rgb(223,152,4)" fg:x="1016" fg:w="5"/><text x="88.2916%" y="991.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.26%)</title><rect x="88.4749%" y="981" width="0.2600%" height="15" fill="rgb(245,6,2)" fg:x="1021" fg:w="3"/><text x="88.7249%" y="991.50"></text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="88.7348%" y="981" width="0.0867%" height="15" fill="rgb(249,150,24)" fg:x="1024" fg:w="1"/><text x="88.9848%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (15 samples, 1.30%)</title><rect x="88.9081%" y="949" width="1.2998%" height="15" fill="rgb(228,185,42)" fg:x="1026" fg:w="15"/><text x="89.1581%" y="959.50"></text></g><g><title>wgpu_test`&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (58 samples, 5.03%)</title><rect x="85.2686%" y="997" width="5.0260%" height="15" fill="rgb(226,39,33)" fg:x="984" fg:w="58"/><text x="85.5186%" y="1007.50">wgpu_t..</text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (17 samples, 1.47%)</title><rect x="88.8215%" y="981" width="1.4731%" height="15" fill="rgb(221,166,19)" fg:x="1025" fg:w="17"/><text x="89.0715%" y="991.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (17 samples, 1.47%)</title><rect x="88.8215%" y="965" width="1.4731%" height="15" fill="rgb(209,109,2)" fg:x="1025" fg:w="17"/><text x="89.0715%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.09%)</title><rect x="90.2080%" y="949" width="0.0867%" height="15" fill="rgb(252,216,26)" fg:x="1041" fg:w="1"/><text x="90.4580%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="90.4679%" y="981" width="0.0867%" height="15" fill="rgb(227,173,36)" fg:x="1044" fg:w="1"/><text x="90.7179%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="90.6412%" y="965" width="0.0867%" height="15" fill="rgb(209,90,7)" fg:x="1046" fg:w="1"/><text x="90.8912%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.09%)</title><rect x="90.6412%" y="949" width="0.0867%" height="15" fill="rgb(250,194,11)" fg:x="1046" fg:w="1"/><text x="90.8912%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.26%)</title><rect x="90.7279%" y="949" width="0.2600%" height="15" fill="rgb(220,72,50)" fg:x="1047" fg:w="3"/><text x="90.9779%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.26%)</title><rect x="90.7279%" y="933" width="0.2600%" height="15" fill="rgb(222,106,48)" fg:x="1047" fg:w="3"/><text x="90.9779%" y="943.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.35%)</title><rect x="90.7279%" y="965" width="0.3466%" height="15" fill="rgb(216,220,45)" fg:x="1047" fg:w="4"/><text x="90.9779%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.09%)</title><rect x="90.9879%" y="949" width="0.0867%" height="15" fill="rgb(234,112,18)" fg:x="1050" fg:w="1"/><text x="91.2379%" y="959.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.17%)</title><rect x="91.0745%" y="965" width="0.1733%" height="15" fill="rgb(206,179,9)" fg:x="1051" fg:w="2"/><text x="91.3245%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.09%)</title><rect x="91.3345%" y="949" width="0.0867%" height="15" fill="rgb(215,115,40)" fg:x="1054" fg:w="1"/><text x="91.5845%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.09%)</title><rect x="91.5078%" y="933" width="0.0867%" height="15" fill="rgb(222,69,34)" fg:x="1056" fg:w="1"/><text x="91.7578%" y="943.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.35%)</title><rect x="91.4211%" y="949" width="0.3466%" height="15" fill="rgb(209,161,10)" fg:x="1055" fg:w="4"/><text x="91.6711%" y="959.50"></text></g><g><title>wgpu_test`event_listener::Event::listen (2 samples, 0.17%)</title><rect x="91.5945%" y="933" width="0.1733%" height="15" fill="rgb(217,6,38)" fg:x="1057" fg:w="2"/><text x="91.8445%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.09%)</title><rect x="91.6811%" y="917" width="0.0867%" height="15" fill="rgb(229,229,48)" fg:x="1058" fg:w="1"/><text x="91.9311%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4 samples, 0.35%)</title><rect x="91.7678%" y="933" width="0.3466%" height="15" fill="rgb(225,21,28)" fg:x="1059" fg:w="4"/><text x="92.0178%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (4 samples, 0.35%)</title><rect x="91.7678%" y="917" width="0.3466%" height="15" fill="rgb(206,33,13)" fg:x="1059" fg:w="4"/><text x="92.0178%" y="927.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.09%)</title><rect x="92.1144%" y="933" width="0.0867%" height="15" fill="rgb(242,178,17)" fg:x="1063" fg:w="1"/><text x="92.3644%" y="943.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (2 samples, 0.17%)</title><rect x="92.2010%" y="933" width="0.1733%" height="15" fill="rgb(220,162,5)" fg:x="1064" fg:w="2"/><text x="92.4510%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.17%)</title><rect x="92.2010%" y="917" width="0.1733%" height="15" fill="rgb(210,33,43)" fg:x="1064" fg:w="2"/><text x="92.4510%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.17%)</title><rect x="92.2010%" y="901" width="0.1733%" height="15" fill="rgb(216,116,54)" fg:x="1064" fg:w="2"/><text x="92.4510%" y="911.50"></text></g><g><title>wgpu_test`async_executor::State::notify (2 samples, 0.17%)</title><rect x="92.3744%" y="901" width="0.1733%" height="15" fill="rgb(249,92,24)" fg:x="1066" fg:w="2"/><text x="92.6244%" y="911.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (1 samples, 0.09%)</title><rect x="92.4610%" y="885" width="0.0867%" height="15" fill="rgb(231,189,14)" fg:x="1067" fg:w="1"/><text x="92.7110%" y="895.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.95%)</title><rect x="91.7678%" y="949" width="0.9532%" height="15" fill="rgb(230,8,41)" fg:x="1059" fg:w="11"/><text x="92.0178%" y="959.50"></text></g><g><title>wgpu_test`event_listener::List::notify (4 samples, 0.35%)</title><rect x="92.3744%" y="933" width="0.3466%" height="15" fill="rgb(249,7,27)" fg:x="1066" fg:w="4"/><text x="92.6244%" y="943.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (4 samples, 0.35%)</title><rect x="92.3744%" y="917" width="0.3466%" height="15" fill="rgb(232,86,5)" fg:x="1066" fg:w="4"/><text x="92.6244%" y="927.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (2 samples, 0.17%)</title><rect x="92.5477%" y="901" width="0.1733%" height="15" fill="rgb(224,175,18)" fg:x="1068" fg:w="2"/><text x="92.7977%" y="911.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.09%)</title><rect x="92.6343%" y="885" width="0.0867%" height="15" fill="rgb(220,129,12)" fg:x="1069" fg:w="1"/><text x="92.8843%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="92.6343%" y="869" width="0.0867%" height="15" fill="rgb(210,19,36)" fg:x="1069" fg:w="1"/><text x="92.8843%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.09%)</title><rect x="92.6343%" y="853" width="0.0867%" height="15" fill="rgb(219,96,14)" fg:x="1069" fg:w="1"/><text x="92.8843%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.09%)</title><rect x="92.6343%" y="837" width="0.0867%" height="15" fill="rgb(249,106,1)" fg:x="1069" fg:w="1"/><text x="92.8843%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.09%)</title><rect x="92.6343%" y="821" width="0.0867%" height="15" fill="rgb(249,155,20)" fg:x="1069" fg:w="1"/><text x="92.8843%" y="831.50"></text></g><g><title>wgpu_test`&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="92.7210%" y="949" width="0.1733%" height="15" fill="rgb(244,168,9)" fg:x="1070" fg:w="2"/><text x="92.9710%" y="959.50"></text></g><g><title>wgpu_test`bevy_ecs::event::EventReader&lt;T&gt;::iter (1 samples, 0.09%)</title><rect x="93.1542%" y="933" width="0.0867%" height="15" fill="rgb(216,23,50)" fg:x="1075" fg:w="1"/><text x="93.4042%" y="943.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (2 samples, 0.17%)</title><rect x="93.2409%" y="933" width="0.1733%" height="15" fill="rgb(224,219,20)" fg:x="1076" fg:w="2"/><text x="93.4909%" y="943.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (1 samples, 0.09%)</title><rect x="93.4142%" y="917" width="0.0867%" height="15" fill="rgb(222,156,15)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="927.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (1 samples, 0.09%)</title><rect x="93.4142%" y="901" width="0.0867%" height="15" fill="rgb(231,97,17)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="911.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="93.4142%" y="885" width="0.0867%" height="15" fill="rgb(218,70,48)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="895.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="93.4142%" y="869" width="0.0867%" height="15" fill="rgb(212,196,52)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="879.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="93.4142%" y="853" width="0.0867%" height="15" fill="rgb(243,203,18)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="863.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="93.4142%" y="837" width="0.0867%" height="15" fill="rgb(252,125,41)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="847.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="93.4142%" y="821" width="0.0867%" height="15" fill="rgb(223,180,33)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="831.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="93.4142%" y="805" width="0.0867%" height="15" fill="rgb(254,159,46)" fg:x="1078" fg:w="1"/><text x="93.6642%" y="815.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (1 samples, 0.09%)</title><rect x="93.5875%" y="885" width="0.0867%" height="15" fill="rgb(254,38,10)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="895.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="93.5875%" y="869" width="0.0867%" height="15" fill="rgb(208,217,32)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="879.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.09%)</title><rect x="93.5875%" y="853" width="0.0867%" height="15" fill="rgb(221,120,13)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="863.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="93.5875%" y="837" width="0.0867%" height="15" fill="rgb(246,54,52)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="847.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.09%)</title><rect x="93.5875%" y="821" width="0.0867%" height="15" fill="rgb(242,34,25)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="831.50"></text></g><g><title>IOAccelerator`IOAccelSharedDirtyResourceFaceLevels (1 samples, 0.09%)</title><rect x="93.5875%" y="805" width="0.0867%" height="15" fill="rgb(247,209,9)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="815.50"></text></g><g><title>IOAccelerator`_ioAccelSharedWriteDirtyResourceCommand (1 samples, 0.09%)</title><rect x="93.5875%" y="789" width="0.0867%" height="15" fill="rgb(228,71,26)" fg:x="1080" fg:w="1"/><text x="93.8375%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (1 samples, 0.09%)</title><rect x="93.6742%" y="885" width="0.0867%" height="15" fill="rgb(222,145,49)" fg:x="1081" fg:w="1"/><text x="93.9242%" y="895.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (4 samples, 0.35%)</title><rect x="93.5009%" y="901" width="0.3466%" height="15" fill="rgb(218,121,17)" fg:x="1079" fg:w="4"/><text x="93.7509%" y="911.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.09%)</title><rect x="93.7608%" y="885" width="0.0867%" height="15" fill="rgb(244,50,7)" fg:x="1082" fg:w="1"/><text x="94.0108%" y="895.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (1 samples, 0.09%)</title><rect x="93.7608%" y="869" width="0.0867%" height="15" fill="rgb(246,229,37)" fg:x="1082" fg:w="1"/><text x="94.0108%" y="879.50"></text></g><g><title>CoreFoundation`CFStringConvertNSStringEncodingToEncoding (1 samples, 0.09%)</title><rect x="93.7608%" y="853" width="0.0867%" height="15" fill="rgb(225,18,5)" fg:x="1082" fg:w="1"/><text x="94.0108%" y="863.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBlitCmdEncoder fillBuffer:range:value:] (2 samples, 0.17%)</title><rect x="93.8475%" y="869" width="0.1733%" height="15" fill="rgb(213,204,8)" fg:x="1083" fg:w="2"/><text x="94.0975%" y="879.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_BlitSplitSegment(GFXAAMD_MtlBlitCmdEncoder*, unsigned int, _eAMDMTL_SubmitChannel) (1 samples, 0.09%)</title><rect x="93.9341%" y="853" width="0.0867%" height="15" fill="rgb(238,103,6)" fg:x="1084" fg:w="1"/><text x="94.1841%" y="863.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_BlitBeginSegment(AMD_BlitCmdEncoderMembersRec*, _eAMDMTL_SubmitChannel) (1 samples, 0.09%)</title><rect x="93.9341%" y="837" width="0.0867%" height="15" fill="rgb(222,25,35)" fg:x="1084" fg:w="1"/><text x="94.1841%" y="847.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_BeginSegment(AMD_HwCmdBufInfoRec*, _eAMDMTL_SubmitChannel, unsigned int, void (*)(AMD_HwCmdBufInfoRec*, void*), void (*)(AMD_HwCmdBufInfoRec*, void*), void*, AMD_ResourceBindInfoRec*, unsigned int) (1 samples, 0.09%)</title><rect x="93.9341%" y="821" width="0.0867%" height="15" fill="rgb(213,203,35)" fg:x="1084" fg:w="1"/><text x="94.1841%" y="831.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageBeginSegment (1 samples, 0.09%)</title><rect x="93.9341%" y="805" width="0.0867%" height="15" fill="rgb(221,79,53)" fg:x="1084" fg:w="1"/><text x="94.1841%" y="815.50"></text></g><g><title>IOAccelerator`DYLD-STUB$$memset (1 samples, 0.09%)</title><rect x="93.9341%" y="789" width="0.0867%" height="15" fill="rgb(243,200,35)" fg:x="1084" fg:w="1"/><text x="94.1841%" y="799.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::fill_buffer (3 samples, 0.26%)</title><rect x="93.8475%" y="901" width="0.2600%" height="15" fill="rgb(248,60,25)" fg:x="1083" fg:w="3"/><text x="94.0975%" y="911.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::blit_commands (3 samples, 0.26%)</title><rect x="93.8475%" y="885" width="0.2600%" height="15" fill="rgb(227,53,46)" fg:x="1083" fg:w="3"/><text x="94.0975%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.09%)</title><rect x="94.0208%" y="869" width="0.0867%" height="15" fill="rgb(216,120,32)" fg:x="1085" fg:w="1"/><text x="94.2708%" y="879.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (15 samples, 1.30%)</title><rect x="92.8943%" y="949" width="1.2998%" height="15" fill="rgb(220,134,1)" fg:x="1072" fg:w="15"/><text x="93.1443%" y="959.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.78%)</title><rect x="93.4142%" y="933" width="0.7799%" height="15" fill="rgb(237,168,5)" fg:x="1078" fg:w="9"/><text x="93.6642%" y="943.50"></text></g><g><title>wgpu_test`wgpu_test::world::draw::clear_world (8 samples, 0.69%)</title><rect x="93.5009%" y="917" width="0.6932%" height="15" fill="rgb(231,100,33)" fg:x="1079" fg:w="8"/><text x="93.7509%" y="927.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (1 samples, 0.09%)</title><rect x="94.1075%" y="901" width="0.0867%" height="15" fill="rgb(236,177,47)" fg:x="1086" fg:w="1"/><text x="94.3575%" y="911.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::EncoderState::end (1 samples, 0.09%)</title><rect x="94.1075%" y="885" width="0.0867%" height="15" fill="rgb(235,7,49)" fg:x="1086" fg:w="1"/><text x="94.3575%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.09%)</title><rect x="94.1075%" y="869" width="0.0867%" height="15" fill="rgb(232,119,22)" fg:x="1086" fg:w="1"/><text x="94.3575%" y="879.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 3.38%)</title><rect x="91.2478%" y="965" width="3.3795%" height="15" fill="rgb(254,73,53)" fg:x="1053" fg:w="39"/><text x="91.4978%" y="975.50">wgp..</text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (5 samples, 0.43%)</title><rect x="94.1941%" y="949" width="0.4333%" height="15" fill="rgb(251,35,20)" fg:x="1087" fg:w="5"/><text x="94.4441%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="94.5407%" y="933" width="0.0867%" height="15" fill="rgb(241,119,20)" fg:x="1091" fg:w="1"/><text x="94.7907%" y="943.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="94.6274%" y="965" width="0.0867%" height="15" fill="rgb(207,102,14)" fg:x="1092" fg:w="1"/><text x="94.8774%" y="975.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.09%)</title><rect x="94.7140%" y="965" width="0.0867%" height="15" fill="rgb(248,201,50)" fg:x="1093" fg:w="1"/><text x="94.9640%" y="975.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 4.33%)</title><rect x="90.5546%" y="981" width="4.3328%" height="15" fill="rgb(222,185,44)" fg:x="1045" fg:w="50"/><text x="90.8046%" y="991.50">wgpu_..</text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (1 samples, 0.09%)</title><rect x="94.8007%" y="965" width="0.0867%" height="15" fill="rgb(218,107,18)" fg:x="1094" fg:w="1"/><text x="95.0507%" y="975.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="94.8873%" y="981" width="0.0867%" height="15" fill="rgb(237,177,39)" fg:x="1095" fg:w="1"/><text x="95.1373%" y="991.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (3 samples, 0.26%)</title><rect x="94.9740%" y="981" width="0.2600%" height="15" fill="rgb(246,69,6)" fg:x="1096" fg:w="3"/><text x="95.2240%" y="991.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (3 samples, 0.26%)</title><rect x="94.9740%" y="965" width="0.2600%" height="15" fill="rgb(234,208,37)" fg:x="1096" fg:w="3"/><text x="95.2240%" y="975.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.17%)</title><rect x="95.0607%" y="949" width="0.1733%" height="15" fill="rgb(225,4,6)" fg:x="1097" fg:w="2"/><text x="95.3107%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.09%)</title><rect x="95.1473%" y="933" width="0.0867%" height="15" fill="rgb(233,45,0)" fg:x="1098" fg:w="1"/><text x="95.3973%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.09%)</title><rect x="95.1473%" y="917" width="0.0867%" height="15" fill="rgb(226,136,5)" fg:x="1098" fg:w="1"/><text x="95.3973%" y="927.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="95.2340%" y="981" width="0.0867%" height="15" fill="rgb(211,91,47)" fg:x="1099" fg:w="1"/><text x="95.4840%" y="991.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (126 samples, 10.92%)</title><rect x="84.4887%" y="1029" width="10.9185%" height="15" fill="rgb(242,88,51)" fg:x="975" fg:w="126"/><text x="84.7387%" y="1039.50">wgpu_test`&lt;core:..</text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (122 samples, 10.57%)</title><rect x="84.8354%" y="1013" width="10.5719%" height="15" fill="rgb(230,91,28)" fg:x="979" fg:w="122"/><text x="85.0854%" y="1023.50">wgpu_test`&lt;core..</text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run (59 samples, 5.11%)</title><rect x="90.2946%" y="997" width="5.1127%" height="15" fill="rgb(254,186,29)" fg:x="1042" fg:w="59"/><text x="90.5446%" y="1007.50">wgpu_t..</text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.09%)</title><rect x="95.3206%" y="981" width="0.0867%" height="15" fill="rgb(238,6,4)" fg:x="1100" fg:w="1"/><text x="95.5706%" y="991.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (1 samples, 0.09%)</title><rect x="95.3206%" y="965" width="0.0867%" height="15" fill="rgb(221,151,16)" fg:x="1100" fg:w="1"/><text x="95.5706%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (47 samples, 4.07%)</title><rect x="95.4939%" y="997" width="4.0728%" height="15" fill="rgb(251,143,52)" fg:x="1102" fg:w="47"/><text x="95.7439%" y="1007.50">libs..</text></g><g><title>all (1,154 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(206,90,15)" fg:x="0" fg:w="1154"/><text x="0.2500%" y="1151.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (185 samples, 16.03%)</title><rect x="83.9688%" y="1125" width="16.0312%" height="15" fill="rgb(218,35,8)" fg:x="969" fg:w="185"/><text x="84.2188%" y="1135.50">libsystem_pthread.dylib`t..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (185 samples, 16.03%)</title><rect x="83.9688%" y="1109" width="16.0312%" height="15" fill="rgb(239,215,6)" fg:x="969" fg:w="185"/><text x="84.2188%" y="1119.50">libsystem_pthread.dylib`_..</text></g><g><title>wgpu_test`std::sys::unix::thread::Thread::new::thread_start (180 samples, 15.60%)</title><rect x="84.4021%" y="1093" width="15.5979%" height="15" fill="rgb(245,116,39)" fg:x="974" fg:w="180"/><text x="84.6521%" y="1103.50">wgpu_test`std::sys::unix..</text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (180 samples, 15.60%)</title><rect x="84.4021%" y="1077" width="15.5979%" height="15" fill="rgb(242,65,28)" fg:x="974" fg:w="180"/><text x="84.6521%" y="1087.50">wgpu_test`core::ops::fun..</text></g><g><title>wgpu_test`std::sys_common::backtrace::__rust_begin_short_backtrace (180 samples, 15.60%)</title><rect x="84.4021%" y="1061" width="15.5979%" height="15" fill="rgb(252,132,53)" fg:x="974" fg:w="180"/><text x="84.6521%" y="1071.50">wgpu_test`std::sys_commo..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (180 samples, 15.60%)</title><rect x="84.4021%" y="1045" width="15.5979%" height="15" fill="rgb(224,159,50)" fg:x="974" fg:w="180"/><text x="84.6521%" y="1055.50">wgpu_test`std::thread::l..</text></g><g><title>wgpu_test`parking::Parker::park (53 samples, 4.59%)</title><rect x="95.4073%" y="1029" width="4.5927%" height="15" fill="rgb(224,93,4)" fg:x="1101" fg:w="53"/><text x="95.6573%" y="1039.50">wgpu_..</text></g><g><title>wgpu_test`parking::Inner::park (53 samples, 4.59%)</title><rect x="95.4073%" y="1013" width="4.5927%" height="15" fill="rgb(208,81,34)" fg:x="1101" fg:w="53"/><text x="95.6573%" y="1023.50">wgpu_..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (5 samples, 0.43%)</title><rect x="99.5667%" y="997" width="0.4333%" height="15" fill="rgb(233,92,54)" fg:x="1149" fg:w="5"/><text x="99.8167%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.26%)</title><rect x="99.7400%" y="981" width="0.2600%" height="15" fill="rgb(237,21,14)" fg:x="1151" fg:w="3"/><text x="99.9900%" y="991.50"></text></g></svg></svg>