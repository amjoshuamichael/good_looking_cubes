<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1382" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1365.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1365.00"> </text><svg id="frames" x="10" width="1180" total_samples="2575"><g><title>0x600001e44f80 (1 samples, 0.04%)</title><rect x="0.0000%" y="1317" width="0.0388%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1 samples, 0.04%)</title><rect x="0.0000%" y="1301" width="0.0388%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.04%)</title><rect x="0.0000%" y="1285" width="0.0388%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>wgpu_test`bevy_core::register_math_types (1 samples, 0.04%)</title><rect x="0.0388%" y="1157" width="0.0388%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1167.50"></text></g><g><title>wgpu_test`bevy_app::app::App::register_type (1 samples, 0.04%)</title><rect x="0.0388%" y="1141" width="0.0388%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1151.50"></text></g><g><title>wgpu_test`bevy_reflect::type_registry::TypeRegistry::register (1 samples, 0.04%)</title><rect x="0.0388%" y="1125" width="0.0388%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1135.50"></text></g><g><title>wgpu_test`bevy_reflect::type_registry::TypeRegistry::add_registration (1 samples, 0.04%)</title><rect x="0.0388%" y="1109" width="0.0388%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1119.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="0.0388%" y="1093" width="0.0388%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1103.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="0.0388%" y="1077" width="0.0388%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1087.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="0.0388%" y="1061" width="0.0388%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1071.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="0.0388%" y="1045" width="0.0388%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1055.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="0.0388%" y="1029" width="0.0388%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1039.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="0.0388%" y="1013" width="0.0388%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1023.50"></text></g><g><title>wgpu_test`hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.04%)</title><rect x="0.0388%" y="997" width="0.0388%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.2888%" y="1007.50"></text></g><g><title>wgpu_test`&lt;bevy_core::CorePlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.08%)</title><rect x="0.0388%" y="1173" width="0.0777%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="2"/><text x="0.2888%" y="1183.50"></text></g><g><title>wgpu_test`bevy_core::task_pool_options::DefaultTaskPoolOptions::create_default_pools (1 samples, 0.04%)</title><rect x="0.0777%" y="1157" width="0.0388%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1167.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPoolBuilder::build (1 samples, 0.04%)</title><rect x="0.0777%" y="1141" width="0.0388%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1151.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::new_internal (1 samples, 0.04%)</title><rect x="0.0777%" y="1125" width="0.0388%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1135.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="0.0777%" y="1109" width="0.0388%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1119.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.0777%" y="1093" width="0.0388%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1103.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.0777%" y="1077" width="0.0388%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1087.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.0777%" y="1061" width="0.0388%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1071.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="0.0777%" y="1045" width="0.0388%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1055.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="0.0777%" y="1029" width="0.0388%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1039.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="0.0777%" y="1013" width="0.0388%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1023.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="0.0777%" y="997" width="0.0388%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="0.3277%" y="1007.50"></text></g><g><title>wgpu_test`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.04%)</title><rect x="0.0777%" y="981" width="0.0388%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="1"/><text x="0.3277%" y="991.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::new_internal::_{{closure}} (1 samples, 0.04%)</title><rect x="0.0777%" y="965" width="0.0388%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="1"/><text x="0.3277%" y="975.50"></text></g><g><title>wgpu_test`std::thread::Builder::spawn (1 samples, 0.04%)</title><rect x="0.0777%" y="949" width="0.0388%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="1"/><text x="0.3277%" y="959.50"></text></g><g><title>wgpu_test`std::thread::Builder::spawn_unchecked (1 samples, 0.04%)</title><rect x="0.0777%" y="933" width="0.0388%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="1"/><text x="0.3277%" y="943.50"></text></g><g><title>wgpu_test`std::sys::unix::thread::Thread::new (1 samples, 0.04%)</title><rect x="0.0777%" y="917" width="0.0388%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="1"/><text x="0.3277%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (1 samples, 0.04%)</title><rect x="0.0777%" y="901" width="0.0388%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="1"/><text x="0.3277%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (1 samples, 0.04%)</title><rect x="0.0777%" y="885" width="0.0388%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="1"/><text x="0.3277%" y="895.50"></text></g><g><title>wgpu_test`bevy_app::app::App::add_plugin (3 samples, 0.12%)</title><rect x="0.0388%" y="1189" width="0.1165%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="3"/><text x="0.2888%" y="1199.50"></text></g><g><title>wgpu_test`&lt;bevy_scene::ScenePlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.04%)</title><rect x="0.1165%" y="1173" width="0.0388%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1183.50"></text></g><g><title>wgpu_test`&lt;bevy_app::app::App as bevy_asset::assets::AddAsset&gt;::init_asset_loader (1 samples, 0.04%)</title><rect x="0.1165%" y="1157" width="0.0388%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1167.50"></text></g><g><title>wgpu_test`&lt;bevy_app::app::App as bevy_asset::assets::AddAsset&gt;::add_asset_loader (1 samples, 0.04%)</title><rect x="0.1165%" y="1141" width="0.0388%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1151.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::AssetServer::add_loader (1 samples, 0.04%)</title><rect x="0.1165%" y="1125" width="0.0388%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1135.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="0.1165%" y="1109" width="0.0388%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1119.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="0.1165%" y="1093" width="0.0388%" height="15" fill="rgb(232,182,51)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1103.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="0.1165%" y="1077" width="0.0388%" height="15" fill="rgb(231,60,39)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1087.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="0.1165%" y="1061" width="0.0388%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1071.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="0.1165%" y="1045" width="0.0388%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1055.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="0.1165%" y="1029" width="0.0388%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1039.50"></text></g><g><title>wgpu_test`hashbrown::raw::TableLayout::new (1 samples, 0.04%)</title><rect x="0.1165%" y="1013" width="0.0388%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1023.50"></text></g><g><title>wgpu_test`core::alloc::layout::size_align (1 samples, 0.04%)</title><rect x="0.1165%" y="997" width="0.0388%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="1"/><text x="0.3665%" y="1007.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (1 samples, 0.04%)</title><rect x="0.1553%" y="917" width="0.0388%" height="15" fill="rgb(218,138,4)" fg:x="4" fg:w="1"/><text x="0.4053%" y="927.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (1 samples, 0.04%)</title><rect x="0.1553%" y="901" width="0.0388%" height="15" fill="rgb(250,191,14)" fg:x="4" fg:w="1"/><text x="0.4053%" y="911.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (1 samples, 0.04%)</title><rect x="0.1553%" y="885" width="0.0388%" height="15" fill="rgb(239,60,40)" fg:x="4" fg:w="1"/><text x="0.4053%" y="895.50"></text></g><g><title>CoreFoundation`CFSetGetValue (1 samples, 0.04%)</title><rect x="0.1553%" y="869" width="0.0388%" height="15" fill="rgb(206,27,48)" fg:x="4" fg:w="1"/><text x="0.4053%" y="879.50"></text></g><g><title>CoreFoundation`CFHash (1 samples, 0.04%)</title><rect x="0.1553%" y="853" width="0.0388%" height="15" fill="rgb(225,35,8)" fg:x="4" fg:w="1"/><text x="0.4053%" y="863.50"></text></g><g><title>AppKit`-[NSWindow _internalHandleAppKitDefinedEvent:] (1 samples, 0.04%)</title><rect x="0.1942%" y="885" width="0.0388%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="0.4442%" y="895.50"></text></g><g><title>AppKit`-[NSWindow _windowMoved:] (1 samples, 0.04%)</title><rect x="0.1942%" y="869" width="0.0388%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="0.4442%" y="879.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _noteAllowedResizeDirectionsMayHaveChanged] (1 samples, 0.04%)</title><rect x="0.1942%" y="853" width="0.0388%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="1"/><text x="0.4442%" y="863.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _updateEdgeResizingTrackingAreas] (1 samples, 0.04%)</title><rect x="0.1942%" y="837" width="0.0388%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="1"/><text x="0.4442%" y="847.50"></text></g><g><title>CoreFoundation`-[__NSSetM containsObject:] (1 samples, 0.04%)</title><rect x="0.1942%" y="821" width="0.0388%" height="15" fill="rgb(251,118,11)" fg:x="5" fg:w="1"/><text x="0.4442%" y="831.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (1 samples, 0.04%)</title><rect x="0.1942%" y="805" width="0.0388%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="1"/><text x="0.4442%" y="815.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::key_down (1 samples, 0.04%)</title><rect x="0.2330%" y="885" width="0.0388%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="1"/><text x="0.4830%" y="895.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::get_characters (1 samples, 0.04%)</title><rect x="0.2330%" y="869" width="0.0388%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="1"/><text x="0.4830%" y="879.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="0.2330%" y="853" width="0.0388%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="1"/><text x="0.4830%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="0.2330%" y="837" width="0.0388%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="1"/><text x="0.4830%" y="847.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::mouse_moved (1 samples, 0.04%)</title><rect x="0.2718%" y="885" width="0.0388%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="1"/><text x="0.5218%" y="895.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::mouse_motion (1 samples, 0.04%)</title><rect x="0.2718%" y="869" width="0.0388%" height="15" fill="rgb(210,229,1)" fg:x="7" fg:w="1"/><text x="0.5218%" y="879.50"></text></g><g><title>wgpu_test`objc::runtime::Class::instance_variable (1 samples, 0.04%)</title><rect x="0.2718%" y="853" width="0.0388%" height="15" fill="rgb(222,148,37)" fg:x="7" fg:w="1"/><text x="0.5218%" y="863.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (4 samples, 0.16%)</title><rect x="0.1942%" y="917" width="0.1553%" height="15" fill="rgb(234,67,33)" fg:x="5" fg:w="4"/><text x="0.4442%" y="927.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (4 samples, 0.16%)</title><rect x="0.1942%" y="901" width="0.1553%" height="15" fill="rgb(247,98,35)" fg:x="5" fg:w="4"/><text x="0.4442%" y="911.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::scroll_wheel (1 samples, 0.04%)</title><rect x="0.3107%" y="885" width="0.0388%" height="15" fill="rgb(247,138,52)" fg:x="8" fg:w="1"/><text x="0.5607%" y="895.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::mouse_motion (1 samples, 0.04%)</title><rect x="0.3107%" y="869" width="0.0388%" height="15" fill="rgb(213,79,30)" fg:x="8" fg:w="1"/><text x="0.5607%" y="879.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSView&gt;::convertPoint_fromView_ (1 samples, 0.04%)</title><rect x="0.3107%" y="853" width="0.0388%" height="15" fill="rgb(246,177,23)" fg:x="8" fg:w="1"/><text x="0.5607%" y="863.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="0.3107%" y="837" width="0.0388%" height="15" fill="rgb(230,62,27)" fg:x="8" fg:w="1"/><text x="0.5607%" y="847.50"></text></g><g><title>AppKit`-[NSApplication _deallocHardCore:] (1 samples, 0.04%)</title><rect x="0.3495%" y="805" width="0.0388%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="1"/><text x="0.5995%" y="815.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (1 samples, 0.04%)</title><rect x="0.3495%" y="789" width="0.0388%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="1"/><text x="0.5995%" y="799.50"></text></g><g><title>AppKit`-[NSWindow _closeForTermination] (1 samples, 0.04%)</title><rect x="0.3495%" y="773" width="0.0388%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="1"/><text x="0.5995%" y="783.50"></text></g><g><title>AppKit`-[NSWindow _close] (1 samples, 0.04%)</title><rect x="0.3495%" y="757" width="0.0388%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="1"/><text x="0.5995%" y="767.50"></text></g><g><title>AppKit`-[NSWindow _finishClosingWindow] (1 samples, 0.04%)</title><rect x="0.3495%" y="741" width="0.0388%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="1"/><text x="0.5995%" y="751.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.04%)</title><rect x="0.3495%" y="725" width="0.0388%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="1"/><text x="0.5995%" y="735.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (1 samples, 0.04%)</title><rect x="0.3495%" y="709" width="0.0388%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="1"/><text x="0.5995%" y="719.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (1 samples, 0.04%)</title><rect x="0.3495%" y="693" width="0.0388%" height="15" fill="rgb(209,38,44)" fg:x="9" fg:w="1"/><text x="0.5995%" y="703.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (1 samples, 0.04%)</title><rect x="0.3495%" y="677" width="0.0388%" height="15" fill="rgb(236,212,23)" fg:x="9" fg:w="1"/><text x="0.5995%" y="687.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (1 samples, 0.04%)</title><rect x="0.3495%" y="661" width="0.0388%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="1"/><text x="0.5995%" y="671.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window_delegate::window_will_close (1 samples, 0.04%)</title><rect x="0.3495%" y="645" width="0.0388%" height="15" fill="rgb(211,96,35)" fg:x="9" fg:w="1"/><text x="0.5995%" y="655.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window_delegate::with_state (1 samples, 0.04%)</title><rect x="0.3495%" y="629" width="0.0388%" height="15" fill="rgb(253,215,40)" fg:x="9" fg:w="1"/><text x="0.5995%" y="639.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window_delegate::window_will_close::_{{closure}} (1 samples, 0.04%)</title><rect x="0.3495%" y="613" width="0.0388%" height="15" fill="rgb(211,81,21)" fg:x="9" fg:w="1"/><text x="0.5995%" y="623.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (1 samples, 0.04%)</title><rect x="0.3495%" y="597" width="0.0388%" height="15" fill="rgb(208,190,38)" fg:x="9" fg:w="1"/><text x="0.5995%" y="607.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window_delegate::window_will_close::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="0.3495%" y="581" width="0.0388%" height="15" fill="rgb(235,213,38)" fg:x="9" fg:w="1"/><text x="0.5995%" y="591.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="0.3495%" y="565" width="0.0388%" height="15" fill="rgb(237,122,38)" fg:x="9" fg:w="1"/><text x="0.5995%" y="575.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="0.3495%" y="549" width="0.0388%" height="15" fill="rgb(244,218,35)" fg:x="9" fg:w="1"/><text x="0.5995%" y="559.50"></text></g><g><title>Foundation`_NSSetObjectValueAndNotify (1 samples, 0.04%)</title><rect x="0.3495%" y="533" width="0.0388%" height="15" fill="rgb(240,68,47)" fg:x="9" fg:w="1"/><text x="0.5995%" y="543.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObservingPrivate) _changeValueForKey:key:key:usingBlock:] (1 samples, 0.04%)</title><rect x="0.3495%" y="517" width="0.0388%" height="15" fill="rgb(210,16,53)" fg:x="9" fg:w="1"/><text x="0.5995%" y="527.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObservingPrivate) _changeValueForKeys:count:maybeOldValuesDict:maybeNewValuesDict:usingBlock:] (1 samples, 0.04%)</title><rect x="0.3495%" y="501" width="0.0388%" height="15" fill="rgb(235,124,12)" fg:x="9" fg:w="1"/><text x="0.5995%" y="511.50"></text></g><g><title>Foundation`NSKeyValueDidChange (1 samples, 0.04%)</title><rect x="0.3495%" y="485" width="0.0388%" height="15" fill="rgb(224,169,11)" fg:x="9" fg:w="1"/><text x="0.5995%" y="495.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (1 samples, 0.04%)</title><rect x="0.3495%" y="469" width="0.0388%" height="15" fill="rgb(250,166,2)" fg:x="9" fg:w="1"/><text x="0.5995%" y="479.50"></text></g><g><title>AppKit`-[_NSTouchBarFinderObservation observeValueForKeyPath:ofObject:change:context:] (1 samples, 0.04%)</title><rect x="0.3495%" y="453" width="0.0388%" height="15" fill="rgb(242,216,29)" fg:x="9" fg:w="1"/><text x="0.5995%" y="463.50"></text></g><g><title>AppKit`_NSTouchBarFinderSetNeedsUpdateOnMain (1 samples, 0.04%)</title><rect x="0.3495%" y="437" width="0.0388%" height="15" fill="rgb(230,116,27)" fg:x="9" fg:w="1"/><text x="0.5995%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="0.3495%" y="421" width="0.0388%" height="15" fill="rgb(228,99,48)" fg:x="9" fg:w="1"/><text x="0.5995%" y="431.50"></text></g><g><title>AppKit`routeKeyEquivalent (7 samples, 0.27%)</title><rect x="0.3495%" y="917" width="0.2718%" height="15" fill="rgb(253,11,6)" fg:x="9" fg:w="7"/><text x="0.5995%" y="927.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (7 samples, 0.27%)</title><rect x="0.3495%" y="901" width="0.2718%" height="15" fill="rgb(247,143,39)" fg:x="9" fg:w="7"/><text x="0.5995%" y="911.50"></text></g><g><title>AppKit`-[NSMenu _performActionForItem:atIndex:fromEvent:] (7 samples, 0.27%)</title><rect x="0.3495%" y="885" width="0.2718%" height="15" fill="rgb(236,97,10)" fg:x="9" fg:w="7"/><text x="0.5995%" y="895.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] (7 samples, 0.27%)</title><rect x="0.3495%" y="869" width="0.2718%" height="15" fill="rgb(233,208,19)" fg:x="9" fg:w="7"/><text x="0.5995%" y="879.50"></text></g><g><title>AppKit`-[NSMenuItem _corePerformAction] (7 samples, 0.27%)</title><rect x="0.3495%" y="853" width="0.2718%" height="15" fill="rgb(216,164,2)" fg:x="9" fg:w="7"/><text x="0.5995%" y="863.50"></text></g><g><title>AppKit`-[NSApplication(NSResponder) sendAction:to:from:] (7 samples, 0.27%)</title><rect x="0.3495%" y="837" width="0.2718%" height="15" fill="rgb(220,129,5)" fg:x="9" fg:w="7"/><text x="0.5995%" y="847.50"></text></g><g><title>AppKit`-[NSApplication terminate:] (7 samples, 0.27%)</title><rect x="0.3495%" y="821" width="0.2718%" height="15" fill="rgb(242,17,10)" fg:x="9" fg:w="7"/><text x="0.5995%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__exit (6 samples, 0.23%)</title><rect x="0.3883%" y="805" width="0.2330%" height="15" fill="rgb(242,107,0)" fg:x="10" fg:w="6"/><text x="0.6383%" y="815.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (13 samples, 0.50%)</title><rect x="0.1553%" y="933" width="0.5049%" height="15" fill="rgb(251,28,31)" fg:x="4" fg:w="13"/><text x="0.4053%" y="943.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::view::mouse_entered (1 samples, 0.04%)</title><rect x="0.6214%" y="917" width="0.0388%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="1"/><text x="0.8714%" y="927.50"></text></g><g><title>wgpu_test`objc::message::platform::send_super_unverified (14 samples, 0.54%)</title><rect x="0.1553%" y="965" width="0.5437%" height="15" fill="rgb(215,21,27)" fg:x="4" fg:w="14"/><text x="0.4053%" y="975.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (14 samples, 0.54%)</title><rect x="0.1553%" y="949" width="0.5437%" height="15" fill="rgb(232,23,21)" fg:x="4" fg:w="14"/><text x="0.4053%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="0.6602%" y="933" width="0.0388%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="1"/><text x="0.9102%" y="943.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (15 samples, 0.58%)</title><rect x="0.1553%" y="997" width="0.5825%" height="15" fill="rgb(226,81,46)" fg:x="4" fg:w="15"/><text x="0.4053%" y="1007.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app::send_event (15 samples, 0.58%)</title><rect x="0.1553%" y="981" width="0.5825%" height="15" fill="rgb(247,70,30)" fg:x="4" fg:w="15"/><text x="0.4053%" y="991.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::util::superclass (1 samples, 0.04%)</title><rect x="0.6990%" y="965" width="0.0388%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="1"/><text x="0.9490%" y="975.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="0.6990%" y="949" width="0.0388%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="1"/><text x="0.9490%" y="959.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="0.6990%" y="933" width="0.0388%" height="15" fill="rgb(223,113,26)" fg:x="18" fg:w="1"/><text x="0.9490%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="0.6990%" y="917" width="0.0388%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="1"/><text x="0.9490%" y="927.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (1 samples, 0.04%)</title><rect x="0.7379%" y="997" width="0.0388%" height="15" fill="rgb(241,108,4)" fg:x="19" fg:w="1"/><text x="0.9879%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="0.7379%" y="981" width="0.0388%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="1"/><text x="0.9879%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="0.7379%" y="965" width="0.0388%" height="15" fill="rgb(224,114,35)" fg:x="19" fg:w="1"/><text x="0.9879%" y="975.50"></text></g><g><title>XCTTargetBootstrap`__XCTTargetBootstrap_block_invoke (1 samples, 0.04%)</title><rect x="0.7379%" y="949" width="0.0388%" height="15" fill="rgb(245,159,27)" fg:x="19" fg:w="1"/><text x="0.9879%" y="959.50"></text></g><g><title>XCTTargetBootstrap`XCTPerformBootstrap (1 samples, 0.04%)</title><rect x="0.7379%" y="933" width="0.0388%" height="15" fill="rgb(245,172,44)" fg:x="19" fg:w="1"/><text x="0.9879%" y="943.50"></text></g><g><title>libsystem_notify.dylib`notify_cancel (1 samples, 0.04%)</title><rect x="0.7379%" y="917" width="0.0388%" height="15" fill="rgb(236,23,11)" fg:x="19" fg:w="1"/><text x="0.9879%" y="927.50"></text></g><g><title>libsystem_notify.dylib`0x00007ff80c03dfde (1 samples, 0.04%)</title><rect x="0.7379%" y="901" width="0.0388%" height="15" fill="rgb(205,117,38)" fg:x="19" fg:w="1"/><text x="0.9879%" y="911.50"></text></g><g><title>libsystem_notify.dylib`0x00007ff80c042d73 (1 samples, 0.04%)</title><rect x="0.7379%" y="885" width="0.0388%" height="15" fill="rgb(237,72,25)" fg:x="19" fg:w="1"/><text x="0.9879%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="0.7379%" y="869" width="0.0388%" height="15" fill="rgb(244,70,9)" fg:x="19" fg:w="1"/><text x="0.9879%" y="879.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (1 samples, 0.04%)</title><rect x="0.7767%" y="981" width="0.0388%" height="15" fill="rgb(217,125,39)" fg:x="20" fg:w="1"/><text x="1.0267%" y="991.50"></text></g><g><title>HIToolbox`ReleaseEvent (1 samples, 0.04%)</title><rect x="0.7767%" y="965" width="0.0388%" height="15" fill="rgb(235,36,10)" fg:x="20" fg:w="1"/><text x="1.0267%" y="975.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.04%)</title><rect x="0.7767%" y="949" width="0.0388%" height="15" fill="rgb(251,123,47)" fg:x="20" fg:w="1"/><text x="1.0267%" y="959.50"></text></g><g><title>SkyLight`event_finalize(void const*) (1 samples, 0.04%)</title><rect x="0.7767%" y="933" width="0.0388%" height="15" fill="rgb(221,13,13)" fg:x="20" fg:w="1"/><text x="1.0267%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.04%)</title><rect x="0.7767%" y="917" width="0.0388%" height="15" fill="rgb(238,131,9)" fg:x="20" fg:w="1"/><text x="1.0267%" y="927.50"></text></g><g><title>CoreFoundation`CFXMLParserParse (1 samples, 0.04%)</title><rect x="0.8544%" y="693" width="0.0388%" height="15" fill="rgb(211,50,8)" fg:x="22" fg:w="1"/><text x="1.1044%" y="703.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.04%)</title><rect x="0.8544%" y="677" width="0.0388%" height="15" fill="rgb(245,182,24)" fg:x="22" fg:w="1"/><text x="1.1044%" y="687.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.04%)</title><rect x="0.8544%" y="661" width="0.0388%" height="15" fill="rgb(242,14,37)" fg:x="22" fg:w="1"/><text x="1.1044%" y="671.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.04%)</title><rect x="0.8544%" y="645" width="0.0388%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="1"/><text x="1.1044%" y="655.50"></text></g><g><title>CoreFoundation`parseAttributeValue (1 samples, 0.04%)</title><rect x="0.8544%" y="629" width="0.0388%" height="15" fill="rgb(213,55,15)" fg:x="22" fg:w="1"/><text x="1.1044%" y="639.50"></text></g><g><title>CoreFoundation`CFStringAppendCharacters (1 samples, 0.04%)</title><rect x="0.8544%" y="613" width="0.0388%" height="15" fill="rgb(209,9,3)" fg:x="22" fg:w="1"/><text x="1.1044%" y="623.50"></text></g><g><title>CoreFoundation`__CFStringChangeSizeMultiple (1 samples, 0.04%)</title><rect x="0.8544%" y="597" width="0.0388%" height="15" fill="rgb(230,59,30)" fg:x="22" fg:w="1"/><text x="1.1044%" y="607.50"></text></g><g><title>HIToolbox`CreateMenuFromNib (2 samples, 0.08%)</title><rect x="0.8544%" y="741" width="0.0777%" height="15" fill="rgb(209,121,21)" fg:x="22" fg:w="2"/><text x="1.1044%" y="751.50"></text></g><g><title>HIToolbox`loadNib (2 samples, 0.08%)</title><rect x="0.8544%" y="725" width="0.0777%" height="15" fill="rgb(220,109,13)" fg:x="22" fg:w="2"/><text x="1.1044%" y="735.50"></text></g><g><title>HIToolbox`IBXDecoderLoad (2 samples, 0.08%)</title><rect x="0.8544%" y="709" width="0.0777%" height="15" fill="rgb(232,18,1)" fg:x="22" fg:w="2"/><text x="1.1044%" y="719.50"></text></g><g><title>HIToolbox`IBXObjectElement::instantiate (1 samples, 0.04%)</title><rect x="0.8932%" y="693" width="0.0388%" height="15" fill="rgb(215,41,42)" fg:x="23" fg:w="1"/><text x="1.1432%" y="703.50"></text></g><g><title>HIToolbox`IBCarbonNib::initWithDecoder (1 samples, 0.04%)</title><rect x="0.8932%" y="677" width="0.0388%" height="15" fill="rgb(224,123,36)" fg:x="23" fg:w="1"/><text x="1.1432%" y="687.50"></text></g><g><title>HIToolbox`IBXObjectElement::instantiateChild (1 samples, 0.04%)</title><rect x="0.8932%" y="661" width="0.0388%" height="15" fill="rgb(240,125,3)" fg:x="23" fg:w="1"/><text x="1.1432%" y="671.50"></text></g><g><title>HIToolbox`IBXArrayElement::instantiate (1 samples, 0.04%)</title><rect x="0.8932%" y="645" width="0.0388%" height="15" fill="rgb(205,98,50)" fg:x="23" fg:w="1"/><text x="1.1432%" y="655.50"></text></g><g><title>HIToolbox`IBXObjectElement::instantiate (1 samples, 0.04%)</title><rect x="0.8932%" y="629" width="0.0388%" height="15" fill="rgb(205,185,37)" fg:x="23" fg:w="1"/><text x="1.1432%" y="639.50"></text></g><g><title>CoreFoundation`CFDictionarySetValue (1 samples, 0.04%)</title><rect x="0.8932%" y="613" width="0.0388%" height="15" fill="rgb(238,207,15)" fg:x="23" fg:w="1"/><text x="1.1432%" y="623.50"></text></g><g><title>CoreFoundation`CFBasicHashSetValue (1 samples, 0.04%)</title><rect x="0.8932%" y="597" width="0.0388%" height="15" fill="rgb(213,199,42)" fg:x="23" fg:w="1"/><text x="1.1432%" y="607.50"></text></g><g><title>HIToolbox`GetStandardMenu (3 samples, 0.12%)</title><rect x="0.8544%" y="757" width="0.1165%" height="15" fill="rgb(235,201,11)" fg:x="22" fg:w="3"/><text x="1.1044%" y="767.50"></text></g><g><title>HIToolbox`HLTBLoadPreferredLanguageNib (1 samples, 0.04%)</title><rect x="0.9320%" y="741" width="0.0388%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="1"/><text x="1.1820%" y="751.50"></text></g><g><title>HIToolbox`HLTBGetBundle (1 samples, 0.04%)</title><rect x="0.9320%" y="725" width="0.0388%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="1"/><text x="1.1820%" y="735.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleWithIdentifier (1 samples, 0.04%)</title><rect x="0.9320%" y="709" width="0.0388%" height="15" fill="rgb(243,32,47)" fg:x="24" fg:w="1"/><text x="1.1820%" y="719.50"></text></g><g><title>CoreFoundation`_CFBundleEnsureBundleExistsForImagePath (1 samples, 0.04%)</title><rect x="0.9320%" y="693" width="0.0388%" height="15" fill="rgb(247,202,23)" fg:x="24" fg:w="1"/><text x="1.1820%" y="703.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.04%)</title><rect x="0.9320%" y="677" width="0.0388%" height="15" fill="rgb(219,102,11)" fg:x="24" fg:w="1"/><text x="1.1820%" y="687.50"></text></g><g><title>CoreFoundation`CFBundleGetInfoDictionary (1 samples, 0.04%)</title><rect x="0.9320%" y="661" width="0.0388%" height="15" fill="rgb(243,110,44)" fg:x="24" fg:w="1"/><text x="1.1820%" y="671.50"></text></g><g><title>CoreFoundation`_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.04%)</title><rect x="0.9320%" y="645" width="0.0388%" height="15" fill="rgb(222,74,54)" fg:x="24" fg:w="1"/><text x="1.1820%" y="655.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.04%)</title><rect x="0.9320%" y="629" width="0.0388%" height="15" fill="rgb(216,99,12)" fg:x="24" fg:w="1"/><text x="1.1820%" y="639.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateWithData (1 samples, 0.04%)</title><rect x="0.9320%" y="613" width="0.0388%" height="15" fill="rgb(226,22,26)" fg:x="24" fg:w="1"/><text x="1.1820%" y="623.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.04%)</title><rect x="0.9320%" y="597" width="0.0388%" height="15" fill="rgb(217,163,10)" fg:x="24" fg:w="1"/><text x="1.1820%" y="607.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateFromUTF8Data (1 samples, 0.04%)</title><rect x="0.9320%" y="581" width="0.0388%" height="15" fill="rgb(213,25,53)" fg:x="24" fg:w="1"/><text x="1.1820%" y="591.50"></text></g><g><title>CoreFoundation`parseXMLElement (1 samples, 0.04%)</title><rect x="0.9320%" y="565" width="0.0388%" height="15" fill="rgb(252,105,26)" fg:x="24" fg:w="1"/><text x="1.1820%" y="575.50"></text></g><g><title>CoreFoundation`parseXMLElement (1 samples, 0.04%)</title><rect x="0.9320%" y="549" width="0.0388%" height="15" fill="rgb(220,39,43)" fg:x="24" fg:w="1"/><text x="1.1820%" y="559.50"></text></g><g><title>CoreFoundation`parseXMLElement (1 samples, 0.04%)</title><rect x="0.9320%" y="533" width="0.0388%" height="15" fill="rgb(229,68,48)" fg:x="24" fg:w="1"/><text x="1.1820%" y="543.50"></text></g><g><title>CoreFoundation`parseXMLElement (1 samples, 0.04%)</title><rect x="0.9320%" y="517" width="0.0388%" height="15" fill="rgb(252,8,32)" fg:x="24" fg:w="1"/><text x="1.1820%" y="527.50"></text></g><g><title>CoreFoundation`parseXMLElement (1 samples, 0.04%)</title><rect x="0.9320%" y="501" width="0.0388%" height="15" fill="rgb(223,20,43)" fg:x="24" fg:w="1"/><text x="1.1820%" y="511.50"></text></g><g><title>CoreFoundation`parseStringTag (1 samples, 0.04%)</title><rect x="0.9320%" y="485" width="0.0388%" height="15" fill="rgb(229,81,49)" fg:x="24" fg:w="1"/><text x="1.1820%" y="495.50"></text></g><g><title>CoreFoundation`_createUniqueStringWithUTF8Bytes (1 samples, 0.04%)</title><rect x="0.9320%" y="469" width="0.0388%" height="15" fill="rgb(236,28,36)" fg:x="24" fg:w="1"/><text x="1.1820%" y="479.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.04%)</title><rect x="0.9320%" y="453" width="0.0388%" height="15" fill="rgb(249,185,26)" fg:x="24" fg:w="1"/><text x="1.1820%" y="463.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.04%)</title><rect x="0.9320%" y="437" width="0.0388%" height="15" fill="rgb(249,174,33)" fg:x="24" fg:w="1"/><text x="1.1820%" y="447.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (1 samples, 0.04%)</title><rect x="0.9320%" y="421" width="0.0388%" height="15" fill="rgb(233,201,37)" fg:x="24" fg:w="1"/><text x="1.1820%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.04%)</title><rect x="0.9320%" y="405" width="0.0388%" height="15" fill="rgb(221,78,26)" fg:x="24" fg:w="1"/><text x="1.1820%" y="415.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (5 samples, 0.19%)</title><rect x="0.8155%" y="869" width="0.1942%" height="15" fill="rgb(250,127,30)" fg:x="21" fg:w="5"/><text x="1.0655%" y="879.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (4 samples, 0.16%)</title><rect x="0.8544%" y="853" width="0.1553%" height="15" fill="rgb(230,49,44)" fg:x="22" fg:w="4"/><text x="1.1044%" y="863.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (4 samples, 0.16%)</title><rect x="0.8544%" y="837" width="0.1553%" height="15" fill="rgb(229,67,23)" fg:x="22" fg:w="4"/><text x="1.1044%" y="847.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.16%)</title><rect x="0.8544%" y="821" width="0.1553%" height="15" fill="rgb(249,83,47)" fg:x="22" fg:w="4"/><text x="1.1044%" y="831.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.16%)</title><rect x="0.8544%" y="805" width="0.1553%" height="15" fill="rgb(215,43,3)" fg:x="22" fg:w="4"/><text x="1.1044%" y="815.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (4 samples, 0.16%)</title><rect x="0.8544%" y="789" width="0.1553%" height="15" fill="rgb(238,154,13)" fg:x="22" fg:w="4"/><text x="1.1044%" y="799.50"></text></g><g><title>HIToolbox`AppleMenuHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (4 samples, 0.16%)</title><rect x="0.8544%" y="773" width="0.1553%" height="15" fill="rgb(219,56,2)" fg:x="22" fg:w="4"/><text x="1.1044%" y="783.50"></text></g><g><title>HIToolbox`MacManagerRegisterForNotification (1 samples, 0.04%)</title><rect x="0.9709%" y="757" width="0.0388%" height="15" fill="rgb(233,0,4)" fg:x="25" fg:w="1"/><text x="1.2209%" y="767.50"></text></g><g><title>CoreFoundation`CFNotificationCenterAddObserver (1 samples, 0.04%)</title><rect x="0.9709%" y="741" width="0.0388%" height="15" fill="rgb(235,30,7)" fg:x="25" fg:w="1"/><text x="1.2209%" y="751.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegisterObserver (1 samples, 0.04%)</title><rect x="0.9709%" y="725" width="0.0388%" height="15" fill="rgb(250,79,13)" fg:x="25" fg:w="1"/><text x="1.2209%" y="735.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message (1 samples, 0.04%)</title><rect x="0.9709%" y="709" width="0.0388%" height="15" fill="rgb(211,146,34)" fg:x="25" fg:w="1"/><text x="1.2209%" y="719.50"></text></g><g><title>libxpc.dylib`_xpc_connection_enqueue (1 samples, 0.04%)</title><rect x="0.9709%" y="693" width="0.0388%" height="15" fill="rgb(228,22,38)" fg:x="25" fg:w="1"/><text x="1.2209%" y="703.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result (1 samples, 0.04%)</title><rect x="0.9709%" y="677" width="0.0388%" height="15" fill="rgb(235,168,5)" fg:x="25" fg:w="1"/><text x="1.2209%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.04%)</title><rect x="0.9709%" y="661" width="0.0388%" height="15" fill="rgb(221,155,16)" fg:x="25" fg:w="1"/><text x="1.2209%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.04%)</title><rect x="0.9709%" y="645" width="0.0388%" height="15" fill="rgb(215,215,53)" fg:x="25" fg:w="1"/><text x="1.2209%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.04%)</title><rect x="0.9709%" y="629" width="0.0388%" height="15" fill="rgb(223,4,10)" fg:x="25" fg:w="1"/><text x="1.2209%" y="639.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (6 samples, 0.23%)</title><rect x="0.8155%" y="981" width="0.2330%" height="15" fill="rgb(234,103,6)" fg:x="21" fg:w="6"/><text x="1.0655%" y="991.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (6 samples, 0.23%)</title><rect x="0.8155%" y="965" width="0.2330%" height="15" fill="rgb(227,97,0)" fg:x="21" fg:w="6"/><text x="1.0655%" y="975.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (6 samples, 0.23%)</title><rect x="0.8155%" y="949" width="0.2330%" height="15" fill="rgb(234,150,53)" fg:x="21" fg:w="6"/><text x="1.0655%" y="959.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (6 samples, 0.23%)</title><rect x="0.8155%" y="933" width="0.2330%" height="15" fill="rgb(228,201,54)" fg:x="21" fg:w="6"/><text x="1.0655%" y="943.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (6 samples, 0.23%)</title><rect x="0.8155%" y="917" width="0.2330%" height="15" fill="rgb(222,22,37)" fg:x="21" fg:w="6"/><text x="1.0655%" y="927.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (6 samples, 0.23%)</title><rect x="0.8155%" y="901" width="0.2330%" height="15" fill="rgb(237,53,32)" fg:x="21" fg:w="6"/><text x="1.0655%" y="911.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (6 samples, 0.23%)</title><rect x="0.8155%" y="885" width="0.2330%" height="15" fill="rgb(233,25,53)" fg:x="21" fg:w="6"/><text x="1.0655%" y="895.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (1 samples, 0.04%)</title><rect x="1.0097%" y="869" width="0.0388%" height="15" fill="rgb(210,40,34)" fg:x="26" fg:w="1"/><text x="1.2597%" y="879.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (1 samples, 0.04%)</title><rect x="1.0097%" y="853" width="0.0388%" height="15" fill="rgb(241,220,44)" fg:x="26" fg:w="1"/><text x="1.2597%" y="863.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (1 samples, 0.04%)</title><rect x="1.0097%" y="837" width="0.0388%" height="15" fill="rgb(235,28,35)" fg:x="26" fg:w="1"/><text x="1.2597%" y="847.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (1 samples, 0.04%)</title><rect x="1.0097%" y="821" width="0.0388%" height="15" fill="rgb(210,56,17)" fg:x="26" fg:w="1"/><text x="1.2597%" y="831.50"></text></g><g><title>HIToolbox`GetDataFromUCHRForEvent (1 samples, 0.04%)</title><rect x="1.0097%" y="805" width="0.0388%" height="15" fill="rgb(224,130,29)" fg:x="26" fg:w="1"/><text x="1.2597%" y="815.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.04%)</title><rect x="1.0097%" y="789" width="0.0388%" height="15" fill="rgb(235,212,8)" fg:x="26" fg:w="1"/><text x="1.2597%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="1.0097%" y="773" width="0.0388%" height="15" fill="rgb(223,33,50)" fg:x="26" fg:w="1"/><text x="1.2597%" y="783.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::apply_activation_policy (1 samples, 0.04%)</title><rect x="1.0485%" y="693" width="0.0388%" height="15" fill="rgb(219,149,13)" fg:x="27" fg:w="1"/><text x="1.2985%" y="703.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSApplication&gt;::setActivationPolicy_ (1 samples, 0.04%)</title><rect x="1.0485%" y="677" width="0.0388%" height="15" fill="rgb(250,156,29)" fg:x="27" fg:w="1"/><text x="1.2985%" y="687.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="1.0485%" y="661" width="0.0388%" height="15" fill="rgb(216,193,19)" fg:x="27" fg:w="1"/><text x="1.2985%" y="671.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="1.0485%" y="645" width="0.0388%" height="15" fill="rgb(216,135,14)" fg:x="27" fg:w="1"/><text x="1.2985%" y="655.50"></text></g><g><title>AppKit`-[NSApplication setActivationPolicy:] (1 samples, 0.04%)</title><rect x="1.0485%" y="629" width="0.0388%" height="15" fill="rgb(241,47,5)" fg:x="27" fg:w="1"/><text x="1.2985%" y="639.50"></text></g><g><title>AppKit`+[NSApplicationFunctionRowController sharedApplicationFunctionRowController] (1 samples, 0.04%)</title><rect x="1.0485%" y="613" width="0.0388%" height="15" fill="rgb(233,42,35)" fg:x="27" fg:w="1"/><text x="1.2985%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="1.0485%" y="597" width="0.0388%" height="15" fill="rgb(231,13,6)" fg:x="27" fg:w="1"/><text x="1.2985%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="1.0485%" y="581" width="0.0388%" height="15" fill="rgb(207,181,40)" fg:x="27" fg:w="1"/><text x="1.2985%" y="591.50"></text></g><g><title>AppKit`__76+[NSApplicationFunctionRowController sharedApplicationFunctionRowController]_block_invoke (1 samples, 0.04%)</title><rect x="1.0485%" y="565" width="0.0388%" height="15" fill="rgb(254,173,49)" fg:x="27" fg:w="1"/><text x="1.2985%" y="575.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController init] (1 samples, 0.04%)</title><rect x="1.0485%" y="549" width="0.0388%" height="15" fill="rgb(221,1,38)" fg:x="27" fg:w="1"/><text x="1.2985%" y="559.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.04%)</title><rect x="1.0485%" y="533" width="0.0388%" height="15" fill="rgb(206,124,46)" fg:x="27" fg:w="1"/><text x="1.2985%" y="543.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (1 samples, 0.04%)</title><rect x="1.0485%" y="517" width="0.0388%" height="15" fill="rgb(249,21,11)" fg:x="27" fg:w="1"/><text x="1.2985%" y="527.50"></text></g><g><title>Foundation`_NSKeyValueObservationInfoCreateByAdding (1 samples, 0.04%)</title><rect x="1.0485%" y="501" width="0.0388%" height="15" fill="rgb(222,201,40)" fg:x="27" fg:w="1"/><text x="1.2985%" y="511.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.04%)</title><rect x="1.0485%" y="485" width="0.0388%" height="15" fill="rgb(235,61,29)" fg:x="27" fg:w="1"/><text x="1.2985%" y="495.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.04%)</title><rect x="1.0485%" y="469" width="0.0388%" height="15" fill="rgb(219,207,3)" fg:x="27" fg:w="1"/><text x="1.2985%" y="479.50"></text></g><g><title>libobjc.A.dylib`cache_t::insert(objc_selector*, void (*) (1 samples, 0.04%)</title><rect x="1.0485%" y="453" width="0.0388%" height="15" fill="rgb(222,56,46)" fg:x="27" fg:w="1"/><text x="1.2985%" y="463.50"></text></g><g><title>libobjc.A.dylib`cache_t::allocateBuckets (1 samples, 0.04%)</title><rect x="1.0485%" y="437" width="0.0388%" height="15" fill="rgb(239,76,54)" fg:x="27" fg:w="1"/><text x="1.2985%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="1.0485%" y="421" width="0.0388%" height="15" fill="rgb(231,124,27)" fg:x="27" fg:w="1"/><text x="1.2985%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.04%)</title><rect x="1.0485%" y="405" width="0.0388%" height="15" fill="rgb(249,195,6)" fg:x="27" fg:w="1"/><text x="1.2985%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="1.0485%" y="389" width="0.0388%" height="15" fill="rgb(237,174,47)" fg:x="27" fg:w="1"/><text x="1.2985%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="1.0485%" y="373" width="0.0388%" height="15" fill="rgb(206,201,31)" fg:x="27" fg:w="1"/><text x="1.2985%" y="383.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::window_activation_hack (1 samples, 0.04%)</title><rect x="1.0874%" y="693" width="0.0388%" height="15" fill="rgb(231,57,52)" fg:x="28" fg:w="1"/><text x="1.3374%" y="703.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::makeKeyAndOrderFront_ (1 samples, 0.04%)</title><rect x="1.0874%" y="677" width="0.0388%" height="15" fill="rgb(248,177,22)" fg:x="28" fg:w="1"/><text x="1.3374%" y="687.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="1.0874%" y="661" width="0.0388%" height="15" fill="rgb(215,211,37)" fg:x="28" fg:w="1"/><text x="1.3374%" y="671.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="1.0874%" y="645" width="0.0388%" height="15" fill="rgb(241,128,51)" fg:x="28" fg:w="1"/><text x="1.3374%" y="655.50"></text></g><g><title>AppKit`-[NSWindow makeKeyAndOrderFront:] (1 samples, 0.04%)</title><rect x="1.0874%" y="629" width="0.0388%" height="15" fill="rgb(227,165,31)" fg:x="28" fg:w="1"/><text x="1.3374%" y="639.50"></text></g><g><title>AppKit`-[NSWindow orderWindow:relativeTo:] (1 samples, 0.04%)</title><rect x="1.0874%" y="613" width="0.0388%" height="15" fill="rgb(228,167,24)" fg:x="28" fg:w="1"/><text x="1.3374%" y="623.50"></text></g><g><title>AppKit`-[NSWindow _doOrderWindow:relativeTo:findKey:forCounter:force:isModal:] (1 samples, 0.04%)</title><rect x="1.0874%" y="597" width="0.0388%" height="15" fill="rgb(228,143,12)" fg:x="28" fg:w="1"/><text x="1.3374%" y="607.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindow:relativeTo:findKey:forCounter:force:isModal:] (1 samples, 0.04%)</title><rect x="1.0874%" y="581" width="0.0388%" height="15" fill="rgb(249,149,8)" fg:x="28" fg:w="1"/><text x="1.3374%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindowAboveOrBelow:relativeTo:findKey:forCounter:force:isModal:] (1 samples, 0.04%)</title><rect x="1.0874%" y="565" width="0.0388%" height="15" fill="rgb(243,35,44)" fg:x="28" fg:w="1"/><text x="1.3374%" y="575.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (1 samples, 0.04%)</title><rect x="1.0874%" y="549" width="0.0388%" height="15" fill="rgb(246,89,9)" fg:x="28" fg:w="1"/><text x="1.3374%" y="559.50"></text></g><g><title>AppKit`__89-[NSWindow _reallyDoOrderWindowAboveOrBelow:relativeTo:findKey:forCounter:force:isModal:]_block_invoke (1 samples, 0.04%)</title><rect x="1.0874%" y="533" width="0.0388%" height="15" fill="rgb(233,213,13)" fg:x="28" fg:w="1"/><text x="1.3374%" y="543.50"></text></g><g><title>AppKit`-[_NSCGSWindowOrdering conditionallyOrderGroupFront:withTimestamp:] (1 samples, 0.04%)</title><rect x="1.0874%" y="517" width="0.0388%" height="15" fill="rgb(233,141,41)" fg:x="28" fg:w="1"/><text x="1.3374%" y="527.50"></text></g><g><title>AppKit`_NSCGSWindowOrderingEnqueueFlushIfNeeded (1 samples, 0.04%)</title><rect x="1.0874%" y="501" width="0.0388%" height="15" fill="rgb(239,167,4)" fg:x="28" fg:w="1"/><text x="1.3374%" y="511.50"></text></g><g><title>AppKit`NSCGSTransactionGetObjectForKey (1 samples, 0.04%)</title><rect x="1.0874%" y="485" width="0.0388%" height="15" fill="rgb(209,217,16)" fg:x="28" fg:w="1"/><text x="1.3374%" y="495.50"></text></g><g><title>AppKit`+[_NSCGSTransaction currentTransaction] (1 samples, 0.04%)</title><rect x="1.0874%" y="469" width="0.0388%" height="15" fill="rgb(219,88,35)" fg:x="28" fg:w="1"/><text x="1.3374%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease2 (1 samples, 0.04%)</title><rect x="1.0874%" y="453" width="0.0388%" height="15" fill="rgb(220,193,23)" fg:x="28" fg:w="1"/><text x="1.3374%" y="463.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::add (1 samples, 0.04%)</title><rect x="1.0874%" y="437" width="0.0388%" height="15" fill="rgb(230,90,52)" fg:x="28" fg:w="1"/><text x="1.3374%" y="447.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleWithIdentifier (1 samples, 0.04%)</title><rect x="1.1262%" y="453" width="0.0388%" height="15" fill="rgb(252,106,19)" fg:x="29" fg:w="1"/><text x="1.3762%" y="463.50"></text></g><g><title>CoreFoundation`_CFBundleEnsureBundleExistsForImagePath (1 samples, 0.04%)</title><rect x="1.1262%" y="437" width="0.0388%" height="15" fill="rgb(206,74,20)" fg:x="29" fg:w="1"/><text x="1.3762%" y="447.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.04%)</title><rect x="1.1262%" y="421" width="0.0388%" height="15" fill="rgb(230,138,44)" fg:x="29" fg:w="1"/><text x="1.3762%" y="431.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleVersionForURL (1 samples, 0.04%)</title><rect x="1.1262%" y="405" width="0.0388%" height="15" fill="rgb(235,182,43)" fg:x="29" fg:w="1"/><text x="1.3762%" y="415.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.04%)</title><rect x="1.1262%" y="389" width="0.0388%" height="15" fill="rgb(242,16,51)" fg:x="29" fg:w="1"/><text x="1.3762%" y="399.50"></text></g><g><title>libsystem_c.dylib`readdir$INODE64 (1 samples, 0.04%)</title><rect x="1.1262%" y="373" width="0.0388%" height="15" fill="rgb(248,9,4)" fg:x="29" fg:w="1"/><text x="1.3762%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (1 samples, 0.04%)</title><rect x="1.1262%" y="357" width="0.0388%" height="15" fill="rgb(210,31,22)" fg:x="29" fg:w="1"/><text x="1.3762%" y="367.50"></text></g><g><title>AppKit`_NXKitString (2 samples, 0.08%)</title><rect x="1.1262%" y="517" width="0.0777%" height="15" fill="rgb(239,54,39)" fg:x="29" fg:w="2"/><text x="1.3762%" y="527.50"></text></g><g><title>AppKit`_NSKitBundle (2 samples, 0.08%)</title><rect x="1.1262%" y="501" width="0.0777%" height="15" fill="rgb(230,99,41)" fg:x="29" fg:w="2"/><text x="1.3762%" y="511.50"></text></g><g><title>AppKit`_NSLocateKitBundle (2 samples, 0.08%)</title><rect x="1.1262%" y="485" width="0.0777%" height="15" fill="rgb(253,106,12)" fg:x="29" fg:w="2"/><text x="1.3762%" y="495.50"></text></g><g><title>Foundation`+[NSBundle bundleWithIdentifier:] (2 samples, 0.08%)</title><rect x="1.1262%" y="469" width="0.0777%" height="15" fill="rgb(213,46,41)" fg:x="29" fg:w="2"/><text x="1.3762%" y="479.50"></text></g><g><title>Foundation`+[NSBundle bundleWithPath:] (1 samples, 0.04%)</title><rect x="1.1650%" y="453" width="0.0388%" height="15" fill="rgb(215,133,35)" fg:x="30" fg:w="1"/><text x="1.4150%" y="463.50"></text></g><g><title>Foundation`-[NSBundle initWithPath:] (1 samples, 0.04%)</title><rect x="1.1650%" y="437" width="0.0388%" height="15" fill="rgb(213,28,5)" fg:x="30" fg:w="1"/><text x="1.4150%" y="447.50"></text></g><g><title>Foundation`-[NSString(NSPathUtilities) _stringByResolvingSymlinksInPathUsingCache:] (1 samples, 0.04%)</title><rect x="1.1650%" y="421" width="0.0388%" height="15" fill="rgb(215,77,49)" fg:x="30" fg:w="1"/><text x="1.4150%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`lstat$INODE64 (1 samples, 0.04%)</title><rect x="1.1650%" y="405" width="0.0388%" height="15" fill="rgb(248,100,22)" fg:x="30" fg:w="1"/><text x="1.4150%" y="415.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSApplication&gt;::setMainMenu_ (3 samples, 0.12%)</title><rect x="1.1262%" y="645" width="0.1165%" height="15" fill="rgb(208,67,9)" fg:x="29" fg:w="3"/><text x="1.3762%" y="655.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (3 samples, 0.12%)</title><rect x="1.1262%" y="629" width="0.1165%" height="15" fill="rgb(219,133,21)" fg:x="29" fg:w="3"/><text x="1.3762%" y="639.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (3 samples, 0.12%)</title><rect x="1.1262%" y="613" width="0.1165%" height="15" fill="rgb(246,46,29)" fg:x="29" fg:w="3"/><text x="1.3762%" y="623.50"></text></g><g><title>AppKit`-[NSMenu _setMenuName:] (3 samples, 0.12%)</title><rect x="1.1262%" y="597" width="0.1165%" height="15" fill="rgb(246,185,52)" fg:x="29" fg:w="3"/><text x="1.3762%" y="607.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (3 samples, 0.12%)</title><rect x="1.1262%" y="581" width="0.1165%" height="15" fill="rgb(252,136,11)" fg:x="29" fg:w="3"/><text x="1.3762%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (3 samples, 0.12%)</title><rect x="1.1262%" y="565" width="0.1165%" height="15" fill="rgb(219,138,53)" fg:x="29" fg:w="3"/><text x="1.3762%" y="575.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (3 samples, 0.12%)</title><rect x="1.1262%" y="549" width="0.1165%" height="15" fill="rgb(211,51,23)" fg:x="29" fg:w="3"/><text x="1.3762%" y="559.50"></text></g><g><title>AppKit`_NSFindEditMenu (3 samples, 0.12%)</title><rect x="1.1262%" y="533" width="0.1165%" height="15" fill="rgb(247,221,28)" fg:x="29" fg:w="3"/><text x="1.3762%" y="543.50"></text></g><g><title>Foundation`-[NSBundle localizedStringForKey:value:table:] (1 samples, 0.04%)</title><rect x="1.2039%" y="517" width="0.0388%" height="15" fill="rgb(251,222,45)" fg:x="31" fg:w="1"/><text x="1.4539%" y="527.50"></text></g><g><title>CoreFoundation`CFBundleCopyLocalizedString (1 samples, 0.04%)</title><rect x="1.2039%" y="501" width="0.0388%" height="15" fill="rgb(217,162,53)" fg:x="31" fg:w="1"/><text x="1.4539%" y="511.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption (1 samples, 0.04%)</title><rect x="1.2039%" y="485" width="0.0388%" height="15" fill="rgb(229,93,14)" fg:x="31" fg:w="1"/><text x="1.4539%" y="495.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.04%)</title><rect x="1.2039%" y="469" width="0.0388%" height="15" fill="rgb(209,67,49)" fg:x="31" fg:w="1"/><text x="1.4539%" y="479.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.04%)</title><rect x="1.2039%" y="453" width="0.0388%" height="15" fill="rgb(213,87,29)" fg:x="31" fg:w="1"/><text x="1.4539%" y="463.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.04%)</title><rect x="1.2039%" y="437" width="0.0388%" height="15" fill="rgb(205,151,52)" fg:x="31" fg:w="1"/><text x="1.4539%" y="447.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.04%)</title><rect x="1.2039%" y="421" width="0.0388%" height="15" fill="rgb(253,215,39)" fg:x="31" fg:w="1"/><text x="1.4539%" y="431.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.04%)</title><rect x="1.2039%" y="405" width="0.0388%" height="15" fill="rgb(221,220,41)" fg:x="31" fg:w="1"/><text x="1.4539%" y="415.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.04%)</title><rect x="1.2039%" y="389" width="0.0388%" height="15" fill="rgb(218,133,21)" fg:x="31" fg:w="1"/><text x="1.4539%" y="399.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.04%)</title><rect x="1.2039%" y="373" width="0.0388%" height="15" fill="rgb(221,193,43)" fg:x="31" fg:w="1"/><text x="1.4539%" y="383.50"></text></g><g><title>libsystem_c.dylib`__opendir2$INODE64 (1 samples, 0.04%)</title><rect x="1.2039%" y="357" width="0.0388%" height="15" fill="rgb(240,128,52)" fg:x="31" fg:w="1"/><text x="1.4539%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.04%)</title><rect x="1.2039%" y="341" width="0.0388%" height="15" fill="rgb(253,114,12)" fg:x="31" fg:w="1"/><text x="1.4539%" y="351.50"></text></g><g><title>CoreUI`-[CUICatalog _setPreferredLocalization:] (1 samples, 0.04%)</title><rect x="1.2427%" y="213" width="0.0388%" height="15" fill="rgb(215,223,47)" fg:x="32" fg:w="1"/><text x="1.4927%" y="223.50"></text></g><g><title>Foundation`+[NSLocale(NSLocale_LanguageExtras) mostPreferredLanguageOf:withPreferredLanguages:forUsage:options:] (1 samples, 0.04%)</title><rect x="1.2427%" y="197" width="0.0388%" height="15" fill="rgb(248,225,23)" fg:x="32" fg:w="1"/><text x="1.4927%" y="207.50"></text></g><g><title>Foundation`MatchesBaseLanguageInLanguageIDs (1 samples, 0.04%)</title><rect x="1.2427%" y="181" width="0.0388%" height="15" fill="rgb(250,108,0)" fg:x="32" fg:w="1"/><text x="1.4927%" y="191.50"></text></g><g><title>Foundation`GetBaseLanguageIdentifierFromIdentifier (1 samples, 0.04%)</title><rect x="1.2427%" y="165" width="0.0388%" height="15" fill="rgb(228,208,7)" fg:x="32" fg:w="1"/><text x="1.4927%" y="175.50"></text></g><g><title>CoreFoundation`+[NSLocale canonicalLanguageIdentifierFromString:] (1 samples, 0.04%)</title><rect x="1.2427%" y="149" width="0.0388%" height="15" fill="rgb(244,45,10)" fg:x="32" fg:w="1"/><text x="1.4927%" y="159.50"></text></g><g><title>CoreFoundation`CFLocaleCreateCanonicalLanguageIdentifierFromString (1 samples, 0.04%)</title><rect x="1.2427%" y="133" width="0.0388%" height="15" fill="rgb(207,125,25)" fg:x="32" fg:w="1"/><text x="1.4927%" y="143.50"></text></g><g><title>CoreFoundation`_RemoveSubstringsIfPresent (1 samples, 0.04%)</title><rect x="1.2427%" y="117" width="0.0388%" height="15" fill="rgb(210,195,18)" fg:x="32" fg:w="1"/><text x="1.4927%" y="127.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (2 samples, 0.08%)</title><rect x="1.2427%" y="373" width="0.0777%" height="15" fill="rgb(249,80,12)" fg:x="32" fg:w="2"/><text x="1.4927%" y="383.50"></text></g><g><title>AppKit`catalogWithSystemSymbolName (2 samples, 0.08%)</title><rect x="1.2427%" y="357" width="0.0777%" height="15" fill="rgb(221,65,9)" fg:x="32" fg:w="2"/><text x="1.4927%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.08%)</title><rect x="1.2427%" y="341" width="0.0777%" height="15" fill="rgb(235,49,36)" fg:x="32" fg:w="2"/><text x="1.4927%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.08%)</title><rect x="1.2427%" y="325" width="0.0777%" height="15" fill="rgb(225,32,20)" fg:x="32" fg:w="2"/><text x="1.4927%" y="335.50"></text></g><g><title>AppKit`__NSImageGetCoreGlyphsCatalog_block_invoke (2 samples, 0.08%)</title><rect x="1.2427%" y="309" width="0.0777%" height="15" fill="rgb(215,141,46)" fg:x="32" fg:w="2"/><text x="1.4927%" y="319.50"></text></g><g><title>CoreUI`+[CUICatalog defaultUICatalogForBundle:] (2 samples, 0.08%)</title><rect x="1.2427%" y="293" width="0.0777%" height="15" fill="rgb(250,160,47)" fg:x="32" fg:w="2"/><text x="1.4927%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.08%)</title><rect x="1.2427%" y="277" width="0.0777%" height="15" fill="rgb(216,222,40)" fg:x="32" fg:w="2"/><text x="1.4927%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.08%)</title><rect x="1.2427%" y="261" width="0.0777%" height="15" fill="rgb(234,217,39)" fg:x="32" fg:w="2"/><text x="1.4927%" y="271.50"></text></g><g><title>CoreUI`__40+[CUICatalog defaultUICatalogForBundle:]_block_invoke.11 (2 samples, 0.08%)</title><rect x="1.2427%" y="245" width="0.0777%" height="15" fill="rgb(207,178,40)" fg:x="32" fg:w="2"/><text x="1.4927%" y="255.50"></text></g><g><title>CoreUI`-[CUICatalog initWithName:fromBundle:error:] (2 samples, 0.08%)</title><rect x="1.2427%" y="229" width="0.0777%" height="15" fill="rgb(221,136,13)" fg:x="32" fg:w="2"/><text x="1.4927%" y="239.50"></text></g><g><title>Foundation`-[NSBundle bundleIdentifier] (1 samples, 0.04%)</title><rect x="1.2816%" y="213" width="0.0388%" height="15" fill="rgb(249,199,10)" fg:x="33" fg:w="1"/><text x="1.5316%" y="223.50"></text></g><g><title>Foundation`-[NSBundle infoDictionary] (1 samples, 0.04%)</title><rect x="1.2816%" y="197" width="0.0388%" height="15" fill="rgb(249,222,13)" fg:x="33" fg:w="1"/><text x="1.5316%" y="207.50"></text></g><g><title>Foundation`-[NSBundle _cfBundle] (1 samples, 0.04%)</title><rect x="1.2816%" y="181" width="0.0388%" height="15" fill="rgb(244,185,38)" fg:x="33" fg:w="1"/><text x="1.5316%" y="191.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.04%)</title><rect x="1.2816%" y="165" width="0.0388%" height="15" fill="rgb(236,202,9)" fg:x="33" fg:w="1"/><text x="1.5316%" y="175.50"></text></g><g><title>CoreFoundation`CFBundleGetInfoDictionary (1 samples, 0.04%)</title><rect x="1.2816%" y="149" width="0.0388%" height="15" fill="rgb(250,229,37)" fg:x="33" fg:w="1"/><text x="1.5316%" y="159.50"></text></g><g><title>CoreFoundation`_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.04%)</title><rect x="1.2816%" y="133" width="0.0388%" height="15" fill="rgb(206,174,23)" fg:x="33" fg:w="1"/><text x="1.5316%" y="143.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.04%)</title><rect x="1.2816%" y="117" width="0.0388%" height="15" fill="rgb(211,33,43)" fg:x="33" fg:w="1"/><text x="1.5316%" y="127.50"></text></g><g><title>CoreFoundation`CFURLCreateDataAndPropertiesFromResource (1 samples, 0.04%)</title><rect x="1.2816%" y="101" width="0.0388%" height="15" fill="rgb(245,58,50)" fg:x="33" fg:w="1"/><text x="1.5316%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.04%)</title><rect x="1.2816%" y="85" width="0.0388%" height="15" fill="rgb(244,68,36)" fg:x="33" fg:w="1"/><text x="1.5316%" y="95.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (8 samples, 0.31%)</title><rect x="1.0485%" y="965" width="0.3107%" height="15" fill="rgb(232,229,15)" fg:x="27" fg:w="8"/><text x="1.2985%" y="975.50"></text></g><g><title>AE`aeProcessAppleEvent (8 samples, 0.31%)</title><rect x="1.0485%" y="949" width="0.3107%" height="15" fill="rgb(254,30,23)" fg:x="27" fg:w="8"/><text x="1.2985%" y="959.50"></text></g><g><title>AE`0x00007ff80fd24570 (8 samples, 0.31%)</title><rect x="1.0485%" y="933" width="0.3107%" height="15" fill="rgb(235,160,14)" fg:x="27" fg:w="8"/><text x="1.2985%" y="943.50"></text></g><g><title>AE`0x00007ff80fd245ef (8 samples, 0.31%)</title><rect x="1.0485%" y="917" width="0.3107%" height="15" fill="rgb(212,155,44)" fg:x="27" fg:w="8"/><text x="1.2985%" y="927.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (8 samples, 0.31%)</title><rect x="1.0485%" y="901" width="0.3107%" height="15" fill="rgb(226,2,50)" fg:x="27" fg:w="8"/><text x="1.2985%" y="911.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (8 samples, 0.31%)</title><rect x="1.0485%" y="885" width="0.3107%" height="15" fill="rgb(234,177,6)" fg:x="27" fg:w="8"/><text x="1.2985%" y="895.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (8 samples, 0.31%)</title><rect x="1.0485%" y="869" width="0.3107%" height="15" fill="rgb(217,24,9)" fg:x="27" fg:w="8"/><text x="1.2985%" y="879.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (8 samples, 0.31%)</title><rect x="1.0485%" y="853" width="0.3107%" height="15" fill="rgb(220,13,46)" fg:x="27" fg:w="8"/><text x="1.2985%" y="863.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (8 samples, 0.31%)</title><rect x="1.0485%" y="837" width="0.3107%" height="15" fill="rgb(239,221,27)" fg:x="27" fg:w="8"/><text x="1.2985%" y="847.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (8 samples, 0.31%)</title><rect x="1.0485%" y="821" width="0.3107%" height="15" fill="rgb(222,198,25)" fg:x="27" fg:w="8"/><text x="1.2985%" y="831.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (8 samples, 0.31%)</title><rect x="1.0485%" y="805" width="0.3107%" height="15" fill="rgb(211,99,13)" fg:x="27" fg:w="8"/><text x="1.2985%" y="815.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (8 samples, 0.31%)</title><rect x="1.0485%" y="789" width="0.3107%" height="15" fill="rgb(232,111,31)" fg:x="27" fg:w="8"/><text x="1.2985%" y="799.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (8 samples, 0.31%)</title><rect x="1.0485%" y="773" width="0.3107%" height="15" fill="rgb(245,82,37)" fg:x="27" fg:w="8"/><text x="1.2985%" y="783.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (8 samples, 0.31%)</title><rect x="1.0485%" y="757" width="0.3107%" height="15" fill="rgb(227,149,46)" fg:x="27" fg:w="8"/><text x="1.2985%" y="767.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (8 samples, 0.31%)</title><rect x="1.0485%" y="741" width="0.3107%" height="15" fill="rgb(218,36,50)" fg:x="27" fg:w="8"/><text x="1.2985%" y="751.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_delegate::did_finish_launching (8 samples, 0.31%)</title><rect x="1.0485%" y="725" width="0.3107%" height="15" fill="rgb(226,80,48)" fg:x="27" fg:w="8"/><text x="1.2985%" y="735.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::launched (8 samples, 0.31%)</title><rect x="1.0485%" y="709" width="0.3107%" height="15" fill="rgb(238,224,15)" fg:x="27" fg:w="8"/><text x="1.2985%" y="719.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::menu::initialize (6 samples, 0.23%)</title><rect x="1.1262%" y="693" width="0.2330%" height="15" fill="rgb(241,136,10)" fg:x="29" fg:w="6"/><text x="1.3762%" y="703.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.23%)</title><rect x="1.1262%" y="677" width="0.2330%" height="15" fill="rgb(208,32,45)" fg:x="29" fg:w="6"/><text x="1.3762%" y="687.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::menu::initialize::_{{closure}} (6 samples, 0.23%)</title><rect x="1.1262%" y="661" width="0.2330%" height="15" fill="rgb(207,135,9)" fg:x="29" fg:w="6"/><text x="1.3762%" y="671.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSMenu&gt;::addItem_ (3 samples, 0.12%)</title><rect x="1.2427%" y="645" width="0.1165%" height="15" fill="rgb(206,86,44)" fg:x="32" fg:w="3"/><text x="1.4927%" y="655.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (3 samples, 0.12%)</title><rect x="1.2427%" y="629" width="0.1165%" height="15" fill="rgb(245,177,15)" fg:x="32" fg:w="3"/><text x="1.4927%" y="639.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (3 samples, 0.12%)</title><rect x="1.2427%" y="613" width="0.1165%" height="15" fill="rgb(206,64,50)" fg:x="32" fg:w="3"/><text x="1.4927%" y="623.50"></text></g><g><title>AppKit`-[NSMenu insertItem:atIndex:] (3 samples, 0.12%)</title><rect x="1.2427%" y="597" width="0.1165%" height="15" fill="rgb(234,36,40)" fg:x="32" fg:w="3"/><text x="1.4927%" y="607.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (3 samples, 0.12%)</title><rect x="1.2427%" y="581" width="0.1165%" height="15" fill="rgb(213,64,8)" fg:x="32" fg:w="3"/><text x="1.4927%" y="591.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (3 samples, 0.12%)</title><rect x="1.2427%" y="565" width="0.1165%" height="15" fill="rgb(210,75,36)" fg:x="32" fg:w="3"/><text x="1.4927%" y="575.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (3 samples, 0.12%)</title><rect x="1.2427%" y="549" width="0.1165%" height="15" fill="rgb(229,88,21)" fg:x="32" fg:w="3"/><text x="1.4927%" y="559.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (3 samples, 0.12%)</title><rect x="1.2427%" y="533" width="0.1165%" height="15" fill="rgb(252,204,47)" fg:x="32" fg:w="3"/><text x="1.4927%" y="543.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (3 samples, 0.12%)</title><rect x="1.2427%" y="517" width="0.1165%" height="15" fill="rgb(208,77,27)" fg:x="32" fg:w="3"/><text x="1.4927%" y="527.50"></text></g><g><title>Foundation`-[__NSObserver _doit:] (3 samples, 0.12%)</title><rect x="1.2427%" y="501" width="0.1165%" height="15" fill="rgb(221,76,26)" fg:x="32" fg:w="3"/><text x="1.4927%" y="511.50"></text></g><g><title>AppKit`___NSMenuUpdateKeyboardAwareShortcuts_block_invoke_3 (3 samples, 0.12%)</title><rect x="1.2427%" y="485" width="0.1165%" height="15" fill="rgb(225,139,18)" fg:x="32" fg:w="3"/><text x="1.4927%" y="495.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) shouldMenuItemBeUpdatedDueToNotification] (3 samples, 0.12%)</title><rect x="1.2427%" y="469" width="0.1165%" height="15" fill="rgb(230,137,11)" fg:x="32" fg:w="3"/><text x="1.4927%" y="479.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) menuItemOrSubmenuNeedsShortcutLocalization] (3 samples, 0.12%)</title><rect x="1.2427%" y="453" width="0.1165%" height="15" fill="rgb(212,28,1)" fg:x="32" fg:w="3"/><text x="1.4927%" y="463.50"></text></g><g><title>Foundation`_NSFaultInObject (3 samples, 0.12%)</title><rect x="1.2427%" y="437" width="0.1165%" height="15" fill="rgb(248,164,17)" fg:x="32" fg:w="3"/><text x="1.4927%" y="447.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (3 samples, 0.12%)</title><rect x="1.2427%" y="421" width="0.1165%" height="15" fill="rgb(222,171,42)" fg:x="32" fg:w="3"/><text x="1.4927%" y="431.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (3 samples, 0.12%)</title><rect x="1.2427%" y="405" width="0.1165%" height="15" fill="rgb(243,84,45)" fg:x="32" fg:w="3"/><text x="1.4927%" y="415.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (3 samples, 0.12%)</title><rect x="1.2427%" y="389" width="0.1165%" height="15" fill="rgb(252,49,23)" fg:x="32" fg:w="3"/><text x="1.4927%" y="399.50"></text></g><g><title>AppKit`+[NSImage(NSSystemSymbols) _imageWithSystemSymbolName:catalog:createdWithCompatibilityImageName:] (1 samples, 0.04%)</title><rect x="1.3204%" y="373" width="0.0388%" height="15" fill="rgb(215,19,7)" fg:x="34" fg:w="1"/><text x="1.5704%" y="383.50"></text></g><g><title>AppKit`-[NSImage bestRepresentationForHints:] (1 samples, 0.04%)</title><rect x="1.3204%" y="357" width="0.0388%" height="15" fill="rgb(238,81,41)" fg:x="34" fg:w="1"/><text x="1.5704%" y="367.50"></text></g><g><title>AppKit`__38-[NSImage bestRepresentationForHints:]_block_invoke (1 samples, 0.04%)</title><rect x="1.3204%" y="341" width="0.0388%" height="15" fill="rgb(210,199,37)" fg:x="34" fg:w="1"/><text x="1.5704%" y="351.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider bestRepresentationForImage:hints:] (1 samples, 0.04%)</title><rect x="1.3204%" y="325" width="0.0388%" height="15" fill="rgb(244,192,49)" fg:x="34" fg:w="1"/><text x="1.5704%" y="335.50"></text></g><g><title>AppKit`-[_NSSimpleLRUCache objectForKey:creationBlock:] (1 samples, 0.04%)</title><rect x="1.3204%" y="309" width="0.0388%" height="15" fill="rgb(226,211,11)" fg:x="34" fg:w="1"/><text x="1.5704%" y="319.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider _bestRepresentationForImage:hints:] (1 samples, 0.04%)</title><rect x="1.3204%" y="293" width="0.0388%" height="15" fill="rgb(236,162,54)" fg:x="34" fg:w="1"/><text x="1.5704%" y="303.50"></text></g><g><title>CoreUI`-[CUINamedVectorGlyph contentBounds] (1 samples, 0.04%)</title><rect x="1.3204%" y="277" width="0.0388%" height="15" fill="rgb(220,229,9)" fg:x="34" fg:w="1"/><text x="1.5704%" y="287.50"></text></g><g><title>CoreUI`-[CUINamedVectorGlyph _performWithLockedRenditions:] (1 samples, 0.04%)</title><rect x="1.3204%" y="261" width="0.0388%" height="15" fill="rgb(250,87,22)" fg:x="34" fg:w="1"/><text x="1.5704%" y="271.50"></text></g><g><title>CoreUI`__36-[CUINamedVectorGlyph contentBounds]_block_invoke (1 samples, 0.04%)</title><rect x="1.3204%" y="245" width="0.0388%" height="15" fill="rgb(239,43,17)" fg:x="34" fg:w="1"/><text x="1.5704%" y="255.50"></text></g><g><title>CoreUI`-[_CUIThemeSVGRendition canvasSize] (1 samples, 0.04%)</title><rect x="1.3204%" y="229" width="0.0388%" height="15" fill="rgb(231,177,25)" fg:x="34" fg:w="1"/><text x="1.5704%" y="239.50"></text></g><g><title>CoreUI`-[_CUIThemeSVGRendition svgDocument] (1 samples, 0.04%)</title><rect x="1.3204%" y="213" width="0.0388%" height="15" fill="rgb(219,179,1)" fg:x="34" fg:w="1"/><text x="1.5704%" y="223.50"></text></g><g><title>CoreSVG`CGSVGDocumentCreateFromData (1 samples, 0.04%)</title><rect x="1.3204%" y="197" width="0.0388%" height="15" fill="rgb(238,219,53)" fg:x="34" fg:w="1"/><text x="1.5704%" y="207.50"></text></g><g><title>CoreSVG`SVGDocument::SVGDocument (1 samples, 0.04%)</title><rect x="1.3204%" y="181" width="0.0388%" height="15" fill="rgb(232,167,36)" fg:x="34" fg:w="1"/><text x="1.5704%" y="191.50"></text></g><g><title>CoreSVG`SVGRootNode::SVGRootNode (1 samples, 0.04%)</title><rect x="1.3204%" y="165" width="0.0388%" height="15" fill="rgb(244,19,51)" fg:x="34" fg:w="1"/><text x="1.5704%" y="175.50"></text></g><g><title>CoreSVG`SVGViewBoxNode::SVGViewBoxNode(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="1.3204%" y="149" width="0.0388%" height="15" fill="rgb(224,6,22)" fg:x="34" fg:w="1"/><text x="1.5704%" y="159.50"></text></g><g><title>CoreSVG`SVGAttributeMap::CreateWithDefaults (1 samples, 0.04%)</title><rect x="1.3204%" y="133" width="0.0388%" height="15" fill="rgb(224,145,5)" fg:x="34" fg:w="1"/><text x="1.5704%" y="143.50"></text></g><g><title>CoreSVG`SVGAttribute::SVGAttribute (1 samples, 0.04%)</title><rect x="1.3204%" y="117" width="0.0388%" height="15" fill="rgb(234,130,49)" fg:x="34" fg:w="1"/><text x="1.5704%" y="127.50"></text></g><g><title>CoreSVG`CFRetained::CFRetained(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="1.3204%" y="101" width="0.0388%" height="15" fill="rgb(254,6,2)" fg:x="34" fg:w="1"/><text x="1.5704%" y="111.50"></text></g><g><title>CoreSVG`CFRetained::getTypeID(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="1.3204%" y="85" width="0.0388%" height="15" fill="rgb(208,96,46)" fg:x="34" fg:w="1"/><text x="1.5704%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.04%)</title><rect x="1.3204%" y="69" width="0.0388%" height="15" fill="rgb(239,3,39)" fg:x="34" fg:w="1"/><text x="1.5704%" y="79.50"></text></g><g><title>CoreFoundation`CFStringCompare (1 samples, 0.04%)</title><rect x="1.3592%" y="933" width="0.0388%" height="15" fill="rgb(233,210,1)" fg:x="35" fg:w="1"/><text x="1.6092%" y="943.50"></text></g><g><title>HIToolbox`AppleWindowDef::Initialize (1 samples, 0.04%)</title><rect x="1.4369%" y="629" width="0.0388%" height="15" fill="rgb(244,137,37)" fg:x="37" fg:w="1"/><text x="1.6869%" y="639.50"></text></g><g><title>HIToolbox`WindowData::Initialize (1 samples, 0.04%)</title><rect x="1.4369%" y="613" width="0.0388%" height="15" fill="rgb(240,136,2)" fg:x="37" fg:w="1"/><text x="1.6869%" y="623.50"></text></g><g><title>HIToolbox`WindowData::FinishConstruction (1 samples, 0.04%)</title><rect x="1.4369%" y="597" width="0.0388%" height="15" fill="rgb(239,18,37)" fg:x="37" fg:w="1"/><text x="1.6869%" y="607.50"></text></g><g><title>HIToolbox`WindowData::UpdateColorSpace (1 samples, 0.04%)</title><rect x="1.4369%" y="581" width="0.0388%" height="15" fill="rgb(218,185,22)" fg:x="37" fg:w="1"/><text x="1.6869%" y="591.50"></text></g><g><title>SkyLight`SLSSetWindowColorSpace (1 samples, 0.04%)</title><rect x="1.4369%" y="565" width="0.0388%" height="15" fill="rgb(225,218,4)" fg:x="37" fg:w="1"/><text x="1.6869%" y="575.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryAddColorSpace (1 samples, 0.04%)</title><rect x="1.4369%" y="549" width="0.0388%" height="15" fill="rgb(230,182,32)" fg:x="37" fg:w="1"/><text x="1.6869%" y="559.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateConversionCurve (1 samples, 0.04%)</title><rect x="1.4369%" y="533" width="0.0388%" height="15" fill="rgb(242,56,43)" fg:x="37" fg:w="1"/><text x="1.6869%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="1.4369%" y="517" width="0.0388%" height="15" fill="rgb(233,99,24)" fg:x="37" fg:w="1"/><text x="1.6869%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="1.4369%" y="501" width="0.0388%" height="15" fill="rgb(234,209,42)" fg:x="37" fg:w="1"/><text x="1.6869%" y="511.50"></text></g><g><title>CoreGraphics`__xyz_color_space_block_invoke (1 samples, 0.04%)</title><rect x="1.4369%" y="485" width="0.0388%" height="15" fill="rgb(227,7,12)" fg:x="37" fg:w="1"/><text x="1.6869%" y="495.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.04%)</title><rect x="1.4369%" y="469" width="0.0388%" height="15" fill="rgb(245,203,43)" fg:x="37" fg:w="1"/><text x="1.6869%" y="479.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateGenericXYZ (1 samples, 0.04%)</title><rect x="1.4369%" y="453" width="0.0388%" height="15" fill="rgb(238,205,33)" fg:x="37" fg:w="1"/><text x="1.6869%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="1.4369%" y="437" width="0.0388%" height="15" fill="rgb(231,56,7)" fg:x="37" fg:w="1"/><text x="1.6869%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="1.4369%" y="421" width="0.0388%" height="15" fill="rgb(244,186,29)" fg:x="37" fg:w="1"/><text x="1.6869%" y="431.50"></text></g><g><title>CoreGraphics`__CGColorSpaceCreateGenericXYZ_block_invoke (1 samples, 0.04%)</title><rect x="1.4369%" y="405" width="0.0388%" height="15" fill="rgb(234,111,31)" fg:x="37" fg:w="1"/><text x="1.6869%" y="415.50"></text></g><g><title>CoreGraphics`color_space_state_create_generic_xyz (1 samples, 0.04%)</title><rect x="1.4369%" y="389" width="0.0388%" height="15" fill="rgb(241,149,10)" fg:x="37" fg:w="1"/><text x="1.6869%" y="399.50"></text></g><g><title>CoreGraphics`create_from_profile (1 samples, 0.04%)</title><rect x="1.4369%" y="373" width="0.0388%" height="15" fill="rgb(249,206,44)" fg:x="37" fg:w="1"/><text x="1.6869%" y="383.50"></text></g><g><title>ColorSync`ColorSyncProfileCopyData (1 samples, 0.04%)</title><rect x="1.4369%" y="357" width="0.0388%" height="15" fill="rgb(251,153,30)" fg:x="37" fg:w="1"/><text x="1.6869%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.04%)</title><rect x="1.4369%" y="341" width="0.0388%" height="15" fill="rgb(239,152,38)" fg:x="37" fg:w="1"/><text x="1.6869%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="1.4369%" y="325" width="0.0388%" height="15" fill="rgb(249,139,47)" fg:x="37" fg:w="1"/><text x="1.6869%" y="335.50"></text></g><g><title>HIToolbox`MBWindows::CreateWindow (2 samples, 0.08%)</title><rect x="1.4369%" y="789" width="0.0777%" height="15" fill="rgb(244,64,35)" fg:x="37" fg:w="2"/><text x="1.6869%" y="799.50"></text></g><g><title>HIToolbox`HIWindowCreateCommon(unsigned int, unsigned long long, WindowDefSpec const*, CGRect const*, unsigned int, OpaqueWindowPtr**) (2 samples, 0.08%)</title><rect x="1.4369%" y="773" width="0.0777%" height="15" fill="rgb(216,46,15)" fg:x="37" fg:w="2"/><text x="1.6869%" y="783.50"></text></g><g><title>HIToolbox`CreateNewWindowInternal(WindowDefSpec const*, unsigned int, unsigned long long, Rect const*, OpaqueWindowPtr**) (2 samples, 0.08%)</title><rect x="1.4369%" y="757" width="0.0777%" height="15" fill="rgb(250,74,19)" fg:x="37" fg:w="2"/><text x="1.6869%" y="767.50"></text></g><g><title>HIToolbox`NewWindowCommon(WindowData**, unsigned int, unsigned long long, WindowDefSpec const*, Rect const*, unsigned char const*, unsigned char, OpaqueWindowPtr*, void*, unsigned int, unsigned short*, bool) (2 samples, 0.08%)</title><rect x="1.4369%" y="741" width="0.0777%" height="15" fill="rgb(249,42,33)" fg:x="37" fg:w="2"/><text x="1.6869%" y="751.50"></text></g><g><title>HIToolbox`HIObjectCreate (2 samples, 0.08%)</title><rect x="1.4369%" y="725" width="0.0777%" height="15" fill="rgb(242,149,17)" fg:x="37" fg:w="2"/><text x="1.6869%" y="735.50"></text></g><g><title>HIToolbox`HIObject::Create (2 samples, 0.08%)</title><rect x="1.4369%" y="709" width="0.0777%" height="15" fill="rgb(244,29,21)" fg:x="37" fg:w="2"/><text x="1.6869%" y="719.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (2 samples, 0.08%)</title><rect x="1.4369%" y="693" width="0.0777%" height="15" fill="rgb(220,130,37)" fg:x="37" fg:w="2"/><text x="1.6869%" y="703.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (2 samples, 0.08%)</title><rect x="1.4369%" y="677" width="0.0777%" height="15" fill="rgb(211,67,2)" fg:x="37" fg:w="2"/><text x="1.6869%" y="687.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (2 samples, 0.08%)</title><rect x="1.4369%" y="661" width="0.0777%" height="15" fill="rgb(235,68,52)" fg:x="37" fg:w="2"/><text x="1.6869%" y="671.50"></text></g><g><title>HIToolbox`HIObject::HandleClassHIObjectEvent (2 samples, 0.08%)</title><rect x="1.4369%" y="645" width="0.0777%" height="15" fill="rgb(246,142,3)" fg:x="37" fg:w="2"/><text x="1.6869%" y="655.50"></text></g><g><title>HIToolbox`HIMenuBarFrameView::Initialize (1 samples, 0.04%)</title><rect x="1.4757%" y="629" width="0.0388%" height="15" fill="rgb(241,25,7)" fg:x="38" fg:w="1"/><text x="1.7257%" y="639.50"></text></g><g><title>HIToolbox`HIMenuBarView::Create (1 samples, 0.04%)</title><rect x="1.4757%" y="613" width="0.0388%" height="15" fill="rgb(242,119,39)" fg:x="38" fg:w="1"/><text x="1.7257%" y="623.50"></text></g><g><title>HIToolbox`HIObjectCreate (1 samples, 0.04%)</title><rect x="1.4757%" y="597" width="0.0388%" height="15" fill="rgb(241,98,45)" fg:x="38" fg:w="1"/><text x="1.7257%" y="607.50"></text></g><g><title>HIToolbox`HIObject::Create (1 samples, 0.04%)</title><rect x="1.4757%" y="581" width="0.0388%" height="15" fill="rgb(254,28,30)" fg:x="38" fg:w="1"/><text x="1.7257%" y="591.50"></text></g><g><title>HIToolbox`HIObject::Construct (1 samples, 0.04%)</title><rect x="1.4757%" y="565" width="0.0388%" height="15" fill="rgb(241,142,54)" fg:x="38" fg:w="1"/><text x="1.7257%" y="575.50"></text></g><g><title>HIToolbox`HIView::EventHandler (1 samples, 0.04%)</title><rect x="1.4757%" y="549" width="0.0388%" height="15" fill="rgb(222,85,15)" fg:x="38" fg:w="1"/><text x="1.7257%" y="559.50"></text></g><g><title>HIToolbox`HIMenuBarView::Construct (1 samples, 0.04%)</title><rect x="1.4757%" y="533" width="0.0388%" height="15" fill="rgb(210,85,47)" fg:x="38" fg:w="1"/><text x="1.7257%" y="543.50"></text></g><g><title>HIToolbox`HIMenuBarView::HIMenuBarView (1 samples, 0.04%)</title><rect x="1.4757%" y="517" width="0.0388%" height="15" fill="rgb(224,206,25)" fg:x="38" fg:w="1"/><text x="1.7257%" y="527.50"></text></g><g><title>HIToolbox`HIMenuBarView::GetDrawingDelegate (1 samples, 0.04%)</title><rect x="1.4757%" y="501" width="0.0388%" height="15" fill="rgb(243,201,19)" fg:x="38" fg:w="1"/><text x="1.7257%" y="511.50"></text></g><g><title>HIToolbox`HIObjectCreate (1 samples, 0.04%)</title><rect x="1.4757%" y="485" width="0.0388%" height="15" fill="rgb(236,59,4)" fg:x="38" fg:w="1"/><text x="1.7257%" y="495.50"></text></g><g><title>HIToolbox`HIObject::Create (1 samples, 0.04%)</title><rect x="1.4757%" y="469" width="0.0388%" height="15" fill="rgb(254,179,45)" fg:x="38" fg:w="1"/><text x="1.7257%" y="479.50"></text></g><g><title>HIToolbox`HIObjectClass::Lookup (1 samples, 0.04%)</title><rect x="1.4757%" y="453" width="0.0388%" height="15" fill="rgb(226,14,10)" fg:x="38" fg:w="1"/><text x="1.7257%" y="463.50"></text></g><g><title>HIToolbox`HLTBRegisterLazyHIObjectClass (1 samples, 0.04%)</title><rect x="1.4757%" y="437" width="0.0388%" height="15" fill="rgb(244,27,41)" fg:x="38" fg:w="1"/><text x="1.7257%" y="447.50"></text></g><g><title>CarbonCore`GetDYLDEntryPointWithImage (1 samples, 0.04%)</title><rect x="1.4757%" y="421" width="0.0388%" height="15" fill="rgb(235,35,32)" fg:x="38" fg:w="1"/><text x="1.7257%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.04%)</title><rect x="1.4757%" y="405" width="0.0388%" height="15" fill="rgb(218,68,31)" fg:x="38" fg:w="1"/><text x="1.7257%" y="415.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(dyld3::Array (1 samples, 0.04%)</title><rect x="1.4757%" y="389" width="0.0388%" height="15" fill="rgb(207,120,37)" fg:x="38" fg:w="1"/><text x="1.7257%" y="399.50"></text></g><g><title>dyld`dyld4::notifyMonitoringDyld (1 samples, 0.04%)</title><rect x="1.4757%" y="373" width="0.0388%" height="15" fill="rgb(227,98,0)" fg:x="38" fg:w="1"/><text x="1.7257%" y="383.50"></text></g><g><title>dyld`dyld4::notifyMonitoringDyld (1 samples, 0.04%)</title><rect x="1.4757%" y="357" width="0.0388%" height="15" fill="rgb(207,7,3)" fg:x="38" fg:w="1"/><text x="1.7257%" y="367.50"></text></g><g><title>dyld`dyld4::RemoteNotificationResponder::sendMessage (1 samples, 0.04%)</title><rect x="1.4757%" y="341" width="0.0388%" height="15" fill="rgb(206,98,19)" fg:x="38" fg:w="1"/><text x="1.7257%" y="351.50"></text></g><g><title>dyld`mach_msg_overwrite_trap (1 samples, 0.04%)</title><rect x="1.4757%" y="325" width="0.0388%" height="15" fill="rgb(217,5,26)" fg:x="38" fg:w="1"/><text x="1.7257%" y="335.50"></text></g><g><title>CoreGraphics`CGContextBeginTransparencyLayer (1 samples, 0.04%)</title><rect x="1.5146%" y="405" width="0.0388%" height="15" fill="rgb(235,190,38)" fg:x="39" fg:w="1"/><text x="1.7646%" y="415.50"></text></g><g><title>CoreGraphics`CGContextBeginTransparencyLayerWithRect (1 samples, 0.04%)</title><rect x="1.5146%" y="389" width="0.0388%" height="15" fill="rgb(247,86,24)" fg:x="39" fg:w="1"/><text x="1.7646%" y="399.50"></text></g><g><title>CoreGraphics`ripc_BeginLayer (1 samples, 0.04%)</title><rect x="1.5146%" y="373" width="0.0388%" height="15" fill="rgb(205,101,16)" fg:x="39" fg:w="1"/><text x="1.7646%" y="383.50"></text></g><g><title>CoreGraphics`RIPLayerCreate (1 samples, 0.04%)</title><rect x="1.5146%" y="357" width="0.0388%" height="15" fill="rgb(246,168,33)" fg:x="39" fg:w="1"/><text x="1.7646%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="1.5146%" y="341" width="0.0388%" height="15" fill="rgb(231,114,1)" fg:x="39" fg:w="1"/><text x="1.7646%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="1.5146%" y="325" width="0.0388%" height="15" fill="rgb(207,184,53)" fg:x="39" fg:w="1"/><text x="1.7646%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.04%)</title><rect x="1.5146%" y="309" width="0.0388%" height="15" fill="rgb(224,95,51)" fg:x="39" fg:w="1"/><text x="1.7646%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="1.5146%" y="293" width="0.0388%" height="15" fill="rgb(212,188,45)" fg:x="39" fg:w="1"/><text x="1.7646%" y="303.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (2 samples, 0.08%)</title><rect x="1.5146%" y="549" width="0.0777%" height="15" fill="rgb(223,154,38)" fg:x="39" fg:w="2"/><text x="1.7646%" y="559.50"></text></g><g><title>HIToolbox`HIThemeDrawTextBox (2 samples, 0.08%)</title><rect x="1.5146%" y="533" width="0.0777%" height="15" fill="rgb(251,22,52)" fg:x="39" fg:w="2"/><text x="1.7646%" y="543.50"></text></g><g><title>HIToolbox`DataEngine::DrawTextBox (2 samples, 0.08%)</title><rect x="1.5146%" y="517" width="0.0777%" height="15" fill="rgb(229,209,22)" fg:x="39" fg:w="2"/><text x="1.7646%" y="527.50"></text></g><g><title>HIToolbox`invocation function for block in DataEngine::DrawTextBox (2 samples, 0.08%)</title><rect x="1.5146%" y="501" width="0.0777%" height="15" fill="rgb(234,138,34)" fg:x="39" fg:w="2"/><text x="1.7646%" y="511.50"></text></g><g><title>HIToolbox`TCoreTextEngine::DrawThemeTextBox (2 samples, 0.08%)</title><rect x="1.5146%" y="485" width="0.0777%" height="15" fill="rgb(212,95,11)" fg:x="39" fg:w="2"/><text x="1.7646%" y="495.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawStyledGlyphsAtPositions (2 samples, 0.08%)</title><rect x="1.5146%" y="469" width="0.0777%" height="15" fill="rgb(240,179,47)" fg:x="39" fg:w="2"/><text x="1.7646%" y="479.50"></text></g><g><title>CoreUI`CUIDrawStyledGlyphsAtPositions (2 samples, 0.08%)</title><rect x="1.5146%" y="453" width="0.0777%" height="15" fill="rgb(240,163,11)" fg:x="39" fg:w="2"/><text x="1.7646%" y="463.50"></text></g><g><title>CoreUI`CUIRenderer::DrawStyledGlyphsAtPositions (2 samples, 0.08%)</title><rect x="1.5146%" y="437" width="0.0777%" height="15" fill="rgb(236,37,12)" fg:x="39" fg:w="2"/><text x="1.7646%" y="447.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawGlyphs:inContext:usingFont:atPositions:count:lineHeight:inBounds:atScale:] (2 samples, 0.08%)</title><rect x="1.5146%" y="421" width="0.0777%" height="15" fill="rgb(232,164,16)" fg:x="39" fg:w="2"/><text x="1.7646%" y="431.50"></text></g><g><title>CoreText`CTFontDrawGlyphsAtPositions (1 samples, 0.04%)</title><rect x="1.5534%" y="405" width="0.0388%" height="15" fill="rgb(244,205,15)" fg:x="40" fg:w="1"/><text x="1.8034%" y="415.50"></text></g><g><title>CoreText`CTFontDrawGlyphsAtPositionsInternal (1 samples, 0.04%)</title><rect x="1.5534%" y="389" width="0.0388%" height="15" fill="rgb(223,117,47)" fg:x="40" fg:w="1"/><text x="1.8034%" y="399.50"></text></g><g><title>CoreText`DrawGlyphsAtPositions(TFont const*, unsigned short const*, CGPoint const*, unsigned long, CGContext*, CGAffineTransform, CGAffineTransform, bool, TRun const*, CGContextType, void const*) (1 samples, 0.04%)</title><rect x="1.5534%" y="373" width="0.0388%" height="15" fill="rgb(244,107,35)" fg:x="40" fg:w="1"/><text x="1.8034%" y="383.50"></text></g><g><title>CoreText`EnumerateOverlappingGlyphs(CGContext*, TFont const&amp;, unsigned short const*, long, int, void (CFRange, bool) block_pointer) (1 samples, 0.04%)</title><rect x="1.5534%" y="357" width="0.0388%" height="15" fill="rgb(205,140,8)" fg:x="40" fg:w="1"/><text x="1.8034%" y="367.50"></text></g><g><title>CoreText`invocation function for block in DrawGlyphsAtPositions(TFont const*, unsigned short const*, CGPoint const*, unsigned long, CGContext*, CGAffineTransform, CGAffineTransform, bool, TRun const*, CGContextType, void const*) (1 samples, 0.04%)</title><rect x="1.5534%" y="341" width="0.0388%" height="15" fill="rgb(228,84,46)" fg:x="40" fg:w="1"/><text x="1.8034%" y="351.50"></text></g><g><title>CoreGraphics`draw_glyphs (1 samples, 0.04%)</title><rect x="1.5534%" y="325" width="0.0388%" height="15" fill="rgb(254,188,9)" fg:x="40" fg:w="1"/><text x="1.8034%" y="335.50"></text></g><g><title>CoreGraphics`CGContextDelegateDrawGlyphs (1 samples, 0.04%)</title><rect x="1.5534%" y="309" width="0.0388%" height="15" fill="rgb(206,112,54)" fg:x="40" fg:w="1"/><text x="1.8034%" y="319.50"></text></g><g><title>CoreGraphics`ripc_DrawGlyphs (1 samples, 0.04%)</title><rect x="1.5534%" y="293" width="0.0388%" height="15" fill="rgb(216,84,49)" fg:x="40" fg:w="1"/><text x="1.8034%" y="303.50"></text></g><g><title>CoreGraphics`draw_glyph_bitmaps (1 samples, 0.04%)</title><rect x="1.5534%" y="277" width="0.0388%" height="15" fill="rgb(214,194,35)" fg:x="40" fg:w="1"/><text x="1.8034%" y="287.50"></text></g><g><title>CoreGraphics`render_glyphs (1 samples, 0.04%)</title><rect x="1.5534%" y="261" width="0.0388%" height="15" fill="rgb(249,28,3)" fg:x="40" fg:w="1"/><text x="1.8034%" y="271.50"></text></g><g><title>CoreGraphics`CGGlyphBuilder::lock_glyph_bitmaps (1 samples, 0.04%)</title><rect x="1.5534%" y="245" width="0.0388%" height="15" fill="rgb(222,56,52)" fg:x="40" fg:w="1"/><text x="1.8034%" y="255.50"></text></g><g><title>CoreGraphics`CGGlyphBuilder::create_missing_bitmaps (1 samples, 0.04%)</title><rect x="1.5534%" y="229" width="0.0388%" height="15" fill="rgb(245,217,50)" fg:x="40" fg:w="1"/><text x="1.8034%" y="239.50"></text></g><g><title>CoreGraphics`CGFontCreateGlyphBitmapWithDilation (1 samples, 0.04%)</title><rect x="1.5534%" y="213" width="0.0388%" height="15" fill="rgb(213,201,24)" fg:x="40" fg:w="1"/><text x="1.8034%" y="223.50"></text></g><g><title>CoreGraphics`CGGlyphBitmapCreateWithPathAndDilation_8 (1 samples, 0.04%)</title><rect x="1.5534%" y="197" width="0.0388%" height="15" fill="rgb(248,116,28)" fg:x="40" fg:w="1"/><text x="1.8034%" y="207.50"></text></g><g><title>CoreGraphics`CG::Path::apply_iterator (1 samples, 0.04%)</title><rect x="1.5534%" y="181" width="0.0388%" height="15" fill="rgb(219,72,43)" fg:x="40" fg:w="1"/><text x="1.8034%" y="191.50"></text></g><g><title>CoreGraphics`path_orientation_end (1 samples, 0.04%)</title><rect x="1.5534%" y="165" width="0.0388%" height="15" fill="rgb(209,138,14)" fg:x="40" fg:w="1"/><text x="1.8034%" y="175.50"></text></g><g><title>CoreGraphics`path_iterator_iterate (1 samples, 0.04%)</title><rect x="1.5534%" y="149" width="0.0388%" height="15" fill="rgb(222,18,33)" fg:x="40" fg:w="1"/><text x="1.8034%" y="159.50"></text></g><g><title>CoreGraphics`addCubeMonotonicX (1 samples, 0.04%)</title><rect x="1.5534%" y="133" width="0.0388%" height="15" fill="rgb(213,199,7)" fg:x="40" fg:w="1"/><text x="1.8034%" y="143.50"></text></g><g><title>HIToolbox`HIMenuBarView::EnsureBarLayout (1 samples, 0.04%)</title><rect x="1.5922%" y="549" width="0.0388%" height="15" fill="rgb(250,110,10)" fg:x="41" fg:w="1"/><text x="1.8422%" y="559.50"></text></g><g><title>HIToolbox`HIMenuBarView::MeasureTitleWidths (1 samples, 0.04%)</title><rect x="1.5922%" y="533" width="0.0388%" height="15" fill="rgb(248,123,6)" fg:x="41" fg:w="1"/><text x="1.8422%" y="543.50"></text></g><g><title>HIToolbox`HIMenuBarView::Measure1Title (1 samples, 0.04%)</title><rect x="1.5922%" y="517" width="0.0388%" height="15" fill="rgb(206,91,31)" fg:x="41" fg:w="1"/><text x="1.8422%" y="527.50"></text></g><g><title>HIToolbox`HIThemeGetTextDimensions (1 samples, 0.04%)</title><rect x="1.5922%" y="501" width="0.0388%" height="15" fill="rgb(211,154,13)" fg:x="41" fg:w="1"/><text x="1.8422%" y="511.50"></text></g><g><title>HIToolbox`DataEngine::GetTextDimensions (1 samples, 0.04%)</title><rect x="1.5922%" y="485" width="0.0388%" height="15" fill="rgb(225,148,7)" fg:x="41" fg:w="1"/><text x="1.8422%" y="495.50"></text></g><g><title>HIToolbox`TThemeTextCache::Create (1 samples, 0.04%)</title><rect x="1.5922%" y="469" width="0.0388%" height="15" fill="rgb(220,160,43)" fg:x="41" fg:w="1"/><text x="1.8422%" y="479.50"></text></g><g><title>HIToolbox`TCoreTextEngine::Init (1 samples, 0.04%)</title><rect x="1.5922%" y="453" width="0.0388%" height="15" fill="rgb(213,52,39)" fg:x="41" fg:w="1"/><text x="1.8422%" y="463.50"></text></g><g><title>HIToolbox`TThemeText::Init (1 samples, 0.04%)</title><rect x="1.5922%" y="437" width="0.0388%" height="15" fill="rgb(243,137,7)" fg:x="41" fg:w="1"/><text x="1.8422%" y="447.50"></text></g><g><title>HIToolbox`TThemeText::ConstructThemeFontWithFontID (1 samples, 0.04%)</title><rect x="1.5922%" y="421" width="0.0388%" height="15" fill="rgb(230,79,13)" fg:x="41" fg:w="1"/><text x="1.8422%" y="431.50"></text></g><g><title>HIToolbox`ThemeFontCreate(THIThemeTextInfo const*) (1 samples, 0.04%)</title><rect x="1.5922%" y="405" width="0.0388%" height="15" fill="rgb(247,105,23)" fg:x="41" fg:w="1"/><text x="1.8422%" y="415.50"></text></g><g><title>HIToolbox`TThemeMetaFont::Init (1 samples, 0.04%)</title><rect x="1.5922%" y="389" width="0.0388%" height="15" fill="rgb(223,179,41)" fg:x="41" fg:w="1"/><text x="1.8422%" y="399.50"></text></g><g><title>CoreText`CTFontCreateUIFontForLanguage (1 samples, 0.04%)</title><rect x="1.5922%" y="373" width="0.0388%" height="15" fill="rgb(218,9,34)" fg:x="41" fg:w="1"/><text x="1.8422%" y="383.50"></text></g><g><title>CoreText`CTFontCreateWithFontDescriptor (1 samples, 0.04%)</title><rect x="1.5922%" y="357" width="0.0388%" height="15" fill="rgb(222,106,8)" fg:x="41" fg:w="1"/><text x="1.8422%" y="367.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptor (1 samples, 0.04%)</title><rect x="1.5922%" y="341" width="0.0388%" height="15" fill="rgb(211,220,0)" fg:x="41" fg:w="1"/><text x="1.8422%" y="351.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (1 samples, 0.04%)</title><rect x="1.5922%" y="325" width="0.0388%" height="15" fill="rgb(229,52,16)" fg:x="41" fg:w="1"/><text x="1.8422%" y="335.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (1 samples, 0.04%)</title><rect x="1.5922%" y="309" width="0.0388%" height="15" fill="rgb(212,155,18)" fg:x="41" fg:w="1"/><text x="1.8422%" y="319.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (1 samples, 0.04%)</title><rect x="1.5922%" y="293" width="0.0388%" height="15" fill="rgb(242,21,14)" fg:x="41" fg:w="1"/><text x="1.8422%" y="303.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (1 samples, 0.04%)</title><rect x="1.5922%" y="277" width="0.0388%" height="15" fill="rgb(222,19,48)" fg:x="41" fg:w="1"/><text x="1.8422%" y="287.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (1 samples, 0.04%)</title><rect x="1.5922%" y="261" width="0.0388%" height="15" fill="rgb(232,45,27)" fg:x="41" fg:w="1"/><text x="1.8422%" y="271.50"></text></g><g><title>CoreText`CreateSplicedFontFromStash(__CFDictionary const*, __CFURL const*) (1 samples, 0.04%)</title><rect x="1.5922%" y="245" width="0.0388%" height="15" fill="rgb(249,103,42)" fg:x="41" fg:w="1"/><text x="1.8422%" y="255.50"></text></g><g><title>CoreText`TSplicedFont::Create (1 samples, 0.04%)</title><rect x="1.5922%" y="229" width="0.0388%" height="15" fill="rgb(246,81,33)" fg:x="41" fg:w="1"/><text x="1.8422%" y="239.50"></text></g><g><title>CoreText`TSplicedFont::CreateCascadeList (1 samples, 0.04%)</title><rect x="1.5922%" y="213" width="0.0388%" height="15" fill="rgb(252,33,42)" fg:x="41" fg:w="1"/><text x="1.8422%" y="223.50"></text></g><g><title>CoreText`TSplicedFont::CreateDescriptor (1 samples, 0.04%)</title><rect x="1.5922%" y="197" width="0.0388%" height="15" fill="rgb(209,212,41)" fg:x="41" fg:w="1"/><text x="1.8422%" y="207.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (1 samples, 0.04%)</title><rect x="1.6311%" y="469" width="0.0388%" height="15" fill="rgb(207,154,6)" fg:x="42" fg:w="1"/><text x="1.8811%" y="479.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawUsingQuartz:inContext:inBounds:atScale:] (1 samples, 0.04%)</title><rect x="1.6311%" y="453" width="0.0388%" height="15" fill="rgb(223,64,47)" fg:x="42" fg:w="1"/><text x="1.8811%" y="463.50"></text></g><g><title>CoreUI`invocation function for block in CUICoreThemeRenderer::DrawMenuTitle (1 samples, 0.04%)</title><rect x="1.6311%" y="437" width="0.0388%" height="15" fill="rgb(211,161,38)" fg:x="42" fg:w="1"/><text x="1.8811%" y="447.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (1 samples, 0.04%)</title><rect x="1.6311%" y="421" width="0.0388%" height="15" fill="rgb(219,138,40)" fg:x="42" fg:w="1"/><text x="1.8811%" y="431.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (1 samples, 0.04%)</title><rect x="1.6311%" y="405" width="0.0388%" height="15" fill="rgb(241,228,46)" fg:x="42" fg:w="1"/><text x="1.8811%" y="415.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (1 samples, 0.04%)</title><rect x="1.6311%" y="389" width="0.0388%" height="15" fill="rgb(223,209,38)" fg:x="42" fg:w="1"/><text x="1.8811%" y="399.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (1 samples, 0.04%)</title><rect x="1.6311%" y="373" width="0.0388%" height="15" fill="rgb(236,164,45)" fg:x="42" fg:w="1"/><text x="1.8811%" y="383.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (1 samples, 0.04%)</title><rect x="1.6311%" y="357" width="0.0388%" height="15" fill="rgb(231,15,5)" fg:x="42" fg:w="1"/><text x="1.8811%" y="367.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (1 samples, 0.04%)</title><rect x="1.6311%" y="341" width="0.0388%" height="15" fill="rgb(252,35,15)" fg:x="42" fg:w="1"/><text x="1.8811%" y="351.50"></text></g><g><title>CoreGraphics`img_image (1 samples, 0.04%)</title><rect x="1.6311%" y="325" width="0.0388%" height="15" fill="rgb(248,181,18)" fg:x="42" fg:w="1"/><text x="1.8811%" y="335.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestinationWithImage (1 samples, 0.04%)</title><rect x="1.6311%" y="309" width="0.0388%" height="15" fill="rgb(233,39,42)" fg:x="42" fg:w="1"/><text x="1.8811%" y="319.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestination (1 samples, 0.04%)</title><rect x="1.6311%" y="293" width="0.0388%" height="15" fill="rgb(238,110,33)" fg:x="42" fg:w="1"/><text x="1.8811%" y="303.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvertGetConverterInfo (1 samples, 0.04%)</title><rect x="1.6311%" y="277" width="0.0388%" height="15" fill="rgb(233,195,10)" fg:x="42" fg:w="1"/><text x="1.8811%" y="287.50"></text></g><g><title>CoreGraphics`icc_converter_info (1 samples, 0.04%)</title><rect x="1.6311%" y="261" width="0.0388%" height="15" fill="rgb(254,105,3)" fg:x="42" fg:w="1"/><text x="1.8811%" y="271.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreateCachedCGvImageConverter (1 samples, 0.04%)</title><rect x="1.6311%" y="245" width="0.0388%" height="15" fill="rgb(221,225,9)" fg:x="42" fg:w="1"/><text x="1.8811%" y="255.50"></text></g><g><title>CoreGraphics`CGvImageConverterCacheGetRetained (1 samples, 0.04%)</title><rect x="1.6311%" y="229" width="0.0388%" height="15" fill="rgb(224,227,45)" fg:x="42" fg:w="1"/><text x="1.8811%" y="239.50"></text></g><g><title>CoreGraphics`CGvImageConverterInitializeShared (1 samples, 0.04%)</title><rect x="1.6311%" y="213" width="0.0388%" height="15" fill="rgb(229,198,43)" fg:x="42" fg:w="1"/><text x="1.8811%" y="223.50"></text></g><g><title>vImage`vImageConverter_CreateWithCGColorConversionInfo (1 samples, 0.04%)</title><rect x="1.6311%" y="197" width="0.0388%" height="15" fill="rgb(206,209,35)" fg:x="42" fg:w="1"/><text x="1.8811%" y="207.50"></text></g><g><title>vImage`CreatePass_ColorSpaceTransformWithCGColorConversionInfo (1 samples, 0.04%)</title><rect x="1.6311%" y="181" width="0.0388%" height="15" fill="rgb(245,195,53)" fg:x="42" fg:w="1"/><text x="1.8811%" y="191.50"></text></g><g><title>vImage`CacheTable_Init (1 samples, 0.04%)</title><rect x="1.6311%" y="165" width="0.0388%" height="15" fill="rgb(240,92,26)" fg:x="42" fg:w="1"/><text x="1.8811%" y="175.50"></text></g><g><title>vImage`PiecewiseGamma_ComputeTable16Q12 (1 samples, 0.04%)</title><rect x="1.6311%" y="149" width="0.0388%" height="15" fill="rgb(207,40,23)" fg:x="42" fg:w="1"/><text x="1.8811%" y="159.50"></text></g><g><title>vImage`_vImagePiecewiseGamma_PlanarF (1 samples, 0.04%)</title><rect x="1.6311%" y="133" width="0.0388%" height="15" fill="rgb(223,111,35)" fg:x="42" fg:w="1"/><text x="1.8811%" y="143.50"></text></g><g><title>vImage`vPiecewiseGamma_PlanarF_avx2 (1 samples, 0.04%)</title><rect x="1.6311%" y="117" width="0.0388%" height="15" fill="rgb(229,147,28)" fg:x="42" fg:w="1"/><text x="1.8811%" y="127.50"></text></g><g><title>vImage`symmetricPiecewiseGamma_pixelBlock (1 samples, 0.04%)</title><rect x="1.6311%" y="101" width="0.0388%" height="15" fill="rgb(211,29,28)" fg:x="42" fg:w="1"/><text x="1.8811%" y="111.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (5 samples, 0.19%)</title><rect x="1.5146%" y="581" width="0.1942%" height="15" fill="rgb(228,72,33)" fg:x="39" fg:w="5"/><text x="1.7646%" y="591.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (5 samples, 0.19%)</title><rect x="1.5146%" y="565" width="0.1942%" height="15" fill="rgb(205,214,31)" fg:x="39" fg:w="5"/><text x="1.7646%" y="575.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (2 samples, 0.08%)</title><rect x="1.6311%" y="549" width="0.0777%" height="15" fill="rgb(224,111,15)" fg:x="42" fg:w="2"/><text x="1.8811%" y="559.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (2 samples, 0.08%)</title><rect x="1.6311%" y="533" width="0.0777%" height="15" fill="rgb(253,21,26)" fg:x="42" fg:w="2"/><text x="1.8811%" y="543.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (2 samples, 0.08%)</title><rect x="1.6311%" y="517" width="0.0777%" height="15" fill="rgb(245,139,43)" fg:x="42" fg:w="2"/><text x="1.8811%" y="527.50"></text></g><g><title>CoreUI`CUIDraw (2 samples, 0.08%)</title><rect x="1.6311%" y="501" width="0.0777%" height="15" fill="rgb(252,170,7)" fg:x="42" fg:w="2"/><text x="1.8811%" y="511.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (2 samples, 0.08%)</title><rect x="1.6311%" y="485" width="0.0777%" height="15" fill="rgb(231,118,14)" fg:x="42" fg:w="2"/><text x="1.8811%" y="495.50"></text></g><g><title>CoreUI`CUIRenderer::DecodeToCUIInfo (1 samples, 0.04%)</title><rect x="1.6699%" y="469" width="0.0388%" height="15" fill="rgb(238,83,0)" fg:x="43" fg:w="1"/><text x="1.9199%" y="479.50"></text></g><g><title>CoreUI`CUIConstantToMapID (1 samples, 0.04%)</title><rect x="1.6699%" y="453" width="0.0388%" height="15" fill="rgb(221,39,39)" fg:x="43" fg:w="1"/><text x="1.9199%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="1.6699%" y="437" width="0.0388%" height="15" fill="rgb(222,119,46)" fg:x="43" fg:w="1"/><text x="1.9199%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="1.6699%" y="421" width="0.0388%" height="15" fill="rgb(222,165,49)" fg:x="43" fg:w="1"/><text x="1.9199%" y="431.50"></text></g><g><title>CoreUI`invocation function for block in InitializeDictionaries() (1 samples, 0.04%)</title><rect x="1.6699%" y="405" width="0.0388%" height="15" fill="rgb(219,113,52)" fg:x="43" fg:w="1"/><text x="1.9199%" y="415.50"></text></g><g><title>CoreFoundation`CFDictionaryCreate (1 samples, 0.04%)</title><rect x="1.6699%" y="389" width="0.0388%" height="15" fill="rgb(214,7,15)" fg:x="43" fg:w="1"/><text x="1.9199%" y="399.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.04%)</title><rect x="1.6699%" y="373" width="0.0388%" height="15" fill="rgb(235,32,4)" fg:x="43" fg:w="1"/><text x="1.9199%" y="383.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (9 samples, 0.35%)</title><rect x="1.3981%" y="933" width="0.3495%" height="15" fill="rgb(238,90,54)" fg:x="36" fg:w="9"/><text x="1.6481%" y="943.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (8 samples, 0.31%)</title><rect x="1.4369%" y="917" width="0.3107%" height="15" fill="rgb(213,208,19)" fg:x="37" fg:w="8"/><text x="1.6869%" y="927.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (8 samples, 0.31%)</title><rect x="1.4369%" y="901" width="0.3107%" height="15" fill="rgb(233,156,4)" fg:x="37" fg:w="8"/><text x="1.6869%" y="911.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (8 samples, 0.31%)</title><rect x="1.4369%" y="885" width="0.3107%" height="15" fill="rgb(207,194,5)" fg:x="37" fg:w="8"/><text x="1.6869%" y="895.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (8 samples, 0.31%)</title><rect x="1.4369%" y="869" width="0.3107%" height="15" fill="rgb(206,111,30)" fg:x="37" fg:w="8"/><text x="1.6869%" y="879.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (8 samples, 0.31%)</title><rect x="1.4369%" y="853" width="0.3107%" height="15" fill="rgb(243,70,54)" fg:x="37" fg:w="8"/><text x="1.6869%" y="863.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (8 samples, 0.31%)</title><rect x="1.4369%" y="837" width="0.3107%" height="15" fill="rgb(242,28,8)" fg:x="37" fg:w="8"/><text x="1.6869%" y="847.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (8 samples, 0.31%)</title><rect x="1.4369%" y="821" width="0.3107%" height="15" fill="rgb(219,106,18)" fg:x="37" fg:w="8"/><text x="1.6869%" y="831.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (8 samples, 0.31%)</title><rect x="1.4369%" y="805" width="0.3107%" height="15" fill="rgb(244,222,10)" fg:x="37" fg:w="8"/><text x="1.6869%" y="815.50"></text></g><g><title>HIToolbox`ShowHide (6 samples, 0.23%)</title><rect x="1.5146%" y="789" width="0.2330%" height="15" fill="rgb(236,179,52)" fg:x="39" fg:w="6"/><text x="1.7646%" y="799.50"></text></g><g><title>HIToolbox`_ShowHideWindows (6 samples, 0.23%)</title><rect x="1.5146%" y="773" width="0.2330%" height="15" fill="rgb(213,23,39)" fg:x="39" fg:w="6"/><text x="1.7646%" y="783.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (6 samples, 0.23%)</title><rect x="1.5146%" y="757" width="0.2330%" height="15" fill="rgb(238,48,10)" fg:x="39" fg:w="6"/><text x="1.7646%" y="767.50"></text></g><g><title>HIToolbox`HIView::Render (6 samples, 0.23%)</title><rect x="1.5146%" y="741" width="0.2330%" height="15" fill="rgb(251,196,23)" fg:x="39" fg:w="6"/><text x="1.7646%" y="751.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (6 samples, 0.23%)</title><rect x="1.5146%" y="725" width="0.2330%" height="15" fill="rgb(250,152,24)" fg:x="39" fg:w="6"/><text x="1.7646%" y="735.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.23%)</title><rect x="1.5146%" y="709" width="0.2330%" height="15" fill="rgb(209,150,17)" fg:x="39" fg:w="6"/><text x="1.7646%" y="719.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.23%)</title><rect x="1.5146%" y="693" width="0.2330%" height="15" fill="rgb(234,202,34)" fg:x="39" fg:w="6"/><text x="1.7646%" y="703.50"></text></g><g><title>HIToolbox`HIView::SendDraw (6 samples, 0.23%)</title><rect x="1.5146%" y="677" width="0.2330%" height="15" fill="rgb(253,148,53)" fg:x="39" fg:w="6"/><text x="1.7646%" y="687.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (6 samples, 0.23%)</title><rect x="1.5146%" y="661" width="0.2330%" height="15" fill="rgb(218,129,16)" fg:x="39" fg:w="6"/><text x="1.7646%" y="671.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.23%)</title><rect x="1.5146%" y="645" width="0.2330%" height="15" fill="rgb(216,85,19)" fg:x="39" fg:w="6"/><text x="1.7646%" y="655.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.23%)</title><rect x="1.5146%" y="629" width="0.2330%" height="15" fill="rgb(235,228,7)" fg:x="39" fg:w="6"/><text x="1.7646%" y="639.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (6 samples, 0.23%)</title><rect x="1.5146%" y="613" width="0.2330%" height="15" fill="rgb(245,175,0)" fg:x="39" fg:w="6"/><text x="1.7646%" y="623.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (6 samples, 0.23%)</title><rect x="1.5146%" y="597" width="0.2330%" height="15" fill="rgb(208,168,36)" fg:x="39" fg:w="6"/><text x="1.7646%" y="607.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (1 samples, 0.04%)</title><rect x="1.7087%" y="581" width="0.0388%" height="15" fill="rgb(246,171,24)" fg:x="44" fg:w="1"/><text x="1.9587%" y="591.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (1 samples, 0.04%)</title><rect x="1.7087%" y="565" width="0.0388%" height="15" fill="rgb(215,142,24)" fg:x="44" fg:w="1"/><text x="1.9587%" y="575.50"></text></g><g><title>HIToolbox`HIThemeDrawTextBox (1 samples, 0.04%)</title><rect x="1.7087%" y="549" width="0.0388%" height="15" fill="rgb(250,187,7)" fg:x="44" fg:w="1"/><text x="1.9587%" y="559.50"></text></g><g><title>HIToolbox`DataEngine::DrawTextBox (1 samples, 0.04%)</title><rect x="1.7087%" y="533" width="0.0388%" height="15" fill="rgb(228,66,33)" fg:x="44" fg:w="1"/><text x="1.9587%" y="543.50"></text></g><g><title>HIToolbox`invocation function for block in DataEngine::DrawTextBox (1 samples, 0.04%)</title><rect x="1.7087%" y="517" width="0.0388%" height="15" fill="rgb(234,215,21)" fg:x="44" fg:w="1"/><text x="1.9587%" y="527.50"></text></g><g><title>HIToolbox`TCoreTextEngine::DrawThemeTextBox (1 samples, 0.04%)</title><rect x="1.7087%" y="501" width="0.0388%" height="15" fill="rgb(222,191,20)" fg:x="44" fg:w="1"/><text x="1.9587%" y="511.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawStyledGlyphsAtPositions (1 samples, 0.04%)</title><rect x="1.7087%" y="485" width="0.0388%" height="15" fill="rgb(245,79,54)" fg:x="44" fg:w="1"/><text x="1.9587%" y="495.50"></text></g><g><title>CoreUI`CUIDrawStyledGlyphsAtPositions (1 samples, 0.04%)</title><rect x="1.7087%" y="469" width="0.0388%" height="15" fill="rgb(240,10,37)" fg:x="44" fg:w="1"/><text x="1.9587%" y="479.50"></text></g><g><title>CoreUI`CUIRenderer::DrawStyledGlyphsAtPositions (1 samples, 0.04%)</title><rect x="1.7087%" y="453" width="0.0388%" height="15" fill="rgb(214,192,32)" fg:x="44" fg:w="1"/><text x="1.9587%" y="463.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawGlyphs:inContext:usingFont:atPositions:count:lineHeight:inBounds:atScale:] (1 samples, 0.04%)</title><rect x="1.7087%" y="437" width="0.0388%" height="15" fill="rgb(209,36,54)" fg:x="44" fg:w="1"/><text x="1.9587%" y="447.50"></text></g><g><title>CoreGraphics`CGContextEndTransparencyLayer (1 samples, 0.04%)</title><rect x="1.7087%" y="421" width="0.0388%" height="15" fill="rgb(220,10,11)" fg:x="44" fg:w="1"/><text x="1.9587%" y="431.50"></text></g><g><title>CoreGraphics`ripc_EndLayer (1 samples, 0.04%)</title><rect x="1.7087%" y="405" width="0.0388%" height="15" fill="rgb(221,106,17)" fg:x="44" fg:w="1"/><text x="1.9587%" y="415.50"></text></g><g><title>CoreGraphics`ripc_RenderImage (1 samples, 0.04%)</title><rect x="1.7087%" y="389" width="0.0388%" height="15" fill="rgb(251,142,44)" fg:x="44" fg:w="1"/><text x="1.9587%" y="399.50"></text></g><g><title>CoreGraphics`RIPLayerBltImage (1 samples, 0.04%)</title><rect x="1.7087%" y="373" width="0.0388%" height="15" fill="rgb(238,13,15)" fg:x="44" fg:w="1"/><text x="1.9587%" y="383.50"></text></g><g><title>CoreGraphics`ripd_Lock (1 samples, 0.04%)</title><rect x="1.7087%" y="357" width="0.0388%" height="15" fill="rgb(208,107,27)" fg:x="44" fg:w="1"/><text x="1.9587%" y="367.50"></text></g><g><title>SkyLight`SLSDeviceLock (1 samples, 0.04%)</title><rect x="1.7087%" y="341" width="0.0388%" height="15" fill="rgb(205,136,37)" fg:x="44" fg:w="1"/><text x="1.9587%" y="351.50"></text></g><g><title>SkyLight`CGSWindowSynchronizeBacking (1 samples, 0.04%)</title><rect x="1.7087%" y="325" width="0.0388%" height="15" fill="rgb(250,205,27)" fg:x="44" fg:w="1"/><text x="1.9587%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="1.7087%" y="309" width="0.0388%" height="15" fill="rgb(210,80,43)" fg:x="44" fg:w="1"/><text x="1.9587%" y="319.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1.7476%" y="901" width="0.0388%" height="15" fill="rgb(247,160,36)" fg:x="45" fg:w="1"/><text x="1.9976%" y="911.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (1 samples, 0.04%)</title><rect x="1.7864%" y="901" width="0.0388%" height="15" fill="rgb(234,13,49)" fg:x="46" fg:w="1"/><text x="2.0364%" y="911.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.04%)</title><rect x="1.8641%" y="885" width="0.0388%" height="15" fill="rgb(234,122,0)" fg:x="48" fg:w="1"/><text x="2.1141%" y="895.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.04%)</title><rect x="1.9029%" y="853" width="0.0388%" height="15" fill="rgb(207,146,38)" fg:x="49" fg:w="1"/><text x="2.1529%" y="863.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.04%)</title><rect x="1.9029%" y="837" width="0.0388%" height="15" fill="rgb(207,177,25)" fg:x="49" fg:w="1"/><text x="2.1529%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (1 samples, 0.04%)</title><rect x="1.9029%" y="821" width="0.0388%" height="15" fill="rgb(211,178,42)" fg:x="49" fg:w="1"/><text x="2.1529%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (2 samples, 0.08%)</title><rect x="1.9029%" y="869" width="0.0777%" height="15" fill="rgb(230,69,54)" fg:x="49" fg:w="2"/><text x="2.1529%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.04%)</title><rect x="1.9417%" y="853" width="0.0388%" height="15" fill="rgb(214,135,41)" fg:x="50" fg:w="1"/><text x="2.1917%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (5 samples, 0.19%)</title><rect x="1.8252%" y="901" width="0.1942%" height="15" fill="rgb(237,67,25)" fg:x="47" fg:w="5"/><text x="2.0752%" y="911.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (3 samples, 0.12%)</title><rect x="1.9029%" y="885" width="0.1165%" height="15" fill="rgb(222,189,50)" fg:x="49" fg:w="3"/><text x="2.1529%" y="895.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_end_handler (1 samples, 0.04%)</title><rect x="1.9806%" y="869" width="0.0388%" height="15" fill="rgb(245,148,34)" fg:x="51" fg:w="1"/><text x="2.2306%" y="879.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_handler (1 samples, 0.04%)</title><rect x="1.9806%" y="853" width="0.0388%" height="15" fill="rgb(222,29,6)" fg:x="51" fg:w="1"/><text x="2.2306%" y="863.50"></text></g><g><title>wgpu_test`&lt;alloc::rc::Weak&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="1.9806%" y="837" width="0.0388%" height="15" fill="rgb(221,189,43)" fg:x="51" fg:w="1"/><text x="2.2306%" y="847.50"></text></g><g><title>CoreFoundation`CFSetGetCount (1 samples, 0.04%)</title><rect x="2.0194%" y="885" width="0.0388%" height="15" fill="rgb(207,36,27)" fg:x="52" fg:w="1"/><text x="2.2694%" y="895.50"></text></g><g><title>LaunchServices`LaunchServices::Database::Context::_get (1 samples, 0.04%)</title><rect x="2.0583%" y="437" width="0.0388%" height="15" fill="rgb(217,90,24)" fg:x="53" fg:w="1"/><text x="2.3083%" y="447.50"></text></g><g><title>LaunchServices`_LSContextInitCommon(LSContext*, unsigned int const*, unsigned long, NSError* __autoreleasing*) (1 samples, 0.04%)</title><rect x="2.0583%" y="421" width="0.0388%" height="15" fill="rgb(224,66,35)" fg:x="53" fg:w="1"/><text x="2.3083%" y="431.50"></text></g><g><title>LaunchServices`_LSDatabaseGetLog() (1 samples, 0.04%)</title><rect x="2.0583%" y="405" width="0.0388%" height="15" fill="rgb(221,13,50)" fg:x="53" fg:w="1"/><text x="2.3083%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="2.0583%" y="389" width="0.0388%" height="15" fill="rgb(236,68,49)" fg:x="53" fg:w="1"/><text x="2.3083%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="2.0583%" y="373" width="0.0388%" height="15" fill="rgb(229,146,28)" fg:x="53" fg:w="1"/><text x="2.3083%" y="383.50"></text></g><g><title>LaunchServices`invocation function for block in _LSDatabaseGetLog() (1 samples, 0.04%)</title><rect x="2.0583%" y="357" width="0.0388%" height="15" fill="rgb(225,31,38)" fg:x="53" fg:w="1"/><text x="2.3083%" y="367.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.04%)</title><rect x="2.0583%" y="341" width="0.0388%" height="15" fill="rgb(250,208,3)" fg:x="53" fg:w="1"/><text x="2.3083%" y="351.50"></text></g><g><title>HIToolbox`GetInputSourceEnabledPrefsIncludingThirdParty (2 samples, 0.08%)</title><rect x="2.0583%" y="709" width="0.0777%" height="15" fill="rgb(246,54,23)" fg:x="53" fg:w="2"/><text x="2.3083%" y="719.50"></text></g><g><title>HIToolbox`CopyInputSourceEnabledPrefs (2 samples, 0.08%)</title><rect x="2.0583%" y="693" width="0.0777%" height="15" fill="rgb(243,76,11)" fg:x="53" fg:w="2"/><text x="2.3083%" y="703.50"></text></g><g><title>HIToolbox`ValidateEnabledInputSourceIDs (2 samples, 0.08%)</title><rect x="2.0583%" y="677" width="0.0777%" height="15" fill="rgb(245,21,50)" fg:x="53" fg:w="2"/><text x="2.3083%" y="687.50"></text></g><g><title>HIToolbox`islcGetInputMethodIndexFromBundleID (2 samples, 0.08%)</title><rect x="2.0583%" y="661" width="0.0777%" height="15" fill="rgb(228,9,43)" fg:x="53" fg:w="2"/><text x="2.3083%" y="671.50"></text></g><g><title>HIToolbox`GetInputSourceCacheHeader (2 samples, 0.08%)</title><rect x="2.0583%" y="645" width="0.0777%" height="15" fill="rgb(208,100,47)" fg:x="53" fg:w="2"/><text x="2.3083%" y="655.50"></text></g><g><title>HIToolbox`InitializeInputSourceCache (2 samples, 0.08%)</title><rect x="2.0583%" y="629" width="0.0777%" height="15" fill="rgb(232,26,8)" fg:x="53" fg:w="2"/><text x="2.3083%" y="639.50"></text></g><g><title>CarbonCore`IntlFCOpenComponentData (2 samples, 0.08%)</title><rect x="2.0583%" y="613" width="0.0777%" height="15" fill="rgb(216,166,38)" fg:x="53" fg:w="2"/><text x="2.3083%" y="623.50"></text></g><g><title>CarbonCore`CacheFMMapData (2 samples, 0.08%)</title><rect x="2.0583%" y="597" width="0.0777%" height="15" fill="rgb(251,202,51)" fg:x="53" fg:w="2"/><text x="2.3083%" y="607.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (2 samples, 0.08%)</title><rect x="2.0583%" y="581" width="0.0777%" height="15" fill="rgb(254,216,34)" fg:x="53" fg:w="2"/><text x="2.3083%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.08%)</title><rect x="2.0583%" y="565" width="0.0777%" height="15" fill="rgb(251,32,27)" fg:x="53" fg:w="2"/><text x="2.3083%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.08%)</title><rect x="2.0583%" y="549" width="0.0777%" height="15" fill="rgb(208,127,28)" fg:x="53" fg:w="2"/><text x="2.3083%" y="559.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (2 samples, 0.08%)</title><rect x="2.0583%" y="533" width="0.0777%" height="15" fill="rgb(224,137,22)" fg:x="53" fg:w="2"/><text x="2.3083%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.08%)</title><rect x="2.0583%" y="517" width="0.0777%" height="15" fill="rgb(254,70,32)" fg:x="53" fg:w="2"/><text x="2.3083%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.08%)</title><rect x="2.0583%" y="501" width="0.0777%" height="15" fill="rgb(229,75,37)" fg:x="53" fg:w="2"/><text x="2.3083%" y="511.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (2 samples, 0.08%)</title><rect x="2.0583%" y="485" width="0.0777%" height="15" fill="rgb(252,64,23)" fg:x="53" fg:w="2"/><text x="2.3083%" y="495.50"></text></g><g><title>LaunchServices`UTTypeCreatePreferredIdentifierForTag (2 samples, 0.08%)</title><rect x="2.0583%" y="469" width="0.0777%" height="15" fill="rgb(232,162,48)" fg:x="53" fg:w="2"/><text x="2.3083%" y="479.50"></text></g><g><title>LaunchServices`+[UTTypeRecord typeRecordWithTag:ofClass:conformingToIdentifier:] (2 samples, 0.08%)</title><rect x="2.0583%" y="453" width="0.0777%" height="15" fill="rgb(246,160,12)" fg:x="53" fg:w="2"/><text x="2.3083%" y="463.50"></text></g><g><title>LaunchServices`_UTTypeCreateDynamicIdentifierForTag (1 samples, 0.04%)</title><rect x="2.0971%" y="437" width="0.0388%" height="15" fill="rgb(247,166,0)" fg:x="54" fg:w="1"/><text x="2.3471%" y="447.50"></text></g><g><title>LaunchServices`_UTTypeGetTypeCaseInsensitiveText (1 samples, 0.04%)</title><rect x="2.0971%" y="421" width="0.0388%" height="15" fill="rgb(249,219,21)" fg:x="54" fg:w="1"/><text x="2.3471%" y="431.50"></text></g><g><title>LaunchServices`_UTTypeGetCachedType(_LSDatabase*, __CFString const*, unsigned int*) (1 samples, 0.04%)</title><rect x="2.0971%" y="405" width="0.0388%" height="15" fill="rgb(205,209,3)" fg:x="54" fg:w="1"/><text x="2.3471%" y="415.50"></text></g><g><title>LaunchServices`_UTGetActiveTypeForCFStringIdentifier (1 samples, 0.04%)</title><rect x="2.0971%" y="389" width="0.0388%" height="15" fill="rgb(243,44,1)" fg:x="54" fg:w="1"/><text x="2.3471%" y="399.50"></text></g><g><title>LaunchServices`_UTGetActiveTypeForIdentifier (1 samples, 0.04%)</title><rect x="2.0971%" y="373" width="0.0388%" height="15" fill="rgb(206,159,16)" fg:x="54" fg:w="1"/><text x="2.3471%" y="383.50"></text></g><g><title>LaunchServices`_LSSchemaCacheWrite (1 samples, 0.04%)</title><rect x="2.0971%" y="357" width="0.0388%" height="15" fill="rgb(244,77,30)" fg:x="54" fg:w="1"/><text x="2.3471%" y="367.50"></text></g><g><title>LaunchServices`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, unsigned int const&amp;, unsigned int&amp;&gt; (1 samples, 0.04%)</title><rect x="2.0971%" y="341" width="0.0388%" height="15" fill="rgb(218,69,12)" fg:x="54" fg:w="1"/><text x="2.3471%" y="351.50"></text></g><g><title>LaunchServices`std::__1::__hash_table&lt;int, std::__1::hash&lt;int&gt;, std::__1::equal_to&lt;int&gt;, std::__1::allocator&lt;int&gt; &gt;::__rehash (1 samples, 0.04%)</title><rect x="2.0971%" y="325" width="0.0388%" height="15" fill="rgb(212,87,7)" fg:x="54" fg:w="1"/><text x="2.3471%" y="335.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="2.0971%" y="309" width="0.0388%" height="15" fill="rgb(245,114,25)" fg:x="54" fg:w="1"/><text x="2.3471%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="2.0971%" y="293" width="0.0388%" height="15" fill="rgb(210,61,42)" fg:x="54" fg:w="1"/><text x="2.3471%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="2.0971%" y="277" width="0.0388%" height="15" fill="rgb(211,52,33)" fg:x="54" fg:w="1"/><text x="2.3471%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="2.0971%" y="261" width="0.0388%" height="15" fill="rgb(234,58,33)" fg:x="54" fg:w="1"/><text x="2.3471%" y="271.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLInDirectory (1 samples, 0.04%)</title><rect x="2.1359%" y="645" width="0.0388%" height="15" fill="rgb(220,115,36)" fg:x="55" fg:w="1"/><text x="2.3859%" y="655.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.04%)</title><rect x="2.1359%" y="629" width="0.0388%" height="15" fill="rgb(243,153,54)" fg:x="55" fg:w="1"/><text x="2.3859%" y="639.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInDirectory (1 samples, 0.04%)</title><rect x="2.1359%" y="613" width="0.0388%" height="15" fill="rgb(251,47,18)" fg:x="55" fg:w="1"/><text x="2.3859%" y="623.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectory (1 samples, 0.04%)</title><rect x="2.1359%" y="597" width="0.0388%" height="15" fill="rgb(242,102,42)" fg:x="55" fg:w="1"/><text x="2.3859%" y="607.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.04%)</title><rect x="2.1359%" y="581" width="0.0388%" height="15" fill="rgb(234,31,38)" fg:x="55" fg:w="1"/><text x="2.3859%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.04%)</title><rect x="2.1359%" y="565" width="0.0388%" height="15" fill="rgb(221,117,51)" fg:x="55" fg:w="1"/><text x="2.3859%" y="575.50"></text></g><g><title>AppKit`__35-[_NSMenuShortcutUpdater schedule:]_block_invoke (4 samples, 0.16%)</title><rect x="2.0583%" y="853" width="0.1553%" height="15" fill="rgb(212,20,18)" fg:x="53" fg:w="4"/><text x="2.3083%" y="863.50"></text></g><g><title>AppKit`UpdateKeyboardAwareShortcutsForCurrentInputSource (4 samples, 0.16%)</title><rect x="2.0583%" y="837" width="0.1553%" height="15" fill="rgb(245,133,36)" fg:x="53" fg:w="4"/><text x="2.3083%" y="847.50"></text></g><g><title>HIToolbox`TISCopyCurrentKeyboardLayoutInputSource (4 samples, 0.16%)</title><rect x="2.0583%" y="821" width="0.1553%" height="15" fill="rgb(212,6,19)" fg:x="53" fg:w="4"/><text x="2.3083%" y="831.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardLayoutInputSourceRefCreate (4 samples, 0.16%)</title><rect x="2.0583%" y="805" width="0.1553%" height="15" fill="rgb(218,1,36)" fg:x="53" fg:w="4"/><text x="2.3083%" y="815.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardInputSourceRefCreate (4 samples, 0.16%)</title><rect x="2.0583%" y="789" width="0.1553%" height="15" fill="rgb(246,84,54)" fg:x="53" fg:w="4"/><text x="2.3083%" y="799.50"></text></g><g><title>HIToolbox`isCreateCurrentKeyboardInputSourceRef (4 samples, 0.16%)</title><rect x="2.0583%" y="773" width="0.1553%" height="15" fill="rgb(242,110,6)" fg:x="53" fg:w="4"/><text x="2.3083%" y="783.50"></text></g><g><title>HIToolbox`_HaveOnlyOneKeyboardInputSource (4 samples, 0.16%)</title><rect x="2.0583%" y="757" width="0.1553%" height="15" fill="rgb(214,47,5)" fg:x="53" fg:w="4"/><text x="2.3083%" y="767.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (4 samples, 0.16%)</title><rect x="2.0583%" y="741" width="0.1553%" height="15" fill="rgb(218,159,25)" fg:x="53" fg:w="4"/><text x="2.3083%" y="751.50"></text></g><g><title>HIToolbox`isPrefsCreateCacheFromEnabledAndDefaultInputSources (4 samples, 0.16%)</title><rect x="2.0583%" y="725" width="0.1553%" height="15" fill="rgb(215,211,28)" fg:x="53" fg:w="4"/><text x="2.3083%" y="735.50"></text></g><g><title>HIToolbox`isPrefsCreateDefaultASCIIInputSourceForLocale (2 samples, 0.08%)</title><rect x="2.1359%" y="709" width="0.0777%" height="15" fill="rgb(238,59,32)" fg:x="55" fg:w="2"/><text x="2.3859%" y="719.50"></text></g><g><title>HIToolbox`islcCreateKeyboardLayoutNameForID (2 samples, 0.08%)</title><rect x="2.1359%" y="693" width="0.0777%" height="15" fill="rgb(226,82,3)" fg:x="55" fg:w="2"/><text x="2.3859%" y="703.50"></text></g><g><title>HIToolbox`TISGetAppleKeyLayoutIndexForNumericID (2 samples, 0.08%)</title><rect x="2.1359%" y="677" width="0.0777%" height="15" fill="rgb(240,164,32)" fg:x="55" fg:w="2"/><text x="2.3859%" y="687.50"></text></g><g><title>HIToolbox`TISMapAppleKeyLayoutData (2 samples, 0.08%)</title><rect x="2.1359%" y="661" width="0.0777%" height="15" fill="rgb(232,46,7)" fg:x="55" fg:w="2"/><text x="2.3859%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.04%)</title><rect x="2.1748%" y="645" width="0.0388%" height="15" fill="rgb(229,129,53)" fg:x="56" fg:w="1"/><text x="2.4248%" y="655.50"></text></g><g><title>AppKit`-[NSView(NSConstraintBasedLayout) _tryToAddConstraint:integralizationAdjustment:mutuallyExclusiveConstraints:] (1 samples, 0.04%)</title><rect x="2.2136%" y="741" width="0.0388%" height="15" fill="rgb(234,188,29)" fg:x="57" fg:w="1"/><text x="2.4636%" y="751.50"></text></g><g><title>AppKit`-[NSView(NSConstraintBasedLayout) _layoutEngine_didAddLayoutConstraint:integralizationAdjustment:mutuallyExclusiveConstraints:] (1 samples, 0.04%)</title><rect x="2.2136%" y="725" width="0.0388%" height="15" fill="rgb(246,141,4)" fg:x="57" fg:w="1"/><text x="2.4636%" y="735.50"></text></g><g><title>CoreAutoLayout`-[NSLayoutConstraint _addToEngine:mutuallyExclusiveConstraints:] (1 samples, 0.04%)</title><rect x="2.2136%" y="709" width="0.0388%" height="15" fill="rgb(229,23,39)" fg:x="57" fg:w="1"/><text x="2.4636%" y="719.50"></text></g><g><title>CoreAutoLayout`-[NSLayoutConstraint _addLoweredExpression:toEngine:lastLoweredConstantWasRounded:mutuallyExclusiveConstraints:] (1 samples, 0.04%)</title><rect x="2.2136%" y="693" width="0.0388%" height="15" fill="rgb(206,12,3)" fg:x="57" fg:w="1"/><text x="2.4636%" y="703.50"></text></g><g><title>CoreAutoLayout`-[NSISEngine tryToAddConstraintWithMarker:expression:mutuallyExclusiveConstraints:] (1 samples, 0.04%)</title><rect x="2.2136%" y="677" width="0.0388%" height="15" fill="rgb(252,226,20)" fg:x="57" fg:w="1"/><text x="2.4636%" y="687.50"></text></g><g><title>CoreAutoLayout`-[NSISEngine _tryToAddConstraintWithMarkerEngineVar:row:mutuallyExclusiveConstraints:] (1 samples, 0.04%)</title><rect x="2.2136%" y="661" width="0.0388%" height="15" fill="rgb(216,123,35)" fg:x="57" fg:w="1"/><text x="2.4636%" y="671.50"></text></g><g><title>CoreAutoLayout`NSISLinExpEnumerateVars (1 samples, 0.04%)</title><rect x="2.2136%" y="645" width="0.0388%" height="15" fill="rgb(212,68,40)" fg:x="57" fg:w="1"/><text x="2.4636%" y="655.50"></text></g><g><title>CoreAutoLayout`__86-[NSISEngine _tryToAddConstraintWithMarkerEngineVar:row:mutuallyExclusiveConstraints:]_block_invoke (1 samples, 0.04%)</title><rect x="2.2136%" y="629" width="0.0388%" height="15" fill="rgb(254,125,32)" fg:x="57" fg:w="1"/><text x="2.4636%" y="639.50"></text></g><g><title>CoreAutoLayout`NSBitSetCount (1 samples, 0.04%)</title><rect x="2.2136%" y="613" width="0.0388%" height="15" fill="rgb(253,97,22)" fg:x="57" fg:w="1"/><text x="2.4636%" y="623.50"></text></g><g><title>AppKit`+[NSAppearance _functionRowAppearance] (1 samples, 0.04%)</title><rect x="2.2524%" y="709" width="0.0388%" height="15" fill="rgb(241,101,14)" fg:x="58" fg:w="1"/><text x="2.5024%" y="719.50"></text></g><g><title>AppKit`-[NSCompositeAppearance initWithAppearances:] (1 samples, 0.04%)</title><rect x="2.2524%" y="693" width="0.0388%" height="15" fill="rgb(238,103,29)" fg:x="58" fg:w="1"/><text x="2.5024%" y="703.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _updateSystemTintColor] (1 samples, 0.04%)</title><rect x="2.2524%" y="677" width="0.0388%" height="15" fill="rgb(233,195,47)" fg:x="58" fg:w="1"/><text x="2.5024%" y="687.50"></text></g><g><title>CoreFoundation`-[NSArray reverseObjectEnumerator] (1 samples, 0.04%)</title><rect x="2.2524%" y="661" width="0.0388%" height="15" fill="rgb(246,218,30)" fg:x="58" fg:w="1"/><text x="2.5024%" y="671.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.04%)</title><rect x="2.2524%" y="645" width="0.0388%" height="15" fill="rgb(219,145,47)" fg:x="58" fg:w="1"/><text x="2.5024%" y="655.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.04%)</title><rect x="2.2524%" y="629" width="0.0388%" height="15" fill="rgb(243,12,26)" fg:x="58" fg:w="1"/><text x="2.5024%" y="639.50"></text></g><g><title>AppKit`__33+[NSFunctionRowDevice initialize]_block_invoke.1 (3 samples, 0.12%)</title><rect x="2.2136%" y="837" width="0.1165%" height="15" fill="rgb(214,87,16)" fg:x="57" fg:w="3"/><text x="2.4636%" y="847.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (3 samples, 0.12%)</title><rect x="2.2136%" y="821" width="0.1165%" height="15" fill="rgb(208,99,42)" fg:x="57" fg:w="3"/><text x="2.4636%" y="831.50"></text></g><g><title>Foundation`NSKeyValueDidChange (3 samples, 0.12%)</title><rect x="2.2136%" y="805" width="0.1165%" height="15" fill="rgb(253,99,2)" fg:x="57" fg:w="3"/><text x="2.4636%" y="815.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (3 samples, 0.12%)</title><rect x="2.2136%" y="789" width="0.1165%" height="15" fill="rgb(220,168,23)" fg:x="57" fg:w="3"/><text x="2.4636%" y="799.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController _sync] (3 samples, 0.12%)</title><rect x="2.2136%" y="773" width="0.1165%" height="15" fill="rgb(242,38,24)" fg:x="57" fg:w="3"/><text x="2.4636%" y="783.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController _setup] (3 samples, 0.12%)</title><rect x="2.2136%" y="757" width="0.1165%" height="15" fill="rgb(225,182,9)" fg:x="57" fg:w="3"/><text x="2.4636%" y="767.50"></text></g><g><title>AppKit`-[_NSFunctionRow initWithType:] (2 samples, 0.08%)</title><rect x="2.2524%" y="741" width="0.0777%" height="15" fill="rgb(243,178,37)" fg:x="58" fg:w="2"/><text x="2.5024%" y="751.50"></text></g><g><title>AppKit`-[_NSFunctionRow initWithDFRElementAttributes:] (2 samples, 0.08%)</title><rect x="2.2524%" y="725" width="0.0777%" height="15" fill="rgb(232,139,19)" fg:x="58" fg:w="2"/><text x="2.5024%" y="735.50"></text></g><g><title>AppKit`-[_NSFunctionRowPanel initWithFunctionRow:] (1 samples, 0.04%)</title><rect x="2.2913%" y="709" width="0.0388%" height="15" fill="rgb(225,201,24)" fg:x="59" fg:w="1"/><text x="2.5413%" y="719.50"></text></g><g><title>AppKit`-[NSView setAppearance:] (1 samples, 0.04%)</title><rect x="2.2913%" y="693" width="0.0388%" height="15" fill="rgb(221,47,46)" fg:x="59" fg:w="1"/><text x="2.5413%" y="703.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (1 samples, 0.04%)</title><rect x="2.2913%" y="677" width="0.0388%" height="15" fill="rgb(249,23,13)" fg:x="59" fg:w="1"/><text x="2.5413%" y="687.50"></text></g><g><title>AppKit`-[NSView _viewDidChangeAppearance:] (1 samples, 0.04%)</title><rect x="2.2913%" y="661" width="0.0388%" height="15" fill="rgb(219,9,5)" fg:x="59" fg:w="1"/><text x="2.5413%" y="671.50"></text></g><g><title>AppKit`-[NSView _viewDidChangeAppearance:] (1 samples, 0.04%)</title><rect x="2.2913%" y="645" width="0.0388%" height="15" fill="rgb(254,171,16)" fg:x="59" fg:w="1"/><text x="2.5413%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="2.2913%" y="629" width="0.0388%" height="15" fill="rgb(230,171,20)" fg:x="59" fg:w="1"/><text x="2.5413%" y="639.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (4 samples, 0.16%)</title><rect x="2.2136%" y="853" width="0.1553%" height="15" fill="rgb(210,71,41)" fg:x="57" fg:w="4"/><text x="2.4636%" y="863.50"></text></g><g><title>AppKit`__NSSyncEmojiDFRInputMethodWithDynamicFunctionRowAvailable (1 samples, 0.04%)</title><rect x="2.3301%" y="837" width="0.0388%" height="15" fill="rgb(206,173,20)" fg:x="60" fg:w="1"/><text x="2.5801%" y="847.50"></text></g><g><title>HIToolbox`_TSMSetInputSourceEnabled (1 samples, 0.04%)</title><rect x="2.3301%" y="821" width="0.0388%" height="15" fill="rgb(233,88,34)" fg:x="60" fg:w="1"/><text x="2.5801%" y="831.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.04%)</title><rect x="2.3301%" y="805" width="0.0388%" height="15" fill="rgb(223,209,46)" fg:x="60" fg:w="1"/><text x="2.5801%" y="815.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.04%)</title><rect x="2.3301%" y="789" width="0.0388%" height="15" fill="rgb(250,43,18)" fg:x="60" fg:w="1"/><text x="2.5801%" y="799.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.04%)</title><rect x="2.3301%" y="773" width="0.0388%" height="15" fill="rgb(208,13,10)" fg:x="60" fg:w="1"/><text x="2.5801%" y="783.50"></text></g><g><title>HIToolbox`islCreateInputMethodInvisible (1 samples, 0.04%)</title><rect x="2.3301%" y="757" width="0.0388%" height="15" fill="rgb(212,200,36)" fg:x="60" fg:w="1"/><text x="2.5801%" y="767.50"></text></g><g><title>CoreFoundation`CFBundleGetValueForInfoDictionaryKey (1 samples, 0.04%)</title><rect x="2.3301%" y="741" width="0.0388%" height="15" fill="rgb(225,90,30)" fg:x="60" fg:w="1"/><text x="2.5801%" y="751.50"></text></g><g><title>CoreFoundation`CFBundleGetLocalInfoDictionary (1 samples, 0.04%)</title><rect x="2.3301%" y="725" width="0.0388%" height="15" fill="rgb(236,182,39)" fg:x="60" fg:w="1"/><text x="2.5801%" y="735.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.04%)</title><rect x="2.3301%" y="709" width="0.0388%" height="15" fill="rgb(212,144,35)" fg:x="60" fg:w="1"/><text x="2.5801%" y="719.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.04%)</title><rect x="2.3301%" y="693" width="0.0388%" height="15" fill="rgb(228,63,44)" fg:x="60" fg:w="1"/><text x="2.5801%" y="703.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.04%)</title><rect x="2.3301%" y="677" width="0.0388%" height="15" fill="rgb(228,109,6)" fg:x="60" fg:w="1"/><text x="2.5801%" y="687.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.04%)</title><rect x="2.3301%" y="661" width="0.0388%" height="15" fill="rgb(238,117,24)" fg:x="60" fg:w="1"/><text x="2.5801%" y="671.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.04%)</title><rect x="2.3301%" y="645" width="0.0388%" height="15" fill="rgb(242,26,26)" fg:x="60" fg:w="1"/><text x="2.5801%" y="655.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.04%)</title><rect x="2.3301%" y="629" width="0.0388%" height="15" fill="rgb(221,92,48)" fg:x="60" fg:w="1"/><text x="2.5801%" y="639.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.04%)</title><rect x="2.3301%" y="613" width="0.0388%" height="15" fill="rgb(209,209,32)" fg:x="60" fg:w="1"/><text x="2.5801%" y="623.50"></text></g><g><title>CoreFoundation`___CFBundleReadDirectory_block_invoke (1 samples, 0.04%)</title><rect x="2.3301%" y="597" width="0.0388%" height="15" fill="rgb(221,70,22)" fg:x="60" fg:w="1"/><text x="2.5801%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSArrayM addObject:] (1 samples, 0.04%)</title><rect x="2.3301%" y="581" width="0.0388%" height="15" fill="rgb(248,145,5)" fg:x="60" fg:w="1"/><text x="2.5801%" y="591.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (1 samples, 0.04%)</title><rect x="2.3689%" y="853" width="0.0388%" height="15" fill="rgb(226,116,26)" fg:x="61" fg:w="1"/><text x="2.6189%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (10 samples, 0.39%)</title><rect x="2.0583%" y="885" width="0.3883%" height="15" fill="rgb(244,5,17)" fg:x="53" fg:w="10"/><text x="2.3083%" y="895.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (10 samples, 0.39%)</title><rect x="2.0583%" y="869" width="0.3883%" height="15" fill="rgb(252,159,33)" fg:x="53" fg:w="10"/><text x="2.3083%" y="879.50"></text></g><g><title>LaunchServices`___LSScheduleNotificationFunction_block_invoke_2 (1 samples, 0.04%)</title><rect x="2.4078%" y="853" width="0.0388%" height="15" fill="rgb(206,71,0)" fg:x="62" fg:w="1"/><text x="2.6578%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopSetOptionsReason (1 samples, 0.04%)</title><rect x="2.4078%" y="837" width="0.0388%" height="15" fill="rgb(233,118,54)" fg:x="62" fg:w="1"/><text x="2.6578%" y="847.50"></text></g><g><title>CoreFoundation`____CFRunLoopSetOptionsReason_block_invoke_3.100 (1 samples, 0.04%)</title><rect x="2.4078%" y="821" width="0.0388%" height="15" fill="rgb(234,83,48)" fg:x="62" fg:w="1"/><text x="2.6578%" y="831.50"></text></g><g><title>RunningBoardServices`rbs_acquire_appnap_assertion (1 samples, 0.04%)</title><rect x="2.4078%" y="805" width="0.0388%" height="15" fill="rgb(228,3,54)" fg:x="62" fg:w="1"/><text x="2.6578%" y="815.50"></text></g><g><title>RunningBoardServices`-[RBSAssertion acquireWithError:] (1 samples, 0.04%)</title><rect x="2.4078%" y="789" width="0.0388%" height="15" fill="rgb(226,155,13)" fg:x="62" fg:w="1"/><text x="2.6578%" y="799.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.04%)</title><rect x="2.4078%" y="773" width="0.0388%" height="15" fill="rgb(241,28,37)" fg:x="62" fg:w="1"/><text x="2.6578%" y="783.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.04%)</title><rect x="2.4078%" y="757" width="0.0388%" height="15" fill="rgb(233,93,10)" fg:x="62" fg:w="1"/><text x="2.6578%" y="767.50"></text></g><g><title>HIToolbox`SectSelectableInputSourcesArrayFromCurrentState (1 samples, 0.04%)</title><rect x="2.4854%" y="757" width="0.0388%" height="15" fill="rgb(225,113,19)" fg:x="64" fg:w="1"/><text x="2.7354%" y="767.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray (1 samples, 0.04%)</title><rect x="2.4854%" y="741" width="0.0388%" height="15" fill="rgb(241,2,18)" fg:x="64" fg:w="1"/><text x="2.7354%" y="751.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray_Mutable (1 samples, 0.04%)</title><rect x="2.4854%" y="725" width="0.0388%" height="15" fill="rgb(228,207,21)" fg:x="64" fg:w="1"/><text x="2.7354%" y="735.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.04%)</title><rect x="2.4854%" y="709" width="0.0388%" height="15" fill="rgb(213,211,35)" fg:x="64" fg:w="1"/><text x="2.7354%" y="719.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.04%)</title><rect x="2.4854%" y="693" width="0.0388%" height="15" fill="rgb(209,83,10)" fg:x="64" fg:w="1"/><text x="2.7354%" y="703.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.04%)</title><rect x="2.4854%" y="677" width="0.0388%" height="15" fill="rgb(209,164,1)" fg:x="64" fg:w="1"/><text x="2.7354%" y="687.50"></text></g><g><title>HIToolbox`islPopulateKLPropertiesFromBundle (1 samples, 0.04%)</title><rect x="2.4854%" y="661" width="0.0388%" height="15" fill="rgb(213,184,43)" fg:x="64" fg:w="1"/><text x="2.7354%" y="671.50"></text></g><g><title>CoreFoundation`CFBundleGetValueForInfoDictionaryKey (1 samples, 0.04%)</title><rect x="2.4854%" y="645" width="0.0388%" height="15" fill="rgb(231,61,34)" fg:x="64" fg:w="1"/><text x="2.7354%" y="655.50"></text></g><g><title>CoreFoundation`CFBundleGetLocalInfoDictionary (1 samples, 0.04%)</title><rect x="2.4854%" y="629" width="0.0388%" height="15" fill="rgb(235,75,3)" fg:x="64" fg:w="1"/><text x="2.7354%" y="639.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.04%)</title><rect x="2.4854%" y="613" width="0.0388%" height="15" fill="rgb(220,106,47)" fg:x="64" fg:w="1"/><text x="2.7354%" y="623.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.04%)</title><rect x="2.4854%" y="597" width="0.0388%" height="15" fill="rgb(210,196,33)" fg:x="64" fg:w="1"/><text x="2.7354%" y="607.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.04%)</title><rect x="2.4854%" y="581" width="0.0388%" height="15" fill="rgb(229,154,42)" fg:x="64" fg:w="1"/><text x="2.7354%" y="591.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.04%)</title><rect x="2.4854%" y="565" width="0.0388%" height="15" fill="rgb(228,114,26)" fg:x="64" fg:w="1"/><text x="2.7354%" y="575.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInBundle (1 samples, 0.04%)</title><rect x="2.4854%" y="549" width="0.0388%" height="15" fill="rgb(208,144,1)" fg:x="64" fg:w="1"/><text x="2.7354%" y="559.50"></text></g><g><title>CoreFoundation`CFBundleCopyBundleLocalizations (1 samples, 0.04%)</title><rect x="2.4854%" y="533" width="0.0388%" height="15" fill="rgb(239,112,37)" fg:x="64" fg:w="1"/><text x="2.7354%" y="543.50"></text></g><g><title>CoreFoundation`_copyBundleLocalizationsFromResources (1 samples, 0.04%)</title><rect x="2.4854%" y="517" width="0.0388%" height="15" fill="rgb(210,96,50)" fg:x="64" fg:w="1"/><text x="2.7354%" y="527.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLProjDirectoriesForURL (1 samples, 0.04%)</title><rect x="2.4854%" y="501" width="0.0388%" height="15" fill="rgb(222,178,2)" fg:x="64" fg:w="1"/><text x="2.7354%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.04%)</title><rect x="2.4854%" y="485" width="0.0388%" height="15" fill="rgb(226,74,18)" fg:x="64" fg:w="1"/><text x="2.7354%" y="495.50"></text></g><g><title>HIToolbox`Stop_CapsLock_KBLayoutDelayOverride_Timer (1 samples, 0.04%)</title><rect x="2.5243%" y="757" width="0.0388%" height="15" fill="rgb(225,67,54)" fg:x="65" fg:w="1"/><text x="2.7743%" y="767.50"></text></g><g><title>HIToolbox`TISIsRomanSwitchEnabled (1 samples, 0.04%)</title><rect x="2.5243%" y="741" width="0.0388%" height="15" fill="rgb(251,92,32)" fg:x="65" fg:w="1"/><text x="2.7743%" y="751.50"></text></g><g><title>HIToolbox`TISGetRomanSwitchState (1 samples, 0.04%)</title><rect x="2.5243%" y="725" width="0.0388%" height="15" fill="rgb(228,149,22)" fg:x="65" fg:w="1"/><text x="2.7743%" y="735.50"></text></g><g><title>HIServices`HIS_XPC_GetCapsLockLanguageSwitch (1 samples, 0.04%)</title><rect x="2.5243%" y="709" width="0.0388%" height="15" fill="rgb(243,54,13)" fg:x="65" fg:w="1"/><text x="2.7743%" y="719.50"></text></g><g><title>HIServices`_SendMessageToHISService (1 samples, 0.04%)</title><rect x="2.5243%" y="693" width="0.0388%" height="15" fill="rgb(243,180,28)" fg:x="65" fg:w="1"/><text x="2.7743%" y="703.50"></text></g><g><title>libxpc.dylib`xpc_connection_resume (1 samples, 0.04%)</title><rect x="2.5243%" y="677" width="0.0388%" height="15" fill="rgb(208,167,24)" fg:x="65" fg:w="1"/><text x="2.7743%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_connection_activate_if_needed (1 samples, 0.04%)</title><rect x="2.5243%" y="661" width="0.0388%" height="15" fill="rgb(245,73,45)" fg:x="65" fg:w="1"/><text x="2.7743%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_connection_init (1 samples, 0.04%)</title><rect x="2.5243%" y="645" width="0.0388%" height="15" fill="rgb(237,203,48)" fg:x="65" fg:w="1"/><text x="2.7743%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_uncork_domain (1 samples, 0.04%)</title><rect x="2.5243%" y="629" width="0.0388%" height="15" fill="rgb(211,197,16)" fg:x="65" fg:w="1"/><text x="2.7743%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_bootstrap_services (1 samples, 0.04%)</title><rect x="2.5243%" y="613" width="0.0388%" height="15" fill="rgb(243,99,51)" fg:x="65" fg:w="1"/><text x="2.7743%" y="623.50"></text></g><g><title>libxpc.dylib`_xpc_interface_routine (1 samples, 0.04%)</title><rect x="2.5243%" y="597" width="0.0388%" height="15" fill="rgb(215,123,29)" fg:x="65" fg:w="1"/><text x="2.7743%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.04%)</title><rect x="2.5243%" y="581" width="0.0388%" height="15" fill="rgb(239,186,37)" fg:x="65" fg:w="1"/><text x="2.7743%" y="591.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_pack_message (1 samples, 0.04%)</title><rect x="2.5243%" y="565" width="0.0388%" height="15" fill="rgb(252,136,39)" fg:x="65" fg:w="1"/><text x="2.7743%" y="575.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.04%)</title><rect x="2.5243%" y="549" width="0.0388%" height="15" fill="rgb(223,213,32)" fg:x="65" fg:w="1"/><text x="2.7743%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.04%)</title><rect x="2.5243%" y="533" width="0.0388%" height="15" fill="rgb(233,115,5)" fg:x="65" fg:w="1"/><text x="2.7743%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.04%)</title><rect x="2.5243%" y="517" width="0.0388%" height="15" fill="rgb(207,226,44)" fg:x="65" fg:w="1"/><text x="2.7743%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.04%)</title><rect x="2.5243%" y="501" width="0.0388%" height="15" fill="rgb(208,126,0)" fg:x="65" fg:w="1"/><text x="2.7743%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.04%)</title><rect x="2.5243%" y="485" width="0.0388%" height="15" fill="rgb(244,66,21)" fg:x="65" fg:w="1"/><text x="2.7743%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_append (1 samples, 0.04%)</title><rect x="2.5243%" y="469" width="0.0388%" height="15" fill="rgb(222,97,12)" fg:x="65" fg:w="1"/><text x="2.7743%" y="479.50"></text></g><g><title>HIToolbox`-[IMKClient _requestGetServerRetryNotifyingTarget:withSelector:] (1 samples, 0.04%)</title><rect x="2.5631%" y="645" width="0.0388%" height="15" fill="rgb(219,213,19)" fg:x="66" fg:w="1"/><text x="2.8131%" y="655.50"></text></g><g><title>HIToolbox`_TISCopyParentInputMethodForBundleID (1 samples, 0.04%)</title><rect x="2.5631%" y="629" width="0.0388%" height="15" fill="rgb(252,169,30)" fg:x="66" fg:w="1"/><text x="2.8131%" y="639.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.04%)</title><rect x="2.5631%" y="613" width="0.0388%" height="15" fill="rgb(206,32,51)" fg:x="66" fg:w="1"/><text x="2.8131%" y="623.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.04%)</title><rect x="2.5631%" y="597" width="0.0388%" height="15" fill="rgb(250,172,42)" fg:x="66" fg:w="1"/><text x="2.8131%" y="607.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.04%)</title><rect x="2.5631%" y="581" width="0.0388%" height="15" fill="rgb(209,34,43)" fg:x="66" fg:w="1"/><text x="2.8131%" y="591.50"></text></g><g><title>HIToolbox`ActivateInputMethodInstance (2 samples, 0.08%)</title><rect x="2.5631%" y="693" width="0.0777%" height="15" fill="rgb(223,11,35)" fg:x="66" fg:w="2"/><text x="2.8131%" y="703.50"></text></g><g><title>HIToolbox`IMKInputSessionActivate (2 samples, 0.08%)</title><rect x="2.5631%" y="677" width="0.0777%" height="15" fill="rgb(251,219,26)" fg:x="66" fg:w="2"/><text x="2.8131%" y="687.50"></text></g><g><title>HIToolbox`-[IMKInputSession activate] (2 samples, 0.08%)</title><rect x="2.5631%" y="661" width="0.0777%" height="15" fill="rgb(231,119,3)" fg:x="66" fg:w="2"/><text x="2.8131%" y="671.50"></text></g><g><title>HIToolbox`-[IMKClient shouldUseXPC] (1 samples, 0.04%)</title><rect x="2.6019%" y="645" width="0.0388%" height="15" fill="rgb(216,97,11)" fg:x="67" fg:w="1"/><text x="2.8519%" y="655.50"></text></g><g><title>HIToolbox`isLaunchdOptionIn() (1 samples, 0.04%)</title><rect x="2.6019%" y="629" width="0.0388%" height="15" fill="rgb(223,59,9)" fg:x="67" fg:w="1"/><text x="2.8519%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`stat$INODE64 (1 samples, 0.04%)</title><rect x="2.6019%" y="613" width="0.0388%" height="15" fill="rgb(233,93,31)" fg:x="67" fg:w="1"/><text x="2.8519%" y="623.50"></text></g><g><title>HIToolbox`utOpenActivateAllSelectedIMInDoc (3 samples, 0.12%)</title><rect x="2.5631%" y="757" width="0.1165%" height="15" fill="rgb(239,81,33)" fg:x="66" fg:w="3"/><text x="2.8131%" y="767.50"></text></g><g><title>CoreFoundation`CFArrayApplyFunction (3 samples, 0.12%)</title><rect x="2.5631%" y="741" width="0.1165%" height="15" fill="rgb(213,120,34)" fg:x="66" fg:w="3"/><text x="2.8131%" y="751.50"></text></g><g><title>HIToolbox`utOpenActivateAllSelectedIMInDocIterator (3 samples, 0.12%)</title><rect x="2.5631%" y="725" width="0.1165%" height="15" fill="rgb(243,49,53)" fg:x="66" fg:w="3"/><text x="2.8131%" y="735.50"></text></g><g><title>HIToolbox`utOpenActivateSelectedInputMethodInDoc (3 samples, 0.12%)</title><rect x="2.5631%" y="709" width="0.1165%" height="15" fill="rgb(247,216,33)" fg:x="66" fg:w="3"/><text x="2.8131%" y="719.50"></text></g><g><title>HIToolbox`CreateInputMethodInstance (1 samples, 0.04%)</title><rect x="2.6408%" y="693" width="0.0388%" height="15" fill="rgb(226,26,14)" fg:x="68" fg:w="1"/><text x="2.8908%" y="703.50"></text></g><g><title>HIToolbox`IMKInputSessionCreate (1 samples, 0.04%)</title><rect x="2.6408%" y="677" width="0.0388%" height="15" fill="rgb(215,49,53)" fg:x="68" fg:w="1"/><text x="2.8908%" y="687.50"></text></g><g><title>Foundation`-[NSBundle infoDictionary] (1 samples, 0.04%)</title><rect x="2.6408%" y="661" width="0.0388%" height="15" fill="rgb(245,162,40)" fg:x="68" fg:w="1"/><text x="2.8908%" y="671.50"></text></g><g><title>Foundation`-[NSBundle _cfBundle] (1 samples, 0.04%)</title><rect x="2.6408%" y="645" width="0.0388%" height="15" fill="rgb(229,68,17)" fg:x="68" fg:w="1"/><text x="2.8908%" y="655.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithFileSystemPath (1 samples, 0.04%)</title><rect x="2.6408%" y="629" width="0.0388%" height="15" fill="rgb(213,182,10)" fg:x="68" fg:w="1"/><text x="2.8908%" y="639.50"></text></g><g><title>CoreFoundation`POSIXPathToURLPath (1 samples, 0.04%)</title><rect x="2.6408%" y="613" width="0.0388%" height="15" fill="rgb(245,125,30)" fg:x="68" fg:w="1"/><text x="2.8908%" y="623.50"></text></g><g><title>CoreFoundation`CreateStringFromFileSystemRepresentationByAddingPercentEscapes (1 samples, 0.04%)</title><rect x="2.6408%" y="597" width="0.0388%" height="15" fill="rgb(232,202,2)" fg:x="68" fg:w="1"/><text x="2.8908%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="2.6408%" y="581" width="0.0388%" height="15" fill="rgb(237,140,51)" fg:x="68" fg:w="1"/><text x="2.8908%" y="591.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (6 samples, 0.23%)</title><rect x="2.4854%" y="821" width="0.2330%" height="15" fill="rgb(236,157,25)" fg:x="64" fg:w="6"/><text x="2.7354%" y="831.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (6 samples, 0.23%)</title><rect x="2.4854%" y="805" width="0.2330%" height="15" fill="rgb(219,209,0)" fg:x="64" fg:w="6"/><text x="2.7354%" y="815.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (6 samples, 0.23%)</title><rect x="2.4854%" y="789" width="0.2330%" height="15" fill="rgb(240,116,54)" fg:x="64" fg:w="6"/><text x="2.7354%" y="799.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (6 samples, 0.23%)</title><rect x="2.4854%" y="773" width="0.2330%" height="15" fill="rgb(216,10,36)" fg:x="64" fg:w="6"/><text x="2.7354%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="2.6796%" y="757" width="0.0388%" height="15" fill="rgb(222,72,44)" fg:x="69" fg:w="1"/><text x="2.9296%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="2.6796%" y="741" width="0.0388%" height="15" fill="rgb(232,159,9)" fg:x="69" fg:w="1"/><text x="2.9296%" y="751.50"></text></g><g><title>HIToolbox`__InitTSMUISetup_block_invoke (1 samples, 0.04%)</title><rect x="2.6796%" y="725" width="0.0388%" height="15" fill="rgb(210,39,32)" fg:x="69" fg:w="1"/><text x="2.9296%" y="735.50"></text></g><g><title>HIToolbox`SyncHandwritingHotKey (1 samples, 0.04%)</title><rect x="2.6796%" y="709" width="0.0388%" height="15" fill="rgb(216,194,45)" fg:x="69" fg:w="1"/><text x="2.9296%" y="719.50"></text></g><g><title>HIToolbox`String.__ivar_initializer (1 samples, 0.04%)</title><rect x="2.6796%" y="693" width="0.0388%" height="15" fill="rgb(218,18,35)" fg:x="69" fg:w="1"/><text x="2.9296%" y="703.50"></text></g><g><title>HIToolbox`CopyInputSourceRefForInputSourceID (1 samples, 0.04%)</title><rect x="2.6796%" y="677" width="0.0388%" height="15" fill="rgb(207,83,51)" fg:x="69" fg:w="1"/><text x="2.9296%" y="687.50"></text></g><g><title>HIToolbox`TISCreateInputSourceList (1 samples, 0.04%)</title><rect x="2.6796%" y="661" width="0.0388%" height="15" fill="rgb(225,63,43)" fg:x="69" fg:w="1"/><text x="2.9296%" y="671.50"></text></g><g><title>HIToolbox`TSMGetInputSourceCountWithFilteredAdditions (1 samples, 0.04%)</title><rect x="2.6796%" y="645" width="0.0388%" height="15" fill="rgb(207,57,36)" fg:x="69" fg:w="1"/><text x="2.9296%" y="655.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (1 samples, 0.04%)</title><rect x="2.6796%" y="629" width="0.0388%" height="15" fill="rgb(216,99,33)" fg:x="69" fg:w="1"/><text x="2.9296%" y="639.50"></text></g><g><title>HIToolbox`islcCopyInputSourceDataInCacheAtIndex (1 samples, 0.04%)</title><rect x="2.6796%" y="613" width="0.0388%" height="15" fill="rgb(225,42,16)" fg:x="69" fg:w="1"/><text x="2.9296%" y="623.50"></text></g><g><title>HIToolbox`CreateInputSourceCacheDescriptorAtIndex (1 samples, 0.04%)</title><rect x="2.6796%" y="597" width="0.0388%" height="15" fill="rgb(220,201,45)" fg:x="69" fg:w="1"/><text x="2.9296%" y="607.50"></text></g><g><title>HIToolbox`CreateKLInputSourceIDFromCacheElem (1 samples, 0.04%)</title><rect x="2.6796%" y="581" width="0.0388%" height="15" fill="rgb(225,33,4)" fg:x="69" fg:w="1"/><text x="2.9296%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="2.6796%" y="565" width="0.0388%" height="15" fill="rgb(224,33,50)" fg:x="69" fg:w="1"/><text x="2.9296%" y="575.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (7 samples, 0.27%)</title><rect x="2.4854%" y="837" width="0.2718%" height="15" fill="rgb(246,198,51)" fg:x="64" fg:w="7"/><text x="2.7354%" y="847.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.04%)</title><rect x="2.7184%" y="821" width="0.0388%" height="15" fill="rgb(205,22,4)" fg:x="70" fg:w="1"/><text x="2.9684%" y="831.50"></text></g><g><title>Foundation`NSAllocateObject (1 samples, 0.04%)</title><rect x="2.7184%" y="805" width="0.0388%" height="15" fill="rgb(206,3,8)" fg:x="70" fg:w="1"/><text x="2.9684%" y="815.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.04%)</title><rect x="2.7573%" y="805" width="0.0388%" height="15" fill="rgb(251,23,15)" fg:x="71" fg:w="1"/><text x="3.0073%" y="815.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (1 samples, 0.04%)</title><rect x="2.7573%" y="789" width="0.0388%" height="15" fill="rgb(252,88,28)" fg:x="71" fg:w="1"/><text x="3.0073%" y="799.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (1 samples, 0.04%)</title><rect x="2.7573%" y="773" width="0.0388%" height="15" fill="rgb(212,127,14)" fg:x="71" fg:w="1"/><text x="3.0073%" y="783.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::commit_transaction (1 samples, 0.04%)</title><rect x="2.7573%" y="757" width="0.0388%" height="15" fill="rgb(247,145,37)" fg:x="71" fg:w="1"/><text x="3.0073%" y="767.50"></text></g><g><title>QuartzCore`CA::Render::Layer::~Layer (1 samples, 0.04%)</title><rect x="2.7573%" y="741" width="0.0388%" height="15" fill="rgb(209,117,53)" fg:x="71" fg:w="1"/><text x="3.0073%" y="751.50"></text></g><g><title>QuartzCore`CA::Render::Layer::~Layer (1 samples, 0.04%)</title><rect x="2.7573%" y="725" width="0.0388%" height="15" fill="rgb(212,90,42)" fg:x="71" fg:w="1"/><text x="3.0073%" y="735.50"></text></g><g><title>QuartzCore`CA::Render::Layer::Ext::unref (1 samples, 0.04%)</title><rect x="2.7573%" y="709" width="0.0388%" height="15" fill="rgb(218,164,37)" fg:x="71" fg:w="1"/><text x="3.0073%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="2.7573%" y="693" width="0.0388%" height="15" fill="rgb(246,65,34)" fg:x="71" fg:w="1"/><text x="3.0073%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="2.7573%" y="677" width="0.0388%" height="15" fill="rgb(231,100,33)" fg:x="71" fg:w="1"/><text x="3.0073%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="2.7573%" y="661" width="0.0388%" height="15" fill="rgb(228,126,14)" fg:x="71" fg:w="1"/><text x="3.0073%" y="671.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForLayout_block_invoke (1 samples, 0.04%)</title><rect x="2.7961%" y="757" width="0.0388%" height="15" fill="rgb(215,173,21)" fg:x="72" fg:w="1"/><text x="3.0461%" y="767.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) layoutIfNeeded] (1 samples, 0.04%)</title><rect x="2.7961%" y="741" width="0.0388%" height="15" fill="rgb(210,6,40)" fg:x="72" fg:w="1"/><text x="3.0461%" y="751.50"></text></g><g><title>CoreAutoLayout`-[NSISEngine withBehaviors:performModifications:] (1 samples, 0.04%)</title><rect x="2.7961%" y="725" width="0.0388%" height="15" fill="rgb(212,48,18)" fg:x="72" fg:w="1"/><text x="3.0461%" y="735.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _changeWindowFrameFromConstraintsIfNecessary] (1 samples, 0.04%)</title><rect x="2.7961%" y="709" width="0.0388%" height="15" fill="rgb(230,214,11)" fg:x="72" fg:w="1"/><text x="3.0461%" y="719.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _fromConstraintsSetWindowFrame:] (1 samples, 0.04%)</title><rect x="2.7961%" y="693" width="0.0388%" height="15" fill="rgb(254,105,39)" fg:x="72" fg:w="1"/><text x="3.0461%" y="703.50"></text></g><g><title>AppKit`-[NSWindow _setFrameCommon:display:fromServer:] (1 samples, 0.04%)</title><rect x="2.7961%" y="677" width="0.0388%" height="15" fill="rgb(245,158,5)" fg:x="72" fg:w="1"/><text x="3.0461%" y="687.50"></text></g><g><title>AppKit`-[NSWindow _oldPlaceWindow:fromServer:] (1 samples, 0.04%)</title><rect x="2.7961%" y="661" width="0.0388%" height="15" fill="rgb(249,208,11)" fg:x="72" fg:w="1"/><text x="3.0461%" y="671.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _layoutViewTree] (1 samples, 0.04%)</title><rect x="2.7961%" y="645" width="0.0388%" height="15" fill="rgb(210,39,28)" fg:x="72" fg:w="1"/><text x="3.0461%" y="655.50"></text></g><g><title>AppKit`-[NSView _layoutSubtreeIfNeededAndAllowTemporaryEngine:] (1 samples, 0.04%)</title><rect x="2.7961%" y="629" width="0.0388%" height="15" fill="rgb(211,56,53)" fg:x="72" fg:w="1"/><text x="3.0461%" y="639.50"></text></g><g><title>AppKit`-[NSView resizeWithOldSuperviewSize:] (1 samples, 0.04%)</title><rect x="2.7961%" y="613" width="0.0388%" height="15" fill="rgb(226,201,30)" fg:x="72" fg:w="1"/><text x="3.0461%" y="623.50"></text></g><g><title>AppKit`-[NSView setFrame:] (1 samples, 0.04%)</title><rect x="2.7961%" y="597" width="0.0388%" height="15" fill="rgb(239,101,34)" fg:x="72" fg:w="1"/><text x="3.0461%" y="607.50"></text></g><g><title>AppKit`-[NSNextStepFrame setFrameSize:] (1 samples, 0.04%)</title><rect x="2.7961%" y="581" width="0.0388%" height="15" fill="rgb(226,209,5)" fg:x="72" fg:w="1"/><text x="3.0461%" y="591.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (1 samples, 0.04%)</title><rect x="2.7961%" y="565" width="0.0388%" height="15" fill="rgb(250,105,47)" fg:x="72" fg:w="1"/><text x="3.0461%" y="575.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (1 samples, 0.04%)</title><rect x="2.7961%" y="549" width="0.0388%" height="15" fill="rgb(230,72,3)" fg:x="72" fg:w="1"/><text x="3.0461%" y="559.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (1 samples, 0.04%)</title><rect x="2.7961%" y="533" width="0.0388%" height="15" fill="rgb(232,218,39)" fg:x="72" fg:w="1"/><text x="3.0461%" y="543.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (1 samples, 0.04%)</title><rect x="2.7961%" y="517" width="0.0388%" height="15" fill="rgb(248,166,6)" fg:x="72" fg:w="1"/><text x="3.0461%" y="527.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (10 samples, 0.39%)</title><rect x="2.4854%" y="853" width="0.3883%" height="15" fill="rgb(247,89,20)" fg:x="64" fg:w="10"/><text x="2.7354%" y="863.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (3 samples, 0.12%)</title><rect x="2.7573%" y="837" width="0.1165%" height="15" fill="rgb(248,130,54)" fg:x="71" fg:w="3"/><text x="3.0073%" y="847.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (3 samples, 0.12%)</title><rect x="2.7573%" y="821" width="0.1165%" height="15" fill="rgb(234,196,4)" fg:x="71" fg:w="3"/><text x="3.0073%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (2 samples, 0.08%)</title><rect x="2.7961%" y="805" width="0.0777%" height="15" fill="rgb(250,143,31)" fg:x="72" fg:w="2"/><text x="3.0461%" y="815.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (2 samples, 0.08%)</title><rect x="2.7961%" y="789" width="0.0777%" height="15" fill="rgb(211,110,34)" fg:x="72" fg:w="2"/><text x="3.0461%" y="799.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (2 samples, 0.08%)</title><rect x="2.7961%" y="773" width="0.0777%" height="15" fill="rgb(215,124,48)" fg:x="72" fg:w="2"/><text x="3.0461%" y="783.50"></text></g><g><title>AppKit`___NSTouchBarFinderSetNeedsUpdateOnMain_block_invoke_2 (1 samples, 0.04%)</title><rect x="2.8350%" y="757" width="0.0388%" height="15" fill="rgb(216,46,13)" fg:x="73" fg:w="1"/><text x="3.0850%" y="767.50"></text></g><g><title>AppKit`+[_NSTouchBarFinderObservation observationForObject:keyPaths:observer:] (1 samples, 0.04%)</title><rect x="2.8350%" y="741" width="0.0388%" height="15" fill="rgb(205,184,25)" fg:x="73" fg:w="1"/><text x="3.0850%" y="751.50"></text></g><g><title>AppKit`-[_NSTouchBarFinderObservation initForObject:keyPaths:observer:] (1 samples, 0.04%)</title><rect x="2.8350%" y="725" width="0.0388%" height="15" fill="rgb(228,1,10)" fg:x="73" fg:w="1"/><text x="3.0850%" y="735.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.04%)</title><rect x="2.8350%" y="709" width="0.0388%" height="15" fill="rgb(213,116,27)" fg:x="73" fg:w="1"/><text x="3.0850%" y="719.50"></text></g><g><title>Foundation`NSKeyValuePropertyForIsaAndKeyPath (1 samples, 0.04%)</title><rect x="2.8350%" y="693" width="0.0388%" height="15" fill="rgb(241,95,50)" fg:x="73" fg:w="1"/><text x="3.0850%" y="703.50"></text></g><g><title>Foundation`NSKeyValuePropertyForIsaAndKeyPathInner (1 samples, 0.04%)</title><rect x="2.8350%" y="677" width="0.0388%" height="15" fill="rgb(238,48,32)" fg:x="73" fg:w="1"/><text x="3.0850%" y="687.50"></text></g><g><title>Foundation`-[NSKeyValueUnnestedProperty _initWithContainerClass:key:propertiesBeingInitialized:] (1 samples, 0.04%)</title><rect x="2.8350%" y="661" width="0.0388%" height="15" fill="rgb(235,113,49)" fg:x="73" fg:w="1"/><text x="3.0850%" y="671.50"></text></g><g><title>Foundation`-[NSKeyValueUnnestedProperty _givenPropertiesBeingInitialized:getAffectingProperties:] (1 samples, 0.04%)</title><rect x="2.8350%" y="645" width="0.0388%" height="15" fill="rgb(205,127,43)" fg:x="73" fg:w="1"/><text x="3.0850%" y="655.50"></text></g><g><title>Foundation`+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:] (1 samples, 0.04%)</title><rect x="2.8350%" y="629" width="0.0388%" height="15" fill="rgb(250,162,2)" fg:x="73" fg:w="1"/><text x="3.0850%" y="639.50"></text></g><g><title>Foundation`__84+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:]_block_invoke (1 samples, 0.04%)</title><rect x="2.8350%" y="613" width="0.0388%" height="15" fill="rgb(220,13,41)" fg:x="73" fg:w="1"/><text x="3.0850%" y="623.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="2.8350%" y="597" width="0.0388%" height="15" fill="rgb(249,221,25)" fg:x="73" fg:w="1"/><text x="3.0850%" y="607.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_begin_handler (1 samples, 0.04%)</title><rect x="2.8738%" y="853" width="0.0388%" height="15" fill="rgb(215,208,19)" fg:x="74" fg:w="1"/><text x="3.1238%" y="863.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_handler (1 samples, 0.04%)</title><rect x="2.8738%" y="837" width="0.0388%" height="15" fill="rgb(236,175,2)" fg:x="74" fg:w="1"/><text x="3.1238%" y="847.50"></text></g><g><title>wgpu_test`alloc::rc::Weak&lt;T&gt;::from_raw (1 samples, 0.04%)</title><rect x="2.8738%" y="821" width="0.0388%" height="15" fill="rgb(241,52,2)" fg:x="74" fg:w="1"/><text x="3.1238%" y="831.50"></text></g><g><title>wgpu_test`alloc::rc::data_offset (1 samples, 0.04%)</title><rect x="2.8738%" y="805" width="0.0388%" height="15" fill="rgb(248,140,14)" fg:x="74" fg:w="1"/><text x="3.1238%" y="815.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.04%)</title><rect x="2.8738%" y="789" width="0.0388%" height="15" fill="rgb(253,22,42)" fg:x="74" fg:w="1"/><text x="3.1238%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::collections::vec_deque::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.9126%" y="693" width="0.0388%" height="15" fill="rgb(234,61,47)" fg:x="75" fg:w="1"/><text x="3.1626%" y="703.50"></text></g><g><title>wgpu_test`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 0.04%)</title><rect x="2.9126%" y="677" width="0.0388%" height="15" fill="rgb(208,226,15)" fg:x="75" fg:w="1"/><text x="3.1626%" y="687.50"></text></g><g><title>wgpu_test`alloc::collections::vec_deque::wrap_index (1 samples, 0.04%)</title><rect x="2.9126%" y="661" width="0.0388%" height="15" fill="rgb(217,221,4)" fg:x="75" fg:w="1"/><text x="3.1626%" y="671.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;winit::window::WindowId&gt;&gt; (1 samples, 0.04%)</title><rect x="2.9515%" y="693" width="0.0388%" height="15" fill="rgb(212,174,34)" fg:x="76" fg:w="1"/><text x="3.2015%" y="703.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="2.9515%" y="677" width="0.0388%" height="15" fill="rgb(253,83,4)" fg:x="76" fg:w="1"/><text x="3.2015%" y="687.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;winit::window::WindowId,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="2.9515%" y="661" width="0.0388%" height="15" fill="rgb(250,195,49)" fg:x="76" fg:w="1"/><text x="3.2015%" y="671.50"></text></g><g><title>wgpu_test`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="2.9515%" y="645" width="0.0388%" height="15" fill="rgb(241,192,25)" fg:x="76" fg:w="1"/><text x="3.2015%" y="655.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;winit::window::WindowId&gt;&gt; (1 samples, 0.04%)</title><rect x="2.9515%" y="629" width="0.0388%" height="15" fill="rgb(208,124,10)" fg:x="76" fg:w="1"/><text x="3.2015%" y="639.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="2.9515%" y="613" width="0.0388%" height="15" fill="rgb(222,33,0)" fg:x="76" fg:w="1"/><text x="3.2015%" y="623.50"></text></g><g><title>wgpu_test`alloc::slice::_&lt;impl [T]&gt;::into_vec (1 samples, 0.04%)</title><rect x="3.0291%" y="613" width="0.0388%" height="15" fill="rgb(234,209,28)" fg:x="78" fg:w="1"/><text x="3.2791%" y="623.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.04%)</title><rect x="3.0680%" y="565" width="0.0388%" height="15" fill="rgb(224,11,23)" fg:x="79" fg:w="1"/><text x="3.3180%" y="575.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::Schedule::run_once (1 samples, 0.04%)</title><rect x="3.0680%" y="549" width="0.0388%" height="15" fill="rgb(232,99,1)" fg:x="79" fg:w="1"/><text x="3.3180%" y="559.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.04%)</title><rect x="3.0680%" y="533" width="0.0388%" height="15" fill="rgb(237,95,45)" fg:x="79" fg:w="1"/><text x="3.3180%" y="543.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::stage::SystemStage::rebuild_orders_and_dependencies (1 samples, 0.04%)</title><rect x="3.0680%" y="517" width="0.0388%" height="15" fill="rgb(208,109,11)" fg:x="79" fg:w="1"/><text x="3.3180%" y="527.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::stage::process_systems (1 samples, 0.04%)</title><rect x="3.0680%" y="501" width="0.0388%" height="15" fill="rgb(216,190,48)" fg:x="79" fg:w="1"/><text x="3.3180%" y="511.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="3.0680%" y="485" width="0.0388%" height="15" fill="rgb(251,171,36)" fg:x="79" fg:w="1"/><text x="3.3180%" y="495.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="3.0680%" y="469" width="0.0388%" height="15" fill="rgb(230,62,22)" fg:x="79" fg:w="1"/><text x="3.3180%" y="479.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="3.0680%" y="453" width="0.0388%" height="15" fill="rgb(225,114,35)" fg:x="79" fg:w="1"/><text x="3.3180%" y="463.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="3.0680%" y="437" width="0.0388%" height="15" fill="rgb(215,118,42)" fg:x="79" fg:w="1"/><text x="3.3180%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="3.0680%" y="421" width="0.0388%" height="15" fill="rgb(243,119,21)" fg:x="79" fg:w="1"/><text x="3.3180%" y="431.50"></text></g><g><title>wgpu_test`&lt;(P0,) as bevy_ecs::system::system_param::SystemParamState&gt;::apply (1 samples, 0.04%)</title><rect x="3.1456%" y="549" width="0.0388%" height="15" fill="rgb(252,177,53)" fg:x="81" fg:w="1"/><text x="3.3956%" y="559.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="3.1845%" y="533" width="0.0388%" height="15" fill="rgb(237,209,29)" fg:x="82" fg:w="1"/><text x="3.4345%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="3.1845%" y="517" width="0.0388%" height="15" fill="rgb(212,65,23)" fg:x="82" fg:w="1"/><text x="3.4345%" y="527.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="3.1845%" y="501" width="0.0388%" height="15" fill="rgb(230,222,46)" fg:x="82" fg:w="1"/><text x="3.4345%" y="511.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="3.1845%" y="549" width="0.0777%" height="15" fill="rgb(215,135,32)" fg:x="82" fg:w="2"/><text x="3.4345%" y="559.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="3.2233%" y="533" width="0.0388%" height="15" fill="rgb(246,101,22)" fg:x="83" fg:w="1"/><text x="3.4733%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="3.2233%" y="517" width="0.0388%" height="15" fill="rgb(206,107,13)" fg:x="83" fg:w="1"/><text x="3.4733%" y="527.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="3.2621%" y="549" width="0.0388%" height="15" fill="rgb(250,100,44)" fg:x="84" fg:w="1"/><text x="3.5121%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="3.2621%" y="533" width="0.0388%" height="15" fill="rgb(231,147,38)" fg:x="84" fg:w="1"/><text x="3.5121%" y="543.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_archetypes (1 samples, 0.04%)</title><rect x="3.3010%" y="533" width="0.0388%" height="15" fill="rgb(229,8,40)" fg:x="85" fg:w="1"/><text x="3.5510%" y="543.50"></text></g><g><title>wgpu_test`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.04%)</title><rect x="3.3398%" y="405" width="0.0388%" height="15" fill="rgb(221,135,30)" fg:x="86" fg:w="1"/><text x="3.5898%" y="415.50"></text></g><g><title>wgpu_test`&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="3.3398%" y="389" width="0.0388%" height="15" fill="rgb(249,193,18)" fg:x="86" fg:w="1"/><text x="3.5898%" y="399.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.08%)</title><rect x="3.3398%" y="453" width="0.0777%" height="15" fill="rgb(209,133,39)" fg:x="86" fg:w="2"/><text x="3.5898%" y="463.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.08%)</title><rect x="3.3398%" y="437" width="0.0777%" height="15" fill="rgb(232,100,14)" fg:x="86" fg:w="2"/><text x="3.5898%" y="447.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.08%)</title><rect x="3.3398%" y="421" width="0.0777%" height="15" fill="rgb(224,185,1)" fg:x="86" fg:w="2"/><text x="3.5898%" y="431.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="3.3786%" y="405" width="0.0388%" height="15" fill="rgb(223,139,8)" fg:x="87" fg:w="1"/><text x="3.6286%" y="415.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="3.3786%" y="389" width="0.0388%" height="15" fill="rgb(232,213,38)" fg:x="87" fg:w="1"/><text x="3.6286%" y="399.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="3.3786%" y="373" width="0.0388%" height="15" fill="rgb(207,94,22)" fg:x="87" fg:w="1"/><text x="3.6286%" y="383.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="3.3786%" y="357" width="0.0388%" height="15" fill="rgb(219,183,54)" fg:x="87" fg:w="1"/><text x="3.6286%" y="367.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.04%)</title><rect x="3.3786%" y="341" width="0.0388%" height="15" fill="rgb(216,185,54)" fg:x="87" fg:w="1"/><text x="3.6286%" y="351.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.04%)</title><rect x="3.3786%" y="325" width="0.0388%" height="15" fill="rgb(254,217,39)" fg:x="87" fg:w="1"/><text x="3.6286%" y="335.50"></text></g><g><title>wgpu_test`bevy_ecs::component::Components::get_resource_id (3 samples, 0.12%)</title><rect x="3.3398%" y="501" width="0.1165%" height="15" fill="rgb(240,178,23)" fg:x="86" fg:w="3"/><text x="3.5898%" y="511.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.12%)</title><rect x="3.3398%" y="485" width="0.1165%" height="15" fill="rgb(218,11,47)" fg:x="86" fg:w="3"/><text x="3.5898%" y="495.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.12%)</title><rect x="3.3398%" y="469" width="0.1165%" height="15" fill="rgb(218,51,51)" fg:x="86" fg:w="3"/><text x="3.5898%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="3.4175%" y="453" width="0.0388%" height="15" fill="rgb(238,126,27)" fg:x="88" fg:w="1"/><text x="3.6675%" y="463.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::contains_resource (4 samples, 0.16%)</title><rect x="3.3398%" y="517" width="0.1553%" height="15" fill="rgb(249,202,22)" fg:x="86" fg:w="4"/><text x="3.5898%" y="527.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="3.4563%" y="501" width="0.0388%" height="15" fill="rgb(254,195,49)" fg:x="89" fg:w="1"/><text x="3.7063%" y="511.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetypes::resource (1 samples, 0.04%)</title><rect x="3.4563%" y="485" width="0.0388%" height="15" fill="rgb(208,123,14)" fg:x="89" fg:w="1"/><text x="3.7063%" y="495.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="3.4563%" y="469" width="0.0388%" height="15" fill="rgb(224,200,8)" fg:x="89" fg:w="1"/><text x="3.7063%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::map::make_hash (2 samples, 0.08%)</title><rect x="3.4951%" y="421" width="0.0777%" height="15" fill="rgb(217,61,36)" fg:x="90" fg:w="2"/><text x="3.7451%" y="431.50"></text></g><g><title>wgpu_test`&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="3.5340%" y="405" width="0.0388%" height="15" fill="rgb(206,35,45)" fg:x="91" fg:w="1"/><text x="3.7840%" y="415.50"></text></g><g><title>wgpu_test`bevy_ecs::component::Components::get_resource_id (3 samples, 0.12%)</title><rect x="3.4951%" y="485" width="0.1165%" height="15" fill="rgb(217,65,33)" fg:x="90" fg:w="3"/><text x="3.7451%" y="495.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.12%)</title><rect x="3.4951%" y="469" width="0.1165%" height="15" fill="rgb(222,158,48)" fg:x="90" fg:w="3"/><text x="3.7451%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.12%)</title><rect x="3.4951%" y="453" width="0.1165%" height="15" fill="rgb(254,2,54)" fg:x="90" fg:w="3"/><text x="3.7451%" y="463.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.12%)</title><rect x="3.4951%" y="437" width="0.1165%" height="15" fill="rgb(250,143,38)" fg:x="90" fg:w="3"/><text x="3.7451%" y="447.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="3.5728%" y="421" width="0.0388%" height="15" fill="rgb(248,25,0)" fg:x="92" fg:w="1"/><text x="3.8228%" y="431.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="3.5728%" y="405" width="0.0388%" height="15" fill="rgb(206,152,27)" fg:x="92" fg:w="1"/><text x="3.8228%" y="415.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="3.5728%" y="389" width="0.0388%" height="15" fill="rgb(240,77,30)" fg:x="92" fg:w="1"/><text x="3.8228%" y="399.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="3.5728%" y="373" width="0.0388%" height="15" fill="rgb(231,5,3)" fg:x="92" fg:w="1"/><text x="3.8228%" y="383.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="3.5728%" y="357" width="0.0388%" height="15" fill="rgb(207,226,32)" fg:x="92" fg:w="1"/><text x="3.8228%" y="367.50"></text></g><g><title>wgpu_test`hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="3.5728%" y="341" width="0.0388%" height="15" fill="rgb(222,207,47)" fg:x="92" fg:w="1"/><text x="3.8228%" y="351.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_mut (4 samples, 0.16%)</title><rect x="3.4951%" y="517" width="0.1553%" height="15" fill="rgb(229,115,45)" fg:x="90" fg:w="4"/><text x="3.7451%" y="527.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut (4 samples, 0.16%)</title><rect x="3.4951%" y="501" width="0.1553%" height="15" fill="rgb(224,191,6)" fg:x="90" fg:w="4"/><text x="3.7451%" y="511.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.04%)</title><rect x="3.6117%" y="485" width="0.0388%" height="15" fill="rgb(230,227,24)" fg:x="93" fg:w="1"/><text x="3.8617%" y="495.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="3.6117%" y="469" width="0.0388%" height="15" fill="rgb(228,80,19)" fg:x="93" fg:w="1"/><text x="3.8617%" y="479.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetypes::resource (1 samples, 0.04%)</title><rect x="3.6117%" y="453" width="0.0388%" height="15" fill="rgb(247,229,0)" fg:x="93" fg:w="1"/><text x="3.8617%" y="463.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="3.6117%" y="437" width="0.0388%" height="15" fill="rgb(237,194,15)" fg:x="93" fg:w="1"/><text x="3.8617%" y="447.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="3.6117%" y="421" width="0.0388%" height="15" fill="rgb(219,203,20)" fg:x="93" fg:w="1"/><text x="3.8617%" y="431.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_or_insert_with (9 samples, 0.35%)</title><rect x="3.3398%" y="533" width="0.3495%" height="15" fill="rgb(234,128,8)" fg:x="86" fg:w="9"/><text x="3.5898%" y="543.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.04%)</title><rect x="3.6505%" y="517" width="0.0388%" height="15" fill="rgb(248,202,8)" fg:x="94" fg:w="1"/><text x="3.9005%" y="527.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="3.7670%" y="485" width="0.0388%" height="15" fill="rgb(206,104,37)" fg:x="97" fg:w="1"/><text x="4.0170%" y="495.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::try_tick (1 samples, 0.04%)</title><rect x="3.8058%" y="485" width="0.0388%" height="15" fill="rgb(223,8,27)" fg:x="98" fg:w="1"/><text x="4.0558%" y="495.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::LOCAL_EXECUTOR::__getit (1 samples, 0.04%)</title><rect x="3.8447%" y="485" width="0.0388%" height="15" fill="rgb(216,217,28)" fg:x="99" fg:w="1"/><text x="4.0947%" y="495.50"></text></g><g><title>wgpu_test`std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="3.8447%" y="469" width="0.0388%" height="15" fill="rgb(249,199,1)" fg:x="99" fg:w="1"/><text x="4.0947%" y="479.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="4.0000%" y="469" width="0.0777%" height="15" fill="rgb(240,85,17)" fg:x="103" fg:w="2"/><text x="4.2500%" y="479.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.08%)</title><rect x="4.0000%" y="453" width="0.0777%" height="15" fill="rgb(206,108,45)" fg:x="103" fg:w="2"/><text x="4.2500%" y="463.50"></text></g><g><title>wgpu_test`&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="4.1165%" y="453" width="0.0388%" height="15" fill="rgb(245,210,41)" fg:x="106" fg:w="1"/><text x="4.3665%" y="463.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="4.2330%" y="437" width="0.0388%" height="15" fill="rgb(206,13,37)" fg:x="109" fg:w="1"/><text x="4.4830%" y="447.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="4.2718%" y="405" width="0.0388%" height="15" fill="rgb(250,61,18)" fg:x="110" fg:w="1"/><text x="4.5218%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="4.2718%" y="389" width="0.0388%" height="15" fill="rgb(235,172,48)" fg:x="110" fg:w="1"/><text x="4.5218%" y="399.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="4.2718%" y="421" width="0.0777%" height="15" fill="rgb(249,201,17)" fg:x="110" fg:w="2"/><text x="4.5218%" y="431.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="4.3107%" y="405" width="0.0388%" height="15" fill="rgb(219,208,6)" fg:x="111" fg:w="1"/><text x="4.5607%" y="415.50"></text></g><g><title>wgpu_test`&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="4.2718%" y="437" width="0.1165%" height="15" fill="rgb(248,31,23)" fg:x="110" fg:w="3"/><text x="4.5218%" y="447.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="4.3495%" y="421" width="0.0388%" height="15" fill="rgb(245,15,42)" fg:x="112" fg:w="1"/><text x="4.5995%" y="431.50"></text></g><g><title>wgpu_test`&lt;async_channel::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="4.3883%" y="437" width="0.0388%" height="15" fill="rgb(222,217,39)" fg:x="113" fg:w="1"/><text x="4.6383%" y="447.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="4.3883%" y="421" width="0.0388%" height="15" fill="rgb(210,219,27)" fg:x="113" fg:w="1"/><text x="4.6383%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="4.3883%" y="405" width="0.0388%" height="15" fill="rgb(252,166,36)" fg:x="113" fg:w="1"/><text x="4.6383%" y="415.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="4.4272%" y="437" width="0.0388%" height="15" fill="rgb(245,132,34)" fg:x="114" fg:w="1"/><text x="4.6772%" y="447.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="4.4272%" y="421" width="0.0388%" height="15" fill="rgb(236,54,3)" fg:x="114" fg:w="1"/><text x="4.6772%" y="431.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="4.4272%" y="405" width="0.0388%" height="15" fill="rgb(241,173,43)" fg:x="114" fg:w="1"/><text x="4.6772%" y="415.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="4.4272%" y="389" width="0.0388%" height="15" fill="rgb(215,190,9)" fg:x="114" fg:w="1"/><text x="4.6772%" y="399.50"></text></g><g><title>wgpu_test`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="4.4660%" y="437" width="0.0388%" height="15" fill="rgb(242,101,16)" fg:x="115" fg:w="1"/><text x="4.7160%" y="447.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="4.5049%" y="437" width="0.0388%" height="15" fill="rgb(223,190,21)" fg:x="116" fg:w="1"/><text x="4.7549%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="4.5437%" y="421" width="0.0388%" height="15" fill="rgb(215,228,25)" fg:x="117" fg:w="1"/><text x="4.7937%" y="431.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="4.5825%" y="405" width="0.0388%" height="15" fill="rgb(225,36,22)" fg:x="118" fg:w="1"/><text x="4.8325%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="4.5825%" y="389" width="0.0388%" height="15" fill="rgb(251,106,46)" fg:x="118" fg:w="1"/><text x="4.8325%" y="399.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="4.6214%" y="389" width="0.0388%" height="15" fill="rgb(208,90,1)" fg:x="119" fg:w="1"/><text x="4.8714%" y="399.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="4.6602%" y="357" width="0.0388%" height="15" fill="rgb(243,10,4)" fg:x="120" fg:w="1"/><text x="4.9102%" y="367.50"></text></g><g><title>wgpu_test`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="4.7379%" y="325" width="0.0388%" height="15" fill="rgb(212,137,27)" fg:x="122" fg:w="1"/><text x="4.9879%" y="335.50"></text></g><g><title>wgpu_test`alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="4.7379%" y="309" width="0.0388%" height="15" fill="rgb(231,220,49)" fg:x="122" fg:w="1"/><text x="4.9879%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="4.7379%" y="293" width="0.0388%" height="15" fill="rgb(237,96,20)" fg:x="122" fg:w="1"/><text x="4.9879%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="4.7379%" y="277" width="0.0388%" height="15" fill="rgb(239,229,30)" fg:x="122" fg:w="1"/><text x="4.9879%" y="287.50"></text></g><g><title>wgpu_test`alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="4.7767%" y="293" width="0.0388%" height="15" fill="rgb(219,65,33)" fg:x="123" fg:w="1"/><text x="5.0267%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="4.7767%" y="277" width="0.0388%" height="15" fill="rgb(243,134,7)" fg:x="123" fg:w="1"/><text x="5.0267%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="4.7767%" y="261" width="0.0388%" height="15" fill="rgb(216,177,54)" fg:x="123" fg:w="1"/><text x="5.0267%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.04%)</title><rect x="4.7767%" y="245" width="0.0388%" height="15" fill="rgb(211,160,20)" fg:x="123" fg:w="1"/><text x="5.0267%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="4.7767%" y="229" width="0.0388%" height="15" fill="rgb(239,85,39)" fg:x="123" fg:w="1"/><text x="5.0267%" y="239.50"></text></g><g><title>wgpu_test`alloc::alloc::Global::grow_impl (2 samples, 0.08%)</title><rect x="4.7767%" y="309" width="0.0777%" height="15" fill="rgb(232,125,22)" fg:x="123" fg:w="2"/><text x="5.0267%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="4.8155%" y="293" width="0.0388%" height="15" fill="rgb(244,57,34)" fg:x="124" fg:w="1"/><text x="5.0655%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="4.8155%" y="277" width="0.0388%" height="15" fill="rgb(214,203,32)" fg:x="124" fg:w="1"/><text x="5.0655%" y="287.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="4.8155%" y="261" width="0.0388%" height="15" fill="rgb(207,58,43)" fg:x="124" fg:w="1"/><text x="5.0655%" y="271.50"></text></g><g><title>wgpu_test`alloc::raw_vec::finish_grow (5 samples, 0.19%)</title><rect x="4.6990%" y="341" width="0.1942%" height="15" fill="rgb(215,193,15)" fg:x="121" fg:w="5"/><text x="4.9490%" y="351.50"></text></g><g><title>wgpu_test`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.12%)</title><rect x="4.7767%" y="325" width="0.1165%" height="15" fill="rgb(232,15,44)" fg:x="123" fg:w="3"/><text x="5.0267%" y="335.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="4.8544%" y="309" width="0.0388%" height="15" fill="rgb(212,3,48)" fg:x="125" fg:w="1"/><text x="5.1044%" y="319.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="4.8932%" y="341" width="0.0388%" height="15" fill="rgb(218,128,7)" fg:x="126" fg:w="1"/><text x="5.1432%" y="351.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="4.8932%" y="325" width="0.0388%" height="15" fill="rgb(226,216,39)" fg:x="126" fg:w="1"/><text x="5.1432%" y="335.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="4.8932%" y="309" width="0.0388%" height="15" fill="rgb(243,47,51)" fg:x="126" fg:w="1"/><text x="5.1432%" y="319.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.39%)</title><rect x="4.5825%" y="421" width="0.3883%" height="15" fill="rgb(241,183,40)" fg:x="118" fg:w="10"/><text x="4.8325%" y="431.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.35%)</title><rect x="4.6214%" y="405" width="0.3495%" height="15" fill="rgb(231,217,32)" fg:x="119" fg:w="9"/><text x="4.8714%" y="415.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.31%)</title><rect x="4.6602%" y="389" width="0.3107%" height="15" fill="rgb(229,61,38)" fg:x="120" fg:w="8"/><text x="4.9102%" y="399.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.31%)</title><rect x="4.6602%" y="373" width="0.3107%" height="15" fill="rgb(225,210,5)" fg:x="120" fg:w="8"/><text x="4.9102%" y="383.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.27%)</title><rect x="4.6990%" y="357" width="0.2718%" height="15" fill="rgb(231,79,45)" fg:x="121" fg:w="7"/><text x="4.9490%" y="367.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="4.9320%" y="341" width="0.0388%" height="15" fill="rgb(224,100,7)" fg:x="127" fg:w="1"/><text x="5.1820%" y="351.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="4.9709%" y="421" width="0.0388%" height="15" fill="rgb(241,198,18)" fg:x="128" fg:w="1"/><text x="5.2209%" y="431.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="5.0097%" y="405" width="0.0777%" height="15" fill="rgb(252,97,53)" fg:x="129" fg:w="2"/><text x="5.2597%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="5.0485%" y="389" width="0.0388%" height="15" fill="rgb(220,88,7)" fg:x="130" fg:w="1"/><text x="5.2985%" y="399.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="5.0874%" y="405" width="0.0388%" height="15" fill="rgb(213,176,14)" fg:x="131" fg:w="1"/><text x="5.3374%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="5.0874%" y="389" width="0.0388%" height="15" fill="rgb(246,73,7)" fg:x="131" fg:w="1"/><text x="5.3374%" y="399.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.04%)</title><rect x="5.1262%" y="341" width="0.0388%" height="15" fill="rgb(245,64,36)" fg:x="132" fg:w="1"/><text x="5.3762%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="5.1262%" y="325" width="0.0388%" height="15" fill="rgb(245,80,10)" fg:x="132" fg:w="1"/><text x="5.3762%" y="335.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="5.1262%" y="309" width="0.0388%" height="15" fill="rgb(232,107,50)" fg:x="132" fg:w="1"/><text x="5.3762%" y="319.50"></text></g><g><title>wgpu_test`async_executor::Executor::state (2 samples, 0.08%)</title><rect x="5.1262%" y="405" width="0.0777%" height="15" fill="rgb(253,3,0)" fg:x="132" fg:w="2"/><text x="5.3762%" y="415.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (2 samples, 0.08%)</title><rect x="5.1262%" y="389" width="0.0777%" height="15" fill="rgb(212,99,53)" fg:x="132" fg:w="2"/><text x="5.3762%" y="399.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (2 samples, 0.08%)</title><rect x="5.1262%" y="373" width="0.0777%" height="15" fill="rgb(249,111,54)" fg:x="132" fg:w="2"/><text x="5.3762%" y="383.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get (2 samples, 0.08%)</title><rect x="5.1262%" y="357" width="0.0777%" height="15" fill="rgb(249,55,30)" fg:x="132" fg:w="2"/><text x="5.3762%" y="367.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="5.1650%" y="341" width="0.0388%" height="15" fill="rgb(237,47,42)" fg:x="133" fg:w="1"/><text x="5.4150%" y="351.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="5.1650%" y="325" width="0.0388%" height="15" fill="rgb(211,20,18)" fg:x="133" fg:w="1"/><text x="5.4150%" y="335.50"></text></g><g><title>wgpu_test`async_executor::Sleepers::notify (1 samples, 0.04%)</title><rect x="5.2039%" y="341" width="0.0388%" height="15" fill="rgb(231,203,46)" fg:x="134" fg:w="1"/><text x="5.4539%" y="351.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.04%)</title><rect x="5.2039%" y="325" width="0.0388%" height="15" fill="rgb(237,142,3)" fg:x="134" fg:w="1"/><text x="5.4539%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.23%)</title><rect x="5.2427%" y="261" width="0.2330%" height="15" fill="rgb(241,107,1)" fg:x="135" fg:w="6"/><text x="5.4927%" y="271.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::swap (1 samples, 0.04%)</title><rect x="5.4757%" y="261" width="0.0388%" height="15" fill="rgb(229,83,13)" fg:x="141" fg:w="1"/><text x="5.7257%" y="271.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_swap (1 samples, 0.04%)</title><rect x="5.4757%" y="245" width="0.0388%" height="15" fill="rgb(241,91,40)" fg:x="141" fg:w="1"/><text x="5.7257%" y="255.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="5.5146%" y="245" width="0.0388%" height="15" fill="rgb(225,3,45)" fg:x="142" fg:w="1"/><text x="5.7646%" y="255.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="5.5146%" y="229" width="0.0388%" height="15" fill="rgb(244,223,14)" fg:x="142" fg:w="1"/><text x="5.7646%" y="239.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="5.5146%" y="213" width="0.0388%" height="15" fill="rgb(224,124,37)" fg:x="142" fg:w="1"/><text x="5.7646%" y="223.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="5.5146%" y="197" width="0.0388%" height="15" fill="rgb(251,171,30)" fg:x="142" fg:w="1"/><text x="5.7646%" y="207.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="5.5146%" y="181" width="0.0388%" height="15" fill="rgb(236,46,54)" fg:x="142" fg:w="1"/><text x="5.7646%" y="191.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="5.5146%" y="165" width="0.0388%" height="15" fill="rgb(245,213,5)" fg:x="142" fg:w="1"/><text x="5.7646%" y="175.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="5.5146%" y="149" width="0.0388%" height="15" fill="rgb(230,144,27)" fg:x="142" fg:w="1"/><text x="5.7646%" y="159.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (9 samples, 0.35%)</title><rect x="5.2427%" y="341" width="0.3495%" height="15" fill="rgb(220,86,6)" fg:x="135" fg:w="9"/><text x="5.4927%" y="351.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (9 samples, 0.35%)</title><rect x="5.2427%" y="325" width="0.3495%" height="15" fill="rgb(240,20,13)" fg:x="135" fg:w="9"/><text x="5.4927%" y="335.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (9 samples, 0.35%)</title><rect x="5.2427%" y="309" width="0.3495%" height="15" fill="rgb(217,89,34)" fg:x="135" fg:w="9"/><text x="5.4927%" y="319.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (9 samples, 0.35%)</title><rect x="5.2427%" y="293" width="0.3495%" height="15" fill="rgb(229,13,5)" fg:x="135" fg:w="9"/><text x="5.4927%" y="303.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (9 samples, 0.35%)</title><rect x="5.2427%" y="277" width="0.3495%" height="15" fill="rgb(244,67,35)" fg:x="135" fg:w="9"/><text x="5.4927%" y="287.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="5.5146%" y="261" width="0.0777%" height="15" fill="rgb(221,40,2)" fg:x="142" fg:w="2"/><text x="5.7646%" y="271.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="5.5534%" y="245" width="0.0388%" height="15" fill="rgb(237,157,21)" fg:x="143" fg:w="1"/><text x="5.8034%" y="255.50"></text></g><g><title>wgpu_test`async_executor::State::notify (11 samples, 0.43%)</title><rect x="5.2039%" y="357" width="0.4272%" height="15" fill="rgb(222,94,11)" fg:x="134" fg:w="11"/><text x="5.4539%" y="367.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.04%)</title><rect x="5.5922%" y="341" width="0.0388%" height="15" fill="rgb(249,113,6)" fg:x="144" fg:w="1"/><text x="5.8422%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.04%)</title><rect x="5.6699%" y="325" width="0.0388%" height="15" fill="rgb(238,137,36)" fg:x="146" fg:w="1"/><text x="5.9199%" y="335.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="5.6699%" y="309" width="0.0388%" height="15" fill="rgb(210,102,26)" fg:x="146" fg:w="1"/><text x="5.9199%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="5.7087%" y="325" width="0.0388%" height="15" fill="rgb(218,30,30)" fg:x="147" fg:w="1"/><text x="5.9587%" y="335.50"></text></g><g><title>wgpu_test`async_executor::Executor::schedule::_{{closure}} (15 samples, 0.58%)</title><rect x="5.2039%" y="373" width="0.5825%" height="15" fill="rgb(214,67,26)" fg:x="134" fg:w="15"/><text x="5.4539%" y="383.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (4 samples, 0.16%)</title><rect x="5.6311%" y="357" width="0.1553%" height="15" fill="rgb(251,9,53)" fg:x="145" fg:w="4"/><text x="5.8811%" y="367.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (4 samples, 0.16%)</title><rect x="5.6311%" y="341" width="0.1553%" height="15" fill="rgb(228,204,25)" fg:x="145" fg:w="4"/><text x="5.8811%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="5.7476%" y="325" width="0.0388%" height="15" fill="rgb(207,153,8)" fg:x="148" fg:w="1"/><text x="5.9976%" y="335.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="5.8252%" y="309" width="0.0388%" height="15" fill="rgb(242,9,16)" fg:x="150" fg:w="1"/><text x="6.0752%" y="319.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="5.8252%" y="293" width="0.0388%" height="15" fill="rgb(217,211,10)" fg:x="150" fg:w="1"/><text x="6.0752%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (3 samples, 0.12%)</title><rect x="5.7864%" y="373" width="0.1165%" height="15" fill="rgb(219,228,52)" fg:x="149" fg:w="3"/><text x="6.0364%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (3 samples, 0.12%)</title><rect x="5.7864%" y="357" width="0.1165%" height="15" fill="rgb(231,92,29)" fg:x="149" fg:w="3"/><text x="6.0364%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (3 samples, 0.12%)</title><rect x="5.7864%" y="341" width="0.1165%" height="15" fill="rgb(232,8,23)" fg:x="149" fg:w="3"/><text x="6.0364%" y="351.50"></text></g><g><title>wgpu_test`async_task::utils::extend (3 samples, 0.12%)</title><rect x="5.7864%" y="325" width="0.1165%" height="15" fill="rgb(216,211,34)" fg:x="149" fg:w="3"/><text x="6.0364%" y="335.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="5.8641%" y="309" width="0.0388%" height="15" fill="rgb(236,151,0)" fg:x="151" fg:w="1"/><text x="6.1141%" y="319.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="5.9029%" y="325" width="0.0388%" height="15" fill="rgb(209,168,3)" fg:x="152" fg:w="1"/><text x="6.1529%" y="335.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="5.9029%" y="341" width="0.0777%" height="15" fill="rgb(208,129,28)" fg:x="152" fg:w="2"/><text x="6.1529%" y="351.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="5.9417%" y="325" width="0.0388%" height="15" fill="rgb(229,78,22)" fg:x="153" fg:w="1"/><text x="6.1917%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (3 samples, 0.12%)</title><rect x="5.9029%" y="373" width="0.1165%" height="15" fill="rgb(228,187,13)" fg:x="152" fg:w="3"/><text x="6.1529%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (3 samples, 0.12%)</title><rect x="5.9029%" y="357" width="0.1165%" height="15" fill="rgb(240,119,24)" fg:x="152" fg:w="3"/><text x="6.1529%" y="367.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="5.9806%" y="341" width="0.0388%" height="15" fill="rgb(209,194,42)" fg:x="154" fg:w="1"/><text x="6.2306%" y="351.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="6.0194%" y="293" width="0.0388%" height="15" fill="rgb(247,200,46)" fg:x="155" fg:w="1"/><text x="6.2694%" y="303.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="6.0194%" y="277" width="0.0388%" height="15" fill="rgb(218,76,16)" fg:x="155" fg:w="1"/><text x="6.2694%" y="287.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::schedule (23 samples, 0.89%)</title><rect x="5.2039%" y="405" width="0.8932%" height="15" fill="rgb(225,21,48)" fg:x="134" fg:w="23"/><text x="5.4539%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::schedule (23 samples, 0.89%)</title><rect x="5.2039%" y="389" width="0.8932%" height="15" fill="rgb(239,223,50)" fg:x="134" fg:w="23"/><text x="5.4539%" y="399.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.08%)</title><rect x="6.0194%" y="373" width="0.0777%" height="15" fill="rgb(244,45,21)" fg:x="155" fg:w="2"/><text x="6.2694%" y="383.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="6.0194%" y="357" width="0.0777%" height="15" fill="rgb(232,33,43)" fg:x="155" fg:w="2"/><text x="6.2694%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.08%)</title><rect x="6.0194%" y="341" width="0.0777%" height="15" fill="rgb(209,8,3)" fg:x="155" fg:w="2"/><text x="6.2694%" y="351.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (2 samples, 0.08%)</title><rect x="6.0194%" y="325" width="0.0777%" height="15" fill="rgb(214,25,53)" fg:x="155" fg:w="2"/><text x="6.2694%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (2 samples, 0.08%)</title><rect x="6.0194%" y="309" width="0.0777%" height="15" fill="rgb(254,186,54)" fg:x="155" fg:w="2"/><text x="6.2694%" y="319.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="6.0583%" y="293" width="0.0388%" height="15" fill="rgb(208,174,49)" fg:x="156" fg:w="1"/><text x="6.3083%" y="303.50"></text></g><g><title>wgpu_test`async_task::utils::padding_needed_for (1 samples, 0.04%)</title><rect x="6.0971%" y="325" width="0.0388%" height="15" fill="rgb(233,191,51)" fg:x="157" fg:w="1"/><text x="6.3471%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (2 samples, 0.08%)</title><rect x="6.0971%" y="389" width="0.0777%" height="15" fill="rgb(222,134,10)" fg:x="157" fg:w="2"/><text x="6.3471%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (2 samples, 0.08%)</title><rect x="6.0971%" y="373" width="0.0777%" height="15" fill="rgb(230,226,20)" fg:x="157" fg:w="2"/><text x="6.3471%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (2 samples, 0.08%)</title><rect x="6.0971%" y="357" width="0.0777%" height="15" fill="rgb(251,111,25)" fg:x="157" fg:w="2"/><text x="6.3471%" y="367.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="6.0971%" y="341" width="0.0777%" height="15" fill="rgb(224,40,46)" fg:x="157" fg:w="2"/><text x="6.3471%" y="351.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="6.1359%" y="325" width="0.0388%" height="15" fill="rgb(236,108,47)" fg:x="158" fg:w="1"/><text x="6.3859%" y="335.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::waker (4 samples, 0.16%)</title><rect x="6.0971%" y="405" width="0.1553%" height="15" fill="rgb(234,93,0)" fg:x="157" fg:w="4"/><text x="6.3471%" y="415.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::from_raw (2 samples, 0.08%)</title><rect x="6.1748%" y="389" width="0.0777%" height="15" fill="rgb(224,213,32)" fg:x="159" fg:w="2"/><text x="6.4248%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.16%)</title><rect x="6.2913%" y="341" width="0.1553%" height="15" fill="rgb(251,11,48)" fg:x="162" fg:w="4"/><text x="6.5413%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="6.3301%" y="325" width="0.1165%" height="15" fill="rgb(236,173,5)" fg:x="163" fg:w="3"/><text x="6.5801%" y="335.50"></text></g><g><title>wgpu_test`alloc::alloc::alloc (5 samples, 0.19%)</title><rect x="6.2913%" y="373" width="0.1942%" height="15" fill="rgb(230,95,12)" fg:x="162" fg:w="5"/><text x="6.5413%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.19%)</title><rect x="6.2913%" y="357" width="0.1942%" height="15" fill="rgb(232,209,1)" fg:x="162" fg:w="5"/><text x="6.5413%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="6.4466%" y="341" width="0.0388%" height="15" fill="rgb(232,6,1)" fg:x="166" fg:w="1"/><text x="6.6966%" y="351.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="6.4854%" y="325" width="0.0388%" height="15" fill="rgb(210,224,50)" fg:x="167" fg:w="1"/><text x="6.7354%" y="335.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="6.4854%" y="309" width="0.0388%" height="15" fill="rgb(228,127,35)" fg:x="167" fg:w="1"/><text x="6.7354%" y="319.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="6.4854%" y="341" width="0.0777%" height="15" fill="rgb(245,102,45)" fg:x="167" fg:w="2"/><text x="6.7354%" y="351.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="6.5243%" y="325" width="0.0388%" height="15" fill="rgb(214,1,49)" fg:x="168" fg:w="1"/><text x="6.7743%" y="335.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (2 samples, 0.08%)</title><rect x="6.5631%" y="341" width="0.0777%" height="15" fill="rgb(226,163,40)" fg:x="169" fg:w="2"/><text x="6.8131%" y="351.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="6.6019%" y="325" width="0.0388%" height="15" fill="rgb(239,212,28)" fg:x="170" fg:w="1"/><text x="6.8519%" y="335.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.04%)</title><rect x="6.6019%" y="309" width="0.0388%" height="15" fill="rgb(220,20,13)" fg:x="170" fg:w="1"/><text x="6.8519%" y="319.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (5 samples, 0.19%)</title><rect x="6.4854%" y="357" width="0.1942%" height="15" fill="rgb(210,164,35)" fg:x="167" fg:w="5"/><text x="6.7354%" y="367.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="6.6408%" y="341" width="0.0388%" height="15" fill="rgb(248,109,41)" fg:x="171" fg:w="1"/><text x="6.8908%" y="351.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="6.6408%" y="325" width="0.0388%" height="15" fill="rgb(238,23,50)" fg:x="171" fg:w="1"/><text x="6.8908%" y="335.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="6.6408%" y="309" width="0.0388%" height="15" fill="rgb(211,48,49)" fg:x="171" fg:w="1"/><text x="6.8908%" y="319.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="6.6408%" y="293" width="0.0388%" height="15" fill="rgb(223,36,21)" fg:x="171" fg:w="1"/><text x="6.8908%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (6 samples, 0.23%)</title><rect x="6.4854%" y="373" width="0.2330%" height="15" fill="rgb(207,123,46)" fg:x="167" fg:w="6"/><text x="6.7354%" y="383.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="6.6796%" y="357" width="0.0388%" height="15" fill="rgb(240,218,32)" fg:x="172" fg:w="1"/><text x="6.9296%" y="367.50"></text></g><g><title>wgpu_test`async_task::utils::padding_needed_for (1 samples, 0.04%)</title><rect x="6.7184%" y="309" width="0.0388%" height="15" fill="rgb(252,5,43)" fg:x="173" fg:w="1"/><text x="6.9684%" y="319.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="6.7573%" y="309" width="0.0388%" height="15" fill="rgb(252,84,19)" fg:x="174" fg:w="1"/><text x="7.0073%" y="319.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (2 samples, 0.08%)</title><rect x="6.7961%" y="309" width="0.0777%" height="15" fill="rgb(243,152,39)" fg:x="175" fg:w="2"/><text x="7.0461%" y="319.50"></text></g><g><title>wgpu_test`core::cmp::max_by (2 samples, 0.08%)</title><rect x="6.7961%" y="293" width="0.0777%" height="15" fill="rgb(234,160,15)" fg:x="175" fg:w="2"/><text x="7.0461%" y="303.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="6.8350%" y="277" width="0.0388%" height="15" fill="rgb(237,34,20)" fg:x="176" fg:w="1"/><text x="7.0850%" y="287.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (5 samples, 0.19%)</title><rect x="6.7184%" y="373" width="0.1942%" height="15" fill="rgb(229,97,13)" fg:x="173" fg:w="5"/><text x="6.9684%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate::_{{closure}} (5 samples, 0.19%)</title><rect x="6.7184%" y="357" width="0.1942%" height="15" fill="rgb(234,71,50)" fg:x="173" fg:w="5"/><text x="6.9684%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (5 samples, 0.19%)</title><rect x="6.7184%" y="341" width="0.1942%" height="15" fill="rgb(253,155,4)" fg:x="173" fg:w="5"/><text x="6.9684%" y="351.50"></text></g><g><title>wgpu_test`async_task::utils::extend (5 samples, 0.19%)</title><rect x="6.7184%" y="325" width="0.1942%" height="15" fill="rgb(222,185,37)" fg:x="173" fg:w="5"/><text x="6.9684%" y="335.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="6.8738%" y="309" width="0.0388%" height="15" fill="rgb(251,177,13)" fg:x="177" fg:w="1"/><text x="7.1238%" y="319.50"></text></g><g><title>wgpu_test`async_task::runnable::spawn_unchecked (18 samples, 0.70%)</title><rect x="6.2524%" y="405" width="0.6990%" height="15" fill="rgb(250,179,40)" fg:x="161" fg:w="18"/><text x="6.5024%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate (18 samples, 0.70%)</title><rect x="6.2524%" y="389" width="0.6990%" height="15" fill="rgb(242,44,2)" fg:x="161" fg:w="18"/><text x="6.5024%" y="399.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="6.9126%" y="373" width="0.0388%" height="15" fill="rgb(216,177,13)" fg:x="178" fg:w="1"/><text x="7.1626%" y="383.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="6.9515%" y="373" width="0.0388%" height="15" fill="rgb(216,106,43)" fg:x="179" fg:w="1"/><text x="7.2015%" y="383.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="6.9515%" y="357" width="0.0388%" height="15" fill="rgb(216,183,2)" fg:x="179" fg:w="1"/><text x="7.2015%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="6.9515%" y="341" width="0.0388%" height="15" fill="rgb(249,75,3)" fg:x="179" fg:w="1"/><text x="7.2015%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="6.9515%" y="325" width="0.0388%" height="15" fill="rgb(219,67,39)" fg:x="179" fg:w="1"/><text x="7.2015%" y="335.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="6.9903%" y="373" width="0.0388%" height="15" fill="rgb(253,228,2)" fg:x="180" fg:w="1"/><text x="7.2403%" y="383.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::insert (3 samples, 0.12%)</title><rect x="6.9515%" y="405" width="0.1165%" height="15" fill="rgb(235,138,27)" fg:x="179" fg:w="3"/><text x="7.2015%" y="415.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::insert_at (3 samples, 0.12%)</title><rect x="6.9515%" y="389" width="0.1165%" height="15" fill="rgb(236,97,51)" fg:x="179" fg:w="3"/><text x="7.2015%" y="399.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="7.0291%" y="373" width="0.0388%" height="15" fill="rgb(240,80,30)" fg:x="181" fg:w="1"/><text x="7.2791%" y="383.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="7.0291%" y="357" width="0.0388%" height="15" fill="rgb(230,178,19)" fg:x="181" fg:w="1"/><text x="7.2791%" y="367.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="7.0291%" y="341" width="0.0388%" height="15" fill="rgb(210,190,27)" fg:x="181" fg:w="1"/><text x="7.2791%" y="351.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="7.0291%" y="325" width="0.0388%" height="15" fill="rgb(222,107,31)" fg:x="181" fg:w="1"/><text x="7.2791%" y="335.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="7.0291%" y="309" width="0.0388%" height="15" fill="rgb(216,127,34)" fg:x="181" fg:w="1"/><text x="7.2791%" y="319.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="7.0680%" y="389" width="0.0388%" height="15" fill="rgb(234,116,52)" fg:x="182" fg:w="1"/><text x="7.3180%" y="399.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="7.0680%" y="373" width="0.0388%" height="15" fill="rgb(222,124,15)" fg:x="182" fg:w="1"/><text x="7.3180%" y="383.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="7.0680%" y="357" width="0.0388%" height="15" fill="rgb(231,179,28)" fg:x="182" fg:w="1"/><text x="7.3180%" y="367.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="7.0680%" y="341" width="0.0388%" height="15" fill="rgb(226,93,45)" fg:x="182" fg:w="1"/><text x="7.3180%" y="351.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="7.0680%" y="325" width="0.0388%" height="15" fill="rgb(215,8,51)" fg:x="182" fg:w="1"/><text x="7.3180%" y="335.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="7.0680%" y="309" width="0.0388%" height="15" fill="rgb(223,106,5)" fg:x="182" fg:w="1"/><text x="7.3180%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="7.0680%" y="293" width="0.0388%" height="15" fill="rgb(250,191,5)" fg:x="182" fg:w="1"/><text x="7.3180%" y="303.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="7.0680%" y="405" width="0.0777%" height="15" fill="rgb(242,132,44)" fg:x="182" fg:w="2"/><text x="7.3180%" y="415.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="7.1068%" y="389" width="0.0388%" height="15" fill="rgb(251,152,29)" fg:x="183" fg:w="1"/><text x="7.3568%" y="399.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="7.1068%" y="373" width="0.0388%" height="15" fill="rgb(218,179,5)" fg:x="183" fg:w="1"/><text x="7.3568%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="7.1068%" y="357" width="0.0388%" height="15" fill="rgb(227,67,19)" fg:x="183" fg:w="1"/><text x="7.3568%" y="367.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (68 samples, 2.64%)</title><rect x="4.5437%" y="437" width="2.6408%" height="15" fill="rgb(233,119,31)" fg:x="117" fg:w="68"/><text x="4.7937%" y="447.50">wg..</text></g><g><title>wgpu_test`async_executor::Executor::spawn (56 samples, 2.17%)</title><rect x="5.0097%" y="421" width="2.1748%" height="15" fill="rgb(241,120,22)" fg:x="129" fg:w="56"/><text x="5.2597%" y="431.50">w..</text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="7.1456%" y="405" width="0.0388%" height="15" fill="rgb(224,102,30)" fg:x="184" fg:w="1"/><text x="7.3956%" y="415.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="7.1845%" y="437" width="0.0388%" height="15" fill="rgb(210,164,37)" fg:x="185" fg:w="1"/><text x="7.4345%" y="447.50"></text></g><g><title>wgpu_test`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (1 samples, 0.04%)</title><rect x="7.2233%" y="437" width="0.0388%" height="15" fill="rgb(226,191,16)" fg:x="186" fg:w="1"/><text x="7.4733%" y="447.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (82 samples, 3.18%)</title><rect x="4.1553%" y="453" width="3.1845%" height="15" fill="rgb(214,40,45)" fg:x="107" fg:w="82"/><text x="4.4053%" y="463.50">wgp..</text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::clear (2 samples, 0.08%)</title><rect x="7.2621%" y="437" width="0.0777%" height="15" fill="rgb(244,29,26)" fg:x="187" fg:w="2"/><text x="7.5121%" y="447.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="7.2621%" y="421" width="0.0777%" height="15" fill="rgb(216,16,5)" fg:x="187" fg:w="2"/><text x="7.5121%" y="431.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="7.3010%" y="405" width="0.0388%" height="15" fill="rgb(249,76,35)" fg:x="188" fg:w="1"/><text x="7.5510%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="7.3010%" y="389" width="0.0388%" height="15" fill="rgb(207,11,44)" fg:x="188" fg:w="1"/><text x="7.5510%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="7.3398%" y="437" width="0.0388%" height="15" fill="rgb(228,190,49)" fg:x="189" fg:w="1"/><text x="7.5898%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="7.3786%" y="437" width="0.0388%" height="15" fill="rgb(214,173,12)" fg:x="190" fg:w="1"/><text x="7.6286%" y="447.50"></text></g><g><title>wgpu_test`async_executor::Executor::state (1 samples, 0.04%)</title><rect x="7.4175%" y="421" width="0.0388%" height="15" fill="rgb(218,26,35)" fg:x="191" fg:w="1"/><text x="7.6675%" y="431.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.04%)</title><rect x="7.4175%" y="405" width="0.0388%" height="15" fill="rgb(220,200,19)" fg:x="191" fg:w="1"/><text x="7.6675%" y="415.50"></text></g><g><title>wgpu_test`async_executor::State::notify (1 samples, 0.04%)</title><rect x="7.4563%" y="373" width="0.0388%" height="15" fill="rgb(239,95,49)" fg:x="192" fg:w="1"/><text x="7.7063%" y="383.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (1 samples, 0.04%)</title><rect x="7.4563%" y="357" width="0.0388%" height="15" fill="rgb(235,85,53)" fg:x="192" fg:w="1"/><text x="7.7063%" y="367.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.04%)</title><rect x="7.4563%" y="341" width="0.0388%" height="15" fill="rgb(233,133,31)" fg:x="192" fg:w="1"/><text x="7.7063%" y="351.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (1 samples, 0.04%)</title><rect x="7.4563%" y="325" width="0.0388%" height="15" fill="rgb(218,25,20)" fg:x="192" fg:w="1"/><text x="7.7063%" y="335.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (1 samples, 0.04%)</title><rect x="7.4563%" y="309" width="0.0388%" height="15" fill="rgb(252,210,38)" fg:x="192" fg:w="1"/><text x="7.7063%" y="319.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (1 samples, 0.04%)</title><rect x="7.4563%" y="293" width="0.0388%" height="15" fill="rgb(242,134,21)" fg:x="192" fg:w="1"/><text x="7.7063%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.04%)</title><rect x="7.4563%" y="277" width="0.0388%" height="15" fill="rgb(213,28,48)" fg:x="192" fg:w="1"/><text x="7.7063%" y="287.50"></text></g><g><title>wgpu_test`async_executor::Executor::schedule::_{{closure}} (2 samples, 0.08%)</title><rect x="7.4563%" y="389" width="0.0777%" height="15" fill="rgb(250,196,2)" fg:x="192" fg:w="2"/><text x="7.7063%" y="399.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="7.4951%" y="373" width="0.0388%" height="15" fill="rgb(227,5,17)" fg:x="193" fg:w="1"/><text x="7.7451%" y="383.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="7.4951%" y="357" width="0.0388%" height="15" fill="rgb(221,226,24)" fg:x="193" fg:w="1"/><text x="7.7451%" y="367.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="7.4951%" y="341" width="0.0388%" height="15" fill="rgb(211,5,48)" fg:x="193" fg:w="1"/><text x="7.7451%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="7.4951%" y="325" width="0.0388%" height="15" fill="rgb(219,150,6)" fg:x="193" fg:w="1"/><text x="7.7451%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.04%)</title><rect x="7.5340%" y="389" width="0.0388%" height="15" fill="rgb(251,46,16)" fg:x="194" fg:w="1"/><text x="7.7840%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="7.5340%" y="373" width="0.0388%" height="15" fill="rgb(220,204,40)" fg:x="194" fg:w="1"/><text x="7.7840%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="7.5340%" y="357" width="0.0388%" height="15" fill="rgb(211,85,2)" fg:x="194" fg:w="1"/><text x="7.7840%" y="367.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="7.5340%" y="341" width="0.0388%" height="15" fill="rgb(229,17,7)" fg:x="194" fg:w="1"/><text x="7.7840%" y="351.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="7.5340%" y="325" width="0.0388%" height="15" fill="rgb(239,72,28)" fg:x="194" fg:w="1"/><text x="7.7840%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="7.5728%" y="389" width="0.0388%" height="15" fill="rgb(230,47,54)" fg:x="195" fg:w="1"/><text x="7.8228%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="7.5728%" y="373" width="0.0388%" height="15" fill="rgb(214,50,8)" fg:x="195" fg:w="1"/><text x="7.8228%" y="383.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="7.5728%" y="357" width="0.0388%" height="15" fill="rgb(216,198,43)" fg:x="195" fg:w="1"/><text x="7.8228%" y="367.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="7.5728%" y="341" width="0.0388%" height="15" fill="rgb(234,20,35)" fg:x="195" fg:w="1"/><text x="7.8228%" y="351.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="7.6117%" y="293" width="0.0388%" height="15" fill="rgb(254,45,19)" fg:x="196" fg:w="1"/><text x="7.8617%" y="303.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="7.6117%" y="277" width="0.0388%" height="15" fill="rgb(219,14,44)" fg:x="196" fg:w="1"/><text x="7.8617%" y="287.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="7.6117%" y="261" width="0.0388%" height="15" fill="rgb(217,220,26)" fg:x="196" fg:w="1"/><text x="7.8617%" y="271.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::schedule (6 samples, 0.23%)</title><rect x="7.4563%" y="421" width="0.2330%" height="15" fill="rgb(213,158,28)" fg:x="192" fg:w="6"/><text x="7.7063%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::schedule (6 samples, 0.23%)</title><rect x="7.4563%" y="405" width="0.2330%" height="15" fill="rgb(252,51,52)" fg:x="192" fg:w="6"/><text x="7.7063%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.08%)</title><rect x="7.6117%" y="389" width="0.0777%" height="15" fill="rgb(246,89,16)" fg:x="196" fg:w="2"/><text x="7.8617%" y="399.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="7.6117%" y="373" width="0.0777%" height="15" fill="rgb(216,158,49)" fg:x="196" fg:w="2"/><text x="7.8617%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.08%)</title><rect x="7.6117%" y="357" width="0.0777%" height="15" fill="rgb(236,107,19)" fg:x="196" fg:w="2"/><text x="7.8617%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (2 samples, 0.08%)</title><rect x="7.6117%" y="341" width="0.0777%" height="15" fill="rgb(228,185,30)" fg:x="196" fg:w="2"/><text x="7.8617%" y="351.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (2 samples, 0.08%)</title><rect x="7.6117%" y="325" width="0.0777%" height="15" fill="rgb(246,134,8)" fg:x="196" fg:w="2"/><text x="7.8617%" y="335.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="7.6117%" y="309" width="0.0777%" height="15" fill="rgb(214,143,50)" fg:x="196" fg:w="2"/><text x="7.8617%" y="319.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.04%)</title><rect x="7.6505%" y="293" width="0.0388%" height="15" fill="rgb(228,75,8)" fg:x="197" fg:w="1"/><text x="7.9005%" y="303.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="7.6893%" y="405" width="0.0388%" height="15" fill="rgb(207,175,4)" fg:x="198" fg:w="1"/><text x="7.9393%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="7.7282%" y="389" width="0.0388%" height="15" fill="rgb(205,108,24)" fg:x="199" fg:w="1"/><text x="7.9782%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="7.7282%" y="373" width="0.0388%" height="15" fill="rgb(244,120,49)" fg:x="199" fg:w="1"/><text x="7.9782%" y="383.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="7.7282%" y="357" width="0.0388%" height="15" fill="rgb(223,47,38)" fg:x="199" fg:w="1"/><text x="7.9782%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate (2 samples, 0.08%)</title><rect x="7.7282%" y="405" width="0.0777%" height="15" fill="rgb(229,179,11)" fg:x="199" fg:w="2"/><text x="7.9782%" y="415.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (1 samples, 0.04%)</title><rect x="7.7670%" y="389" width="0.0388%" height="15" fill="rgb(231,122,1)" fg:x="200" fg:w="1"/><text x="8.0170%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate::_{{closure}} (1 samples, 0.04%)</title><rect x="7.7670%" y="373" width="0.0388%" height="15" fill="rgb(245,119,9)" fg:x="200" fg:w="1"/><text x="8.0170%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="7.7670%" y="357" width="0.0388%" height="15" fill="rgb(241,163,25)" fg:x="200" fg:w="1"/><text x="8.0170%" y="367.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="7.7670%" y="341" width="0.0388%" height="15" fill="rgb(217,214,3)" fg:x="200" fg:w="1"/><text x="8.0170%" y="351.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="7.7670%" y="325" width="0.0388%" height="15" fill="rgb(240,86,28)" fg:x="200" fg:w="1"/><text x="8.0170%" y="335.50"></text></g><g><title>wgpu_test`async_task::runnable::spawn_unchecked (4 samples, 0.16%)</title><rect x="7.6893%" y="421" width="0.1553%" height="15" fill="rgb(215,47,9)" fg:x="198" fg:w="4"/><text x="7.9393%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="7.8058%" y="405" width="0.0388%" height="15" fill="rgb(252,25,45)" fg:x="201" fg:w="1"/><text x="8.0558%" y="415.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::_{{closure}} (98 samples, 3.81%)</title><rect x="4.0777%" y="469" width="3.8058%" height="15" fill="rgb(251,164,9)" fg:x="105" fg:w="98"/><text x="4.3277%" y="479.50">wgpu..</text></g><g><title>wgpu_test`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (14 samples, 0.54%)</title><rect x="7.3398%" y="453" width="0.5437%" height="15" fill="rgb(233,194,0)" fg:x="189" fg:w="14"/><text x="7.5898%" y="463.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn (12 samples, 0.47%)</title><rect x="7.4175%" y="437" width="0.4660%" height="15" fill="rgb(249,111,24)" fg:x="191" fg:w="12"/><text x="7.6675%" y="447.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::insert (1 samples, 0.04%)</title><rect x="7.8447%" y="421" width="0.0388%" height="15" fill="rgb(250,223,3)" fg:x="202" fg:w="1"/><text x="8.0947%" y="431.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::insert_at (1 samples, 0.04%)</title><rect x="7.8447%" y="405" width="0.0388%" height="15" fill="rgb(236,178,37)" fg:x="202" fg:w="1"/><text x="8.0947%" y="415.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="7.8835%" y="469" width="0.0388%" height="15" fill="rgb(241,158,50)" fg:x="203" fg:w="1"/><text x="8.1335%" y="479.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="8.0388%" y="453" width="0.0388%" height="15" fill="rgb(213,121,41)" fg:x="207" fg:w="1"/><text x="8.2888%" y="463.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="8.0388%" y="437" width="0.0388%" height="15" fill="rgb(240,92,3)" fg:x="207" fg:w="1"/><text x="8.2888%" y="447.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="8.0388%" y="421" width="0.0388%" height="15" fill="rgb(205,123,3)" fg:x="207" fg:w="1"/><text x="8.2888%" y="431.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.04%)</title><rect x="8.1165%" y="389" width="0.0388%" height="15" fill="rgb(205,97,47)" fg:x="209" fg:w="1"/><text x="8.3665%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="8.1165%" y="373" width="0.0388%" height="15" fill="rgb(247,152,14)" fg:x="209" fg:w="1"/><text x="8.3665%" y="383.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="8.1165%" y="357" width="0.0388%" height="15" fill="rgb(248,195,53)" fg:x="209" fg:w="1"/><text x="8.3665%" y="367.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="8.1942%" y="341" width="0.0388%" height="15" fill="rgb(226,201,16)" fg:x="211" fg:w="1"/><text x="8.4442%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="8.1942%" y="325" width="0.0388%" height="15" fill="rgb(205,98,0)" fg:x="211" fg:w="1"/><text x="8.4442%" y="335.50"></text></g><g><title>wgpu_test`async_executor::Executor::state (5 samples, 0.19%)</title><rect x="8.0777%" y="453" width="0.1942%" height="15" fill="rgb(214,191,48)" fg:x="208" fg:w="5"/><text x="8.3277%" y="463.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.19%)</title><rect x="8.0777%" y="437" width="0.1942%" height="15" fill="rgb(237,112,39)" fg:x="208" fg:w="5"/><text x="8.3277%" y="447.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.19%)</title><rect x="8.0777%" y="421" width="0.1942%" height="15" fill="rgb(247,203,27)" fg:x="208" fg:w="5"/><text x="8.3277%" y="431.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get (4 samples, 0.16%)</title><rect x="8.1165%" y="405" width="0.1553%" height="15" fill="rgb(235,124,28)" fg:x="209" fg:w="4"/><text x="8.3665%" y="415.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="8.1553%" y="389" width="0.1165%" height="15" fill="rgb(208,207,46)" fg:x="210" fg:w="3"/><text x="8.4053%" y="399.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="8.1553%" y="373" width="0.1165%" height="15" fill="rgb(234,176,4)" fg:x="210" fg:w="3"/><text x="8.4053%" y="383.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (2 samples, 0.08%)</title><rect x="8.1942%" y="357" width="0.0777%" height="15" fill="rgb(230,133,28)" fg:x="211" fg:w="2"/><text x="8.4442%" y="367.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="8.2330%" y="341" width="0.0388%" height="15" fill="rgb(211,137,40)" fg:x="212" fg:w="1"/><text x="8.4830%" y="351.50"></text></g><g><title>wgpu_test`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (1 samples, 0.04%)</title><rect x="8.2718%" y="405" width="0.0388%" height="15" fill="rgb(254,35,13)" fg:x="213" fg:w="1"/><text x="8.5218%" y="415.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="8.3495%" y="389" width="0.0388%" height="15" fill="rgb(225,49,51)" fg:x="215" fg:w="1"/><text x="8.5995%" y="399.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="8.4272%" y="325" width="0.0388%" height="15" fill="rgb(251,10,15)" fg:x="217" fg:w="1"/><text x="8.6772%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.04%)</title><rect x="8.4272%" y="309" width="0.0388%" height="15" fill="rgb(228,207,15)" fg:x="217" fg:w="1"/><text x="8.6772%" y="319.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="8.4272%" y="293" width="0.0388%" height="15" fill="rgb(241,99,19)" fg:x="217" fg:w="1"/><text x="8.6772%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="8.4272%" y="277" width="0.0388%" height="15" fill="rgb(207,104,49)" fg:x="217" fg:w="1"/><text x="8.6772%" y="287.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="8.4272%" y="261" width="0.0388%" height="15" fill="rgb(234,99,18)" fg:x="217" fg:w="1"/><text x="8.6772%" y="271.50"></text></g><g><title>wgpu_test`async_task::utils::padding_needed_for (1 samples, 0.04%)</title><rect x="8.4272%" y="245" width="0.0388%" height="15" fill="rgb(213,191,49)" fg:x="217" fg:w="1"/><text x="8.6772%" y="255.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2 samples, 0.08%)</title><rect x="8.4272%" y="341" width="0.0777%" height="15" fill="rgb(210,226,19)" fg:x="217" fg:w="2"/><text x="8.6772%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.04%)</title><rect x="8.4660%" y="325" width="0.0388%" height="15" fill="rgb(229,97,18)" fg:x="218" fg:w="1"/><text x="8.7160%" y="335.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.04%)</title><rect x="8.4660%" y="309" width="0.0388%" height="15" fill="rgb(211,167,15)" fg:x="218" fg:w="1"/><text x="8.7160%" y="319.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="8.4660%" y="293" width="0.0388%" height="15" fill="rgb(210,169,34)" fg:x="218" fg:w="1"/><text x="8.7160%" y="303.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.04%)</title><rect x="8.4660%" y="277" width="0.0388%" height="15" fill="rgb(241,121,31)" fg:x="218" fg:w="1"/><text x="8.7160%" y="287.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (1 samples, 0.04%)</title><rect x="8.4660%" y="261" width="0.0388%" height="15" fill="rgb(232,40,11)" fg:x="218" fg:w="1"/><text x="8.7160%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.04%)</title><rect x="8.4660%" y="245" width="0.0388%" height="15" fill="rgb(205,86,26)" fg:x="218" fg:w="1"/><text x="8.7160%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.04%)</title><rect x="8.4660%" y="229" width="0.0388%" height="15" fill="rgb(231,126,28)" fg:x="218" fg:w="1"/><text x="8.7160%" y="239.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="8.5049%" y="325" width="0.0388%" height="15" fill="rgb(219,221,18)" fg:x="219" fg:w="1"/><text x="8.7549%" y="335.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.04%)</title><rect x="8.5437%" y="293" width="0.0388%" height="15" fill="rgb(211,40,0)" fg:x="220" fg:w="1"/><text x="8.7937%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="8.5437%" y="277" width="0.0388%" height="15" fill="rgb(239,85,43)" fg:x="220" fg:w="1"/><text x="8.7937%" y="287.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="8.5437%" y="261" width="0.0388%" height="15" fill="rgb(231,55,21)" fg:x="220" fg:w="1"/><text x="8.7937%" y="271.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.12%)</title><rect x="8.5049%" y="341" width="0.1165%" height="15" fill="rgb(225,184,43)" fg:x="219" fg:w="3"/><text x="8.7549%" y="351.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.08%)</title><rect x="8.5437%" y="325" width="0.0777%" height="15" fill="rgb(251,158,41)" fg:x="220" fg:w="2"/><text x="8.7937%" y="335.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.08%)</title><rect x="8.5437%" y="309" width="0.0777%" height="15" fill="rgb(234,159,37)" fg:x="220" fg:w="2"/><text x="8.7937%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="8.5825%" y="293" width="0.0388%" height="15" fill="rgb(216,204,22)" fg:x="221" fg:w="1"/><text x="8.8325%" y="303.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.50%)</title><rect x="8.4272%" y="357" width="0.5049%" height="15" fill="rgb(214,17,3)" fg:x="217" fg:w="13"/><text x="8.6772%" y="367.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (8 samples, 0.31%)</title><rect x="8.6214%" y="341" width="0.3107%" height="15" fill="rgb(212,111,17)" fg:x="222" fg:w="8"/><text x="8.8714%" y="351.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (7 samples, 0.27%)</title><rect x="8.6602%" y="325" width="0.2718%" height="15" fill="rgb(221,157,24)" fg:x="223" fg:w="7"/><text x="8.9102%" y="335.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.27%)</title><rect x="8.6602%" y="309" width="0.2718%" height="15" fill="rgb(252,16,13)" fg:x="223" fg:w="7"/><text x="8.9102%" y="319.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (7 samples, 0.27%)</title><rect x="8.6602%" y="293" width="0.2718%" height="15" fill="rgb(221,62,2)" fg:x="223" fg:w="7"/><text x="8.9102%" y="303.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (7 samples, 0.27%)</title><rect x="8.6602%" y="277" width="0.2718%" height="15" fill="rgb(247,87,22)" fg:x="223" fg:w="7"/><text x="8.9102%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (7 samples, 0.27%)</title><rect x="8.6602%" y="261" width="0.2718%" height="15" fill="rgb(215,73,9)" fg:x="223" fg:w="7"/><text x="8.9102%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.23%)</title><rect x="8.6990%" y="245" width="0.2330%" height="15" fill="rgb(207,175,33)" fg:x="224" fg:w="6"/><text x="8.9490%" y="255.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="8.9709%" y="325" width="0.0388%" height="15" fill="rgb(243,129,54)" fg:x="231" fg:w="1"/><text x="9.2209%" y="335.50"></text></g><g><title>wgpu_test`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="8.9709%" y="309" width="0.0388%" height="15" fill="rgb(227,119,45)" fg:x="231" fg:w="1"/><text x="9.2209%" y="319.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="8.9709%" y="293" width="0.0388%" height="15" fill="rgb(205,109,36)" fg:x="231" fg:w="1"/><text x="9.2209%" y="303.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="8.9709%" y="277" width="0.0388%" height="15" fill="rgb(205,6,39)" fg:x="231" fg:w="1"/><text x="9.2209%" y="287.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="9.0097%" y="309" width="0.0388%" height="15" fill="rgb(221,32,16)" fg:x="232" fg:w="1"/><text x="9.2597%" y="319.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="9.0097%" y="293" width="0.0388%" height="15" fill="rgb(228,144,50)" fg:x="232" fg:w="1"/><text x="9.2597%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="9.0097%" y="277" width="0.0388%" height="15" fill="rgb(229,201,53)" fg:x="232" fg:w="1"/><text x="9.2597%" y="287.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="9.0097%" y="261" width="0.0388%" height="15" fill="rgb(249,153,27)" fg:x="232" fg:w="1"/><text x="9.2597%" y="271.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="9.0485%" y="277" width="0.0388%" height="15" fill="rgb(227,106,25)" fg:x="233" fg:w="1"/><text x="9.2985%" y="287.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="9.0874%" y="277" width="0.0388%" height="15" fill="rgb(230,65,29)" fg:x="234" fg:w="1"/><text x="9.3374%" y="287.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="9.0874%" y="261" width="0.0388%" height="15" fill="rgb(221,57,46)" fg:x="234" fg:w="1"/><text x="9.3374%" y="271.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (1 samples, 0.04%)</title><rect x="9.1262%" y="277" width="0.0388%" height="15" fill="rgb(229,161,17)" fg:x="235" fg:w="1"/><text x="9.3762%" y="287.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="9.1262%" y="261" width="0.0388%" height="15" fill="rgb(222,213,11)" fg:x="235" fg:w="1"/><text x="9.3762%" y="271.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="9.1262%" y="245" width="0.0388%" height="15" fill="rgb(235,35,13)" fg:x="235" fg:w="1"/><text x="9.3762%" y="255.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="9.1262%" y="229" width="0.0388%" height="15" fill="rgb(233,158,34)" fg:x="235" fg:w="1"/><text x="9.3762%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="9.1262%" y="213" width="0.0388%" height="15" fill="rgb(215,151,48)" fg:x="235" fg:w="1"/><text x="9.3762%" y="223.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="9.1650%" y="261" width="0.0388%" height="15" fill="rgb(229,84,14)" fg:x="236" fg:w="1"/><text x="9.4150%" y="271.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.04%)</title><rect x="9.2039%" y="181" width="0.0388%" height="15" fill="rgb(229,68,14)" fg:x="237" fg:w="1"/><text x="9.4539%" y="191.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="9.2039%" y="165" width="0.0388%" height="15" fill="rgb(243,106,26)" fg:x="237" fg:w="1"/><text x="9.4539%" y="175.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="9.2039%" y="149" width="0.0388%" height="15" fill="rgb(206,45,38)" fg:x="237" fg:w="1"/><text x="9.4539%" y="159.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="9.2039%" y="133" width="0.0388%" height="15" fill="rgb(226,6,15)" fg:x="237" fg:w="1"/><text x="9.4539%" y="143.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="9.2039%" y="117" width="0.0388%" height="15" fill="rgb(232,22,54)" fg:x="237" fg:w="1"/><text x="9.4539%" y="127.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (2 samples, 0.08%)</title><rect x="9.2427%" y="181" width="0.0777%" height="15" fill="rgb(229,222,32)" fg:x="238" fg:w="2"/><text x="9.4927%" y="191.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.08%)</title><rect x="9.2427%" y="165" width="0.0777%" height="15" fill="rgb(228,62,29)" fg:x="238" fg:w="2"/><text x="9.4927%" y="175.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (2 samples, 0.08%)</title><rect x="9.2427%" y="149" width="0.0777%" height="15" fill="rgb(251,103,34)" fg:x="238" fg:w="2"/><text x="9.4927%" y="159.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (2 samples, 0.08%)</title><rect x="9.2427%" y="133" width="0.0777%" height="15" fill="rgb(233,12,30)" fg:x="238" fg:w="2"/><text x="9.4927%" y="143.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (2 samples, 0.08%)</title><rect x="9.2427%" y="117" width="0.0777%" height="15" fill="rgb(238,52,0)" fg:x="238" fg:w="2"/><text x="9.4927%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.08%)</title><rect x="9.2427%" y="101" width="0.0777%" height="15" fill="rgb(223,98,5)" fg:x="238" fg:w="2"/><text x="9.4927%" y="111.50"></text></g><g><title>wgpu_test`async_executor::State::notify (4 samples, 0.16%)</title><rect x="9.2039%" y="197" width="0.1553%" height="15" fill="rgb(228,75,37)" fg:x="237" fg:w="4"/><text x="9.4539%" y="207.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="9.3204%" y="181" width="0.0388%" height="15" fill="rgb(205,115,49)" fg:x="240" fg:w="1"/><text x="9.5704%" y="191.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="9.3204%" y="165" width="0.0388%" height="15" fill="rgb(250,154,43)" fg:x="240" fg:w="1"/><text x="9.5704%" y="175.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="9.3204%" y="149" width="0.0388%" height="15" fill="rgb(226,43,29)" fg:x="240" fg:w="1"/><text x="9.5704%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="9.3204%" y="133" width="0.0388%" height="15" fill="rgb(249,228,39)" fg:x="240" fg:w="1"/><text x="9.5704%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="9.3204%" y="117" width="0.0388%" height="15" fill="rgb(216,79,43)" fg:x="240" fg:w="1"/><text x="9.5704%" y="127.50"></text></g><g><title>wgpu_test`async_executor::Executor::schedule::_{{closure}} (5 samples, 0.19%)</title><rect x="9.2039%" y="213" width="0.1942%" height="15" fill="rgb(228,95,12)" fg:x="237" fg:w="5"/><text x="9.4539%" y="223.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.04%)</title><rect x="9.3592%" y="197" width="0.0388%" height="15" fill="rgb(249,221,15)" fg:x="241" fg:w="1"/><text x="9.6092%" y="207.50"></text></g><g><title>wgpu_test`event_listener::List::notify (7 samples, 0.27%)</title><rect x="9.1650%" y="277" width="0.2718%" height="15" fill="rgb(233,34,13)" fg:x="236" fg:w="7"/><text x="9.4150%" y="287.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (6 samples, 0.23%)</title><rect x="9.2039%" y="261" width="0.2330%" height="15" fill="rgb(214,103,39)" fg:x="237" fg:w="6"/><text x="9.4539%" y="271.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (6 samples, 0.23%)</title><rect x="9.2039%" y="245" width="0.2330%" height="15" fill="rgb(251,126,39)" fg:x="237" fg:w="6"/><text x="9.4539%" y="255.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (6 samples, 0.23%)</title><rect x="9.2039%" y="229" width="0.2330%" height="15" fill="rgb(214,216,36)" fg:x="237" fg:w="6"/><text x="9.4539%" y="239.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.04%)</title><rect x="9.3981%" y="213" width="0.0388%" height="15" fill="rgb(220,221,8)" fg:x="242" fg:w="1"/><text x="9.6481%" y="223.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="9.3981%" y="197" width="0.0388%" height="15" fill="rgb(240,216,3)" fg:x="242" fg:w="1"/><text x="9.6481%" y="207.50"></text></g><g><title>wgpu_test`async_channel::Sender&lt;T&gt;::try_send (11 samples, 0.43%)</title><rect x="9.0485%" y="309" width="0.4272%" height="15" fill="rgb(232,218,17)" fg:x="233" fg:w="11"/><text x="9.2985%" y="319.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (11 samples, 0.43%)</title><rect x="9.0485%" y="293" width="0.4272%" height="15" fill="rgb(229,163,45)" fg:x="233" fg:w="11"/><text x="9.2985%" y="303.50"></text></g><g><title>wgpu_test`event_listener::full_fence (1 samples, 0.04%)</title><rect x="9.4369%" y="277" width="0.0388%" height="15" fill="rgb(231,110,42)" fg:x="243" fg:w="1"/><text x="9.6869%" y="287.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.04%)</title><rect x="9.4369%" y="261" width="0.0388%" height="15" fill="rgb(208,170,48)" fg:x="243" fg:w="1"/><text x="9.6869%" y="271.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (1 samples, 0.04%)</title><rect x="9.4757%" y="309" width="0.0388%" height="15" fill="rgb(239,116,25)" fg:x="244" fg:w="1"/><text x="9.7257%" y="319.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.54%)</title><rect x="9.0097%" y="325" width="0.5437%" height="15" fill="rgb(219,200,50)" fg:x="232" fg:w="14"/><text x="9.2597%" y="335.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="9.5146%" y="309" width="0.0388%" height="15" fill="rgb(245,200,0)" fg:x="245" fg:w="1"/><text x="9.7646%" y="319.50"></text></g><g><title>wgpu_test`&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="9.5534%" y="325" width="0.0388%" height="15" fill="rgb(245,119,33)" fg:x="246" fg:w="1"/><text x="9.8034%" y="335.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::grow (1 samples, 0.04%)</title><rect x="9.5922%" y="309" width="0.0388%" height="15" fill="rgb(231,125,12)" fg:x="247" fg:w="1"/><text x="9.8422%" y="319.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::extend (2 samples, 0.08%)</title><rect x="9.5922%" y="325" width="0.0777%" height="15" fill="rgb(216,96,41)" fg:x="247" fg:w="2"/><text x="9.8422%" y="335.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::union_with (1 samples, 0.04%)</title><rect x="9.6311%" y="309" width="0.0388%" height="15" fill="rgb(248,43,45)" fg:x="248" fg:w="1"/><text x="9.8811%" y="319.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="9.6311%" y="293" width="0.0388%" height="15" fill="rgb(217,222,7)" fg:x="248" fg:w="1"/><text x="9.8811%" y="303.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="9.6311%" y="277" width="0.0388%" height="15" fill="rgb(233,28,6)" fg:x="248" fg:w="1"/><text x="9.8811%" y="287.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="9.6311%" y="261" width="0.0388%" height="15" fill="rgb(231,218,15)" fg:x="248" fg:w="1"/><text x="9.8811%" y="271.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (1 samples, 0.04%)</title><rect x="9.6699%" y="325" width="0.0388%" height="15" fill="rgb(226,171,48)" fg:x="249" fg:w="1"/><text x="9.9199%" y="335.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (1 samples, 0.04%)</title><rect x="9.6699%" y="309" width="0.0388%" height="15" fill="rgb(235,201,9)" fg:x="249" fg:w="1"/><text x="9.9199%" y="319.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.04%)</title><rect x="9.6699%" y="293" width="0.0388%" height="15" fill="rgb(217,80,15)" fg:x="249" fg:w="1"/><text x="9.9199%" y="303.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="9.6699%" y="277" width="0.0388%" height="15" fill="rgb(219,152,8)" fg:x="249" fg:w="1"/><text x="9.9199%" y="287.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="9.7087%" y="309" width="0.0388%" height="15" fill="rgb(243,107,38)" fg:x="250" fg:w="1"/><text x="9.9587%" y="319.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="9.7087%" y="293" width="0.0388%" height="15" fill="rgb(231,17,5)" fg:x="250" fg:w="1"/><text x="9.9587%" y="303.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="9.7087%" y="277" width="0.0388%" height="15" fill="rgb(209,25,54)" fg:x="250" fg:w="1"/><text x="9.9587%" y="287.50"></text></g><g><title>wgpu_test`core::cmp::min (1 samples, 0.04%)</title><rect x="9.7087%" y="261" width="0.0388%" height="15" fill="rgb(219,0,2)" fg:x="250" fg:w="1"/><text x="9.9587%" y="271.50"></text></g><g><title>wgpu_test`core::cmp::min_by (1 samples, 0.04%)</title><rect x="9.7087%" y="245" width="0.0388%" height="15" fill="rgb(246,9,5)" fg:x="250" fg:w="1"/><text x="9.9587%" y="255.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.85%)</title><rect x="8.9320%" y="357" width="0.8544%" height="15" fill="rgb(226,159,4)" fg:x="230" fg:w="22"/><text x="9.1820%" y="367.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::_{{closure}} (22 samples, 0.85%)</title><rect x="8.9320%" y="341" width="0.8544%" height="15" fill="rgb(219,175,34)" fg:x="230" fg:w="22"/><text x="9.1820%" y="351.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::difference_with (2 samples, 0.08%)</title><rect x="9.7087%" y="325" width="0.0777%" height="15" fill="rgb(236,10,46)" fg:x="250" fg:w="2"/><text x="9.9587%" y="335.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="9.7476%" y="309" width="0.0388%" height="15" fill="rgb(240,211,16)" fg:x="251" fg:w="1"/><text x="9.9976%" y="319.50"></text></g><g><title>wgpu_test`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="9.7476%" y="293" width="0.0388%" height="15" fill="rgb(205,3,43)" fg:x="251" fg:w="1"/><text x="9.9976%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="9.7476%" y="277" width="0.0388%" height="15" fill="rgb(245,7,22)" fg:x="251" fg:w="1"/><text x="9.9976%" y="287.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="9.7476%" y="261" width="0.0388%" height="15" fill="rgb(239,132,32)" fg:x="251" fg:w="1"/><text x="9.9976%" y="271.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="9.7864%" y="357" width="0.0388%" height="15" fill="rgb(228,202,34)" fg:x="252" fg:w="1"/><text x="10.0364%" y="367.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="9.8252%" y="357" width="0.0388%" height="15" fill="rgb(254,200,22)" fg:x="253" fg:w="1"/><text x="10.0752%" y="367.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="9.8252%" y="341" width="0.0388%" height="15" fill="rgb(219,10,39)" fg:x="253" fg:w="1"/><text x="10.0752%" y="351.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="9.8252%" y="325" width="0.0388%" height="15" fill="rgb(226,210,39)" fg:x="253" fg:w="1"/><text x="10.0752%" y="335.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.04%)</title><rect x="9.8252%" y="309" width="0.0388%" height="15" fill="rgb(208,219,16)" fg:x="253" fg:w="1"/><text x="10.0752%" y="319.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="9.8252%" y="293" width="0.0388%" height="15" fill="rgb(216,158,51)" fg:x="253" fg:w="1"/><text x="10.0752%" y="303.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="9.8252%" y="277" width="0.0388%" height="15" fill="rgb(233,14,44)" fg:x="253" fg:w="1"/><text x="10.0752%" y="287.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="9.8641%" y="309" width="0.0388%" height="15" fill="rgb(237,97,39)" fg:x="254" fg:w="1"/><text x="10.1141%" y="319.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="9.8641%" y="293" width="0.0388%" height="15" fill="rgb(218,198,43)" fg:x="254" fg:w="1"/><text x="10.1141%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="9.8641%" y="277" width="0.0388%" height="15" fill="rgb(231,104,20)" fg:x="254" fg:w="1"/><text x="10.1141%" y="287.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.08%)</title><rect x="9.8641%" y="341" width="0.0777%" height="15" fill="rgb(254,36,13)" fg:x="254" fg:w="2"/><text x="10.1141%" y="351.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="9.8641%" y="325" width="0.0777%" height="15" fill="rgb(248,14,50)" fg:x="254" fg:w="2"/><text x="10.1141%" y="335.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="9.9029%" y="309" width="0.0388%" height="15" fill="rgb(217,107,29)" fg:x="255" fg:w="1"/><text x="10.1529%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="9.9029%" y="293" width="0.0388%" height="15" fill="rgb(251,169,33)" fg:x="255" fg:w="1"/><text x="10.1529%" y="303.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (3 samples, 0.12%)</title><rect x="9.8641%" y="357" width="0.1165%" height="15" fill="rgb(217,108,32)" fg:x="254" fg:w="3"/><text x="10.1141%" y="367.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::set (1 samples, 0.04%)</title><rect x="9.9417%" y="341" width="0.0388%" height="15" fill="rgb(219,66,42)" fg:x="256" fg:w="1"/><text x="10.1917%" y="351.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="9.9417%" y="325" width="0.0388%" height="15" fill="rgb(206,180,7)" fg:x="256" fg:w="1"/><text x="10.1917%" y="335.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="9.9806%" y="309" width="0.0388%" height="15" fill="rgb(208,226,31)" fg:x="257" fg:w="1"/><text x="10.2306%" y="319.50"></text></g><g><title>wgpu_test`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="9.9806%" y="293" width="0.0388%" height="15" fill="rgb(218,26,49)" fg:x="257" fg:w="1"/><text x="10.2306%" y="303.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::clear (2 samples, 0.08%)</title><rect x="9.9806%" y="341" width="0.0777%" height="15" fill="rgb(233,197,48)" fg:x="257" fg:w="2"/><text x="10.2306%" y="351.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::clear (2 samples, 0.08%)</title><rect x="9.9806%" y="325" width="0.0777%" height="15" fill="rgb(252,181,51)" fg:x="257" fg:w="2"/><text x="10.2306%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="10.0194%" y="309" width="0.0388%" height="15" fill="rgb(253,90,19)" fg:x="258" fg:w="1"/><text x="10.2694%" y="319.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="10.0583%" y="309" width="0.0388%" height="15" fill="rgb(215,171,30)" fg:x="259" fg:w="1"/><text x="10.3083%" y="319.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="10.0583%" y="293" width="0.0388%" height="15" fill="rgb(214,222,9)" fg:x="259" fg:w="1"/><text x="10.3083%" y="303.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="10.0583%" y="277" width="0.0388%" height="15" fill="rgb(223,3,22)" fg:x="259" fg:w="1"/><text x="10.3083%" y="287.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (4 samples, 0.16%)</title><rect x="9.9806%" y="357" width="0.1553%" height="15" fill="rgb(225,196,46)" fg:x="257" fg:w="4"/><text x="10.2306%" y="367.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::extend (2 samples, 0.08%)</title><rect x="10.0583%" y="341" width="0.0777%" height="15" fill="rgb(209,110,37)" fg:x="259" fg:w="2"/><text x="10.3083%" y="351.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::union_with (2 samples, 0.08%)</title><rect x="10.0583%" y="325" width="0.0777%" height="15" fill="rgb(249,89,12)" fg:x="259" fg:w="2"/><text x="10.3083%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="10.0971%" y="309" width="0.0388%" height="15" fill="rgb(226,27,33)" fg:x="260" fg:w="1"/><text x="10.3471%" y="319.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="10.0971%" y="293" width="0.0388%" height="15" fill="rgb(213,82,22)" fg:x="260" fg:w="1"/><text x="10.3471%" y="303.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="10.0971%" y="277" width="0.0388%" height="15" fill="rgb(248,140,0)" fg:x="260" fg:w="1"/><text x="10.3471%" y="287.50"></text></g><g><title>wgpu_test`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="10.1359%" y="341" width="0.0388%" height="15" fill="rgb(228,106,3)" fg:x="261" fg:w="1"/><text x="10.3859%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="10.1359%" y="325" width="0.0388%" height="15" fill="rgb(209,23,37)" fg:x="261" fg:w="1"/><text x="10.3859%" y="335.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.04%)</title><rect x="10.1748%" y="341" width="0.0388%" height="15" fill="rgb(241,93,50)" fg:x="262" fg:w="1"/><text x="10.4248%" y="351.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="10.1748%" y="325" width="0.0388%" height="15" fill="rgb(253,46,43)" fg:x="262" fg:w="1"/><text x="10.4248%" y="335.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_counters_and_queue_systems (3 samples, 0.12%)</title><rect x="10.1359%" y="357" width="0.1165%" height="15" fill="rgb(226,206,43)" fg:x="261" fg:w="3"/><text x="10.3859%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;usize&gt;&gt; (1 samples, 0.04%)</title><rect x="10.2136%" y="341" width="0.0388%" height="15" fill="rgb(217,54,7)" fg:x="263" fg:w="1"/><text x="10.4636%" y="351.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="10.2136%" y="325" width="0.0388%" height="15" fill="rgb(223,5,52)" fg:x="263" fg:w="1"/><text x="10.4636%" y="335.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;usize,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="10.2136%" y="309" width="0.0388%" height="15" fill="rgb(206,52,46)" fg:x="263" fg:w="1"/><text x="10.4636%" y="319.50"></text></g><g><title>wgpu_test`&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="10.2136%" y="293" width="0.0388%" height="15" fill="rgb(253,136,11)" fg:x="263" fg:w="1"/><text x="10.4636%" y="303.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="10.2136%" y="277" width="0.0388%" height="15" fill="rgb(208,106,33)" fg:x="263" fg:w="1"/><text x="10.4636%" y="287.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::_{{closure}}::_{{closure}} (49 samples, 1.90%)</title><rect x="8.3883%" y="373" width="1.9029%" height="15" fill="rgb(206,54,4)" fg:x="216" fg:w="49"/><text x="8.6383%" y="383.50">w..</text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::count_ones (1 samples, 0.04%)</title><rect x="10.2524%" y="357" width="0.0388%" height="15" fill="rgb(213,3,15)" fg:x="264" fg:w="1"/><text x="10.5024%" y="367.50"></text></g><g><title>wgpu_test`fixedbitset::Masks::new (1 samples, 0.04%)</title><rect x="10.2524%" y="341" width="0.0388%" height="15" fill="rgb(252,211,39)" fg:x="264" fg:w="1"/><text x="10.5024%" y="351.50"></text></g><g><title>wgpu_test`fixedbitset::div_rem (1 samples, 0.04%)</title><rect x="10.2524%" y="325" width="0.0388%" height="15" fill="rgb(223,6,36)" fg:x="264" fg:w="1"/><text x="10.5024%" y="335.50"></text></g><g><title>wgpu_test`async_channel::Sender&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="10.2913%" y="373" width="0.0388%" height="15" fill="rgb(252,169,45)" fg:x="265" fg:w="1"/><text x="10.5413%" y="383.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (1 samples, 0.04%)</title><rect x="10.3301%" y="357" width="0.0388%" height="15" fill="rgb(212,48,26)" fg:x="266" fg:w="1"/><text x="10.5801%" y="367.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="10.4078%" y="341" width="0.0388%" height="15" fill="rgb(251,102,48)" fg:x="268" fg:w="1"/><text x="10.6578%" y="351.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="10.4078%" y="325" width="0.0388%" height="15" fill="rgb(243,208,16)" fg:x="268" fg:w="1"/><text x="10.6578%" y="335.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.04%)</title><rect x="10.4078%" y="309" width="0.0388%" height="15" fill="rgb(219,96,24)" fg:x="268" fg:w="1"/><text x="10.6578%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="10.4078%" y="293" width="0.0388%" height="15" fill="rgb(219,33,29)" fg:x="268" fg:w="1"/><text x="10.6578%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="10.4078%" y="277" width="0.0388%" height="15" fill="rgb(223,176,5)" fg:x="268" fg:w="1"/><text x="10.6578%" y="287.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="10.4466%" y="341" width="0.0388%" height="15" fill="rgb(228,140,14)" fg:x="269" fg:w="1"/><text x="10.6966%" y="351.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (1 samples, 0.04%)</title><rect x="10.4466%" y="325" width="0.0388%" height="15" fill="rgb(217,179,31)" fg:x="269" fg:w="1"/><text x="10.6966%" y="335.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="10.4466%" y="309" width="0.0388%" height="15" fill="rgb(230,9,30)" fg:x="269" fg:w="1"/><text x="10.6966%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="10.4466%" y="293" width="0.0388%" height="15" fill="rgb(230,136,20)" fg:x="269" fg:w="1"/><text x="10.6966%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="10.4466%" y="277" width="0.0388%" height="15" fill="rgb(215,210,22)" fg:x="269" fg:w="1"/><text x="10.6966%" y="287.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.16%)</title><rect x="10.3689%" y="357" width="0.1553%" height="15" fill="rgb(218,43,5)" fg:x="267" fg:w="4"/><text x="10.6189%" y="367.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="10.4854%" y="341" width="0.0388%" height="15" fill="rgb(216,11,5)" fg:x="270" fg:w="1"/><text x="10.7354%" y="351.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="10.5243%" y="341" width="0.0388%" height="15" fill="rgb(209,82,29)" fg:x="271" fg:w="1"/><text x="10.7743%" y="351.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="10.5243%" y="325" width="0.0388%" height="15" fill="rgb(244,115,12)" fg:x="271" fg:w="1"/><text x="10.7743%" y="335.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.04%)</title><rect x="10.5631%" y="309" width="0.0388%" height="15" fill="rgb(222,82,18)" fg:x="272" fg:w="1"/><text x="10.8131%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.04%)</title><rect x="10.5631%" y="293" width="0.0388%" height="15" fill="rgb(249,227,8)" fg:x="272" fg:w="1"/><text x="10.8131%" y="303.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="10.5631%" y="277" width="0.0388%" height="15" fill="rgb(253,141,45)" fg:x="272" fg:w="1"/><text x="10.8131%" y="287.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.04%)</title><rect x="10.5631%" y="261" width="0.0388%" height="15" fill="rgb(234,184,4)" fg:x="272" fg:w="1"/><text x="10.8131%" y="271.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (1 samples, 0.04%)</title><rect x="10.5631%" y="245" width="0.0388%" height="15" fill="rgb(218,194,23)" fg:x="272" fg:w="1"/><text x="10.8131%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.04%)</title><rect x="10.5631%" y="229" width="0.0388%" height="15" fill="rgb(235,66,41)" fg:x="272" fg:w="1"/><text x="10.8131%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.04%)</title><rect x="10.5631%" y="213" width="0.0388%" height="15" fill="rgb(245,217,1)" fg:x="272" fg:w="1"/><text x="10.8131%" y="223.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::as_ref (1 samples, 0.04%)</title><rect x="10.6019%" y="309" width="0.0388%" height="15" fill="rgb(229,91,1)" fg:x="273" fg:w="1"/><text x="10.8519%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="10.6408%" y="309" width="0.0388%" height="15" fill="rgb(207,101,30)" fg:x="274" fg:w="1"/><text x="10.8908%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="10.6408%" y="293" width="0.0388%" height="15" fill="rgb(223,82,49)" fg:x="274" fg:w="1"/><text x="10.8908%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.12%)</title><rect x="10.6796%" y="133" width="0.1165%" height="15" fill="rgb(218,167,17)" fg:x="275" fg:w="3"/><text x="10.9296%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.04%)</title><rect x="10.7961%" y="133" width="0.0388%" height="15" fill="rgb(208,103,14)" fg:x="278" fg:w="1"/><text x="11.0461%" y="143.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="10.8350%" y="117" width="0.0388%" height="15" fill="rgb(238,20,8)" fg:x="279" fg:w="1"/><text x="11.0850%" y="127.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::get (1 samples, 0.04%)</title><rect x="10.8350%" y="101" width="0.0388%" height="15" fill="rgb(218,80,54)" fg:x="279" fg:w="1"/><text x="11.0850%" y="111.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (6 samples, 0.23%)</title><rect x="10.6796%" y="213" width="0.2330%" height="15" fill="rgb(240,144,17)" fg:x="275" fg:w="6"/><text x="10.9296%" y="223.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (6 samples, 0.23%)</title><rect x="10.6796%" y="197" width="0.2330%" height="15" fill="rgb(245,27,50)" fg:x="275" fg:w="6"/><text x="10.9296%" y="207.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (6 samples, 0.23%)</title><rect x="10.6796%" y="181" width="0.2330%" height="15" fill="rgb(251,51,7)" fg:x="275" fg:w="6"/><text x="10.9296%" y="191.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (6 samples, 0.23%)</title><rect x="10.6796%" y="165" width="0.2330%" height="15" fill="rgb(245,217,29)" fg:x="275" fg:w="6"/><text x="10.9296%" y="175.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (6 samples, 0.23%)</title><rect x="10.6796%" y="149" width="0.2330%" height="15" fill="rgb(221,176,29)" fg:x="275" fg:w="6"/><text x="10.9296%" y="159.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="10.8350%" y="133" width="0.0777%" height="15" fill="rgb(212,180,24)" fg:x="279" fg:w="2"/><text x="11.0850%" y="143.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="10.8738%" y="117" width="0.0388%" height="15" fill="rgb(254,24,2)" fg:x="280" fg:w="1"/><text x="11.1238%" y="127.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="10.8738%" y="101" width="0.0388%" height="15" fill="rgb(230,100,2)" fg:x="280" fg:w="1"/><text x="11.1238%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="10.8738%" y="85" width="0.0388%" height="15" fill="rgb(219,142,25)" fg:x="280" fg:w="1"/><text x="11.1238%" y="95.50"></text></g><g><title>wgpu_test`async_executor::State::notify (7 samples, 0.27%)</title><rect x="10.6796%" y="229" width="0.2718%" height="15" fill="rgb(240,73,43)" fg:x="275" fg:w="7"/><text x="10.9296%" y="239.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="10.9126%" y="213" width="0.0388%" height="15" fill="rgb(214,114,15)" fg:x="281" fg:w="1"/><text x="11.1626%" y="223.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="10.9126%" y="197" width="0.0388%" height="15" fill="rgb(207,130,4)" fg:x="281" fg:w="1"/><text x="11.1626%" y="207.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="10.9126%" y="181" width="0.0388%" height="15" fill="rgb(221,25,40)" fg:x="281" fg:w="1"/><text x="11.1626%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="10.9126%" y="165" width="0.0388%" height="15" fill="rgb(241,184,7)" fg:x="281" fg:w="1"/><text x="11.1626%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="10.9126%" y="149" width="0.0388%" height="15" fill="rgb(235,159,4)" fg:x="281" fg:w="1"/><text x="11.1626%" y="159.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.47%)</title><rect x="10.5243%" y="357" width="0.4660%" height="15" fill="rgb(214,87,48)" fg:x="271" fg:w="12"/><text x="10.7743%" y="367.50"></text></g><g><title>wgpu_test`async_channel::Sender&lt;T&gt;::try_send (11 samples, 0.43%)</title><rect x="10.5631%" y="341" width="0.4272%" height="15" fill="rgb(246,198,24)" fg:x="272" fg:w="11"/><text x="10.8131%" y="351.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (11 samples, 0.43%)</title><rect x="10.5631%" y="325" width="0.4272%" height="15" fill="rgb(209,66,40)" fg:x="272" fg:w="11"/><text x="10.8131%" y="335.50"></text></g><g><title>wgpu_test`event_listener::List::notify (8 samples, 0.31%)</title><rect x="10.6796%" y="309" width="0.3107%" height="15" fill="rgb(233,147,39)" fg:x="275" fg:w="8"/><text x="10.9296%" y="319.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (8 samples, 0.31%)</title><rect x="10.6796%" y="293" width="0.3107%" height="15" fill="rgb(231,145,52)" fg:x="275" fg:w="8"/><text x="10.9296%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (8 samples, 0.31%)</title><rect x="10.6796%" y="277" width="0.3107%" height="15" fill="rgb(206,20,26)" fg:x="275" fg:w="8"/><text x="10.9296%" y="287.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (8 samples, 0.31%)</title><rect x="10.6796%" y="261" width="0.3107%" height="15" fill="rgb(238,220,4)" fg:x="275" fg:w="8"/><text x="10.9296%" y="271.50"></text></g><g><title>wgpu_test`async_executor::Executor::schedule::_{{closure}} (8 samples, 0.31%)</title><rect x="10.6796%" y="245" width="0.3107%" height="15" fill="rgb(252,195,42)" fg:x="275" fg:w="8"/><text x="10.9296%" y="255.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="10.9515%" y="229" width="0.0388%" height="15" fill="rgb(209,10,6)" fg:x="282" fg:w="1"/><text x="11.2015%" y="239.50"></text></g><g><title>wgpu_test`&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="10.9903%" y="325" width="0.0388%" height="15" fill="rgb(229,3,52)" fg:x="283" fg:w="1"/><text x="11.2403%" y="335.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.04%)</title><rect x="10.9903%" y="309" width="0.0388%" height="15" fill="rgb(253,49,37)" fg:x="283" fg:w="1"/><text x="11.2403%" y="319.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="11.0291%" y="277" width="0.0388%" height="15" fill="rgb(240,103,49)" fg:x="284" fg:w="1"/><text x="11.2791%" y="287.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (3 samples, 0.12%)</title><rect x="10.9903%" y="341" width="0.1165%" height="15" fill="rgb(250,182,30)" fg:x="283" fg:w="3"/><text x="11.2403%" y="351.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run::call_inner (2 samples, 0.08%)</title><rect x="11.0291%" y="325" width="0.0777%" height="15" fill="rgb(248,8,30)" fg:x="284" fg:w="2"/><text x="11.2791%" y="335.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.08%)</title><rect x="11.0291%" y="309" width="0.0777%" height="15" fill="rgb(237,120,30)" fg:x="284" fg:w="2"/><text x="11.2791%" y="319.50"></text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (2 samples, 0.08%)</title><rect x="11.0291%" y="293" width="0.0777%" height="15" fill="rgb(221,146,34)" fg:x="284" fg:w="2"/><text x="11.2791%" y="303.50"></text></g><g><title>wgpu_test`bevy_ecs::event::Events&lt;T&gt;::update_system (1 samples, 0.04%)</title><rect x="11.0680%" y="277" width="0.0388%" height="15" fill="rgb(242,55,13)" fg:x="285" fg:w="1"/><text x="11.3180%" y="287.50"></text></g><g><title>wgpu_test`bevy_ecs::event::Events&lt;T&gt;::update (1 samples, 0.04%)</title><rect x="11.0680%" y="261" width="0.0388%" height="15" fill="rgb(242,112,31)" fg:x="285" fg:w="1"/><text x="11.3180%" y="271.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.04%)</title><rect x="11.0680%" y="245" width="0.0388%" height="15" fill="rgb(249,192,27)" fg:x="285" fg:w="1"/><text x="11.3180%" y="255.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.04%)</title><rect x="11.0680%" y="229" width="0.0388%" height="15" fill="rgb(208,204,44)" fg:x="285" fg:w="1"/><text x="11.3180%" y="239.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="11.0680%" y="213" width="0.0388%" height="15" fill="rgb(208,93,54)" fg:x="285" fg:w="1"/><text x="11.3180%" y="223.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="11.0680%" y="197" width="0.0388%" height="15" fill="rgb(242,1,31)" fg:x="285" fg:w="1"/><text x="11.3180%" y="207.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::event::EventWriterState&lt;(&lt;bevy_ecs::change_detection::ResMut&lt;bevy_ecs::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="11.1068%" y="309" width="0.0388%" height="15" fill="rgb(241,83,25)" fg:x="286" fg:w="1"/><text x="11.3568%" y="319.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="11.1068%" y="293" width="0.0388%" height="15" fill="rgb(205,169,50)" fg:x="286" fg:w="1"/><text x="11.3568%" y="303.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.04%)</title><rect x="11.1068%" y="277" width="0.0388%" height="15" fill="rgb(239,186,37)" fg:x="286" fg:w="1"/><text x="11.3568%" y="287.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="11.1068%" y="261" width="0.0388%" height="15" fill="rgb(205,221,10)" fg:x="286" fg:w="1"/><text x="11.3568%" y="271.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="11.1068%" y="245" width="0.0388%" height="15" fill="rgb(218,196,15)" fg:x="286" fg:w="1"/><text x="11.3568%" y="255.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="11.1068%" y="229" width="0.0388%" height="15" fill="rgb(218,196,35)" fg:x="286" fg:w="1"/><text x="11.3568%" y="239.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="11.1068%" y="213" width="0.0388%" height="15" fill="rgb(233,63,24)" fg:x="286" fg:w="1"/><text x="11.3568%" y="223.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="11.1068%" y="197" width="0.0388%" height="15" fill="rgb(225,8,4)" fg:x="286" fg:w="1"/><text x="11.3568%" y="207.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="11.1845%" y="277" width="0.0388%" height="15" fill="rgb(234,105,35)" fg:x="288" fg:w="1"/><text x="11.4345%" y="287.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="11.1845%" y="261" width="0.0388%" height="15" fill="rgb(236,21,32)" fg:x="288" fg:w="1"/><text x="11.4345%" y="271.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="11.1845%" y="245" width="0.0388%" height="15" fill="rgb(228,109,6)" fg:x="288" fg:w="1"/><text x="11.4345%" y="255.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="11.1845%" y="229" width="0.0388%" height="15" fill="rgb(229,215,31)" fg:x="288" fg:w="1"/><text x="11.4345%" y="239.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="11.1845%" y="213" width="0.0388%" height="15" fill="rgb(221,52,54)" fg:x="288" fg:w="1"/><text x="11.4345%" y="223.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="11.1845%" y="197" width="0.0388%" height="15" fill="rgb(252,129,43)" fg:x="288" fg:w="1"/><text x="11.4345%" y="207.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (3 samples, 0.12%)</title><rect x="11.1456%" y="309" width="0.1165%" height="15" fill="rgb(248,183,27)" fg:x="287" fg:w="3"/><text x="11.3956%" y="319.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (2 samples, 0.08%)</title><rect x="11.1845%" y="293" width="0.0777%" height="15" fill="rgb(250,0,22)" fg:x="288" fg:w="2"/><text x="11.4345%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicU32::load (1 samples, 0.04%)</title><rect x="11.2233%" y="277" width="0.0388%" height="15" fill="rgb(213,166,10)" fg:x="289" fg:w="1"/><text x="11.4733%" y="287.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="11.2621%" y="293" width="0.0388%" height="15" fill="rgb(207,163,36)" fg:x="290" fg:w="1"/><text x="11.5121%" y="303.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetypes::resource (1 samples, 0.04%)</title><rect x="11.2621%" y="277" width="0.0388%" height="15" fill="rgb(208,122,22)" fg:x="290" fg:w="1"/><text x="11.5121%" y="287.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="11.2621%" y="261" width="0.0388%" height="15" fill="rgb(207,104,49)" fg:x="290" fg:w="1"/><text x="11.5121%" y="271.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="11.2621%" y="245" width="0.0388%" height="15" fill="rgb(248,211,50)" fg:x="290" fg:w="1"/><text x="11.5121%" y="255.50"></text></g><g><title>wgpu_test`&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (6 samples, 0.23%)</title><rect x="11.1068%" y="325" width="0.2330%" height="15" fill="rgb(217,13,45)" fg:x="286" fg:w="6"/><text x="11.3568%" y="335.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.08%)</title><rect x="11.2621%" y="309" width="0.0777%" height="15" fill="rgb(211,216,49)" fg:x="290" fg:w="2"/><text x="11.5121%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="11.3010%" y="293" width="0.0388%" height="15" fill="rgb(221,58,53)" fg:x="291" fg:w="1"/><text x="11.5510%" y="303.50"></text></g><g><title>wgpu_test`hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="11.3398%" y="197" width="0.0388%" height="15" fill="rgb(220,112,41)" fg:x="292" fg:w="1"/><text x="11.5898%" y="207.50"></text></g><g><title>wgpu_test`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="11.3398%" y="181" width="0.0388%" height="15" fill="rgb(236,38,28)" fg:x="292" fg:w="1"/><text x="11.5898%" y="191.50"></text></g><g><title>wgpu_test`core::array::_&lt;impl core::hash::Hash for [T (1 samples, 0.04%)</title><rect x="11.3398%" y="165" width="0.0388%" height="15" fill="rgb(227,195,22)" fg:x="292" fg:w="1"/><text x="11.5898%" y="175.50"></text></g><g><title> N]&gt;::hash (1 samples, 0.04%)</title><rect x="11.3398%" y="149" width="0.0388%" height="15" fill="rgb(214,55,33)" fg:x="292" fg:w="1"/><text x="11.5898%" y="159.50"></text></g><g><title>wgpu_test`core::hash::impls::_&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.04%)</title><rect x="11.3398%" y="133" width="0.0388%" height="15" fill="rgb(248,80,13)" fg:x="292" fg:w="1"/><text x="11.5898%" y="143.50"></text></g><g><title>wgpu_test`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.04%)</title><rect x="11.3398%" y="117" width="0.0388%" height="15" fill="rgb(238,52,6)" fg:x="292" fg:w="1"/><text x="11.5898%" y="127.50"></text></g><g><title>wgpu_test`bevy_asset::loader::update_asset_storage_system (2 samples, 0.08%)</title><rect x="11.3398%" y="277" width="0.0777%" height="15" fill="rgb(224,198,47)" fg:x="292" fg:w="2"/><text x="11.5898%" y="287.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::AssetServer::update_asset_storage (2 samples, 0.08%)</title><rect x="11.3398%" y="261" width="0.0777%" height="15" fill="rgb(233,171,20)" fg:x="292" fg:w="2"/><text x="11.5898%" y="271.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.08%)</title><rect x="11.3398%" y="245" width="0.0777%" height="15" fill="rgb(241,30,25)" fg:x="292" fg:w="2"/><text x="11.5898%" y="255.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.08%)</title><rect x="11.3398%" y="229" width="0.0777%" height="15" fill="rgb(207,171,38)" fg:x="292" fg:w="2"/><text x="11.5898%" y="239.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.08%)</title><rect x="11.3398%" y="213" width="0.0777%" height="15" fill="rgb(234,70,1)" fg:x="292" fg:w="2"/><text x="11.5898%" y="223.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="11.3786%" y="197" width="0.0388%" height="15" fill="rgb(232,178,18)" fg:x="293" fg:w="1"/><text x="11.6286%" y="207.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="11.3786%" y="181" width="0.0388%" height="15" fill="rgb(241,78,40)" fg:x="293" fg:w="1"/><text x="11.6286%" y="191.50"></text></g><g><title>wgpu_test`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.04%)</title><rect x="11.3786%" y="165" width="0.0388%" height="15" fill="rgb(222,35,25)" fg:x="293" fg:w="1"/><text x="11.6286%" y="175.50"></text></g><g><title>wgpu_test`&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="11.3786%" y="149" width="0.0388%" height="15" fill="rgb(207,92,16)" fg:x="293" fg:w="1"/><text x="11.6286%" y="159.50"></text></g><g><title>wgpu_test`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (1 samples, 0.04%)</title><rect x="11.3786%" y="133" width="0.0388%" height="15" fill="rgb(216,59,51)" fg:x="293" fg:w="1"/><text x="11.6286%" y="143.50"></text></g><g><title> N]&gt; for [A (1 samples, 0.04%)</title><rect x="11.3786%" y="117" width="0.0388%" height="15" fill="rgb(213,80,28)" fg:x="293" fg:w="1"/><text x="11.6286%" y="127.50"></text></g><g><title> N]&gt;::eq (1 samples, 0.04%)</title><rect x="11.3786%" y="101" width="0.0388%" height="15" fill="rgb(220,93,7)" fg:x="293" fg:w="1"/><text x="11.6286%" y="111.50"></text></g><g><title>wgpu_test`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.04%)</title><rect x="11.3786%" y="85" width="0.0388%" height="15" fill="rgb(225,24,44)" fg:x="293" fg:w="1"/><text x="11.6286%" y="95.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="11.4175%" y="181" width="0.0388%" height="15" fill="rgb(243,74,40)" fg:x="294" fg:w="1"/><text x="11.6675%" y="191.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="11.4563%" y="165" width="0.0388%" height="15" fill="rgb(228,39,7)" fg:x="295" fg:w="1"/><text x="11.7063%" y="175.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="11.4563%" y="149" width="0.0388%" height="15" fill="rgb(227,79,8)" fg:x="295" fg:w="1"/><text x="11.7063%" y="159.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="11.4563%" y="133" width="0.0388%" height="15" fill="rgb(236,58,11)" fg:x="295" fg:w="1"/><text x="11.7063%" y="143.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="11.4563%" y="117" width="0.0388%" height="15" fill="rgb(249,63,35)" fg:x="295" fg:w="1"/><text x="11.7063%" y="127.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="11.4563%" y="101" width="0.0388%" height="15" fill="rgb(252,114,16)" fg:x="295" fg:w="1"/><text x="11.7063%" y="111.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.04%)</title><rect x="11.4563%" y="85" width="0.0388%" height="15" fill="rgb(254,151,24)" fg:x="295" fg:w="1"/><text x="11.7063%" y="95.50"></text></g><g><title>wgpu_test`&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.04%)</title><rect x="11.4563%" y="69" width="0.0388%" height="15" fill="rgb(253,54,39)" fg:x="295" fg:w="1"/><text x="11.7063%" y="79.50"></text></g><g><title>wgpu_test`wgpu_test::input_test (3 samples, 0.12%)</title><rect x="11.4175%" y="277" width="0.1165%" height="15" fill="rgb(243,25,45)" fg:x="294" fg:w="3"/><text x="11.6675%" y="287.50"></text></g><g><title>wgpu_test`bevy_input::input::Input&lt;T&gt;::pressed (3 samples, 0.12%)</title><rect x="11.4175%" y="261" width="0.1165%" height="15" fill="rgb(234,134,9)" fg:x="294" fg:w="3"/><text x="11.6675%" y="271.50"></text></g><g><title>wgpu_test`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.12%)</title><rect x="11.4175%" y="245" width="0.1165%" height="15" fill="rgb(227,166,31)" fg:x="294" fg:w="3"/><text x="11.6675%" y="255.50"></text></g><g><title>wgpu_test`hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.12%)</title><rect x="11.4175%" y="229" width="0.1165%" height="15" fill="rgb(245,143,41)" fg:x="294" fg:w="3"/><text x="11.6675%" y="239.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.12%)</title><rect x="11.4175%" y="213" width="0.1165%" height="15" fill="rgb(238,181,32)" fg:x="294" fg:w="3"/><text x="11.6675%" y="223.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.12%)</title><rect x="11.4175%" y="197" width="0.1165%" height="15" fill="rgb(224,113,18)" fg:x="294" fg:w="3"/><text x="11.6675%" y="207.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.08%)</title><rect x="11.4563%" y="181" width="0.0777%" height="15" fill="rgb(240,229,28)" fg:x="295" fg:w="2"/><text x="11.7063%" y="191.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="11.4951%" y="165" width="0.0388%" height="15" fill="rgb(250,185,3)" fg:x="296" fg:w="1"/><text x="11.7451%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.19%)</title><rect x="11.6505%" y="261" width="0.1942%" height="15" fill="rgb(212,59,25)" fg:x="300" fg:w="5"/><text x="11.9005%" y="271.50"></text></g><g><title>wgpu_test`__rust_probestack (1 samples, 0.04%)</title><rect x="11.8447%" y="261" width="0.0388%" height="15" fill="rgb(221,87,20)" fg:x="305" fg:w="1"/><text x="12.0947%" y="271.50"></text></g><g><title>wgpu_test`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.08%)</title><rect x="11.9223%" y="229" width="0.0777%" height="15" fill="rgb(213,74,28)" fg:x="307" fg:w="2"/><text x="12.1723%" y="239.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.23%)</title><rect x="11.8835%" y="261" width="0.2330%" height="15" fill="rgb(224,132,34)" fg:x="306" fg:w="6"/><text x="12.1335%" y="271.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.19%)</title><rect x="11.9223%" y="245" width="0.1942%" height="15" fill="rgb(222,101,24)" fg:x="307" fg:w="5"/><text x="12.1723%" y="255.50"></text></g><g><title>wgpu_test`core::mem::replace (3 samples, 0.12%)</title><rect x="12.0000%" y="229" width="0.1165%" height="15" fill="rgb(254,142,4)" fg:x="309" fg:w="3"/><text x="12.2500%" y="239.50"></text></g><g><title>wgpu_test`core::ptr::read (2 samples, 0.08%)</title><rect x="12.0388%" y="213" width="0.0777%" height="15" fill="rgb(230,229,49)" fg:x="310" fg:w="2"/><text x="12.2888%" y="223.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="12.2330%" y="149" width="0.0777%" height="15" fill="rgb(238,70,47)" fg:x="315" fg:w="2"/><text x="12.4830%" y="159.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="12.2330%" y="133" width="0.0777%" height="15" fill="rgb(231,160,17)" fg:x="315" fg:w="2"/><text x="12.4830%" y="143.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.23%)</title><rect x="12.1553%" y="165" width="0.2330%" height="15" fill="rgb(218,68,53)" fg:x="313" fg:w="6"/><text x="12.4053%" y="175.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.08%)</title><rect x="12.3107%" y="149" width="0.0777%" height="15" fill="rgb(236,111,10)" fg:x="317" fg:w="2"/><text x="12.5607%" y="159.50"></text></g><g><title>wgpu_test`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (1 samples, 0.04%)</title><rect x="12.3883%" y="165" width="0.0388%" height="15" fill="rgb(224,34,41)" fg:x="319" fg:w="1"/><text x="12.6383%" y="175.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="12.3883%" y="149" width="0.0388%" height="15" fill="rgb(241,118,19)" fg:x="319" fg:w="1"/><text x="12.6383%" y="159.50"></text></g><g><title>wgpu_test`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="12.3883%" y="133" width="0.0388%" height="15" fill="rgb(238,129,25)" fg:x="319" fg:w="1"/><text x="12.6383%" y="143.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="12.6602%" y="133" width="0.0388%" height="15" fill="rgb(238,22,31)" fg:x="326" fg:w="1"/><text x="12.9102%" y="143.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::split_at_mut (1 samples, 0.04%)</title><rect x="12.6602%" y="117" width="0.0388%" height="15" fill="rgb(222,174,48)" fg:x="326" fg:w="1"/><text x="12.9102%" y="127.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.04%)</title><rect x="12.6602%" y="101" width="0.0388%" height="15" fill="rgb(206,152,40)" fg:x="326" fg:w="1"/><text x="12.9102%" y="111.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="12.6602%" y="85" width="0.0388%" height="15" fill="rgb(218,99,54)" fg:x="326" fg:w="1"/><text x="12.9102%" y="95.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="12.6602%" y="69" width="0.0388%" height="15" fill="rgb(220,174,26)" fg:x="326" fg:w="1"/><text x="12.9102%" y="79.50"></text></g><g><title>wgpu_test`__rust_probestack (1 samples, 0.04%)</title><rect x="12.6990%" y="133" width="0.0388%" height="15" fill="rgb(245,116,9)" fg:x="327" fg:w="1"/><text x="12.9490%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_add_epi32 (7 samples, 0.27%)</title><rect x="12.7379%" y="133" width="0.2718%" height="15" fill="rgb(209,72,35)" fg:x="328" fg:w="7"/><text x="12.9879%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.08%)</title><rect x="12.9320%" y="117" width="0.0777%" height="15" fill="rgb(226,126,21)" fg:x="333" fg:w="2"/><text x="13.1820%" y="127.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_extracti128_si256 (2 samples, 0.08%)</title><rect x="13.0097%" y="133" width="0.0777%" height="15" fill="rgb(227,192,1)" fg:x="335" fg:w="2"/><text x="13.2597%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.04%)</title><rect x="13.0485%" y="117" width="0.0388%" height="15" fill="rgb(237,180,29)" fg:x="336" fg:w="1"/><text x="13.2985%" y="127.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.08%)</title><rect x="13.0874%" y="133" width="0.0777%" height="15" fill="rgb(230,197,35)" fg:x="337" fg:w="2"/><text x="13.3374%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.08%)</title><rect x="13.0874%" y="117" width="0.0777%" height="15" fill="rgb(246,193,31)" fg:x="337" fg:w="2"/><text x="13.3374%" y="127.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.08%)</title><rect x="13.1650%" y="133" width="0.0777%" height="15" fill="rgb(241,36,4)" fg:x="339" fg:w="2"/><text x="13.4150%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.04%)</title><rect x="13.2427%" y="133" width="0.0388%" height="15" fill="rgb(241,130,17)" fg:x="341" fg:w="1"/><text x="13.4927%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.04%)</title><rect x="13.2427%" y="117" width="0.0388%" height="15" fill="rgb(206,137,32)" fg:x="341" fg:w="1"/><text x="13.4927%" y="127.50"></text></g><g><title>wgpu_test`&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.04%)</title><rect x="13.2427%" y="101" width="0.0388%" height="15" fill="rgb(237,228,51)" fg:x="341" fg:w="1"/><text x="13.4927%" y="111.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.12%)</title><rect x="13.2816%" y="133" width="0.1165%" height="15" fill="rgb(243,6,42)" fg:x="342" fg:w="3"/><text x="13.5316%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.04%)</title><rect x="13.3592%" y="117" width="0.0388%" height="15" fill="rgb(251,74,28)" fg:x="344" fg:w="1"/><text x="13.6092%" y="127.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.12%)</title><rect x="13.3981%" y="133" width="0.1165%" height="15" fill="rgb(218,20,49)" fg:x="345" fg:w="3"/><text x="13.6481%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_xor_si256 (9 samples, 0.35%)</title><rect x="13.5146%" y="133" width="0.3495%" height="15" fill="rgb(238,28,14)" fg:x="348" fg:w="9"/><text x="13.7646%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.08%)</title><rect x="13.7864%" y="117" width="0.0777%" height="15" fill="rgb(229,40,46)" fg:x="355" fg:w="2"/><text x="14.0364%" y="127.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.12%)</title><rect x="13.8641%" y="133" width="0.1165%" height="15" fill="rgb(244,195,20)" fg:x="357" fg:w="3"/><text x="14.1141%" y="143.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx::_mm256_setr_epi64x (3 samples, 0.12%)</title><rect x="13.8641%" y="117" width="0.1165%" height="15" fill="rgb(253,56,35)" fg:x="357" fg:w="3"/><text x="14.1141%" y="127.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.04%)</title><rect x="13.9806%" y="133" width="0.0388%" height="15" fill="rgb(210,149,44)" fg:x="360" fg:w="1"/><text x="14.2306%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="14.0194%" y="85" width="0.0388%" height="15" fill="rgb(240,135,12)" fg:x="361" fg:w="1"/><text x="14.2694%" y="95.50"></text></g><g><title>wgpu_test`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (50 samples, 1.94%)</title><rect x="12.1553%" y="229" width="1.9417%" height="15" fill="rgb(251,24,50)" fg:x="313" fg:w="50"/><text x="12.4053%" y="239.50">w..</text></g><g><title>wgpu_test`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (50 samples, 1.94%)</title><rect x="12.1553%" y="213" width="1.9417%" height="15" fill="rgb(243,200,47)" fg:x="313" fg:w="50"/><text x="12.4053%" y="223.50">w..</text></g><g><title>wgpu_test`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (50 samples, 1.94%)</title><rect x="12.1553%" y="197" width="1.9417%" height="15" fill="rgb(224,166,26)" fg:x="313" fg:w="50"/><text x="12.4053%" y="207.50">w..</text></g><g><title>wgpu_test`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (50 samples, 1.94%)</title><rect x="12.1553%" y="181" width="1.9417%" height="15" fill="rgb(233,0,47)" fg:x="313" fg:w="50"/><text x="12.4053%" y="191.50">w..</text></g><g><title>wgpu_test`rand_chacha::guts::refill_wide (43 samples, 1.67%)</title><rect x="12.4272%" y="165" width="1.6699%" height="15" fill="rgb(253,80,5)" fg:x="320" fg:w="43"/><text x="12.6772%" y="175.50"></text></g><g><title>wgpu_test`rand_chacha::guts::refill_wide::impl_avx2 (43 samples, 1.67%)</title><rect x="12.4272%" y="149" width="1.6699%" height="15" fill="rgb(214,133,25)" fg:x="320" fg:w="43"/><text x="12.6772%" y="159.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (2 samples, 0.08%)</title><rect x="14.0194%" y="133" width="0.0777%" height="15" fill="rgb(209,27,14)" fg:x="361" fg:w="2"/><text x="14.2694%" y="143.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.08%)</title><rect x="14.0194%" y="117" width="0.0777%" height="15" fill="rgb(219,102,51)" fg:x="361" fg:w="2"/><text x="14.2694%" y="127.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.08%)</title><rect x="14.0194%" y="101" width="0.0777%" height="15" fill="rgb(237,18,16)" fg:x="361" fg:w="2"/><text x="14.2694%" y="111.50"></text></g><g><title>wgpu_test`core::cmp::min (1 samples, 0.04%)</title><rect x="14.0583%" y="85" width="0.0388%" height="15" fill="rgb(241,85,17)" fg:x="362" fg:w="1"/><text x="14.3083%" y="95.50"></text></g><g><title>wgpu_test`core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="14.0583%" y="69" width="0.0388%" height="15" fill="rgb(236,90,42)" fg:x="362" fg:w="1"/><text x="14.3083%" y="79.50"></text></g><g><title>wgpu_test`core::cmp::min_by (1 samples, 0.04%)</title><rect x="14.0583%" y="53" width="0.0388%" height="15" fill="rgb(249,57,21)" fg:x="362" fg:w="1"/><text x="14.3083%" y="63.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="14.0583%" y="37" width="0.0388%" height="15" fill="rgb(243,12,36)" fg:x="362" fg:w="1"/><text x="14.3083%" y="47.50"></text></g><g><title>wgpu_test`rand::rng::Rng::gen (52 samples, 2.02%)</title><rect x="12.1165%" y="261" width="2.0194%" height="15" fill="rgb(253,128,47)" fg:x="312" fg:w="52"/><text x="12.3665%" y="271.50">w..</text></g><g><title>wgpu_test`rand::distributions::integer::_&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (51 samples, 1.98%)</title><rect x="12.1553%" y="245" width="1.9806%" height="15" fill="rgb(207,33,20)" fg:x="313" fg:w="51"/><text x="12.4053%" y="255.50">w..</text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="14.0971%" y="229" width="0.0388%" height="15" fill="rgb(233,215,35)" fg:x="363" fg:w="1"/><text x="14.3471%" y="239.50"></text></g><g><title>wgpu_test`rand::rng::Rng::gen_range (1 samples, 0.04%)</title><rect x="14.1359%" y="261" width="0.0388%" height="15" fill="rgb(249,188,52)" fg:x="364" fg:w="1"/><text x="14.3859%" y="271.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.04%)</title><rect x="14.1359%" y="245" width="0.0388%" height="15" fill="rgb(225,12,32)" fg:x="364" fg:w="1"/><text x="14.3859%" y="255.50"></text></g><g><title>wgpu_test`&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.04%)</title><rect x="14.1359%" y="229" width="0.0388%" height="15" fill="rgb(247,98,14)" fg:x="364" fg:w="1"/><text x="14.3859%" y="239.50"></text></g><g><title>wgpu_test`&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.04%)</title><rect x="14.1359%" y="213" width="0.0388%" height="15" fill="rgb(247,219,48)" fg:x="364" fg:w="1"/><text x="14.3859%" y="223.50"></text></g><g><title>wgpu_test`rand::rng::Rng::gen (1 samples, 0.04%)</title><rect x="14.1359%" y="197" width="0.0388%" height="15" fill="rgb(253,60,48)" fg:x="364" fg:w="1"/><text x="14.3859%" y="207.50"></text></g><g><title>wgpu_test`rand::distributions::integer::_&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.04%)</title><rect x="14.1359%" y="181" width="0.0388%" height="15" fill="rgb(245,15,52)" fg:x="364" fg:w="1"/><text x="14.3859%" y="191.50"></text></g><g><title>wgpu_test`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.04%)</title><rect x="14.1359%" y="165" width="0.0388%" height="15" fill="rgb(220,133,28)" fg:x="364" fg:w="1"/><text x="14.3859%" y="175.50"></text></g><g><title>wgpu_test`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.04%)</title><rect x="14.1359%" y="149" width="0.0388%" height="15" fill="rgb(217,180,4)" fg:x="364" fg:w="1"/><text x="14.3859%" y="159.50"></text></g><g><title>wgpu_test`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.04%)</title><rect x="14.1359%" y="133" width="0.0388%" height="15" fill="rgb(251,24,1)" fg:x="364" fg:w="1"/><text x="14.3859%" y="143.50"></text></g><g><title>wgpu_test`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.04%)</title><rect x="14.1359%" y="117" width="0.0388%" height="15" fill="rgb(212,185,49)" fg:x="364" fg:w="1"/><text x="14.3859%" y="127.50"></text></g><g><title>wgpu_test`rand_chacha::guts::refill_wide (1 samples, 0.04%)</title><rect x="14.1359%" y="101" width="0.0388%" height="15" fill="rgb(215,175,22)" fg:x="364" fg:w="1"/><text x="14.3859%" y="111.50"></text></g><g><title>wgpu_test`rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.04%)</title><rect x="14.1359%" y="85" width="0.0388%" height="15" fill="rgb(250,205,14)" fg:x="364" fg:w="1"/><text x="14.3859%" y="95.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.04%)</title><rect x="14.1359%" y="69" width="0.0388%" height="15" fill="rgb(225,211,22)" fg:x="364" fg:w="1"/><text x="14.3859%" y="79.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="14.1359%" y="53" width="0.0388%" height="15" fill="rgb(251,179,42)" fg:x="364" fg:w="1"/><text x="14.3859%" y="63.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (80 samples, 3.11%)</title><rect x="11.1068%" y="341" width="3.1068%" height="15" fill="rgb(208,216,51)" fg:x="286" fg:w="80"/><text x="11.3568%" y="351.50">wgp..</text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (74 samples, 2.87%)</title><rect x="11.3398%" y="325" width="2.8738%" height="15" fill="rgb(235,36,11)" fg:x="292" fg:w="74"/><text x="11.5898%" y="335.50">wg..</text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (74 samples, 2.87%)</title><rect x="11.3398%" y="309" width="2.8738%" height="15" fill="rgb(213,189,28)" fg:x="292" fg:w="74"/><text x="11.5898%" y="319.50">wg..</text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (74 samples, 2.87%)</title><rect x="11.3398%" y="293" width="2.8738%" height="15" fill="rgb(227,203,42)" fg:x="292" fg:w="74"/><text x="11.5898%" y="303.50">wg..</text></g><g><title>wgpu_test`wgpu_test::world::change_world::change_world (69 samples, 2.68%)</title><rect x="11.5340%" y="277" width="2.6796%" height="15" fill="rgb(244,72,36)" fg:x="297" fg:w="69"/><text x="11.7840%" y="287.50">wg..</text></g><g><title>wgpu_test`rand::rngs::thread::thread_rng (1 samples, 0.04%)</title><rect x="14.1748%" y="261" width="0.0388%" height="15" fill="rgb(213,53,17)" fg:x="365" fg:w="1"/><text x="14.4248%" y="271.50"></text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="14.1748%" y="245" width="0.0388%" height="15" fill="rgb(207,167,3)" fg:x="365" fg:w="1"/><text x="14.4248%" y="255.50"></text></g><g><title>wgpu_test`&lt;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="14.2136%" y="245" width="0.0388%" height="15" fill="rgb(216,98,30)" fg:x="366" fg:w="1"/><text x="14.4636%" y="255.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="14.2524%" y="245" width="0.0388%" height="15" fill="rgb(236,123,15)" fg:x="367" fg:w="1"/><text x="14.5024%" y="255.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="14.2524%" y="229" width="0.0388%" height="15" fill="rgb(248,81,50)" fg:x="367" fg:w="1"/><text x="14.5024%" y="239.50"></text></g><g><title>AMDRadeonX6000MTLDriver`DmaBltMgr::Memcpy (1 samples, 0.04%)</title><rect x="14.2913%" y="133" width="0.0388%" height="15" fill="rgb(214,120,4)" fg:x="368" fg:w="1"/><text x="14.5413%" y="143.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10DmaBltMgr::ExecuteDmaBlt (1 samples, 0.04%)</title><rect x="14.2913%" y="117" width="0.0388%" height="15" fill="rgb(208,179,34)" fg:x="368" fg:w="1"/><text x="14.5413%" y="127.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10DmaBltMgr::ClientSyncDmaBlt (1 samples, 0.04%)</title><rect x="14.2913%" y="101" width="0.0388%" height="15" fill="rgb(227,140,7)" fg:x="368" fg:w="1"/><text x="14.5413%" y="111.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::exec_blit (2 samples, 0.08%)</title><rect x="14.2913%" y="229" width="0.0777%" height="15" fill="rgb(214,22,6)" fg:x="368" fg:w="2"/><text x="14.5413%" y="239.50"></text></g><g><title>wgpu_test`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (2 samples, 0.08%)</title><rect x="14.2913%" y="213" width="0.0777%" height="15" fill="rgb(207,137,27)" fg:x="368" fg:w="2"/><text x="14.5413%" y="223.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="14.2913%" y="197" width="0.0777%" height="15" fill="rgb(210,8,46)" fg:x="368" fg:w="2"/><text x="14.5413%" y="207.50"></text></g><g><title>wgpu_test`&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="14.2913%" y="181" width="0.0777%" height="15" fill="rgb(240,16,54)" fg:x="368" fg:w="2"/><text x="14.5413%" y="191.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_RsrcMemMove(GFXAAMD_MtlBlitCmdEncoder*, MTLIOAccelResource*, unsigned long long, MTLIOAccelResource*, unsigned long long, unsigned long long) (2 samples, 0.08%)</title><rect x="14.2913%" y="165" width="0.0777%" height="15" fill="rgb(211,209,29)" fg:x="368" fg:w="2"/><text x="14.5413%" y="175.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_DoMemcpy(AMD_UBMInterfaceRec*, AMD_HwCmdBufInfoRec*, _UBM_MEMCPYINFO*, RgpSqttMarkerEventType) (2 samples, 0.08%)</title><rect x="14.2913%" y="149" width="0.0777%" height="15" fill="rgb(226,228,24)" fg:x="368" fg:w="2"/><text x="14.5413%" y="159.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10DmaBltMgr::HwlBlt (1 samples, 0.04%)</title><rect x="14.3301%" y="133" width="0.0388%" height="15" fill="rgb(222,84,9)" fg:x="369" fg:w="1"/><text x="14.5801%" y="143.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::blit_commands (3 samples, 0.12%)</title><rect x="14.2913%" y="245" width="0.1165%" height="15" fill="rgb(234,203,30)" fg:x="368" fg:w="3"/><text x="14.5413%" y="255.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::new_blit_command_encoder (1 samples, 0.04%)</title><rect x="14.3689%" y="229" width="0.0388%" height="15" fill="rgb(238,109,14)" fg:x="370" fg:w="1"/><text x="14.6189%" y="239.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="14.3689%" y="213" width="0.0388%" height="15" fill="rgb(233,206,34)" fg:x="370" fg:w="1"/><text x="14.6189%" y="223.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="14.3689%" y="197" width="0.0388%" height="15" fill="rgb(220,167,47)" fg:x="370" fg:w="1"/><text x="14.6189%" y="207.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer blitCommandEncoder] (1 samples, 0.04%)</title><rect x="14.3689%" y="181" width="0.0388%" height="15" fill="rgb(238,105,10)" fg:x="370" fg:w="1"/><text x="14.6189%" y="191.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlBlitCmdEncoder initWithCommandBuffer:] (1 samples, 0.04%)</title><rect x="14.3689%" y="165" width="0.0388%" height="15" fill="rgb(213,227,17)" fg:x="370" fg:w="1"/><text x="14.6189%" y="175.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBlitCmdEncoder initWithCommandBuffer:] (1 samples, 0.04%)</title><rect x="14.3689%" y="149" width="0.0388%" height="15" fill="rgb(217,132,38)" fg:x="370" fg:w="1"/><text x="14.6189%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (1 samples, 0.04%)</title><rect x="14.3689%" y="133" width="0.0388%" height="15" fill="rgb(242,146,4)" fg:x="370" fg:w="1"/><text x="14.6189%" y="143.50"></text></g><g><title>Metal`-[_MTLDevice getSupportedCommandBufferErrorOptions] (1 samples, 0.04%)</title><rect x="14.3689%" y="117" width="0.0388%" height="15" fill="rgb(212,61,9)" fg:x="370" fg:w="1"/><text x="14.6189%" y="127.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (17 samples, 0.66%)</title><rect x="14.4078%" y="117" width="0.6602%" height="15" fill="rgb(247,126,22)" fg:x="371" fg:w="17"/><text x="14.6578%" y="127.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (17 samples, 0.66%)</title><rect x="14.4078%" y="101" width="0.6602%" height="15" fill="rgb(220,196,2)" fg:x="371" fg:w="17"/><text x="14.6578%" y="111.50"></text></g><g><title>IOKit`IOConnectCallMethod (17 samples, 0.66%)</title><rect x="14.4078%" y="85" width="0.6602%" height="15" fill="rgb(208,46,4)" fg:x="371" fg:w="17"/><text x="14.6578%" y="95.50"></text></g><g><title>IOKit`io_connect_method (17 samples, 0.66%)</title><rect x="14.4078%" y="69" width="0.6602%" height="15" fill="rgb(252,104,46)" fg:x="371" fg:w="17"/><text x="14.6578%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (16 samples, 0.62%)</title><rect x="14.4466%" y="53" width="0.6214%" height="15" fill="rgb(237,152,48)" fg:x="372" fg:w="16"/><text x="14.6966%" y="63.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (18 samples, 0.70%)</title><rect x="14.4078%" y="181" width="0.6990%" height="15" fill="rgb(221,59,37)" fg:x="371" fg:w="18"/><text x="14.6578%" y="191.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (18 samples, 0.70%)</title><rect x="14.4078%" y="165" width="0.6990%" height="15" fill="rgb(209,202,51)" fg:x="371" fg:w="18"/><text x="14.6578%" y="175.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (18 samples, 0.70%)</title><rect x="14.4078%" y="149" width="0.6990%" height="15" fill="rgb(228,81,30)" fg:x="371" fg:w="18"/><text x="14.6578%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (18 samples, 0.70%)</title><rect x="14.4078%" y="133" width="0.6990%" height="15" fill="rgb(227,42,39)" fg:x="371" fg:w="18"/><text x="14.6578%" y="143.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="15.0680%" y="117" width="0.0388%" height="15" fill="rgb(221,26,2)" fg:x="388" fg:w="1"/><text x="15.3180%" y="127.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_buffer_with_data (25 samples, 0.97%)</title><rect x="14.4078%" y="245" width="0.9709%" height="15" fill="rgb(254,61,31)" fg:x="371" fg:w="25"/><text x="14.6578%" y="255.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (25 samples, 0.97%)</title><rect x="14.4078%" y="229" width="0.9709%" height="15" fill="rgb(222,173,38)" fg:x="371" fg:w="25"/><text x="14.6578%" y="239.50"></text></g><g><title>wgpu_test`&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (25 samples, 0.97%)</title><rect x="14.4078%" y="213" width="0.9709%" height="15" fill="rgb(218,50,12)" fg:x="371" fg:w="25"/><text x="14.6578%" y="223.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlDevice newBufferWithBytes:length:options:] (25 samples, 0.97%)</title><rect x="14.4078%" y="197" width="0.9709%" height="15" fill="rgb(223,88,40)" fg:x="371" fg:w="25"/><text x="14.6578%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.27%)</title><rect x="15.1068%" y="181" width="0.2718%" height="15" fill="rgb(237,54,19)" fg:x="389" fg:w="7"/><text x="15.3568%" y="191.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::update_buffer (31 samples, 1.20%)</title><rect x="14.2136%" y="261" width="1.2039%" height="15" fill="rgb(251,129,25)" fg:x="366" fg:w="31"/><text x="14.4636%" y="271.50"></text></g><g><title>wgpu_test`metal::resource::ResourceRef::set_label (1 samples, 0.04%)</title><rect x="15.3786%" y="245" width="0.0388%" height="15" fill="rgb(238,97,19)" fg:x="396" fg:w="1"/><text x="15.6286%" y="255.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (1 samples, 0.04%)</title><rect x="15.3786%" y="229" width="0.0388%" height="15" fill="rgb(240,169,18)" fg:x="396" fg:w="1"/><text x="15.6286%" y="239.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="15.3786%" y="213" width="0.0388%" height="15" fill="rgb(230,187,49)" fg:x="396" fg:w="1"/><text x="15.6286%" y="223.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="15.4175%" y="261" width="0.0388%" height="15" fill="rgb(209,44,26)" fg:x="397" fg:w="1"/><text x="15.6675%" y="271.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandBufferInner::reset (1 samples, 0.04%)</title><rect x="15.4563%" y="213" width="0.0388%" height="15" fill="rgb(244,0,6)" fg:x="398" fg:w="1"/><text x="15.7063%" y="223.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;metal::commandbuffer::CommandBuffer&gt; (1 samples, 0.04%)</title><rect x="15.4563%" y="197" width="0.0388%" height="15" fill="rgb(248,18,21)" fg:x="398" fg:w="1"/><text x="15.7063%" y="207.50"></text></g><g><title>wgpu_test`&lt;metal::commandbuffer::CommandBuffer as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.4563%" y="181" width="0.0388%" height="15" fill="rgb(245,180,19)" fg:x="398" fg:w="1"/><text x="15.7063%" y="191.50"></text></g><g><title>wgpu_test`metal::obj_drop (1 samples, 0.04%)</title><rect x="15.4563%" y="165" width="0.0388%" height="15" fill="rgb(252,118,36)" fg:x="398" fg:w="1"/><text x="15.7063%" y="175.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="15.4563%" y="149" width="0.0388%" height="15" fill="rgb(210,224,19)" fg:x="398" fg:w="1"/><text x="15.7063%" y="159.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="15.4563%" y="133" width="0.0388%" height="15" fill="rgb(218,30,24)" fg:x="398" fg:w="1"/><text x="15.7063%" y="143.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (1 samples, 0.04%)</title><rect x="15.4563%" y="117" width="0.0388%" height="15" fill="rgb(219,75,50)" fg:x="398" fg:w="1"/><text x="15.7063%" y="127.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (1 samples, 0.04%)</title><rect x="15.4563%" y="101" width="0.0388%" height="15" fill="rgb(234,72,50)" fg:x="398" fg:w="1"/><text x="15.7063%" y="111.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.04%)</title><rect x="15.4563%" y="85" width="0.0388%" height="15" fill="rgb(219,100,48)" fg:x="398" fg:w="1"/><text x="15.7063%" y="95.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (1 samples, 0.04%)</title><rect x="15.4563%" y="69" width="0.0388%" height="15" fill="rgb(253,5,41)" fg:x="398" fg:w="1"/><text x="15.7063%" y="79.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.04%)</title><rect x="15.4563%" y="53" width="0.0388%" height="15" fill="rgb(247,181,11)" fg:x="398" fg:w="1"/><text x="15.7063%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.04%)</title><rect x="15.4563%" y="37" width="0.0388%" height="15" fill="rgb(222,223,25)" fg:x="398" fg:w="1"/><text x="15.7063%" y="47.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (2 samples, 0.08%)</title><rect x="15.4563%" y="229" width="0.0777%" height="15" fill="rgb(214,198,28)" fg:x="398" fg:w="2"/><text x="15.7063%" y="239.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::reset_resources (1 samples, 0.04%)</title><rect x="15.4951%" y="213" width="0.0388%" height="15" fill="rgb(230,46,43)" fg:x="399" fg:w="1"/><text x="15.7451%" y="223.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="15.4951%" y="197" width="0.0388%" height="15" fill="rgb(233,65,53)" fg:x="399" fg:w="1"/><text x="15.7451%" y="207.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="15.4951%" y="181" width="0.0388%" height="15" fill="rgb(221,121,27)" fg:x="399" fg:w="1"/><text x="15.7451%" y="191.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.04%)</title><rect x="15.5340%" y="229" width="0.0388%" height="15" fill="rgb(247,70,47)" fg:x="400" fg:w="1"/><text x="15.7840%" y="239.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn (1 samples, 0.04%)</title><rect x="15.5728%" y="229" width="0.0388%" height="15" fill="rgb(228,85,35)" fg:x="401" fg:w="1"/><text x="15.8228%" y="239.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (1 samples, 0.04%)</title><rect x="15.5728%" y="213" width="0.0388%" height="15" fill="rgb(209,50,18)" fg:x="401" fg:w="1"/><text x="15.8228%" y="223.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn::_{{closure}} (1 samples, 0.04%)</title><rect x="15.5728%" y="197" width="0.0388%" height="15" fill="rgb(250,19,35)" fg:x="401" fg:w="1"/><text x="15.8228%" y="207.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn_temp (1 samples, 0.04%)</title><rect x="15.5728%" y="181" width="0.0388%" height="15" fill="rgb(253,107,29)" fg:x="401" fg:w="1"/><text x="15.8228%" y="191.50"></text></g><g><title>wgpu_test`metal::commandqueue::CommandQueueRef::new_command_buffer_with_unretained_references (1 samples, 0.04%)</title><rect x="15.5728%" y="165" width="0.0388%" height="15" fill="rgb(252,179,29)" fg:x="401" fg:w="1"/><text x="15.8228%" y="175.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="15.5728%" y="149" width="0.0388%" height="15" fill="rgb(238,194,6)" fg:x="401" fg:w="1"/><text x="15.8228%" y="159.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="15.5728%" y="133" width="0.0388%" height="15" fill="rgb(238,164,29)" fg:x="401" fg:w="1"/><text x="15.8228%" y="143.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (1 samples, 0.04%)</title><rect x="15.5728%" y="117" width="0.0388%" height="15" fill="rgb(224,25,9)" fg:x="401" fg:w="1"/><text x="15.8228%" y="127.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.04%)</title><rect x="15.5728%" y="101" width="0.0388%" height="15" fill="rgb(244,153,23)" fg:x="401" fg:w="1"/><text x="15.8228%" y="111.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (1 samples, 0.04%)</title><rect x="15.5728%" y="85" width="0.0388%" height="15" fill="rgb(212,203,14)" fg:x="401" fg:w="1"/><text x="15.8228%" y="95.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::reset_resources (1 samples, 0.04%)</title><rect x="15.6117%" y="229" width="0.0388%" height="15" fill="rgb(220,164,20)" fg:x="402" fg:w="1"/><text x="15.8617%" y="239.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.04%)</title><rect x="15.6893%" y="149" width="0.0388%" height="15" fill="rgb(222,203,48)" fg:x="404" fg:w="1"/><text x="15.9393%" y="159.50"></text></g><g><title>wgpu_test`gfx_hal::command::CommandBuffer::begin_primary (8 samples, 0.31%)</title><rect x="15.4563%" y="261" width="0.3107%" height="15" fill="rgb(215,159,22)" fg:x="398" fg:w="8"/><text x="15.7063%" y="271.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (8 samples, 0.31%)</title><rect x="15.4563%" y="245" width="0.3107%" height="15" fill="rgb(216,183,47)" fg:x="398" fg:w="8"/><text x="15.7063%" y="255.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.12%)</title><rect x="15.6505%" y="229" width="0.1165%" height="15" fill="rgb(229,195,25)" fg:x="403" fg:w="3"/><text x="15.9005%" y="239.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (3 samples, 0.12%)</title><rect x="15.6505%" y="213" width="0.1165%" height="15" fill="rgb(224,132,51)" fg:x="403" fg:w="3"/><text x="15.9005%" y="223.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (3 samples, 0.12%)</title><rect x="15.6505%" y="197" width="0.1165%" height="15" fill="rgb(240,63,7)" fg:x="403" fg:w="3"/><text x="15.9005%" y="207.50"></text></g><g><title>wgpu_test`&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="15.6893%" y="181" width="0.0777%" height="15" fill="rgb(249,182,41)" fg:x="404" fg:w="2"/><text x="15.9393%" y="191.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (2 samples, 0.08%)</title><rect x="15.6893%" y="165" width="0.0777%" height="15" fill="rgb(243,47,26)" fg:x="404" fg:w="2"/><text x="15.9393%" y="175.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.04%)</title><rect x="15.7282%" y="149" width="0.0388%" height="15" fill="rgb(233,48,2)" fg:x="405" fg:w="1"/><text x="15.9782%" y="159.50"></text></g><g><title>CoreFoundation`CFRetain (1 samples, 0.04%)</title><rect x="15.7282%" y="133" width="0.0388%" height="15" fill="rgb(244,165,34)" fg:x="405" fg:w="1"/><text x="15.9782%" y="143.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="15.7670%" y="197" width="0.0388%" height="15" fill="rgb(207,89,7)" fg:x="406" fg:w="1"/><text x="16.0170%" y="207.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="15.7670%" y="181" width="0.0388%" height="15" fill="rgb(244,117,36)" fg:x="406" fg:w="1"/><text x="16.0170%" y="191.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="15.7670%" y="165" width="0.0388%" height="15" fill="rgb(226,144,34)" fg:x="406" fg:w="1"/><text x="16.0170%" y="175.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="15.7670%" y="149" width="0.0388%" height="15" fill="rgb(213,23,19)" fg:x="406" fg:w="1"/><text x="16.0170%" y="159.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="15.7670%" y="133" width="0.0388%" height="15" fill="rgb(217,75,12)" fg:x="406" fg:w="1"/><text x="16.0170%" y="143.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="15.7670%" y="117" width="0.0388%" height="15" fill="rgb(224,159,17)" fg:x="406" fg:w="1"/><text x="16.0170%" y="127.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;gfx_backend_metal::command::CommandBuffer&gt;&gt; (1 samples, 0.04%)</title><rect x="15.8058%" y="197" width="0.0388%" height="15" fill="rgb(217,118,1)" fg:x="407" fg:w="1"/><text x="16.0558%" y="207.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.8058%" y="181" width="0.0388%" height="15" fill="rgb(232,180,48)" fg:x="407" fg:w="1"/><text x="16.0558%" y="191.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;gfx_backend_metal::command::CommandBuffer,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="15.8058%" y="165" width="0.0388%" height="15" fill="rgb(230,27,33)" fg:x="407" fg:w="1"/><text x="16.0558%" y="175.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.04%)</title><rect x="15.8058%" y="149" width="0.0388%" height="15" fill="rgb(205,31,21)" fg:x="407" fg:w="1"/><text x="16.0558%" y="159.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (43 samples, 1.67%)</title><rect x="14.2136%" y="341" width="1.6699%" height="15" fill="rgb(253,59,4)" fg:x="366" fg:w="43"/><text x="14.4636%" y="351.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (43 samples, 1.67%)</title><rect x="14.2136%" y="325" width="1.6699%" height="15" fill="rgb(224,201,9)" fg:x="366" fg:w="43"/><text x="14.4636%" y="335.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43 samples, 1.67%)</title><rect x="14.2136%" y="309" width="1.6699%" height="15" fill="rgb(229,206,30)" fg:x="366" fg:w="43"/><text x="14.4636%" y="319.50"></text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (43 samples, 1.67%)</title><rect x="14.2136%" y="293" width="1.6699%" height="15" fill="rgb(212,67,47)" fg:x="366" fg:w="43"/><text x="14.4636%" y="303.50"></text></g><g><title>wgpu_test`wgpu_test::world::update_world (43 samples, 1.67%)</title><rect x="14.2136%" y="277" width="1.6699%" height="15" fill="rgb(211,96,50)" fg:x="366" fg:w="43"/><text x="14.4636%" y="287.50"></text></g><g><title>wgpu_test`gfx_hal::queue::CommandQueue::submit_without_semaphores (3 samples, 0.12%)</title><rect x="15.7670%" y="261" width="0.1165%" height="15" fill="rgb(252,114,18)" fg:x="406" fg:w="3"/><text x="16.0170%" y="271.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (3 samples, 0.12%)</title><rect x="15.7670%" y="245" width="0.1165%" height="15" fill="rgb(223,58,37)" fg:x="406" fg:w="3"/><text x="16.0170%" y="255.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (3 samples, 0.12%)</title><rect x="15.7670%" y="229" width="0.1165%" height="15" fill="rgb(237,70,4)" fg:x="406" fg:w="3"/><text x="16.0170%" y="239.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit::_{{closure}} (3 samples, 0.12%)</title><rect x="15.7670%" y="213" width="0.1165%" height="15" fill="rgb(244,85,46)" fg:x="406" fg:w="3"/><text x="16.0170%" y="223.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="15.8447%" y="197" width="0.0388%" height="15" fill="rgb(223,39,52)" fg:x="408" fg:w="1"/><text x="16.0947%" y="207.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="15.8447%" y="181" width="0.0388%" height="15" fill="rgb(218,200,14)" fg:x="408" fg:w="1"/><text x="16.0947%" y="191.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (127 samples, 4.93%)</title><rect x="10.9903%" y="357" width="4.9320%" height="15" fill="rgb(208,171,16)" fg:x="283" fg:w="127"/><text x="11.2403%" y="367.50">wgpu_t..</text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (1 samples, 0.04%)</title><rect x="15.8835%" y="341" width="0.0388%" height="15" fill="rgb(234,200,18)" fg:x="409" fg:w="1"/><text x="16.1335%" y="351.50"></text></g><g><title>wgpu_test`&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="15.8835%" y="325" width="0.0388%" height="15" fill="rgb(228,45,11)" fg:x="409" fg:w="1"/><text x="16.1335%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::marker::PhantomData&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="15.8835%" y="309" width="0.0388%" height="15" fill="rgb(237,182,11)" fg:x="409" fg:w="1"/><text x="16.1335%" y="319.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="15.9223%" y="357" width="0.0388%" height="15" fill="rgb(241,175,49)" fg:x="410" fg:w="1"/><text x="16.1723%" y="367.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="15.9612%" y="357" width="0.0388%" height="15" fill="rgb(247,38,35)" fg:x="411" fg:w="1"/><text x="16.2112%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.04%)</title><rect x="16.0000%" y="293" width="0.0388%" height="15" fill="rgb(228,39,49)" fg:x="412" fg:w="1"/><text x="16.2500%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.04%)</title><rect x="16.0000%" y="277" width="0.0388%" height="15" fill="rgb(226,101,26)" fg:x="412" fg:w="1"/><text x="16.2500%" y="287.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.0000%" y="261" width="0.0388%" height="15" fill="rgb(206,141,19)" fg:x="412" fg:w="1"/><text x="16.2500%" y="271.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.04%)</title><rect x="16.0000%" y="245" width="0.0388%" height="15" fill="rgb(211,200,13)" fg:x="412" fg:w="1"/><text x="16.2500%" y="255.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (1 samples, 0.04%)</title><rect x="16.0000%" y="229" width="0.0388%" height="15" fill="rgb(241,121,6)" fg:x="412" fg:w="1"/><text x="16.2500%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.12%)</title><rect x="16.0388%" y="229" width="0.1165%" height="15" fill="rgb(234,221,29)" fg:x="413" fg:w="3"/><text x="16.2888%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.12%)</title><rect x="16.0388%" y="213" width="0.1165%" height="15" fill="rgb(229,136,5)" fg:x="413" fg:w="3"/><text x="16.2888%" y="223.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::_{{closure}} (152 samples, 5.90%)</title><rect x="10.3301%" y="373" width="5.9029%" height="15" fill="rgb(238,36,11)" fg:x="266" fg:w="152"/><text x="10.5801%" y="383.50">wgpu_tes..</text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (6 samples, 0.23%)</title><rect x="16.0000%" y="357" width="0.2330%" height="15" fill="rgb(251,55,41)" fg:x="412" fg:w="6"/><text x="16.2500%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (6 samples, 0.23%)</title><rect x="16.0000%" y="341" width="0.2330%" height="15" fill="rgb(242,34,40)" fg:x="412" fg:w="6"/><text x="16.2500%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (6 samples, 0.23%)</title><rect x="16.0000%" y="325" width="0.2330%" height="15" fill="rgb(215,42,17)" fg:x="412" fg:w="6"/><text x="16.2500%" y="335.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (6 samples, 0.23%)</title><rect x="16.0000%" y="309" width="0.2330%" height="15" fill="rgb(207,44,46)" fg:x="412" fg:w="6"/><text x="16.2500%" y="319.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (5 samples, 0.19%)</title><rect x="16.0388%" y="293" width="0.1942%" height="15" fill="rgb(211,206,28)" fg:x="413" fg:w="5"/><text x="16.2888%" y="303.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.19%)</title><rect x="16.0388%" y="277" width="0.1942%" height="15" fill="rgb(237,167,16)" fg:x="413" fg:w="5"/><text x="16.2888%" y="287.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.19%)</title><rect x="16.0388%" y="261" width="0.1942%" height="15" fill="rgb(233,66,6)" fg:x="413" fg:w="5"/><text x="16.2888%" y="271.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (5 samples, 0.19%)</title><rect x="16.0388%" y="245" width="0.1942%" height="15" fill="rgb(246,123,29)" fg:x="413" fg:w="5"/><text x="16.2888%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.08%)</title><rect x="16.1553%" y="229" width="0.0777%" height="15" fill="rgb(209,62,40)" fg:x="416" fg:w="2"/><text x="16.4053%" y="239.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 7.88%)</title><rect x="8.3883%" y="389" width="7.8835%" height="15" fill="rgb(218,4,25)" fg:x="216" fg:w="203"/><text x="8.6383%" y="399.50">wgpu_test`&lt;..</text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Send&lt;usize&gt;&gt; (1 samples, 0.04%)</title><rect x="16.2330%" y="373" width="0.0388%" height="15" fill="rgb(253,91,49)" fg:x="418" fg:w="1"/><text x="16.4830%" y="383.50"></text></g><g><title>wgpu_test`core::mem::drop (1 samples, 0.04%)</title><rect x="16.2718%" y="341" width="0.0388%" height="15" fill="rgb(228,155,29)" fg:x="419" fg:w="1"/><text x="16.5218%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.04%)</title><rect x="16.2718%" y="325" width="0.0388%" height="15" fill="rgb(243,57,37)" fg:x="419" fg:w="1"/><text x="16.5218%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.2718%" y="309" width="0.0388%" height="15" fill="rgb(244,167,17)" fg:x="419" fg:w="1"/><text x="16.5218%" y="319.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.04%)</title><rect x="16.2718%" y="293" width="0.0388%" height="15" fill="rgb(207,181,38)" fg:x="419" fg:w="1"/><text x="16.5218%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="16.2718%" y="277" width="0.0388%" height="15" fill="rgb(211,8,23)" fg:x="419" fg:w="1"/><text x="16.5218%" y="287.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="16.2718%" y="261" width="0.0388%" height="15" fill="rgb(235,11,44)" fg:x="419" fg:w="1"/><text x="16.5218%" y="271.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="16.2718%" y="245" width="0.0388%" height="15" fill="rgb(248,18,52)" fg:x="419" fg:w="1"/><text x="16.5218%" y="255.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="16.2718%" y="229" width="0.0388%" height="15" fill="rgb(208,4,7)" fg:x="419" fg:w="1"/><text x="16.5218%" y="239.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="16.2718%" y="213" width="0.0388%" height="15" fill="rgb(240,17,39)" fg:x="419" fg:w="1"/><text x="16.5218%" y="223.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::expect (1 samples, 0.04%)</title><rect x="16.3107%" y="341" width="0.0388%" height="15" fill="rgb(207,170,3)" fg:x="420" fg:w="1"/><text x="16.5607%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.04%)</title><rect x="16.3495%" y="341" width="0.0388%" height="15" fill="rgb(236,100,52)" fg:x="421" fg:w="1"/><text x="16.5995%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="16.3883%" y="341" width="0.0388%" height="15" fill="rgb(246,78,51)" fg:x="422" fg:w="1"/><text x="16.6383%" y="351.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.3883%" y="325" width="0.0388%" height="15" fill="rgb(211,17,15)" fg:x="422" fg:w="1"/><text x="16.6383%" y="335.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.04%)</title><rect x="16.3883%" y="309" width="0.0388%" height="15" fill="rgb(209,59,46)" fg:x="422" fg:w="1"/><text x="16.6383%" y="319.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::remove (1 samples, 0.04%)</title><rect x="16.4272%" y="341" width="0.0388%" height="15" fill="rgb(210,92,25)" fg:x="423" fg:w="1"/><text x="16.6772%" y="351.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::try_remove (1 samples, 0.04%)</title><rect x="16.4272%" y="325" width="0.0388%" height="15" fill="rgb(238,174,52)" fg:x="423" fg:w="1"/><text x="16.6772%" y="335.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="16.4660%" y="325" width="0.0388%" height="15" fill="rgb(230,73,7)" fg:x="424" fg:w="1"/><text x="16.7160%" y="335.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="16.4660%" y="309" width="0.0388%" height="15" fill="rgb(243,124,40)" fg:x="424" fg:w="1"/><text x="16.7160%" y="319.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="16.4660%" y="293" width="0.0388%" height="15" fill="rgb(244,170,11)" fg:x="424" fg:w="1"/><text x="16.7160%" y="303.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="16.4660%" y="277" width="0.0388%" height="15" fill="rgb(207,114,54)" fg:x="424" fg:w="1"/><text x="16.7160%" y="287.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="16.4660%" y="261" width="0.0388%" height="15" fill="rgb(205,42,20)" fg:x="424" fg:w="1"/><text x="16.7160%" y="271.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="16.4660%" y="245" width="0.0388%" height="15" fill="rgb(230,30,28)" fg:x="424" fg:w="1"/><text x="16.7160%" y="255.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="16.4660%" y="229" width="0.0388%" height="15" fill="rgb(205,73,54)" fg:x="424" fg:w="1"/><text x="16.7160%" y="239.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.27%)</title><rect x="16.2718%" y="373" width="0.2718%" height="15" fill="rgb(254,227,23)" fg:x="419" fg:w="7"/><text x="16.5218%" y="383.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}}::_{{closure}} (7 samples, 0.27%)</title><rect x="16.2718%" y="357" width="0.2718%" height="15" fill="rgb(228,202,34)" fg:x="419" fg:w="7"/><text x="16.5218%" y="367.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="16.4660%" y="341" width="0.0777%" height="15" fill="rgb(222,225,37)" fg:x="424" fg:w="2"/><text x="16.7160%" y="351.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="16.5049%" y="325" width="0.0388%" height="15" fill="rgb(221,14,54)" fg:x="425" fg:w="1"/><text x="16.7549%" y="335.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="16.5049%" y="309" width="0.0388%" height="15" fill="rgb(254,102,2)" fg:x="425" fg:w="1"/><text x="16.7549%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="16.5049%" y="293" width="0.0388%" height="15" fill="rgb(232,104,17)" fg:x="425" fg:w="1"/><text x="16.7549%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="16.5049%" y="277" width="0.0388%" height="15" fill="rgb(250,220,14)" fg:x="425" fg:w="1"/><text x="16.7549%" y="287.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (8 samples, 0.31%)</title><rect x="16.2718%" y="389" width="0.3107%" height="15" fill="rgb(241,158,9)" fg:x="419" fg:w="8"/><text x="16.5218%" y="399.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="16.5437%" y="373" width="0.0388%" height="15" fill="rgb(246,9,43)" fg:x="426" fg:w="1"/><text x="16.7937%" y="383.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.04%)</title><rect x="16.5437%" y="357" width="0.0388%" height="15" fill="rgb(206,73,33)" fg:x="426" fg:w="1"/><text x="16.7937%" y="367.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.5437%" y="341" width="0.0388%" height="15" fill="rgb(222,79,8)" fg:x="426" fg:w="1"/><text x="16.7937%" y="351.50"></text></g><g><title>wgpu_test`core::mem::drop (1 samples, 0.04%)</title><rect x="16.5825%" y="341" width="0.0388%" height="15" fill="rgb(234,8,54)" fg:x="427" fg:w="1"/><text x="16.8325%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.04%)</title><rect x="16.5825%" y="325" width="0.0388%" height="15" fill="rgb(209,134,38)" fg:x="427" fg:w="1"/><text x="16.8325%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.5825%" y="309" width="0.0388%" height="15" fill="rgb(230,127,29)" fg:x="427" fg:w="1"/><text x="16.8325%" y="319.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.04%)</title><rect x="16.5825%" y="293" width="0.0388%" height="15" fill="rgb(242,44,41)" fg:x="427" fg:w="1"/><text x="16.8325%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="16.5825%" y="277" width="0.0388%" height="15" fill="rgb(222,56,43)" fg:x="427" fg:w="1"/><text x="16.8325%" y="287.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="16.5825%" y="261" width="0.0388%" height="15" fill="rgb(238,39,47)" fg:x="427" fg:w="1"/><text x="16.8325%" y="271.50"></text></g><g><title>wgpu_test`core::alloc::layout::size_align (1 samples, 0.04%)</title><rect x="16.5825%" y="245" width="0.0388%" height="15" fill="rgb(226,79,43)" fg:x="427" fg:w="1"/><text x="16.8325%" y="255.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="16.6214%" y="341" width="0.0388%" height="15" fill="rgb(242,105,53)" fg:x="428" fg:w="1"/><text x="16.8714%" y="351.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.6214%" y="325" width="0.0388%" height="15" fill="rgb(251,132,46)" fg:x="428" fg:w="1"/><text x="16.8714%" y="335.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.04%)</title><rect x="16.6214%" y="309" width="0.0388%" height="15" fill="rgb(231,77,14)" fg:x="428" fg:w="1"/><text x="16.8714%" y="319.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (1 samples, 0.04%)</title><rect x="16.6214%" y="293" width="0.0388%" height="15" fill="rgb(240,135,9)" fg:x="428" fg:w="1"/><text x="16.8714%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.04%)</title><rect x="16.6214%" y="277" width="0.0388%" height="15" fill="rgb(248,109,14)" fg:x="428" fg:w="1"/><text x="16.8714%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.04%)</title><rect x="16.6214%" y="261" width="0.0388%" height="15" fill="rgb(227,146,52)" fg:x="428" fg:w="1"/><text x="16.8714%" y="271.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="16.6602%" y="341" width="0.0388%" height="15" fill="rgb(232,54,3)" fg:x="429" fg:w="1"/><text x="16.9102%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.08%)</title><rect x="16.6990%" y="293" width="0.0777%" height="15" fill="rgb(229,201,43)" fg:x="430" fg:w="2"/><text x="16.9490%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.08%)</title><rect x="16.6990%" y="277" width="0.0777%" height="15" fill="rgb(252,161,33)" fg:x="430" fg:w="2"/><text x="16.9490%" y="287.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (220 samples, 8.54%)</title><rect x="8.2718%" y="421" width="8.5437%" height="15" fill="rgb(226,146,40)" fg:x="213" fg:w="220"/><text x="8.5218%" y="431.50">wgpu_test`&lt;c..</text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}} (219 samples, 8.50%)</title><rect x="8.3107%" y="405" width="8.5049%" height="15" fill="rgb(219,47,25)" fg:x="214" fg:w="219"/><text x="8.5607%" y="415.50">wgpu_test`as..</text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (6 samples, 0.23%)</title><rect x="16.5825%" y="389" width="0.2330%" height="15" fill="rgb(250,135,13)" fg:x="427" fg:w="6"/><text x="16.8325%" y="399.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.23%)</title><rect x="16.5825%" y="373" width="0.2330%" height="15" fill="rgb(219,229,18)" fg:x="427" fg:w="6"/><text x="16.8325%" y="383.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}}::_{{closure}} (6 samples, 0.23%)</title><rect x="16.5825%" y="357" width="0.2330%" height="15" fill="rgb(217,152,27)" fg:x="427" fg:w="6"/><text x="16.8325%" y="367.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.12%)</title><rect x="16.6990%" y="341" width="0.1165%" height="15" fill="rgb(225,71,47)" fg:x="430" fg:w="3"/><text x="16.9490%" y="351.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.12%)</title><rect x="16.6990%" y="325" width="0.1165%" height="15" fill="rgb(220,139,14)" fg:x="430" fg:w="3"/><text x="16.9490%" y="335.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (3 samples, 0.12%)</title><rect x="16.6990%" y="309" width="0.1165%" height="15" fill="rgb(247,54,32)" fg:x="430" fg:w="3"/><text x="16.9490%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="16.7767%" y="293" width="0.0388%" height="15" fill="rgb(252,131,39)" fg:x="432" fg:w="1"/><text x="17.0267%" y="303.50"></text></g><g><title>wgpu_test`async_task::header::Header::take (1 samples, 0.04%)</title><rect x="16.8155%" y="421" width="0.0388%" height="15" fill="rgb(210,108,39)" fg:x="433" fg:w="1"/><text x="17.0655%" y="431.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="16.8155%" y="405" width="0.0388%" height="15" fill="rgb(205,23,29)" fg:x="433" fg:w="1"/><text x="17.0655%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (1 samples, 0.04%)</title><rect x="16.8544%" y="421" width="0.0388%" height="15" fill="rgb(246,139,46)" fg:x="434" fg:w="1"/><text x="17.1044%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="16.8544%" y="405" width="0.0388%" height="15" fill="rgb(250,81,26)" fg:x="434" fg:w="1"/><text x="17.1044%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="16.8544%" y="389" width="0.0388%" height="15" fill="rgb(214,104,7)" fg:x="434" fg:w="1"/><text x="17.1044%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (3 samples, 0.12%)</title><rect x="16.8932%" y="421" width="0.1165%" height="15" fill="rgb(233,189,8)" fg:x="435" fg:w="3"/><text x="17.1432%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (3 samples, 0.12%)</title><rect x="16.8932%" y="405" width="0.1165%" height="15" fill="rgb(228,141,17)" fg:x="435" fg:w="3"/><text x="17.1432%" y="415.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="16.9709%" y="389" width="0.0388%" height="15" fill="rgb(247,157,1)" fg:x="437" fg:w="1"/><text x="17.2209%" y="399.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="16.9709%" y="373" width="0.0388%" height="15" fill="rgb(249,225,5)" fg:x="437" fg:w="1"/><text x="17.2209%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run::_{{closure}} (1 samples, 0.04%)</title><rect x="17.0097%" y="421" width="0.0388%" height="15" fill="rgb(242,55,13)" fg:x="438" fg:w="1"/><text x="17.2597%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="17.0485%" y="341" width="0.0388%" height="15" fill="rgb(230,49,50)" fg:x="439" fg:w="1"/><text x="17.2985%" y="351.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="17.0485%" y="325" width="0.0388%" height="15" fill="rgb(241,111,38)" fg:x="439" fg:w="1"/><text x="17.2985%" y="335.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="17.0485%" y="309" width="0.0388%" height="15" fill="rgb(252,155,4)" fg:x="439" fg:w="1"/><text x="17.2985%" y="319.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="17.0485%" y="293" width="0.0388%" height="15" fill="rgb(212,69,32)" fg:x="439" fg:w="1"/><text x="17.2985%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (2 samples, 0.08%)</title><rect x="17.0485%" y="373" width="0.0777%" height="15" fill="rgb(243,107,47)" fg:x="439" fg:w="2"/><text x="17.2985%" y="383.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (2 samples, 0.08%)</title><rect x="17.0485%" y="357" width="0.0777%" height="15" fill="rgb(247,130,12)" fg:x="439" fg:w="2"/><text x="17.2985%" y="367.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="17.0874%" y="341" width="0.0388%" height="15" fill="rgb(233,74,16)" fg:x="440" fg:w="1"/><text x="17.3374%" y="351.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (3 samples, 0.12%)</title><rect x="17.0485%" y="421" width="0.1165%" height="15" fill="rgb(208,58,18)" fg:x="439" fg:w="3"/><text x="17.2985%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run::_{{closure}} (3 samples, 0.12%)</title><rect x="17.0485%" y="405" width="0.1165%" height="15" fill="rgb(242,225,1)" fg:x="439" fg:w="3"/><text x="17.2985%" y="415.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (3 samples, 0.12%)</title><rect x="17.0485%" y="389" width="0.1165%" height="15" fill="rgb(249,39,40)" fg:x="439" fg:w="3"/><text x="17.2985%" y="399.50"></text></g><g><title>wgpu_test`core::mem::forget (1 samples, 0.04%)</title><rect x="17.1262%" y="373" width="0.0388%" height="15" fill="rgb(207,72,44)" fg:x="441" fg:w="1"/><text x="17.3762%" y="383.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::run (230 samples, 8.93%)</title><rect x="8.2718%" y="453" width="8.9320%" height="15" fill="rgb(215,193,12)" fg:x="213" fg:w="230"/><text x="8.5218%" y="463.50">wgpu_test`asy..</text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run (230 samples, 8.93%)</title><rect x="8.2718%" y="437" width="8.9320%" height="15" fill="rgb(248,41,39)" fg:x="213" fg:w="230"/><text x="8.5218%" y="447.50">wgpu_test`asy..</text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.04%)</title><rect x="17.1650%" y="421" width="0.0388%" height="15" fill="rgb(253,85,4)" fg:x="442" fg:w="1"/><text x="17.4150%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="17.1650%" y="405" width="0.0388%" height="15" fill="rgb(243,70,31)" fg:x="442" fg:w="1"/><text x="17.4150%" y="415.50"></text></g><g><title>wgpu_test`&lt;cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="17.3592%" y="421" width="0.0388%" height="15" fill="rgb(253,195,26)" fg:x="447" fg:w="1"/><text x="17.6092%" y="431.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (5 samples, 0.19%)</title><rect x="17.3981%" y="421" width="0.1942%" height="15" fill="rgb(243,42,11)" fg:x="448" fg:w="5"/><text x="17.6481%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (5 samples, 0.19%)</title><rect x="17.3981%" y="405" width="0.1942%" height="15" fill="rgb(239,66,17)" fg:x="448" fg:w="5"/><text x="17.6481%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.19%)</title><rect x="17.3981%" y="389" width="0.1942%" height="15" fill="rgb(217,132,21)" fg:x="448" fg:w="5"/><text x="17.6481%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (5 samples, 0.19%)</title><rect x="17.3981%" y="373" width="0.1942%" height="15" fill="rgb(252,202,21)" fg:x="448" fg:w="5"/><text x="17.6481%" y="383.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.04%)</title><rect x="17.5922%" y="421" width="0.0388%" height="15" fill="rgb(233,98,36)" fg:x="453" fg:w="1"/><text x="17.8422%" y="431.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="17.5922%" y="405" width="0.0388%" height="15" fill="rgb(216,153,54)" fg:x="453" fg:w="1"/><text x="17.8422%" y="415.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="17.5922%" y="389" width="0.0388%" height="15" fill="rgb(250,99,7)" fg:x="453" fg:w="1"/><text x="17.8422%" y="399.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.04%)</title><rect x="17.6311%" y="421" width="0.0388%" height="15" fill="rgb(207,56,50)" fg:x="454" fg:w="1"/><text x="17.8811%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="17.6311%" y="405" width="0.0388%" height="15" fill="rgb(244,61,34)" fg:x="454" fg:w="1"/><text x="17.8811%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="17.6311%" y="389" width="0.0388%" height="15" fill="rgb(241,50,38)" fg:x="454" fg:w="1"/><text x="17.8811%" y="399.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (12 samples, 0.47%)</title><rect x="17.2427%" y="437" width="0.4660%" height="15" fill="rgb(212,166,30)" fg:x="444" fg:w="12"/><text x="17.4927%" y="447.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="17.6699%" y="421" width="0.0388%" height="15" fill="rgb(249,127,32)" fg:x="455" fg:w="1"/><text x="17.9199%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="17.6699%" y="405" width="0.0388%" height="15" fill="rgb(209,103,0)" fg:x="455" fg:w="1"/><text x="17.9199%" y="415.50"></text></g><g><title>wgpu_test`async_executor::Executor::try_tick (253 samples, 9.83%)</title><rect x="7.9223%" y="469" width="9.8252%" height="15" fill="rgb(238,209,51)" fg:x="204" fg:w="253"/><text x="8.1723%" y="479.50">wgpu_test`asyn..</text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (14 samples, 0.54%)</title><rect x="17.2039%" y="453" width="0.5437%" height="15" fill="rgb(237,56,23)" fg:x="443" fg:w="14"/><text x="17.4539%" y="463.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="17.7087%" y="437" width="0.0388%" height="15" fill="rgb(215,153,46)" fg:x="456" fg:w="1"/><text x="17.9587%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="17.7476%" y="453" width="0.0388%" height="15" fill="rgb(224,49,31)" fg:x="457" fg:w="1"/><text x="17.9976%" y="463.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="17.7476%" y="437" width="0.0388%" height="15" fill="rgb(250,18,42)" fg:x="457" fg:w="1"/><text x="17.9976%" y="447.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="17.7476%" y="421" width="0.0388%" height="15" fill="rgb(215,176,39)" fg:x="457" fg:w="1"/><text x="17.9976%" y="431.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="17.7864%" y="453" width="0.0388%" height="15" fill="rgb(223,77,29)" fg:x="458" fg:w="1"/><text x="18.0364%" y="463.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.04%)</title><rect x="17.8252%" y="453" width="0.0388%" height="15" fill="rgb(234,94,52)" fg:x="459" fg:w="1"/><text x="18.0752%" y="463.50"></text></g><g><title>wgpu_test`async_executor::State::notify (1 samples, 0.04%)</title><rect x="17.9029%" y="405" width="0.0388%" height="15" fill="rgb(220,154,50)" fg:x="461" fg:w="1"/><text x="18.1529%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.04%)</title><rect x="17.9029%" y="389" width="0.0388%" height="15" fill="rgb(212,11,10)" fg:x="461" fg:w="1"/><text x="18.1529%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="17.9029%" y="373" width="0.0388%" height="15" fill="rgb(205,166,19)" fg:x="461" fg:w="1"/><text x="18.1529%" y="383.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::schedule::_{{closure}} (3 samples, 0.12%)</title><rect x="17.9029%" y="421" width="0.1165%" height="15" fill="rgb(244,198,16)" fg:x="461" fg:w="3"/><text x="18.1529%" y="431.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.08%)</title><rect x="17.9417%" y="405" width="0.0777%" height="15" fill="rgb(219,69,12)" fg:x="462" fg:w="2"/><text x="18.1917%" y="415.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.08%)</title><rect x="17.9417%" y="389" width="0.0777%" height="15" fill="rgb(245,30,7)" fg:x="462" fg:w="2"/><text x="18.1917%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.04%)</title><rect x="17.9806%" y="373" width="0.0388%" height="15" fill="rgb(218,221,48)" fg:x="463" fg:w="1"/><text x="18.2306%" y="383.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::schedule (5 samples, 0.19%)</title><rect x="17.8641%" y="453" width="0.1942%" height="15" fill="rgb(216,66,15)" fg:x="460" fg:w="5"/><text x="18.1141%" y="463.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::schedule (5 samples, 0.19%)</title><rect x="17.8641%" y="437" width="0.1942%" height="15" fill="rgb(226,122,50)" fg:x="460" fg:w="5"/><text x="18.1141%" y="447.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="18.0194%" y="421" width="0.0388%" height="15" fill="rgb(239,156,16)" fg:x="464" fg:w="1"/><text x="18.2694%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="18.0194%" y="405" width="0.0388%" height="15" fill="rgb(224,27,38)" fg:x="464" fg:w="1"/><text x="18.2694%" y="415.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="18.0194%" y="389" width="0.0388%" height="15" fill="rgb(224,39,27)" fg:x="464" fg:w="1"/><text x="18.2694%" y="399.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="18.0194%" y="373" width="0.0388%" height="15" fill="rgb(215,92,29)" fg:x="464" fg:w="1"/><text x="18.2694%" y="383.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::waker (1 samples, 0.04%)</title><rect x="18.0583%" y="453" width="0.0388%" height="15" fill="rgb(207,159,16)" fg:x="465" fg:w="1"/><text x="18.3083%" y="463.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.04%)</title><rect x="18.0583%" y="437" width="0.0388%" height="15" fill="rgb(238,163,47)" fg:x="465" fg:w="1"/><text x="18.3083%" y="447.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="18.0583%" y="421" width="0.0388%" height="15" fill="rgb(219,91,49)" fg:x="465" fg:w="1"/><text x="18.3083%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="18.0971%" y="421" width="0.0388%" height="15" fill="rgb(227,167,31)" fg:x="466" fg:w="1"/><text x="18.3471%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="18.0971%" y="405" width="0.0388%" height="15" fill="rgb(234,80,54)" fg:x="466" fg:w="1"/><text x="18.3471%" y="415.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="18.0971%" y="389" width="0.0388%" height="15" fill="rgb(212,114,2)" fg:x="466" fg:w="1"/><text x="18.3471%" y="399.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="18.0971%" y="373" width="0.0388%" height="15" fill="rgb(234,50,24)" fg:x="466" fg:w="1"/><text x="18.3471%" y="383.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (2 samples, 0.08%)</title><rect x="18.1359%" y="421" width="0.0777%" height="15" fill="rgb(221,68,8)" fg:x="467" fg:w="2"/><text x="18.3859%" y="431.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate::_{{closure}} (2 samples, 0.08%)</title><rect x="18.1359%" y="405" width="0.0777%" height="15" fill="rgb(254,180,31)" fg:x="467" fg:w="2"/><text x="18.3859%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (2 samples, 0.08%)</title><rect x="18.1359%" y="389" width="0.0777%" height="15" fill="rgb(247,130,50)" fg:x="467" fg:w="2"/><text x="18.3859%" y="399.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (2 samples, 0.08%)</title><rect x="18.1359%" y="373" width="0.0777%" height="15" fill="rgb(211,109,4)" fg:x="467" fg:w="2"/><text x="18.3859%" y="383.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="18.1748%" y="357" width="0.0388%" height="15" fill="rgb(238,50,21)" fg:x="468" fg:w="1"/><text x="18.4248%" y="367.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::spawn (13 samples, 0.50%)</title><rect x="17.7476%" y="469" width="0.5049%" height="15" fill="rgb(225,57,45)" fg:x="457" fg:w="13"/><text x="17.9976%" y="479.50"></text></g><g><title>wgpu_test`async_task::runnable::spawn_unchecked (4 samples, 0.16%)</title><rect x="18.0971%" y="453" width="0.1553%" height="15" fill="rgb(209,196,50)" fg:x="466" fg:w="4"/><text x="18.3471%" y="463.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::allocate (4 samples, 0.16%)</title><rect x="18.0971%" y="437" width="0.1553%" height="15" fill="rgb(242,140,13)" fg:x="466" fg:w="4"/><text x="18.3471%" y="447.50"></text></g><g><title>wgpu_test`core::ptr::write (1 samples, 0.04%)</title><rect x="18.2136%" y="421" width="0.0388%" height="15" fill="rgb(217,111,7)" fg:x="469" fg:w="1"/><text x="18.4636%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="18.2136%" y="405" width="0.0388%" height="15" fill="rgb(253,193,51)" fg:x="469" fg:w="1"/><text x="18.4636%" y="415.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (6 samples, 0.23%)</title><rect x="18.3689%" y="373" width="0.2330%" height="15" fill="rgb(252,70,29)" fg:x="473" fg:w="6"/><text x="18.6189%" y="383.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (3 samples, 0.12%)</title><rect x="18.4854%" y="357" width="0.1165%" height="15" fill="rgb(232,127,12)" fg:x="476" fg:w="3"/><text x="18.7354%" y="367.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (2 samples, 0.08%)</title><rect x="18.5243%" y="341" width="0.0777%" height="15" fill="rgb(211,180,21)" fg:x="477" fg:w="2"/><text x="18.7743%" y="351.50"></text></g><g><title>wgpu_test`async_executor::Executor::state (12 samples, 0.47%)</title><rect x="18.2913%" y="437" width="0.4660%" height="15" fill="rgb(229,72,13)" fg:x="471" fg:w="12"/><text x="18.5413%" y="447.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.47%)</title><rect x="18.2913%" y="421" width="0.4660%" height="15" fill="rgb(240,211,49)" fg:x="471" fg:w="12"/><text x="18.5413%" y="431.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.47%)</title><rect x="18.2913%" y="405" width="0.4660%" height="15" fill="rgb(219,149,40)" fg:x="471" fg:w="12"/><text x="18.5413%" y="415.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get (12 samples, 0.47%)</title><rect x="18.2913%" y="389" width="0.4660%" height="15" fill="rgb(210,127,46)" fg:x="471" fg:w="12"/><text x="18.5413%" y="399.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (4 samples, 0.16%)</title><rect x="18.6019%" y="373" width="0.1553%" height="15" fill="rgb(220,106,7)" fg:x="479" fg:w="4"/><text x="18.8519%" y="383.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (4 samples, 0.16%)</title><rect x="18.6019%" y="357" width="0.1553%" height="15" fill="rgb(249,31,22)" fg:x="479" fg:w="4"/><text x="18.8519%" y="367.50"></text></g><g><title>wgpu_test`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.04%)</title><rect x="18.7184%" y="341" width="0.0388%" height="15" fill="rgb(253,1,49)" fg:x="482" fg:w="1"/><text x="18.9684%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="18.7184%" y="325" width="0.0388%" height="15" fill="rgb(227,144,33)" fg:x="482" fg:w="1"/><text x="18.9684%" y="335.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="18.7184%" y="309" width="0.0388%" height="15" fill="rgb(249,163,44)" fg:x="482" fg:w="1"/><text x="18.9684%" y="319.50"></text></g><g><title>wgpu_test`async_task::header::Header::register (3 samples, 0.12%)</title><rect x="19.0291%" y="293" width="0.1165%" height="15" fill="rgb(234,15,39)" fg:x="490" fg:w="3"/><text x="19.2791%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.08%)</title><rect x="19.0680%" y="277" width="0.0777%" height="15" fill="rgb(207,66,16)" fg:x="491" fg:w="2"/><text x="19.3180%" y="287.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_or (1 samples, 0.04%)</title><rect x="19.1068%" y="261" width="0.0388%" height="15" fill="rgb(233,112,24)" fg:x="492" fg:w="1"/><text x="19.3568%" y="271.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="19.1456%" y="245" width="0.0777%" height="15" fill="rgb(230,90,22)" fg:x="493" fg:w="2"/><text x="19.3956%" y="255.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="19.1845%" y="229" width="0.0388%" height="15" fill="rgb(229,61,13)" fg:x="494" fg:w="1"/><text x="19.4345%" y="239.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="19.2233%" y="245" width="0.0388%" height="15" fill="rgb(225,57,24)" fg:x="495" fg:w="1"/><text x="19.4733%" y="255.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="19.2621%" y="245" width="0.0388%" height="15" fill="rgb(208,169,48)" fg:x="496" fg:w="1"/><text x="19.5121%" y="255.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (2 samples, 0.08%)</title><rect x="19.3010%" y="245" width="0.0777%" height="15" fill="rgb(244,218,51)" fg:x="497" fg:w="2"/><text x="19.5510%" y="255.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.08%)</title><rect x="19.3010%" y="229" width="0.0777%" height="15" fill="rgb(214,148,10)" fg:x="497" fg:w="2"/><text x="19.5510%" y="239.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="19.3786%" y="245" width="0.0388%" height="15" fill="rgb(225,174,27)" fg:x="499" fg:w="1"/><text x="19.6286%" y="255.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="19.3786%" y="229" width="0.0388%" height="15" fill="rgb(230,96,26)" fg:x="499" fg:w="1"/><text x="19.6286%" y="239.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::get_output (8 samples, 0.31%)</title><rect x="19.1456%" y="293" width="0.3107%" height="15" fill="rgb(232,10,30)" fg:x="493" fg:w="8"/><text x="19.3956%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (8 samples, 0.31%)</title><rect x="19.1456%" y="277" width="0.3107%" height="15" fill="rgb(222,8,50)" fg:x="493" fg:w="8"/><text x="19.3956%" y="287.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (8 samples, 0.31%)</title><rect x="19.1456%" y="261" width="0.3107%" height="15" fill="rgb(213,81,27)" fg:x="493" fg:w="8"/><text x="19.3956%" y="271.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="19.4175%" y="245" width="0.0388%" height="15" fill="rgb(245,50,10)" fg:x="500" fg:w="1"/><text x="19.6675%" y="255.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.04%)</title><rect x="19.4563%" y="293" width="0.0388%" height="15" fill="rgb(216,100,18)" fg:x="501" fg:w="1"/><text x="19.7063%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="19.4563%" y="277" width="0.0388%" height="15" fill="rgb(236,147,54)" fg:x="501" fg:w="1"/><text x="19.7063%" y="287.50"></text></g><g><title>wgpu_test`&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.54%)</title><rect x="18.9903%" y="325" width="0.5437%" height="15" fill="rgb(205,143,26)" fg:x="489" fg:w="14"/><text x="19.2403%" y="335.50"></text></g><g><title>wgpu_test`async_task::task::Task&lt;T&gt;::poll_task (14 samples, 0.54%)</title><rect x="18.9903%" y="309" width="0.5437%" height="15" fill="rgb(236,26,9)" fg:x="489" fg:w="14"/><text x="19.2403%" y="319.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="19.4951%" y="293" width="0.0388%" height="15" fill="rgb(221,165,53)" fg:x="502" fg:w="1"/><text x="19.7451%" y="303.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="19.4951%" y="277" width="0.0388%" height="15" fill="rgb(214,110,17)" fg:x="502" fg:w="1"/><text x="19.7451%" y="287.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="19.5340%" y="325" width="0.0388%" height="15" fill="rgb(237,197,12)" fg:x="503" fg:w="1"/><text x="19.7840%" y="335.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="19.5340%" y="309" width="0.0388%" height="15" fill="rgb(205,84,17)" fg:x="503" fg:w="1"/><text x="19.7840%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="19.5340%" y="293" width="0.0388%" height="15" fill="rgb(237,18,45)" fg:x="503" fg:w="1"/><text x="19.7840%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="19.5340%" y="277" width="0.0388%" height="15" fill="rgb(221,87,14)" fg:x="503" fg:w="1"/><text x="19.7840%" y="287.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="19.5728%" y="325" width="0.0388%" height="15" fill="rgb(238,186,15)" fg:x="504" fg:w="1"/><text x="19.8228%" y="335.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="19.5728%" y="309" width="0.0388%" height="15" fill="rgb(208,115,11)" fg:x="504" fg:w="1"/><text x="19.8228%" y="319.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="19.5728%" y="293" width="0.0388%" height="15" fill="rgb(254,175,0)" fg:x="504" fg:w="1"/><text x="19.8228%" y="303.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="19.5728%" y="277" width="0.0388%" height="15" fill="rgb(227,24,42)" fg:x="504" fg:w="1"/><text x="19.8228%" y="287.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::dangling (1 samples, 0.04%)</title><rect x="19.5728%" y="261" width="0.0388%" height="15" fill="rgb(223,211,37)" fg:x="504" fg:w="1"/><text x="19.8228%" y="271.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="19.6117%" y="325" width="0.0388%" height="15" fill="rgb(235,49,27)" fg:x="505" fg:w="1"/><text x="19.8617%" y="335.50"></text></g><g><title>wgpu_test`alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.04%)</title><rect x="19.6117%" y="309" width="0.0388%" height="15" fill="rgb(254,97,51)" fg:x="505" fg:w="1"/><text x="19.8617%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="19.7282%" y="213" width="0.0388%" height="15" fill="rgb(249,51,40)" fg:x="508" fg:w="1"/><text x="19.9782%" y="223.50"></text></g><g><title>wgpu_test`alloc::alloc::dealloc (4 samples, 0.16%)</title><rect x="19.6505%" y="261" width="0.1553%" height="15" fill="rgb(210,128,45)" fg:x="506" fg:w="4"/><text x="19.9005%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.16%)</title><rect x="19.6505%" y="245" width="0.1553%" height="15" fill="rgb(224,137,50)" fg:x="506" fg:w="4"/><text x="19.9005%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.12%)</title><rect x="19.6893%" y="229" width="0.1165%" height="15" fill="rgb(242,15,9)" fg:x="507" fg:w="3"/><text x="19.9393%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="19.7670%" y="213" width="0.0388%" height="15" fill="rgb(233,187,41)" fg:x="509" fg:w="1"/><text x="20.0170%" y="223.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="19.8447%" y="213" width="0.0388%" height="15" fill="rgb(227,2,29)" fg:x="511" fg:w="1"/><text x="20.0947%" y="223.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="19.8447%" y="197" width="0.0388%" height="15" fill="rgb(222,70,3)" fg:x="511" fg:w="1"/><text x="20.0947%" y="207.50"></text></g><g><title>wgpu_test`async_task::utils::extend (3 samples, 0.12%)</title><rect x="19.8058%" y="229" width="0.1165%" height="15" fill="rgb(213,11,42)" fg:x="510" fg:w="3"/><text x="20.0558%" y="239.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="19.8835%" y="213" width="0.0388%" height="15" fill="rgb(225,150,9)" fg:x="512" fg:w="1"/><text x="20.1335%" y="223.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="19.9223%" y="229" width="0.0388%" height="15" fill="rgb(230,162,45)" fg:x="513" fg:w="1"/><text x="20.1723%" y="239.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (5 samples, 0.19%)</title><rect x="19.8058%" y="245" width="0.1942%" height="15" fill="rgb(222,14,52)" fg:x="510" fg:w="5"/><text x="20.0558%" y="255.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="19.9612%" y="229" width="0.0388%" height="15" fill="rgb(254,198,14)" fg:x="514" fg:w="1"/><text x="20.2112%" y="239.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="19.9612%" y="213" width="0.0388%" height="15" fill="rgb(220,217,30)" fg:x="514" fg:w="1"/><text x="20.2112%" y="223.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (6 samples, 0.23%)</title><rect x="19.8058%" y="261" width="0.2330%" height="15" fill="rgb(215,146,41)" fg:x="510" fg:w="6"/><text x="20.0558%" y="271.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="20.0000%" y="245" width="0.0388%" height="15" fill="rgb(217,27,36)" fg:x="515" fg:w="1"/><text x="20.2500%" y="255.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="20.0388%" y="245" width="0.0777%" height="15" fill="rgb(219,218,39)" fg:x="516" fg:w="2"/><text x="20.2888%" y="255.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (2 samples, 0.08%)</title><rect x="20.0388%" y="229" width="0.0777%" height="15" fill="rgb(219,4,42)" fg:x="516" fg:w="2"/><text x="20.2888%" y="239.50"></text></g><g><title>wgpu_test`core::cmp::max_by (2 samples, 0.08%)</title><rect x="20.0388%" y="213" width="0.0777%" height="15" fill="rgb(249,119,36)" fg:x="516" fg:w="2"/><text x="20.2888%" y="223.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (2 samples, 0.08%)</title><rect x="20.0388%" y="197" width="0.0777%" height="15" fill="rgb(209,23,33)" fg:x="516" fg:w="2"/><text x="20.2888%" y="207.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="20.0777%" y="181" width="0.0388%" height="15" fill="rgb(211,10,0)" fg:x="517" fg:w="1"/><text x="20.3277%" y="191.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="20.1165%" y="245" width="0.0388%" height="15" fill="rgb(208,99,37)" fg:x="518" fg:w="1"/><text x="20.3665%" y="255.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="20.1165%" y="229" width="0.0388%" height="15" fill="rgb(213,132,31)" fg:x="518" fg:w="1"/><text x="20.3665%" y="239.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (5 samples, 0.19%)</title><rect x="20.0388%" y="261" width="0.1942%" height="15" fill="rgb(243,129,40)" fg:x="516" fg:w="5"/><text x="20.2888%" y="271.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (2 samples, 0.08%)</title><rect x="20.1553%" y="245" width="0.0777%" height="15" fill="rgb(210,66,33)" fg:x="519" fg:w="2"/><text x="20.4053%" y="255.50"></text></g><g><title>wgpu_test`core::cmp::max_by (2 samples, 0.08%)</title><rect x="20.1553%" y="229" width="0.0777%" height="15" fill="rgb(209,189,4)" fg:x="519" fg:w="2"/><text x="20.4053%" y="239.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="20.1942%" y="213" width="0.0388%" height="15" fill="rgb(214,107,37)" fg:x="520" fg:w="1"/><text x="20.4442%" y="223.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (1 samples, 0.04%)</title><rect x="20.2330%" y="261" width="0.0388%" height="15" fill="rgb(245,88,54)" fg:x="521" fg:w="1"/><text x="20.4830%" y="271.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::destroy::_{{closure}} (1 samples, 0.04%)</title><rect x="20.2330%" y="245" width="0.0388%" height="15" fill="rgb(205,146,20)" fg:x="521" fg:w="1"/><text x="20.4830%" y="255.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::Executor::schedule::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="20.2330%" y="229" width="0.0388%" height="15" fill="rgb(220,161,25)" fg:x="521" fg:w="1"/><text x="20.4830%" y="239.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.04%)</title><rect x="20.2330%" y="213" width="0.0388%" height="15" fill="rgb(215,152,15)" fg:x="521" fg:w="1"/><text x="20.4830%" y="223.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="20.2330%" y="197" width="0.0388%" height="15" fill="rgb(233,192,44)" fg:x="521" fg:w="1"/><text x="20.4830%" y="207.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="20.2330%" y="181" width="0.0388%" height="15" fill="rgb(240,170,46)" fg:x="521" fg:w="1"/><text x="20.4830%" y="191.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (17 samples, 0.66%)</title><rect x="19.6505%" y="325" width="0.6602%" height="15" fill="rgb(207,104,33)" fg:x="506" fg:w="17"/><text x="19.9005%" y="335.50"></text></g><g><title>wgpu_test`&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.66%)</title><rect x="19.6505%" y="309" width="0.6602%" height="15" fill="rgb(219,21,39)" fg:x="506" fg:w="17"/><text x="19.9005%" y="319.50"></text></g><g><title>wgpu_test`async_task::task::Task&lt;T&gt;::set_detached (17 samples, 0.66%)</title><rect x="19.6505%" y="293" width="0.6602%" height="15" fill="rgb(214,133,29)" fg:x="506" fg:w="17"/><text x="19.9005%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::destroy (17 samples, 0.66%)</title><rect x="19.6505%" y="277" width="0.6602%" height="15" fill="rgb(226,93,6)" fg:x="506" fg:w="17"/><text x="19.9005%" y="287.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::size (1 samples, 0.04%)</title><rect x="20.2718%" y="261" width="0.0388%" height="15" fill="rgb(252,222,34)" fg:x="522" fg:w="1"/><text x="20.5218%" y="271.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 1.51%)</title><rect x="18.9126%" y="373" width="1.5146%" height="15" fill="rgb(252,92,48)" fg:x="487" fg:w="39"/><text x="19.1626%" y="383.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 1.48%)</title><rect x="18.9515%" y="357" width="1.4757%" height="15" fill="rgb(245,223,24)" fg:x="488" fg:w="38"/><text x="19.2015%" y="367.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::scope::_{{closure}}::_{{closure}} (38 samples, 1.48%)</title><rect x="18.9515%" y="341" width="1.4757%" height="15" fill="rgb(205,176,3)" fg:x="488" fg:w="38"/><text x="19.2015%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::read (3 samples, 0.12%)</title><rect x="20.3107%" y="325" width="0.1165%" height="15" fill="rgb(235,151,15)" fg:x="523" fg:w="3"/><text x="20.5607%" y="335.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="20.4272%" y="325" width="0.0388%" height="15" fill="rgb(237,209,11)" fg:x="526" fg:w="1"/><text x="20.6772%" y="335.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="20.4272%" y="309" width="0.0388%" height="15" fill="rgb(243,227,24)" fg:x="526" fg:w="1"/><text x="20.6772%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="20.4272%" y="293" width="0.0388%" height="15" fill="rgb(239,193,16)" fg:x="526" fg:w="1"/><text x="20.6772%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="20.4272%" y="277" width="0.0388%" height="15" fill="rgb(231,27,9)" fg:x="526" fg:w="1"/><text x="20.6772%" y="287.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 1.59%)</title><rect x="18.9126%" y="405" width="1.5922%" height="15" fill="rgb(219,169,10)" fg:x="487" fg:w="41"/><text x="19.1626%" y="415.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::spawn::_{{closure}} (41 samples, 1.59%)</title><rect x="18.9126%" y="389" width="1.5922%" height="15" fill="rgb(244,229,43)" fg:x="487" fg:w="41"/><text x="19.1626%" y="399.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::LocalExecutor::spawn&lt;alloc::vec::Vec&lt;()&gt;,core::pin::Pin&lt;&amp;mut dyn core::future::future::Future+Output = alloc::vec::Vec&lt;()&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.08%)</title><rect x="20.4272%" y="373" width="0.0777%" height="15" fill="rgb(254,38,20)" fg:x="526" fg:w="2"/><text x="20.6772%" y="383.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="20.4272%" y="357" width="0.0777%" height="15" fill="rgb(250,47,30)" fg:x="526" fg:w="2"/><text x="20.6772%" y="367.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::spawn::_{{closure}}::_{{closure}} (2 samples, 0.08%)</title><rect x="20.4272%" y="341" width="0.0777%" height="15" fill="rgb(224,124,36)" fg:x="526" fg:w="2"/><text x="20.6772%" y="351.50"></text></g><g><title>wgpu_test`core::mem::drop (1 samples, 0.04%)</title><rect x="20.4660%" y="325" width="0.0388%" height="15" fill="rgb(246,68,51)" fg:x="527" fg:w="1"/><text x="20.7160%" y="335.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.04%)</title><rect x="20.4660%" y="309" width="0.0388%" height="15" fill="rgb(253,43,49)" fg:x="527" fg:w="1"/><text x="20.7160%" y="319.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="20.4660%" y="293" width="0.0388%" height="15" fill="rgb(219,54,36)" fg:x="527" fg:w="1"/><text x="20.7160%" y="303.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.04%)</title><rect x="20.4660%" y="277" width="0.0388%" height="15" fill="rgb(227,133,34)" fg:x="527" fg:w="1"/><text x="20.7160%" y="287.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="20.4660%" y="261" width="0.0388%" height="15" fill="rgb(247,227,15)" fg:x="527" fg:w="1"/><text x="20.7160%" y="271.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="20.4660%" y="245" width="0.0388%" height="15" fill="rgb(229,96,14)" fg:x="527" fg:w="1"/><text x="20.7160%" y="255.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="20.4660%" y="229" width="0.0388%" height="15" fill="rgb(220,79,17)" fg:x="527" fg:w="1"/><text x="20.7160%" y="239.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="20.4660%" y="213" width="0.0388%" height="15" fill="rgb(205,131,53)" fg:x="527" fg:w="1"/><text x="20.7160%" y="223.50"></text></g><g><title>wgpu_test`async_task::header::Header::take (1 samples, 0.04%)</title><rect x="20.5049%" y="405" width="0.0388%" height="15" fill="rgb(209,50,29)" fg:x="528" fg:w="1"/><text x="20.7549%" y="415.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="20.5049%" y="389" width="0.0388%" height="15" fill="rgb(245,86,46)" fg:x="528" fg:w="1"/><text x="20.7549%" y="399.50"></text></g><g><title>wgpu_test`core::mem::replace (1 samples, 0.04%)</title><rect x="20.5049%" y="373" width="0.0388%" height="15" fill="rgb(235,66,46)" fg:x="528" fg:w="1"/><text x="20.7549%" y="383.50"></text></g><g><title>wgpu_test`core::ptr::read (1 samples, 0.04%)</title><rect x="20.5049%" y="357" width="0.0388%" height="15" fill="rgb(232,148,31)" fg:x="528" fg:w="1"/><text x="20.7549%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (1 samples, 0.04%)</title><rect x="20.5437%" y="405" width="0.0388%" height="15" fill="rgb(217,149,8)" fg:x="529" fg:w="1"/><text x="20.7937%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="20.5437%" y="389" width="0.0388%" height="15" fill="rgb(209,183,11)" fg:x="529" fg:w="1"/><text x="20.7937%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="20.5437%" y="373" width="0.0388%" height="15" fill="rgb(208,55,20)" fg:x="529" fg:w="1"/><text x="20.7937%" y="383.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="20.5437%" y="357" width="0.0388%" height="15" fill="rgb(218,39,14)" fg:x="529" fg:w="1"/><text x="20.7937%" y="367.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="20.5437%" y="341" width="0.0388%" height="15" fill="rgb(216,169,33)" fg:x="529" fg:w="1"/><text x="20.7937%" y="351.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="20.5825%" y="357" width="0.0388%" height="15" fill="rgb(233,80,24)" fg:x="530" fg:w="1"/><text x="20.8325%" y="367.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (2 samples, 0.08%)</title><rect x="20.5825%" y="405" width="0.0777%" height="15" fill="rgb(213,179,31)" fg:x="530" fg:w="2"/><text x="20.8325%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (2 samples, 0.08%)</title><rect x="20.5825%" y="389" width="0.0777%" height="15" fill="rgb(209,19,5)" fg:x="530" fg:w="2"/><text x="20.8325%" y="399.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (2 samples, 0.08%)</title><rect x="20.5825%" y="373" width="0.0777%" height="15" fill="rgb(219,18,35)" fg:x="530" fg:w="2"/><text x="20.8325%" y="383.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="20.6214%" y="357" width="0.0388%" height="15" fill="rgb(209,169,16)" fg:x="531" fg:w="1"/><text x="20.8714%" y="367.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="20.6214%" y="341" width="0.0388%" height="15" fill="rgb(245,90,51)" fg:x="531" fg:w="1"/><text x="20.8714%" y="351.50"></text></g><g><title>wgpu_test`async_task::utils::padding_needed_for (1 samples, 0.04%)</title><rect x="20.6990%" y="357" width="0.0388%" height="15" fill="rgb(220,99,45)" fg:x="533" fg:w="1"/><text x="20.9490%" y="367.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align (1 samples, 0.04%)</title><rect x="20.7379%" y="357" width="0.0388%" height="15" fill="rgb(249,89,25)" fg:x="534" fg:w="1"/><text x="20.9879%" y="367.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="20.7379%" y="341" width="0.0388%" height="15" fill="rgb(239,193,0)" fg:x="534" fg:w="1"/><text x="20.9879%" y="351.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run (53 samples, 2.06%)</title><rect x="18.7573%" y="421" width="2.0583%" height="15" fill="rgb(231,126,1)" fg:x="483" fg:w="53"/><text x="19.0073%" y="431.50">w..</text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (4 samples, 0.16%)</title><rect x="20.6602%" y="405" width="0.1553%" height="15" fill="rgb(243,166,3)" fg:x="532" fg:w="4"/><text x="20.9102%" y="415.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (4 samples, 0.16%)</title><rect x="20.6602%" y="389" width="0.1553%" height="15" fill="rgb(223,22,34)" fg:x="532" fg:w="4"/><text x="20.9102%" y="399.50"></text></g><g><title>wgpu_test`async_task::utils::extend (3 samples, 0.12%)</title><rect x="20.6990%" y="373" width="0.1165%" height="15" fill="rgb(251,52,51)" fg:x="533" fg:w="3"/><text x="20.9490%" y="383.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="20.7767%" y="357" width="0.0388%" height="15" fill="rgb(221,165,28)" fg:x="535" fg:w="1"/><text x="21.0267%" y="367.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::run (54 samples, 2.10%)</title><rect x="18.7573%" y="437" width="2.0971%" height="15" fill="rgb(218,121,47)" fg:x="483" fg:w="54"/><text x="19.0073%" y="447.50">w..</text></g><g><title>wgpu_test`core::mem::forget (1 samples, 0.04%)</title><rect x="20.8155%" y="421" width="0.0388%" height="15" fill="rgb(209,120,9)" fg:x="536" fg:w="1"/><text x="21.0655%" y="431.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (1 samples, 0.04%)</title><rect x="20.8544%" y="421" width="0.0388%" height="15" fill="rgb(236,68,12)" fg:x="537" fg:w="1"/><text x="21.1044%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (5 samples, 0.19%)</title><rect x="21.0097%" y="389" width="0.1942%" height="15" fill="rgb(225,194,26)" fg:x="541" fg:w="5"/><text x="21.2597%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.19%)</title><rect x="21.0097%" y="373" width="0.1942%" height="15" fill="rgb(231,84,39)" fg:x="541" fg:w="5"/><text x="21.2597%" y="383.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (4 samples, 0.16%)</title><rect x="21.0485%" y="357" width="0.1553%" height="15" fill="rgb(210,11,45)" fg:x="542" fg:w="4"/><text x="21.2985%" y="367.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (6 samples, 0.23%)</title><rect x="21.0097%" y="405" width="0.2330%" height="15" fill="rgb(224,54,52)" fg:x="541" fg:w="6"/><text x="21.2597%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::strongest_failure_ordering (1 samples, 0.04%)</title><rect x="21.2039%" y="389" width="0.0388%" height="15" fill="rgb(238,102,14)" fg:x="546" fg:w="1"/><text x="21.4539%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="21.2427%" y="405" width="0.0388%" height="15" fill="rgb(243,160,52)" fg:x="547" fg:w="1"/><text x="21.4927%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="21.2427%" y="389" width="0.0388%" height="15" fill="rgb(216,114,19)" fg:x="547" fg:w="1"/><text x="21.4927%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.04%)</title><rect x="21.2816%" y="405" width="0.0388%" height="15" fill="rgb(244,166,37)" fg:x="548" fg:w="1"/><text x="21.5316%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="21.2816%" y="389" width="0.0388%" height="15" fill="rgb(246,29,44)" fg:x="548" fg:w="1"/><text x="21.5316%" y="399.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.04%)</title><rect x="21.3204%" y="405" width="0.0388%" height="15" fill="rgb(215,56,53)" fg:x="549" fg:w="1"/><text x="21.5704%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_or (1 samples, 0.04%)</title><rect x="21.3204%" y="389" width="0.0388%" height="15" fill="rgb(217,60,2)" fg:x="549" fg:w="1"/><text x="21.5704%" y="399.50"></text></g><g><title>wgpu_test`async_executor::Executor::try_tick (80 samples, 3.11%)</title><rect x="18.2913%" y="453" width="3.1068%" height="15" fill="rgb(207,26,24)" fg:x="471" fg:w="80"/><text x="18.5413%" y="463.50">wgp..</text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (14 samples, 0.54%)</title><rect x="20.8544%" y="437" width="0.5437%" height="15" fill="rgb(252,210,15)" fg:x="537" fg:w="14"/><text x="21.1044%" y="447.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.50%)</title><rect x="20.8932%" y="421" width="0.5049%" height="15" fill="rgb(253,209,26)" fg:x="538" fg:w="13"/><text x="21.1432%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="21.3592%" y="405" width="0.0388%" height="15" fill="rgb(238,170,14)" fg:x="550" fg:w="1"/><text x="21.6092%" y="415.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="21.3592%" y="389" width="0.0388%" height="15" fill="rgb(216,178,15)" fg:x="550" fg:w="1"/><text x="21.6092%" y="399.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::inner (2 samples, 0.08%)</title><rect x="21.3981%" y="453" width="0.0777%" height="15" fill="rgb(250,197,2)" fg:x="551" fg:w="2"/><text x="21.6481%" y="463.50"></text></g><g><title>wgpu_test`once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.04%)</title><rect x="21.4369%" y="437" width="0.0388%" height="15" fill="rgb(212,70,42)" fg:x="552" fg:w="1"/><text x="21.6869%" y="447.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::try_tick (84 samples, 3.26%)</title><rect x="18.2524%" y="469" width="3.2621%" height="15" fill="rgb(227,213,9)" fg:x="470" fg:w="84"/><text x="18.5024%" y="479.50">wgp..</text></g><g><title>wgpu_test`once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.04%)</title><rect x="21.4757%" y="453" width="0.0388%" height="15" fill="rgb(245,99,25)" fg:x="553" fg:w="1"/><text x="21.7257%" y="463.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="21.5146%" y="469" width="0.0388%" height="15" fill="rgb(250,82,29)" fg:x="554" fg:w="1"/><text x="21.7646%" y="479.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="21.5146%" y="453" width="0.0388%" height="15" fill="rgb(241,226,54)" fg:x="554" fg:w="1"/><text x="21.7646%" y="463.50"></text></g><g><title>wgpu_test`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="21.5146%" y="437" width="0.0388%" height="15" fill="rgb(221,99,41)" fg:x="554" fg:w="1"/><text x="21.7646%" y="447.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="21.5146%" y="421" width="0.0388%" height="15" fill="rgb(213,90,21)" fg:x="554" fg:w="1"/><text x="21.7646%" y="431.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="21.5146%" y="405" width="0.0388%" height="15" fill="rgb(205,208,24)" fg:x="554" fg:w="1"/><text x="21.7646%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_task::task::Task&lt;alloc::vec::Vec&lt;()&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="21.5534%" y="469" width="0.0388%" height="15" fill="rgb(246,31,12)" fg:x="555" fg:w="1"/><text x="21.8034%" y="479.50"></text></g><g><title>wgpu_test`&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="21.5534%" y="453" width="0.0388%" height="15" fill="rgb(213,154,6)" fg:x="555" fg:w="1"/><text x="21.8034%" y="463.50"></text></g><g><title>wgpu_test`async_task::task::Task&lt;T&gt;::set_detached (1 samples, 0.04%)</title><rect x="21.5534%" y="437" width="0.0388%" height="15" fill="rgb(222,163,29)" fg:x="555" fg:w="1"/><text x="21.8034%" y="447.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::destroy (1 samples, 0.04%)</title><rect x="21.5534%" y="421" width="0.0388%" height="15" fill="rgb(227,201,8)" fg:x="555" fg:w="1"/><text x="21.8034%" y="431.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (1 samples, 0.04%)</title><rect x="21.5534%" y="405" width="0.0388%" height="15" fill="rgb(233,9,32)" fg:x="555" fg:w="1"/><text x="21.8034%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::LocalExecutor::schedule::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="21.5534%" y="389" width="0.0388%" height="15" fill="rgb(217,54,24)" fg:x="555" fg:w="1"/><text x="21.8034%" y="399.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="21.7476%" y="421" width="0.0388%" height="15" fill="rgb(235,192,0)" fg:x="560" fg:w="1"/><text x="21.9976%" y="431.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::CACHE::__getit (1 samples, 0.04%)</title><rect x="21.7864%" y="421" width="0.0388%" height="15" fill="rgb(235,45,9)" fg:x="561" fg:w="1"/><text x="22.0364%" y="431.50"></text></g><g><title>wgpu_test`std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="21.7864%" y="405" width="0.0388%" height="15" fill="rgb(246,42,40)" fg:x="561" fg:w="1"/><text x="22.0364%" y="415.50"></text></g><g><title>wgpu_test`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="21.7864%" y="389" width="0.0388%" height="15" fill="rgb(248,111,24)" fg:x="561" fg:w="1"/><text x="22.0364%" y="399.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="21.7864%" y="373" width="0.0388%" height="15" fill="rgb(249,65,22)" fg:x="561" fg:w="1"/><text x="22.0364%" y="383.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="22.0971%" y="357" width="0.0388%" height="15" fill="rgb(238,111,51)" fg:x="569" fg:w="1"/><text x="22.3471%" y="367.50"></text></g><g><title>wgpu_test`async_task::header::Header::register::_{{closure}} (1 samples, 0.04%)</title><rect x="22.2524%" y="325" width="0.0388%" height="15" fill="rgb(250,118,22)" fg:x="573" fg:w="1"/><text x="22.5024%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="22.3301%" y="277" width="0.0388%" height="15" fill="rgb(234,84,26)" fg:x="575" fg:w="1"/><text x="22.5801%" y="287.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="22.4078%" y="229" width="0.0388%" height="15" fill="rgb(243,172,12)" fg:x="577" fg:w="1"/><text x="22.6578%" y="239.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="22.4078%" y="213" width="0.0388%" height="15" fill="rgb(236,150,49)" fg:x="577" fg:w="1"/><text x="22.6578%" y="223.50"></text></g><g><title>wgpu_test`&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="22.3689%" y="261" width="0.1165%" height="15" fill="rgb(225,197,26)" fg:x="576" fg:w="3"/><text x="22.6189%" y="271.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="22.3689%" y="245" width="0.1165%" height="15" fill="rgb(214,17,42)" fg:x="576" fg:w="3"/><text x="22.6189%" y="255.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="22.4466%" y="229" width="0.0388%" height="15" fill="rgb(224,165,40)" fg:x="578" fg:w="1"/><text x="22.6966%" y="239.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (4 samples, 0.16%)</title><rect x="22.5243%" y="213" width="0.1553%" height="15" fill="rgb(246,100,4)" fg:x="580" fg:w="4"/><text x="22.7743%" y="223.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="22.6408%" y="197" width="0.0388%" height="15" fill="rgb(222,103,0)" fg:x="583" fg:w="1"/><text x="22.8908%" y="207.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::padding_needed_for (2 samples, 0.08%)</title><rect x="22.6796%" y="213" width="0.0777%" height="15" fill="rgb(227,189,26)" fg:x="584" fg:w="2"/><text x="22.9296%" y="223.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (11 samples, 0.43%)</title><rect x="22.4854%" y="229" width="0.4272%" height="15" fill="rgb(214,202,17)" fg:x="579" fg:w="11"/><text x="22.7354%" y="239.50"></text></g><g><title>wgpu_test`core::alloc::layout::size_align (4 samples, 0.16%)</title><rect x="22.7573%" y="213" width="0.1553%" height="15" fill="rgb(229,111,3)" fg:x="586" fg:w="4"/><text x="23.0073%" y="223.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (12 samples, 0.47%)</title><rect x="22.4854%" y="245" width="0.4660%" height="15" fill="rgb(229,172,15)" fg:x="579" fg:w="12"/><text x="22.7354%" y="255.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="22.9126%" y="229" width="0.0388%" height="15" fill="rgb(230,224,35)" fg:x="590" fg:w="1"/><text x="23.1626%" y="239.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.70%)</title><rect x="22.2913%" y="293" width="0.6990%" height="15" fill="rgb(251,141,6)" fg:x="574" fg:w="18"/><text x="22.5413%" y="303.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::clone_waker (16 samples, 0.62%)</title><rect x="22.3689%" y="277" width="0.6214%" height="15" fill="rgb(225,208,6)" fg:x="576" fg:w="16"/><text x="22.6189%" y="287.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (13 samples, 0.50%)</title><rect x="22.4854%" y="261" width="0.5049%" height="15" fill="rgb(246,181,16)" fg:x="579" fg:w="13"/><text x="22.7354%" y="271.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::set_ptr_value (1 samples, 0.04%)</title><rect x="22.9515%" y="245" width="0.0388%" height="15" fill="rgb(227,129,36)" fg:x="591" fg:w="1"/><text x="23.2015%" y="255.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="22.9903%" y="277" width="0.0388%" height="15" fill="rgb(248,117,24)" fg:x="592" fg:w="1"/><text x="23.2403%" y="287.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_ptr (1 samples, 0.04%)</title><rect x="23.1845%" y="213" width="0.0388%" height="15" fill="rgb(214,185,35)" fg:x="597" fg:w="1"/><text x="23.4345%" y="223.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (3 samples, 0.12%)</title><rect x="23.2233%" y="213" width="0.1165%" height="15" fill="rgb(236,150,34)" fg:x="598" fg:w="3"/><text x="23.4733%" y="223.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (2 samples, 0.08%)</title><rect x="23.2621%" y="197" width="0.0777%" height="15" fill="rgb(243,228,27)" fg:x="599" fg:w="2"/><text x="23.5121%" y="207.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (2 samples, 0.08%)</title><rect x="23.2621%" y="181" width="0.0777%" height="15" fill="rgb(245,77,44)" fg:x="599" fg:w="2"/><text x="23.5121%" y="191.50"></text></g><g><title>wgpu_test`core::alloc::layout::size_align (2 samples, 0.08%)</title><rect x="23.2621%" y="165" width="0.0777%" height="15" fill="rgb(235,214,42)" fg:x="599" fg:w="2"/><text x="23.5121%" y="175.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (8 samples, 0.31%)</title><rect x="23.0680%" y="229" width="0.3107%" height="15" fill="rgb(221,74,3)" fg:x="594" fg:w="8"/><text x="23.3180%" y="239.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::set_ptr_value (1 samples, 0.04%)</title><rect x="23.3398%" y="213" width="0.0388%" height="15" fill="rgb(206,121,29)" fg:x="601" fg:w="1"/><text x="23.5898%" y="223.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (1 samples, 0.04%)</title><rect x="23.3786%" y="229" width="0.0388%" height="15" fill="rgb(249,131,53)" fg:x="602" fg:w="1"/><text x="23.6286%" y="239.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (31 samples, 1.20%)</title><rect x="22.2913%" y="325" width="1.2039%" height="15" fill="rgb(236,170,29)" fg:x="574" fg:w="31"/><text x="22.5413%" y="335.50"></text></g><g><title>wgpu_test`async_task::header::Header::register::_{{closure}} (31 samples, 1.20%)</title><rect x="22.2913%" y="309" width="1.2039%" height="15" fill="rgb(247,96,15)" fg:x="574" fg:w="31"/><text x="22.5413%" y="319.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (13 samples, 0.50%)</title><rect x="22.9903%" y="293" width="0.5049%" height="15" fill="rgb(211,210,7)" fg:x="592" fg:w="13"/><text x="23.2403%" y="303.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (12 samples, 0.47%)</title><rect x="23.0291%" y="277" width="0.4660%" height="15" fill="rgb(240,88,50)" fg:x="593" fg:w="12"/><text x="23.2791%" y="287.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (12 samples, 0.47%)</title><rect x="23.0291%" y="261" width="0.4660%" height="15" fill="rgb(209,229,26)" fg:x="593" fg:w="12"/><text x="23.2791%" y="271.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::drop_waker (12 samples, 0.47%)</title><rect x="23.0291%" y="245" width="0.4660%" height="15" fill="rgb(210,68,23)" fg:x="593" fg:w="12"/><text x="23.2791%" y="255.50"></text></g><g><title>wgpu_test`core::mem::drop (2 samples, 0.08%)</title><rect x="23.4175%" y="229" width="0.0777%" height="15" fill="rgb(229,180,13)" fg:x="603" fg:w="2"/><text x="23.6675%" y="239.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (2 samples, 0.08%)</title><rect x="23.4175%" y="213" width="0.0777%" height="15" fill="rgb(236,53,44)" fg:x="603" fg:w="2"/><text x="23.6675%" y="223.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="23.4175%" y="197" width="0.0777%" height="15" fill="rgb(244,214,29)" fg:x="603" fg:w="2"/><text x="23.6675%" y="207.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="23.4563%" y="181" width="0.0388%" height="15" fill="rgb(220,75,29)" fg:x="604" fg:w="1"/><text x="23.7063%" y="191.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.35%)</title><rect x="23.4951%" y="325" width="0.3495%" height="15" fill="rgb(214,183,37)" fg:x="605" fg:w="9"/><text x="23.7451%" y="335.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.27%)</title><rect x="23.5728%" y="309" width="0.2718%" height="15" fill="rgb(239,117,29)" fg:x="607" fg:w="7"/><text x="23.8228%" y="319.50"></text></g><g><title>wgpu_test`async_task::header::Header::register (46 samples, 1.79%)</title><rect x="22.2136%" y="341" width="1.7864%" height="15" fill="rgb(237,171,35)" fg:x="572" fg:w="46"/><text x="22.4636%" y="351.50">w..</text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_or (4 samples, 0.16%)</title><rect x="23.8447%" y="325" width="0.1553%" height="15" fill="rgb(229,178,53)" fg:x="614" fg:w="4"/><text x="24.0947%" y="335.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_or (2 samples, 0.08%)</title><rect x="23.9223%" y="309" width="0.0777%" height="15" fill="rgb(210,102,19)" fg:x="616" fg:w="2"/><text x="24.1723%" y="319.50"></text></g><g><title>wgpu_test`&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 2.06%)</title><rect x="22.0971%" y="373" width="2.0583%" height="15" fill="rgb(235,127,22)" fg:x="569" fg:w="53"/><text x="22.3471%" y="383.50">w..</text></g><g><title>wgpu_test`async_task::task::Task&lt;T&gt;::poll_task (52 samples, 2.02%)</title><rect x="22.1359%" y="357" width="2.0194%" height="15" fill="rgb(244,31,31)" fg:x="570" fg:w="52"/><text x="22.3859%" y="367.50">w..</text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (4 samples, 0.16%)</title><rect x="24.0000%" y="341" width="0.1553%" height="15" fill="rgb(231,43,21)" fg:x="618" fg:w="4"/><text x="24.2500%" y="351.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (3 samples, 0.12%)</title><rect x="24.0388%" y="325" width="0.1165%" height="15" fill="rgb(217,131,35)" fg:x="619" fg:w="3"/><text x="24.2888%" y="335.50"></text></g><g><title>wgpu_test`&lt;&amp;mut F as core::future::future::Future&gt;::poll (58 samples, 2.25%)</title><rect x="22.0194%" y="389" width="2.2524%" height="15" fill="rgb(221,149,4)" fg:x="567" fg:w="58"/><text x="22.2694%" y="399.50">w..</text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.12%)</title><rect x="24.1553%" y="373" width="0.1165%" height="15" fill="rgb(232,170,28)" fg:x="622" fg:w="3"/><text x="24.4053%" y="383.50"></text></g><g><title>wgpu_test`&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (59 samples, 2.29%)</title><rect x="22.0194%" y="405" width="2.2913%" height="15" fill="rgb(238,56,10)" fg:x="567" fg:w="59"/><text x="22.2694%" y="415.50">w..</text></g><g><title>wgpu_test`futures_lite::future::_::_&lt;impl futures_lite::future::PollOnce&lt;F&gt;&gt;::project (1 samples, 0.04%)</title><rect x="24.2718%" y="389" width="0.0388%" height="15" fill="rgb(235,196,14)" fg:x="625" fg:w="1"/><text x="24.5218%" y="399.50"></text></g><g><title>wgpu_test`core::mem::replace (1 samples, 0.04%)</title><rect x="24.4272%" y="341" width="0.0388%" height="15" fill="rgb(216,45,48)" fg:x="629" fg:w="1"/><text x="24.6772%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::read (1 samples, 0.04%)</title><rect x="24.4272%" y="325" width="0.0388%" height="15" fill="rgb(238,213,17)" fg:x="629" fg:w="1"/><text x="24.6772%" y="335.50"></text></g><g><title>wgpu_test`core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.19%)</title><rect x="24.3107%" y="405" width="0.1942%" height="15" fill="rgb(212,13,2)" fg:x="626" fg:w="5"/><text x="24.5607%" y="415.50"></text></g><g><title>wgpu_test`core::cell::BorrowRefMut::new (3 samples, 0.12%)</title><rect x="24.3883%" y="389" width="0.1165%" height="15" fill="rgb(240,114,20)" fg:x="628" fg:w="3"/><text x="24.6383%" y="399.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::set (3 samples, 0.12%)</title><rect x="24.3883%" y="373" width="0.1165%" height="15" fill="rgb(228,41,40)" fg:x="628" fg:w="3"/><text x="24.6383%" y="383.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::replace (3 samples, 0.12%)</title><rect x="24.3883%" y="357" width="0.1165%" height="15" fill="rgb(244,132,35)" fg:x="628" fg:w="3"/><text x="24.6383%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::read (1 samples, 0.04%)</title><rect x="24.4660%" y="341" width="0.0388%" height="15" fill="rgb(253,189,4)" fg:x="630" fg:w="1"/><text x="24.7160%" y="351.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="24.5825%" y="357" width="0.0388%" height="15" fill="rgb(224,37,19)" fg:x="633" fg:w="1"/><text x="24.8325%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (5 samples, 0.19%)</title><rect x="24.5049%" y="405" width="0.1942%" height="15" fill="rgb(235,223,18)" fg:x="631" fg:w="5"/><text x="24.7549%" y="415.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (5 samples, 0.19%)</title><rect x="24.5049%" y="389" width="0.1942%" height="15" fill="rgb(235,163,25)" fg:x="631" fg:w="5"/><text x="24.7549%" y="399.50"></text></g><g><title>wgpu_test`&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (5 samples, 0.19%)</title><rect x="24.5049%" y="373" width="0.1942%" height="15" fill="rgb(217,145,28)" fg:x="631" fg:w="5"/><text x="24.7549%" y="383.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::set (2 samples, 0.08%)</title><rect x="24.6214%" y="357" width="0.0777%" height="15" fill="rgb(223,223,32)" fg:x="634" fg:w="2"/><text x="24.8714%" y="367.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::replace (2 samples, 0.08%)</title><rect x="24.6214%" y="341" width="0.0777%" height="15" fill="rgb(227,189,39)" fg:x="634" fg:w="2"/><text x="24.8714%" y="351.50"></text></g><g><title>wgpu_test`core::mem::replace (2 samples, 0.08%)</title><rect x="24.6214%" y="325" width="0.0777%" height="15" fill="rgb(248,10,22)" fg:x="634" fg:w="2"/><text x="24.8714%" y="335.50"></text></g><g><title>wgpu_test`core::ptr::read (2 samples, 0.08%)</title><rect x="24.6214%" y="309" width="0.0777%" height="15" fill="rgb(248,46,39)" fg:x="634" fg:w="2"/><text x="24.8714%" y="319.50"></text></g><g><title>wgpu_test`std::sys::unix::condvar::Condvar::wait (2 samples, 0.08%)</title><rect x="24.6990%" y="341" width="0.0777%" height="15" fill="rgb(248,113,48)" fg:x="636" fg:w="2"/><text x="24.9490%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.08%)</title><rect x="24.6990%" y="325" width="0.0777%" height="15" fill="rgb(245,16,25)" fg:x="636" fg:w="2"/><text x="24.9490%" y="335.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on (83 samples, 3.22%)</title><rect x="21.5922%" y="469" width="3.2233%" height="15" fill="rgb(249,152,16)" fg:x="556" fg:w="83"/><text x="21.8422%" y="479.50">wgp..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (81 samples, 3.15%)</title><rect x="21.6699%" y="453" width="3.1456%" height="15" fill="rgb(250,16,1)" fg:x="558" fg:w="81"/><text x="21.9199%" y="463.50">wgp..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::try_with (80 samples, 3.11%)</title><rect x="21.7087%" y="437" width="3.1068%" height="15" fill="rgb(249,138,3)" fg:x="559" fg:w="80"/><text x="21.9587%" y="447.50">wgp..</text></g><g><title>wgpu_test`futures_lite::future::block_on::_{{closure}} (77 samples, 2.99%)</title><rect x="21.8252%" y="421" width="2.9903%" height="15" fill="rgb(227,71,41)" fg:x="562" fg:w="77"/><text x="22.0752%" y="431.50">wgp..</text></g><g><title>wgpu_test`parking::Parker::park (3 samples, 0.12%)</title><rect x="24.6990%" y="405" width="0.1165%" height="15" fill="rgb(209,184,23)" fg:x="636" fg:w="3"/><text x="24.9490%" y="415.50"></text></g><g><title>wgpu_test`parking::Inner::park (3 samples, 0.12%)</title><rect x="24.6990%" y="389" width="0.1165%" height="15" fill="rgb(223,215,31)" fg:x="636" fg:w="3"/><text x="24.9490%" y="399.50"></text></g><g><title>wgpu_test`std::sync::condvar::Condvar::wait (3 samples, 0.12%)</title><rect x="24.6990%" y="373" width="0.1165%" height="15" fill="rgb(210,146,28)" fg:x="636" fg:w="3"/><text x="24.9490%" y="383.50"></text></g><g><title>wgpu_test`std::sys_common::condvar::Condvar::wait (3 samples, 0.12%)</title><rect x="24.6990%" y="357" width="0.1165%" height="15" fill="rgb(209,183,41)" fg:x="636" fg:w="3"/><text x="24.9490%" y="367.50"></text></g><g><title>wgpu_test`std::sys_common::condvar::check::SameMutexCheck::verify (1 samples, 0.04%)</title><rect x="24.7767%" y="341" width="0.0388%" height="15" fill="rgb(209,224,45)" fg:x="638" fg:w="1"/><text x="25.0267%" y="351.50"></text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::scope (545 samples, 21.17%)</title><rect x="3.6893%" y="533" width="21.1650%" height="15" fill="rgb(224,209,51)" fg:x="95" fg:w="545"/><text x="3.9393%" y="543.50">wgpu_test`bevy_tasks::task_pool::..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (545 samples, 21.17%)</title><rect x="3.6893%" y="517" width="21.1650%" height="15" fill="rgb(223,17,39)" fg:x="95" fg:w="545"/><text x="3.9393%" y="527.50">wgpu_test`std::thread::local::Loc..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::try_with (544 samples, 21.13%)</title><rect x="3.7282%" y="501" width="21.1262%" height="15" fill="rgb(234,204,37)" fg:x="96" fg:w="544"/><text x="3.9782%" y="511.50">wgpu_test`std::thread::local::Loc..</text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::scope::_{{closure}} (540 samples, 20.97%)</title><rect x="3.8835%" y="485" width="20.9709%" height="15" fill="rgb(236,120,5)" fg:x="100" fg:w="540"/><text x="4.1335%" y="495.50">wgpu_test`bevy_tasks::task_pool::..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="24.8155%" y="469" width="0.0388%" height="15" fill="rgb(248,97,27)" fg:x="639" fg:w="1"/><text x="25.0655%" y="479.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;bevy_tasks::usages::ComputeTaskPool&gt; (1 samples, 0.04%)</title><rect x="24.8544%" y="533" width="0.0388%" height="15" fill="rgb(240,66,17)" fg:x="640" fg:w="1"/><text x="25.1044%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;bevy_tasks::task_pool::TaskPool&gt; (1 samples, 0.04%)</title><rect x="24.8544%" y="517" width="0.0388%" height="15" fill="rgb(210,79,3)" fg:x="640" fg:w="1"/><text x="25.1044%" y="527.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::Executor&gt;&gt; (1 samples, 0.04%)</title><rect x="24.8544%" y="501" width="0.0388%" height="15" fill="rgb(214,176,27)" fg:x="640" fg:w="1"/><text x="25.1044%" y="511.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="24.8544%" y="485" width="0.0388%" height="15" fill="rgb(235,185,3)" fg:x="640" fg:w="1"/><text x="25.1044%" y="495.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (558 samples, 21.67%)</title><rect x="3.3010%" y="549" width="21.6699%" height="15" fill="rgb(227,24,12)" fg:x="85" fg:w="558"/><text x="3.5510%" y="559.50">wgpu_test`&lt;bevy_ecs::schedule::exe..</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.08%)</title><rect x="24.8932%" y="533" width="0.0777%" height="15" fill="rgb(252,169,48)" fg:x="641" fg:w="2"/><text x="25.1432%" y="543.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run::should_run (1 samples, 0.04%)</title><rect x="24.9709%" y="549" width="0.0388%" height="15" fill="rgb(212,65,1)" fg:x="643" fg:w="1"/><text x="25.2209%" y="559.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::system_container::ExclusiveSystemContainer as bevy_ecs::schedule::system_container::SystemContainer&gt;::run_criteria (1 samples, 0.04%)</title><rect x="24.9709%" y="533" width="0.0388%" height="15" fill="rgb(242,39,24)" fg:x="643" fg:w="1"/><text x="25.2209%" y="543.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::system_container::ExclusiveSystemContainer as bevy_ecs::schedule::system_container::SystemContainer&gt;::run_criteria (1 samples, 0.04%)</title><rect x="25.0097%" y="549" width="0.0388%" height="15" fill="rgb(249,32,23)" fg:x="644" fg:w="1"/><text x="25.2597%" y="559.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::table::Column::get_ticks_mut_ptr_unchecked (1 samples, 0.04%)</title><rect x="25.0485%" y="437" width="0.0388%" height="15" fill="rgb(251,195,23)" fg:x="645" fg:w="1"/><text x="25.2985%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="25.0485%" y="421" width="0.0388%" height="15" fill="rgb(236,174,8)" fg:x="645" fg:w="1"/><text x="25.2985%" y="431.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="25.0485%" y="405" width="0.0388%" height="15" fill="rgb(220,197,8)" fg:x="645" fg:w="1"/><text x="25.2985%" y="415.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (2 samples, 0.08%)</title><rect x="25.0485%" y="453" width="0.0777%" height="15" fill="rgb(240,108,37)" fg:x="645" fg:w="2"/><text x="25.2985%" y="463.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="25.0874%" y="437" width="0.0388%" height="15" fill="rgb(232,176,24)" fg:x="646" fg:w="1"/><text x="25.3374%" y="447.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="25.0874%" y="421" width="0.0388%" height="15" fill="rgb(243,35,29)" fg:x="646" fg:w="1"/><text x="25.3374%" y="431.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="25.0874%" y="405" width="0.0388%" height="15" fill="rgb(210,37,18)" fg:x="646" fg:w="1"/><text x="25.3374%" y="415.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get::_{{closure}} (1 samples, 0.04%)</title><rect x="25.0874%" y="389" width="0.0388%" height="15" fill="rgb(224,184,40)" fg:x="646" fg:w="1"/><text x="25.3374%" y="399.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="25.0874%" y="373" width="0.0388%" height="15" fill="rgb(236,39,29)" fg:x="646" fg:w="1"/><text x="25.3374%" y="383.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="25.0874%" y="357" width="0.0388%" height="15" fill="rgb(232,48,39)" fg:x="646" fg:w="1"/><text x="25.3374%" y="367.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="25.0874%" y="341" width="0.0388%" height="15" fill="rgb(236,34,42)" fg:x="646" fg:w="1"/><text x="25.3374%" y="351.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="25.0874%" y="325" width="0.0388%" height="15" fill="rgb(243,106,37)" fg:x="646" fg:w="1"/><text x="25.3374%" y="335.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (3 samples, 0.12%)</title><rect x="25.0485%" y="549" width="0.1165%" height="15" fill="rgb(218,96,6)" fg:x="645" fg:w="3"/><text x="25.2985%" y="559.50"></text></g><g><title>wgpu_test`bevy_ecs::system::system::System::run (3 samples, 0.12%)</title><rect x="25.0485%" y="533" width="0.1165%" height="15" fill="rgb(235,130,12)" fg:x="645" fg:w="3"/><text x="25.2985%" y="543.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.12%)</title><rect x="25.0485%" y="517" width="0.1165%" height="15" fill="rgb(231,95,0)" fg:x="645" fg:w="3"/><text x="25.2985%" y="527.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (3 samples, 0.12%)</title><rect x="25.0485%" y="501" width="0.1165%" height="15" fill="rgb(228,12,23)" fg:x="645" fg:w="3"/><text x="25.2985%" y="511.50"></text></g><g><title>wgpu_test`&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (3 samples, 0.12%)</title><rect x="25.0485%" y="485" width="0.1165%" height="15" fill="rgb(216,12,1)" fg:x="645" fg:w="3"/><text x="25.2985%" y="495.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (3 samples, 0.12%)</title><rect x="25.0485%" y="469" width="0.1165%" height="15" fill="rgb(219,59,3)" fg:x="645" fg:w="3"/><text x="25.2985%" y="479.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="25.1262%" y="453" width="0.0388%" height="15" fill="rgb(215,208,46)" fg:x="647" fg:w="1"/><text x="25.3762%" y="463.50"></text></g><g><title>wgpu_test`bevy_ecs::component::Components::get_resource_id (1 samples, 0.04%)</title><rect x="25.1650%" y="485" width="0.0388%" height="15" fill="rgb(254,224,29)" fg:x="648" fg:w="1"/><text x="25.4150%" y="495.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="25.1650%" y="469" width="0.0388%" height="15" fill="rgb(232,14,29)" fg:x="648" fg:w="1"/><text x="25.4150%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="25.1650%" y="453" width="0.0388%" height="15" fill="rgb(208,45,52)" fg:x="648" fg:w="1"/><text x="25.4150%" y="463.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="25.1650%" y="437" width="0.0388%" height="15" fill="rgb(234,191,28)" fg:x="648" fg:w="1"/><text x="25.4150%" y="447.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="25.1650%" y="421" width="0.0388%" height="15" fill="rgb(244,67,43)" fg:x="648" fg:w="1"/><text x="25.4150%" y="431.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="25.1650%" y="405" width="0.0388%" height="15" fill="rgb(236,189,24)" fg:x="648" fg:w="1"/><text x="25.4150%" y="415.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="25.1650%" y="389" width="0.0388%" height="15" fill="rgb(239,214,33)" fg:x="648" fg:w="1"/><text x="25.4150%" y="399.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="25.1650%" y="373" width="0.0388%" height="15" fill="rgb(226,176,41)" fg:x="648" fg:w="1"/><text x="25.4150%" y="383.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="25.1650%" y="357" width="0.0388%" height="15" fill="rgb(248,47,8)" fg:x="648" fg:w="1"/><text x="25.4150%" y="367.50"></text></g><g><title>wgpu_test`hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="25.1650%" y="341" width="0.0388%" height="15" fill="rgb(218,81,44)" fg:x="648" fg:w="1"/><text x="25.4150%" y="351.50"></text></g><g><title>wgpu_test`core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="25.1650%" y="325" width="0.0388%" height="15" fill="rgb(213,98,6)" fg:x="648" fg:w="1"/><text x="25.4150%" y="335.50"></text></g><g><title>wgpu_test`core::cmp::min_by (1 samples, 0.04%)</title><rect x="25.1650%" y="309" width="0.0388%" height="15" fill="rgb(222,85,22)" fg:x="648" fg:w="1"/><text x="25.4150%" y="319.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="25.2039%" y="469" width="0.0388%" height="15" fill="rgb(239,46,39)" fg:x="649" fg:w="1"/><text x="25.4539%" y="479.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="25.2039%" y="453" width="0.0388%" height="15" fill="rgb(237,12,29)" fg:x="649" fg:w="1"/><text x="25.4539%" y="463.50"></text></g><g><title>wgpu_test`bevy_scene::scene_spawner::SceneSpawner::despawn_queued_scenes (1 samples, 0.04%)</title><rect x="25.2427%" y="469" width="0.0388%" height="15" fill="rgb(214,77,8)" fg:x="650" fg:w="1"/><text x="25.4927%" y="479.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bevy_asset::handle::Handle&lt;bevy_scene::dynamic_scene::DynamicScene&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="25.2427%" y="453" width="0.0388%" height="15" fill="rgb(217,168,37)" fg:x="650" fg:w="1"/><text x="25.4927%" y="463.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_asset::handle::Handle&lt;bevy_scene::dynamic_scene::DynamicScene&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="25.2427%" y="437" width="0.0388%" height="15" fill="rgb(221,217,23)" fg:x="650" fg:w="1"/><text x="25.4927%" y="447.50"></text></g><g><title>wgpu_test`bevy_scene::scene_spawner::SceneSpawner::spawn_queued_scenes (1 samples, 0.04%)</title><rect x="25.2816%" y="469" width="0.0388%" height="15" fill="rgb(243,229,36)" fg:x="651" fg:w="1"/><text x="25.5316%" y="479.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (5 samples, 0.19%)</title><rect x="25.1650%" y="549" width="0.1942%" height="15" fill="rgb(251,163,40)" fg:x="648" fg:w="5"/><text x="25.4150%" y="559.50"></text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (5 samples, 0.19%)</title><rect x="25.1650%" y="533" width="0.1942%" height="15" fill="rgb(237,222,12)" fg:x="648" fg:w="5"/><text x="25.4150%" y="543.50"></text></g><g><title>wgpu_test`bevy_scene::scene_spawner::scene_spawner_system (5 samples, 0.19%)</title><rect x="25.1650%" y="517" width="0.1942%" height="15" fill="rgb(248,132,6)" fg:x="648" fg:w="5"/><text x="25.4150%" y="527.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::resource_scope (5 samples, 0.19%)</title><rect x="25.1650%" y="501" width="0.1942%" height="15" fill="rgb(227,167,50)" fg:x="648" fg:w="5"/><text x="25.4150%" y="511.50"></text></g><g><title>wgpu_test`bevy_scene::scene_spawner::scene_spawner_system::_{{closure}} (4 samples, 0.16%)</title><rect x="25.2039%" y="485" width="0.1553%" height="15" fill="rgb(242,84,37)" fg:x="649" fg:w="4"/><text x="25.4539%" y="495.50"></text></g><g><title>wgpu_test`bevy_scene::scene_spawner::SceneSpawner::update_spawned_scenes (1 samples, 0.04%)</title><rect x="25.3204%" y="469" width="0.0388%" height="15" fill="rgb(212,4,50)" fg:x="652" fg:w="1"/><text x="25.5704%" y="479.50"></text></g><g><title>wgpu_test`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.04%)</title><rect x="25.3204%" y="453" width="0.0388%" height="15" fill="rgb(230,228,32)" fg:x="652" fg:w="1"/><text x="25.5704%" y="463.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="25.3204%" y="437" width="0.0388%" height="15" fill="rgb(248,217,23)" fg:x="652" fg:w="1"/><text x="25.5704%" y="447.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="25.3204%" y="421" width="0.0388%" height="15" fill="rgb(238,197,32)" fg:x="652" fg:w="1"/><text x="25.5704%" y="431.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetype::table_id (1 samples, 0.04%)</title><rect x="25.3592%" y="485" width="0.0388%" height="15" fill="rgb(236,106,1)" fg:x="653" fg:w="1"/><text x="25.6092%" y="495.50"></text></g><g><title>wgpu_test`&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParamState&gt;::apply (2 samples, 0.08%)</title><rect x="25.3592%" y="533" width="0.0777%" height="15" fill="rgb(219,228,13)" fg:x="653" fg:w="2"/><text x="25.6092%" y="543.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (2 samples, 0.08%)</title><rect x="25.3592%" y="517" width="0.0777%" height="15" fill="rgb(238,30,35)" fg:x="653" fg:w="2"/><text x="25.6092%" y="527.50"></text></g><g><title>wgpu_test`bevy_ecs::system::commands::command_queue::CommandQueue::apply (2 samples, 0.08%)</title><rect x="25.3592%" y="501" width="0.0777%" height="15" fill="rgb(236,70,23)" fg:x="653" fg:w="2"/><text x="25.6092%" y="511.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::flush (1 samples, 0.04%)</title><rect x="25.3981%" y="485" width="0.0388%" height="15" fill="rgb(249,104,48)" fg:x="654" fg:w="1"/><text x="25.6481%" y="495.50"></text></g><g><title>wgpu_test`bevy_ecs::entity::Entities::flush (1 samples, 0.04%)</title><rect x="25.3981%" y="469" width="0.0388%" height="15" fill="rgb(254,117,50)" fg:x="654" fg:w="1"/><text x="25.6481%" y="479.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.04%)</title><rect x="25.3981%" y="453" width="0.0388%" height="15" fill="rgb(223,152,4)" fg:x="654" fg:w="1"/><text x="25.6481%" y="463.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="25.3981%" y="437" width="0.0388%" height="15" fill="rgb(245,6,2)" fg:x="654" fg:w="1"/><text x="25.6481%" y="447.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (3 samples, 0.12%)</title><rect x="25.3592%" y="549" width="0.1165%" height="15" fill="rgb(249,150,24)" fg:x="653" fg:w="3"/><text x="25.6092%" y="559.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.04%)</title><rect x="25.4369%" y="533" width="0.0388%" height="15" fill="rgb(228,185,42)" fg:x="655" fg:w="1"/><text x="25.6869%" y="543.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="25.4757%" y="549" width="0.0777%" height="15" fill="rgb(226,39,33)" fg:x="656" fg:w="2"/><text x="25.7257%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="25.5146%" y="533" width="0.0388%" height="15" fill="rgb(221,166,19)" fg:x="657" fg:w="1"/><text x="25.7646%" y="543.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::run_criteria::RunCriteriaContainer::update_archetypes (3 samples, 0.12%)</title><rect x="25.5534%" y="549" width="0.1165%" height="15" fill="rgb(209,109,2)" fg:x="658" fg:w="3"/><text x="25.8034%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="25.5922%" y="533" width="0.0777%" height="15" fill="rgb(252,216,26)" fg:x="659" fg:w="2"/><text x="25.8422%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="25.6311%" y="517" width="0.0388%" height="15" fill="rgb(227,173,36)" fg:x="660" fg:w="1"/><text x="25.8811%" y="527.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="25.6699%" y="469" width="0.0388%" height="15" fill="rgb(209,90,7)" fg:x="661" fg:w="1"/><text x="25.9199%" y="479.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="25.6699%" y="453" width="0.0388%" height="15" fill="rgb(250,194,11)" fg:x="661" fg:w="1"/><text x="25.9199%" y="463.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="25.6699%" y="437" width="0.0388%" height="15" fill="rgb(220,72,50)" fg:x="661" fg:w="1"/><text x="25.9199%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="25.6699%" y="421" width="0.0388%" height="15" fill="rgb(222,106,48)" fg:x="661" fg:w="1"/><text x="25.9199%" y="431.50"></text></g><g><title>wgpu_test`&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.08%)</title><rect x="25.6699%" y="485" width="0.0777%" height="15" fill="rgb(216,220,45)" fg:x="661" fg:w="2"/><text x="25.9199%" y="495.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="25.7087%" y="469" width="0.0388%" height="15" fill="rgb(234,112,18)" fg:x="662" fg:w="1"/><text x="25.9587%" y="479.50"></text></g><g><title>wgpu_test`bevy_ecs::system::system::System::run (3 samples, 0.12%)</title><rect x="25.6699%" y="549" width="0.1165%" height="15" fill="rgb(206,179,9)" fg:x="661" fg:w="3"/><text x="25.9199%" y="559.50"></text></g><g><title>wgpu_test`&lt;bevy_core::time::fixed_timestep::FixedTimestep as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.12%)</title><rect x="25.6699%" y="533" width="0.1165%" height="15" fill="rgb(215,115,40)" fg:x="661" fg:w="3"/><text x="25.9199%" y="543.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.12%)</title><rect x="25.6699%" y="517" width="0.1165%" height="15" fill="rgb(222,69,34)" fg:x="661" fg:w="3"/><text x="25.9199%" y="527.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (3 samples, 0.12%)</title><rect x="25.6699%" y="501" width="0.1165%" height="15" fill="rgb(209,161,10)" fg:x="661" fg:w="3"/><text x="25.9199%" y="511.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (1 samples, 0.04%)</title><rect x="25.7476%" y="485" width="0.0388%" height="15" fill="rgb(217,6,38)" fg:x="663" fg:w="1"/><text x="25.9976%" y="495.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="25.7476%" y="469" width="0.0388%" height="15" fill="rgb(229,229,48)" fg:x="663" fg:w="1"/><text x="25.9976%" y="479.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="25.7864%" y="549" width="0.0388%" height="15" fill="rgb(225,21,28)" fg:x="664" fg:w="1"/><text x="26.0364%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="25.7864%" y="533" width="0.0388%" height="15" fill="rgb(206,33,13)" fg:x="664" fg:w="1"/><text x="26.0364%" y="543.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.04%)</title><rect x="25.8252%" y="549" width="0.0388%" height="15" fill="rgb(242,178,17)" fg:x="665" fg:w="1"/><text x="26.0752%" y="559.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (587 samples, 22.80%)</title><rect x="3.1068%" y="565" width="22.7961%" height="15" fill="rgb(220,162,5)" fg:x="80" fg:w="587"/><text x="3.3568%" y="575.50">wgpu_test`&lt;bevy_ecs::schedule::stage..</text></g><g><title>wgpu_test`core::sync::atomic::AtomicU32::get_mut (1 samples, 0.04%)</title><rect x="25.8641%" y="549" width="0.0388%" height="15" fill="rgb(210,33,43)" fg:x="666" fg:w="1"/><text x="26.1141%" y="559.50"></text></g><g><title>wgpu_test`&lt;bevy_app::CoreStage as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="25.9029%" y="453" width="0.0388%" height="15" fill="rgb(216,116,54)" fg:x="667" fg:w="1"/><text x="26.1529%" y="463.50"></text></g><g><title>wgpu_test`&lt;&amp;mut H as core::hash::Hasher&gt;::write_isize (1 samples, 0.04%)</title><rect x="25.9029%" y="437" width="0.0388%" height="15" fill="rgb(249,92,24)" fg:x="667" fg:w="1"/><text x="26.1529%" y="447.50"></text></g><g><title>wgpu_test`&lt;T as bevy_utils::label::DynHash&gt;::dyn_hash (2 samples, 0.08%)</title><rect x="25.9029%" y="469" width="0.0777%" height="15" fill="rgb(231,189,14)" fg:x="667" fg:w="2"/><text x="26.1529%" y="479.50"></text></g><g><title>wgpu_test`&lt;core::any::TypeId as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="25.9417%" y="453" width="0.0388%" height="15" fill="rgb(230,8,41)" fg:x="668" fg:w="1"/><text x="26.1917%" y="463.50"></text></g><g><title>wgpu_test`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.04%)</title><rect x="25.9417%" y="437" width="0.0388%" height="15" fill="rgb(249,7,27)" fg:x="668" fg:w="1"/><text x="26.1917%" y="447.50"></text></g><g><title>wgpu_test`&lt;&amp;mut H as core::hash::Hasher&gt;::write_u64 (1 samples, 0.04%)</title><rect x="25.9417%" y="421" width="0.0388%" height="15" fill="rgb(232,86,5)" fg:x="668" fg:w="1"/><text x="26.1917%" y="431.50"></text></g><g><title>wgpu_test`hashbrown::map::make_hash (3 samples, 0.12%)</title><rect x="25.9029%" y="517" width="0.1165%" height="15" fill="rgb(224,175,18)" fg:x="667" fg:w="3"/><text x="26.1529%" y="527.50"></text></g><g><title>wgpu_test`&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.12%)</title><rect x="25.9029%" y="501" width="0.1165%" height="15" fill="rgb(220,129,12)" fg:x="667" fg:w="3"/><text x="26.1529%" y="511.50"></text></g><g><title>wgpu_test`&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (3 samples, 0.12%)</title><rect x="25.9029%" y="485" width="0.1165%" height="15" fill="rgb(210,19,36)" fg:x="667" fg:w="3"/><text x="26.1529%" y="495.50"></text></g><g><title>wgpu_test`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.04%)</title><rect x="25.9806%" y="469" width="0.0388%" height="15" fill="rgb(219,96,14)" fg:x="669" fg:w="1"/><text x="26.2306%" y="479.50"></text></g><g><title>wgpu_test`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="26.0194%" y="501" width="0.0388%" height="15" fill="rgb(249,106,1)" fg:x="670" fg:w="1"/><text x="26.2694%" y="511.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.0971%" y="485" width="0.0388%" height="15" fill="rgb(249,155,20)" fg:x="672" fg:w="1"/><text x="26.3471%" y="495.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.0971%" y="469" width="0.0388%" height="15" fill="rgb(244,168,9)" fg:x="672" fg:w="1"/><text x="26.3471%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.04%)</title><rect x="26.1359%" y="485" width="0.0388%" height="15" fill="rgb(216,23,50)" fg:x="673" fg:w="1"/><text x="26.3859%" y="495.50"></text></g><g><title>wgpu_test`&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="26.1359%" y="469" width="0.0388%" height="15" fill="rgb(224,219,20)" fg:x="673" fg:w="1"/><text x="26.3859%" y="479.50"></text></g><g><title>wgpu_test`&lt;dyn bevy_ecs::schedule::label::StageLabel as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="26.1359%" y="453" width="0.0388%" height="15" fill="rgb(222,156,15)" fg:x="673" fg:w="1"/><text x="26.3859%" y="463.50"></text></g><g><title>wgpu_test`&lt;T as bevy_utils::label::DynEq&gt;::dyn_eq (1 samples, 0.04%)</title><rect x="26.1359%" y="437" width="0.0388%" height="15" fill="rgb(231,97,17)" fg:x="673" fg:w="1"/><text x="26.3859%" y="447.50"></text></g><g><title>wgpu_test`&lt;bevy_app::CoreStage as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="26.1359%" y="421" width="0.0388%" height="15" fill="rgb(218,70,48)" fg:x="673" fg:w="1"/><text x="26.3859%" y="431.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="26.1748%" y="485" width="0.0388%" height="15" fill="rgb(212,196,52)" fg:x="674" fg:w="1"/><text x="26.4248%" y="495.50"></text></g><g><title>wgpu_test`bevy_app::app::App::update (598 samples, 23.22%)</title><rect x="3.0680%" y="613" width="23.2233%" height="15" fill="rgb(243,203,18)" fg:x="79" fg:w="598"/><text x="3.3180%" y="623.50">wgpu_test`bevy_app::app::App::update</text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (598 samples, 23.22%)</title><rect x="3.0680%" y="597" width="23.2233%" height="15" fill="rgb(252,125,41)" fg:x="79" fg:w="598"/><text x="3.3180%" y="607.50">wgpu_test`&lt;bevy_ecs::schedule::Schedu..</text></g><g><title>wgpu_test`bevy_ecs::schedule::Schedule::run_once (598 samples, 23.22%)</title><rect x="3.0680%" y="581" width="23.2233%" height="15" fill="rgb(223,180,33)" fg:x="79" fg:w="598"/><text x="3.3180%" y="591.50">wgpu_test`bevy_ecs::schedule::Schedul..</text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (10 samples, 0.39%)</title><rect x="25.9029%" y="565" width="0.3883%" height="15" fill="rgb(254,159,46)" fg:x="667" fg:w="10"/><text x="26.1529%" y="575.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (10 samples, 0.39%)</title><rect x="25.9029%" y="549" width="0.3883%" height="15" fill="rgb(254,38,10)" fg:x="667" fg:w="10"/><text x="26.1529%" y="559.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (10 samples, 0.39%)</title><rect x="25.9029%" y="533" width="0.3883%" height="15" fill="rgb(208,217,32)" fg:x="667" fg:w="10"/><text x="26.1529%" y="543.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.27%)</title><rect x="26.0194%" y="517" width="0.2718%" height="15" fill="rgb(221,120,13)" fg:x="670" fg:w="7"/><text x="26.2694%" y="527.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.23%)</title><rect x="26.0583%" y="501" width="0.2330%" height="15" fill="rgb(246,54,52)" fg:x="671" fg:w="6"/><text x="26.3083%" y="511.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.08%)</title><rect x="26.2136%" y="485" width="0.0777%" height="15" fill="rgb(242,34,25)" fg:x="675" fg:w="2"/><text x="26.4636%" y="495.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.08%)</title><rect x="26.2136%" y="469" width="0.0777%" height="15" fill="rgb(247,209,9)" fg:x="675" fg:w="2"/><text x="26.4636%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.08%)</title><rect x="26.2136%" y="453" width="0.0777%" height="15" fill="rgb(228,71,26)" fg:x="675" fg:w="2"/><text x="26.4636%" y="463.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::load (1 samples, 0.04%)</title><rect x="26.2524%" y="437" width="0.0388%" height="15" fill="rgb(222,145,49)" fg:x="676" fg:w="1"/><text x="26.5024%" y="447.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="26.2524%" y="421" width="0.0388%" height="15" fill="rgb(218,121,17)" fg:x="676" fg:w="1"/><text x="26.5024%" y="431.50"></text></g><g><title>wgpu_test`core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="26.2524%" y="405" width="0.0388%" height="15" fill="rgb(244,50,7)" fg:x="676" fg:w="1"/><text x="26.5024%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="26.2524%" y="389" width="0.0388%" height="15" fill="rgb(246,229,37)" fg:x="676" fg:w="1"/><text x="26.5024%" y="399.50"></text></g><g><title>wgpu_test`alloc::alloc::exchange_malloc (1 samples, 0.04%)</title><rect x="26.2913%" y="565" width="0.0388%" height="15" fill="rgb(225,18,5)" fg:x="677" fg:w="1"/><text x="26.5413%" y="575.50"></text></g><g><title>wgpu_test`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="26.2913%" y="549" width="0.0388%" height="15" fill="rgb(213,204,8)" fg:x="677" fg:w="1"/><text x="26.5413%" y="559.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="26.2913%" y="533" width="0.0388%" height="15" fill="rgb(238,103,6)" fg:x="677" fg:w="1"/><text x="26.5413%" y="543.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::cell (2 samples, 0.08%)</title><rect x="26.2913%" y="613" width="0.0777%" height="15" fill="rgb(222,25,35)" fg:x="677" fg:w="2"/><text x="26.5413%" y="623.50"></text></g><g><title>wgpu_test`bevy_ecs::world::world_cell::WorldCell::new (2 samples, 0.08%)</title><rect x="26.2913%" y="597" width="0.0777%" height="15" fill="rgb(213,203,35)" fg:x="677" fg:w="2"/><text x="26.5413%" y="607.50"></text></g><g><title>wgpu_test`alloc::rc::Rc&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="26.2913%" y="581" width="0.0777%" height="15" fill="rgb(221,79,53)" fg:x="677" fg:w="2"/><text x="26.5413%" y="591.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="26.3301%" y="565" width="0.0388%" height="15" fill="rgb(243,200,35)" fg:x="678" fg:w="1"/><text x="26.5801%" y="575.50"></text></g><g><title>wgpu_test`bevy_ecs::world::world_cell::WorldCell::get_resource (1 samples, 0.04%)</title><rect x="26.3689%" y="613" width="0.0388%" height="15" fill="rgb(248,60,25)" fg:x="679" fg:w="1"/><text x="26.6189%" y="623.50"></text></g><g><title>wgpu_test`bevy_ecs::component::Components::get_resource_id (1 samples, 0.04%)</title><rect x="26.3689%" y="597" width="0.0388%" height="15" fill="rgb(227,53,46)" fg:x="679" fg:w="1"/><text x="26.6189%" y="607.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="26.3689%" y="581" width="0.0388%" height="15" fill="rgb(216,120,32)" fg:x="679" fg:w="1"/><text x="26.6189%" y="591.50"></text></g><g><title>wgpu_test`hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="26.4078%" y="501" width="0.0388%" height="15" fill="rgb(220,134,1)" fg:x="680" fg:w="1"/><text x="26.6578%" y="511.50"></text></g><g><title>wgpu_test`bevy_ecs::world::world_cell::WorldCell::get_resource_mut (2 samples, 0.08%)</title><rect x="26.4078%" y="613" width="0.0777%" height="15" fill="rgb(237,168,5)" fg:x="680" fg:w="2"/><text x="26.6578%" y="623.50"></text></g><g><title>wgpu_test`bevy_ecs::component::Components::get_resource_id (2 samples, 0.08%)</title><rect x="26.4078%" y="597" width="0.0777%" height="15" fill="rgb(231,100,33)" fg:x="680" fg:w="2"/><text x="26.6578%" y="607.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.08%)</title><rect x="26.4078%" y="581" width="0.0777%" height="15" fill="rgb(236,177,47)" fg:x="680" fg:w="2"/><text x="26.6578%" y="591.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.08%)</title><rect x="26.4078%" y="565" width="0.0777%" height="15" fill="rgb(235,7,49)" fg:x="680" fg:w="2"/><text x="26.6578%" y="575.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.08%)</title><rect x="26.4078%" y="549" width="0.0777%" height="15" fill="rgb(232,119,22)" fg:x="680" fg:w="2"/><text x="26.6578%" y="559.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.08%)</title><rect x="26.4078%" y="533" width="0.0777%" height="15" fill="rgb(254,73,53)" fg:x="680" fg:w="2"/><text x="26.6578%" y="543.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.08%)</title><rect x="26.4078%" y="517" width="0.0777%" height="15" fill="rgb(251,35,20)" fg:x="680" fg:w="2"/><text x="26.6578%" y="527.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="26.4466%" y="501" width="0.0388%" height="15" fill="rgb(241,119,20)" fg:x="681" fg:w="1"/><text x="26.6966%" y="511.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="26.4466%" y="485" width="0.0388%" height="15" fill="rgb(207,102,14)" fg:x="681" fg:w="1"/><text x="26.6966%" y="495.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="26.4466%" y="469" width="0.0388%" height="15" fill="rgb(248,201,50)" fg:x="681" fg:w="1"/><text x="26.6966%" y="479.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="26.4466%" y="453" width="0.0388%" height="15" fill="rgb(222,185,44)" fg:x="681" fg:w="1"/><text x="26.6966%" y="463.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.04%)</title><rect x="26.4466%" y="437" width="0.0388%" height="15" fill="rgb(218,107,18)" fg:x="681" fg:w="1"/><text x="26.6966%" y="447.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldBorrowMut&lt;wgpu_test::rendering::resources::RenderInfo&lt;gfx_backend_metal::Backend&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="26.4854%" y="613" width="0.0388%" height="15" fill="rgb(237,177,39)" fg:x="682" fg:w="1"/><text x="26.7354%" y="623.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="26.4854%" y="597" width="0.0388%" height="15" fill="rgb(246,69,6)" fg:x="682" fg:w="1"/><text x="26.7354%" y="607.50"></text></g><g><title>wgpu_test`bevy_ecs::world::world_cell::ArchetypeComponentAccess::drop_write (1 samples, 0.04%)</title><rect x="26.4854%" y="581" width="0.0388%" height="15" fill="rgb(234,208,37)" fg:x="682" fg:w="1"/><text x="26.7354%" y="591.50"></text></g><g><title>wgpu_test`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.04%)</title><rect x="26.4854%" y="565" width="0.0388%" height="15" fill="rgb(225,4,6)" fg:x="682" fg:w="1"/><text x="26.7354%" y="575.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldCell&gt; (1 samples, 0.04%)</title><rect x="26.5243%" y="613" width="0.0388%" height="15" fill="rgb(233,45,0)" fg:x="683" fg:w="1"/><text x="26.7743%" y="623.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::world::world_cell::WorldCell as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="26.5243%" y="597" width="0.0388%" height="15" fill="rgb(226,136,5)" fg:x="683" fg:w="1"/><text x="26.7743%" y="607.50"></text></g><g><title>wgpu_test`core::mem::swap (1 samples, 0.04%)</title><rect x="26.5243%" y="581" width="0.0388%" height="15" fill="rgb(211,91,47)" fg:x="683" fg:w="1"/><text x="26.7743%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::swap_nonoverlapping_one (1 samples, 0.04%)</title><rect x="26.5243%" y="565" width="0.0388%" height="15" fill="rgb(242,88,51)" fg:x="683" fg:w="1"/><text x="26.7743%" y="575.50"></text></g><g><title>wgpu_test`core::ptr::swap_nonoverlapping (1 samples, 0.04%)</title><rect x="26.5243%" y="549" width="0.0388%" height="15" fill="rgb(230,91,28)" fg:x="683" fg:w="1"/><text x="26.7743%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::swap_nonoverlapping_bytes (1 samples, 0.04%)</title><rect x="26.5243%" y="533" width="0.0388%" height="15" fill="rgb(254,186,29)" fg:x="683" fg:w="1"/><text x="26.7743%" y="543.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="26.5243%" y="517" width="0.0388%" height="15" fill="rgb(238,6,4)" fg:x="683" fg:w="1"/><text x="26.7743%" y="527.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="26.6019%" y="597" width="0.0388%" height="15" fill="rgb(221,151,16)" fg:x="685" fg:w="1"/><text x="26.8519%" y="607.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="26.6796%" y="565" width="0.0388%" height="15" fill="rgb(251,143,52)" fg:x="687" fg:w="1"/><text x="26.9296%" y="575.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="26.6796%" y="549" width="0.0388%" height="15" fill="rgb(206,90,15)" fg:x="687" fg:w="1"/><text x="26.9296%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="26.7184%" y="549" width="0.0388%" height="15" fill="rgb(218,35,8)" fg:x="688" fg:w="1"/><text x="26.9684%" y="559.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.16%)</title><rect x="26.6408%" y="597" width="0.1553%" height="15" fill="rgb(239,215,6)" fg:x="686" fg:w="4"/><text x="26.8908%" y="607.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="26.6796%" y="581" width="0.1165%" height="15" fill="rgb(245,116,39)" fg:x="687" fg:w="3"/><text x="26.9296%" y="591.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="26.7184%" y="565" width="0.0777%" height="15" fill="rgb(242,65,28)" fg:x="688" fg:w="2"/><text x="26.9684%" y="575.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="26.7573%" y="549" width="0.0388%" height="15" fill="rgb(252,132,53)" fg:x="689" fg:w="1"/><text x="27.0073%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="26.7573%" y="533" width="0.0388%" height="15" fill="rgb(224,159,50)" fg:x="689" fg:w="1"/><text x="27.0073%" y="543.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;Idx&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="26.7961%" y="597" width="0.0388%" height="15" fill="rgb(224,93,4)" fg:x="690" fg:w="1"/><text x="27.0461%" y="607.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::all (1 samples, 0.04%)</title><rect x="26.8350%" y="501" width="0.0388%" height="15" fill="rgb(208,81,34)" fg:x="691" fg:w="1"/><text x="27.0850%" y="511.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="26.8350%" y="485" width="0.0388%" height="15" fill="rgb(233,92,54)" fg:x="691" fg:w="1"/><text x="27.0850%" y="495.50"></text></g><g><title>wgpu_test`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.04%)</title><rect x="26.8350%" y="469" width="0.0388%" height="15" fill="rgb(237,21,14)" fg:x="691" fg:w="1"/><text x="27.0850%" y="479.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::native::SubpassFormats as core::cmp::PartialEq&gt;::eq (2 samples, 0.08%)</title><rect x="26.8350%" y="565" width="0.0777%" height="15" fill="rgb(249,128,51)" fg:x="691" fg:w="2"/><text x="27.0850%" y="575.50"></text></g><g><title>wgpu_test`&lt;arrayvec::ArrayVec&lt;A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.08%)</title><rect x="26.8350%" y="549" width="0.0777%" height="15" fill="rgb(223,129,24)" fg:x="691" fg:w="2"/><text x="27.0850%" y="559.50"></text></g><g><title>wgpu_test`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.08%)</title><rect x="26.8350%" y="533" width="0.0777%" height="15" fill="rgb(231,168,25)" fg:x="691" fg:w="2"/><text x="27.0850%" y="543.50"></text></g><g><title>wgpu_test`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.08%)</title><rect x="26.8350%" y="517" width="0.0777%" height="15" fill="rgb(224,39,20)" fg:x="691" fg:w="2"/><text x="27.0850%" y="527.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="26.8738%" y="501" width="0.0388%" height="15" fill="rgb(225,152,53)" fg:x="692" fg:w="1"/><text x="27.1238%" y="511.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="26.8738%" y="485" width="0.0388%" height="15" fill="rgb(252,17,24)" fg:x="692" fg:w="1"/><text x="27.1238%" y="495.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="26.8738%" y="469" width="0.0388%" height="15" fill="rgb(250,114,30)" fg:x="692" fg:w="1"/><text x="27.1238%" y="479.50"></text></g><g><title>wgpu_test`core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="26.8738%" y="453" width="0.0388%" height="15" fill="rgb(229,5,4)" fg:x="692" fg:w="1"/><text x="27.1238%" y="463.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="26.9126%" y="517" width="0.0388%" height="15" fill="rgb(225,176,49)" fg:x="693" fg:w="1"/><text x="27.1626%" y="527.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_slice (2 samples, 0.08%)</title><rect x="26.9126%" y="549" width="0.0777%" height="15" fill="rgb(224,221,49)" fg:x="693" fg:w="2"/><text x="27.1626%" y="559.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="26.9126%" y="533" width="0.0777%" height="15" fill="rgb(253,169,27)" fg:x="693" fg:w="2"/><text x="27.1626%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="26.9515%" y="517" width="0.0388%" height="15" fill="rgb(211,206,16)" fg:x="694" fg:w="1"/><text x="27.2015%" y="527.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="26.9903%" y="533" width="0.0388%" height="15" fill="rgb(244,87,35)" fg:x="695" fg:w="1"/><text x="27.2403%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="27.0291%" y="533" width="0.0388%" height="15" fill="rgb(246,28,10)" fg:x="696" fg:w="1"/><text x="27.2791%" y="543.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::chain (4 samples, 0.16%)</title><rect x="26.9903%" y="549" width="0.1553%" height="15" fill="rgb(229,12,44)" fg:x="695" fg:w="4"/><text x="27.2403%" y="559.50"></text></g><g><title>wgpu_test`core::iter::adapters::chain::Chain&lt;A,B&gt;::new (2 samples, 0.08%)</title><rect x="27.0680%" y="533" width="0.0777%" height="15" fill="rgb(210,145,37)" fg:x="697" fg:w="2"/><text x="27.3180%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="27.1068%" y="517" width="0.0388%" height="15" fill="rgb(227,112,52)" fg:x="698" fg:w="1"/><text x="27.3568%" y="527.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::make_render_commands (7 samples, 0.27%)</title><rect x="26.9126%" y="565" width="0.2718%" height="15" fill="rgb(238,155,34)" fg:x="693" fg:w="7"/><text x="27.1626%" y="575.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="27.1456%" y="549" width="0.0388%" height="15" fill="rgb(239,226,36)" fg:x="699" fg:w="1"/><text x="27.3956%" y="559.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="27.1456%" y="533" width="0.0388%" height="15" fill="rgb(230,16,23)" fg:x="699" fg:w="1"/><text x="27.3956%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="27.1456%" y="517" width="0.0388%" height="15" fill="rgb(236,171,36)" fg:x="699" fg:w="1"/><text x="27.3956%" y="527.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="27.1456%" y="501" width="0.0388%" height="15" fill="rgb(221,22,14)" fg:x="699" fg:w="1"/><text x="27.3956%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.04%)</title><rect x="27.1845%" y="421" width="0.0388%" height="15" fill="rgb(242,43,11)" fg:x="700" fg:w="1"/><text x="27.4345%" y="431.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;metal::renderpass::RenderPassDescriptor&gt; (3 samples, 0.12%)</title><rect x="27.1845%" y="517" width="0.1165%" height="15" fill="rgb(232,69,23)" fg:x="700" fg:w="3"/><text x="27.4345%" y="527.50"></text></g><g><title>wgpu_test`&lt;metal::renderpass::RenderPassDescriptor as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="27.1845%" y="501" width="0.1165%" height="15" fill="rgb(216,180,54)" fg:x="700" fg:w="3"/><text x="27.4345%" y="511.50"></text></g><g><title>wgpu_test`metal::obj_drop (3 samples, 0.12%)</title><rect x="27.1845%" y="485" width="0.1165%" height="15" fill="rgb(216,5,24)" fg:x="700" fg:w="3"/><text x="27.4345%" y="495.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (3 samples, 0.12%)</title><rect x="27.1845%" y="469" width="0.1165%" height="15" fill="rgb(225,89,9)" fg:x="700" fg:w="3"/><text x="27.4345%" y="479.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (3 samples, 0.12%)</title><rect x="27.1845%" y="453" width="0.1165%" height="15" fill="rgb(243,75,33)" fg:x="700" fg:w="3"/><text x="27.4345%" y="463.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (3 samples, 0.12%)</title><rect x="27.1845%" y="437" width="0.1165%" height="15" fill="rgb(247,141,45)" fg:x="700" fg:w="3"/><text x="27.4345%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.08%)</title><rect x="27.2233%" y="421" width="0.0777%" height="15" fill="rgb(232,177,36)" fg:x="701" fg:w="2"/><text x="27.4733%" y="431.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_GetRsrcMgr(GFX10_MtlCmdBuffer*) (1 samples, 0.04%)</title><rect x="27.3398%" y="437" width="0.0388%" height="15" fill="rgb(219,125,36)" fg:x="704" fg:w="1"/><text x="27.5898%" y="447.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_DeviceAcquireRsrcMgr(GFX10_DeviceMembersRec*) (1 samples, 0.04%)</title><rect x="27.3398%" y="421" width="0.0388%" height="15" fill="rgb(227,94,9)" fg:x="704" fg:w="1"/><text x="27.5898%" y="431.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_ResourceMgrInit(GFX10_RsrcMgrRec*) (1 samples, 0.04%)</title><rect x="27.3398%" y="405" width="0.0388%" height="15" fill="rgb(240,34,52)" fg:x="704" fg:w="1"/><text x="27.5898%" y="415.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_ResetSRDMgr(GFX10_SRDMgrRec*) (1 samples, 0.04%)</title><rect x="27.3398%" y="389" width="0.0388%" height="15" fill="rgb(216,45,12)" fg:x="704" fg:w="1"/><text x="27.5898%" y="399.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::DetermineBltVmFlags (1 samples, 0.04%)</title><rect x="27.3786%" y="341" width="0.0388%" height="15" fill="rgb(246,21,19)" fg:x="705" fg:w="1"/><text x="27.6286%" y="351.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::DrawRects (1 samples, 0.04%)</title><rect x="27.4175%" y="341" width="0.0388%" height="15" fill="rgb(213,98,42)" fg:x="706" fg:w="1"/><text x="27.6675%" y="351.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltDevice::EstimatedEmbeddedBufferEntries (1 samples, 0.04%)</title><rect x="27.4175%" y="325" width="0.0388%" height="15" fill="rgb(250,136,47)" fg:x="706" fg:w="1"/><text x="27.6675%" y="335.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::SetupAndWriteDrawBltSurfInfo (2 samples, 0.08%)</title><rect x="27.4563%" y="341" width="0.0777%" height="15" fill="rgb(251,124,27)" fg:x="707" fg:w="2"/><text x="27.7063%" y="351.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltDrawRegs::SetupAndWriteColor (2 samples, 0.08%)</title><rect x="27.4563%" y="325" width="0.0777%" height="15" fill="rgb(229,180,14)" fg:x="707" fg:w="2"/><text x="27.7063%" y="335.50"></text></g><g><title>AMDRadeonX6000MTLDriver`BltResFmt::IsUnormFormat (2 samples, 0.08%)</title><rect x="27.4563%" y="309" width="0.0777%" height="15" fill="rgb(245,216,25)" fg:x="707" fg:w="2"/><text x="27.7063%" y="319.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltPixelShader::WriteToHw (1 samples, 0.04%)</title><rect x="27.5340%" y="341" width="0.0388%" height="15" fill="rgb(251,43,5)" fg:x="709" fg:w="1"/><text x="27.7840%" y="351.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_HandleLoadActions(AMD_DeviceMembersRec*, AMD_HwCmdBufInfoRec*, AMDBitVectorRec*, AMD_LoadStoreInfo*, ATI_BOOL) (6 samples, 0.23%)</title><rect x="27.3786%" y="437" width="0.2330%" height="15" fill="rgb(250,128,24)" fg:x="705" fg:w="6"/><text x="27.6286%" y="447.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_DoColorClear(AMD_DeviceMembersRec*, AMD_HwCmdBufInfoRec*, GFXAAMD_MtlTexture*, unsigned int, unsigned int, unsigned int, double const*, unsigned int*, bool, bool) (6 samples, 0.23%)</title><rect x="27.3786%" y="421" width="0.2330%" height="15" fill="rgb(217,117,27)" fg:x="705" fg:w="6"/><text x="27.6286%" y="431.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_DoClear(AMD_DeviceMembersRec*, AMD_HwCmdBufInfoRec*, _UBM_CLEARINFO*, RgpSqttMarkerEventType) (6 samples, 0.23%)</title><rect x="27.3786%" y="405" width="0.2330%" height="15" fill="rgb(245,147,4)" fg:x="705" fg:w="6"/><text x="27.6286%" y="415.50"></text></g><g><title>AMDRadeonX6000MTLDriver`BltMgr::Clear (6 samples, 0.23%)</title><rect x="27.3786%" y="389" width="0.2330%" height="15" fill="rgb(242,201,35)" fg:x="705" fg:w="6"/><text x="27.6286%" y="399.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::Execute3dBlt (6 samples, 0.23%)</title><rect x="27.3786%" y="373" width="0.2330%" height="15" fill="rgb(218,181,1)" fg:x="705" fg:w="6"/><text x="27.6286%" y="383.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltMgr::Execute3dDrawBlt (6 samples, 0.23%)</title><rect x="27.3786%" y="357" width="0.2330%" height="15" fill="rgb(222,6,29)" fg:x="705" fg:w="6"/><text x="27.6286%" y="367.50"></text></g><g><title>AMDRadeonX6000MTLDriver`Gfx10BltVertexShader::WriteToHw (1 samples, 0.04%)</title><rect x="27.5728%" y="341" width="0.0388%" height="15" fill="rgb(208,186,3)" fg:x="710" fg:w="1"/><text x="27.8228%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="27.5728%" y="325" width="0.0388%" height="15" fill="rgb(216,36,26)" fg:x="710" fg:w="1"/><text x="27.8228%" y="335.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder initWithCommandBuffer:descriptor:] (9 samples, 0.35%)</title><rect x="27.3010%" y="453" width="0.3495%" height="15" fill="rgb(248,201,23)" fg:x="703" fg:w="9"/><text x="27.5510%" y="463.50"></text></g><g><title>Metal`-[MTLIOAccelRenderCommandEncoder initWithCommandBuffer:descriptor:] (1 samples, 0.04%)</title><rect x="27.6117%" y="437" width="0.0388%" height="15" fill="rgb(251,170,31)" fg:x="711" fg:w="1"/><text x="27.8617%" y="447.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (1 samples, 0.04%)</title><rect x="27.6117%" y="421" width="0.0388%" height="15" fill="rgb(207,110,25)" fg:x="711" fg:w="1"/><text x="27.8617%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (1 samples, 0.04%)</title><rect x="27.6117%" y="405" width="0.0388%" height="15" fill="rgb(250,54,15)" fg:x="711" fg:w="1"/><text x="27.8617%" y="415.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::new_render_command_encoder (10 samples, 0.39%)</title><rect x="27.3010%" y="517" width="0.3883%" height="15" fill="rgb(227,68,33)" fg:x="703" fg:w="10"/><text x="27.5510%" y="527.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (10 samples, 0.39%)</title><rect x="27.3010%" y="501" width="0.3883%" height="15" fill="rgb(238,34,41)" fg:x="703" fg:w="10"/><text x="27.5510%" y="511.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (10 samples, 0.39%)</title><rect x="27.3010%" y="485" width="0.3883%" height="15" fill="rgb(220,11,15)" fg:x="703" fg:w="10"/><text x="27.5510%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer renderCommandEncoderWithDescriptor:] (10 samples, 0.39%)</title><rect x="27.3010%" y="469" width="0.3883%" height="15" fill="rgb(246,111,35)" fg:x="703" fg:w="10"/><text x="27.5510%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_IsCapturingRgpTrace(AMD_MtlThreadTrace*) (1 samples, 0.04%)</title><rect x="27.6505%" y="453" width="0.0388%" height="15" fill="rgb(209,88,53)" fg:x="712" fg:w="1"/><text x="27.9005%" y="463.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::switch_render (14 samples, 0.54%)</title><rect x="27.1845%" y="533" width="0.5437%" height="15" fill="rgb(231,185,47)" fg:x="700" fg:w="14"/><text x="27.4345%" y="543.50"></text></g><g><title>wgpu_test`metal::encoder::CommandEncoderRef::set_label (1 samples, 0.04%)</title><rect x="27.6893%" y="517" width="0.0388%" height="15" fill="rgb(233,154,1)" fg:x="713" fg:w="1"/><text x="27.9393%" y="527.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="27.6893%" y="501" width="0.0388%" height="15" fill="rgb(225,15,46)" fg:x="713" fg:w="1"/><text x="27.9393%" y="511.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="27.6893%" y="485" width="0.0388%" height="15" fill="rgb(211,135,41)" fg:x="713" fg:w="1"/><text x="27.9393%" y="495.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder setLabel:] (1 samples, 0.04%)</title><rect x="27.6893%" y="469" width="0.0388%" height="15" fill="rgb(208,54,0)" fg:x="713" fg:w="1"/><text x="27.9393%" y="479.50"></text></g><g><title>CoreFoundation`-[__NSCFConstantString copy] (1 samples, 0.04%)</title><rect x="27.6893%" y="453" width="0.0388%" height="15" fill="rgb(244,136,14)" fg:x="713" fg:w="1"/><text x="27.9393%" y="463.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.7670%" y="485" width="0.0777%" height="15" fill="rgb(241,56,14)" fg:x="715" fg:w="2"/><text x="28.0170%" y="495.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.7670%" y="469" width="0.0777%" height="15" fill="rgb(205,80,24)" fg:x="715" fg:w="2"/><text x="28.0170%" y="479.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.7670%" y="453" width="0.0777%" height="15" fill="rgb(220,57,4)" fg:x="715" fg:w="2"/><text x="28.0170%" y="463.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.7670%" y="437" width="0.0777%" height="15" fill="rgb(226,193,50)" fg:x="715" fg:w="2"/><text x="28.0170%" y="447.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.08%)</title><rect x="27.7670%" y="421" width="0.0777%" height="15" fill="rgb(231,168,22)" fg:x="715" fg:w="2"/><text x="28.0170%" y="431.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.7670%" y="405" width="0.0777%" height="15" fill="rgb(254,215,14)" fg:x="715" fg:w="2"/><text x="28.0170%" y="415.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="27.7670%" y="389" width="0.0777%" height="15" fill="rgb(211,115,16)" fg:x="715" fg:w="2"/><text x="28.0170%" y="399.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.04%)</title><rect x="27.8058%" y="373" width="0.0388%" height="15" fill="rgb(236,210,16)" fg:x="716" fg:w="1"/><text x="28.0558%" y="383.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::make_render_commands::_{{closure}} (1 samples, 0.04%)</title><rect x="27.8058%" y="357" width="0.0388%" height="15" fill="rgb(221,94,12)" fg:x="716" fg:w="1"/><text x="28.0558%" y="367.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::chain (1 samples, 0.04%)</title><rect x="27.8058%" y="341" width="0.0388%" height="15" fill="rgb(235,218,49)" fg:x="716" fg:w="1"/><text x="28.0558%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="27.8058%" y="325" width="0.0388%" height="15" fill="rgb(217,114,14)" fg:x="716" fg:w="1"/><text x="28.0558%" y="335.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.16%)</title><rect x="27.7670%" y="517" width="0.1553%" height="15" fill="rgb(216,145,22)" fg:x="715" fg:w="4"/><text x="28.0170%" y="527.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.16%)</title><rect x="27.7670%" y="501" width="0.1553%" height="15" fill="rgb(217,112,39)" fg:x="715" fg:w="4"/><text x="28.0170%" y="511.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.8447%" y="485" width="0.0777%" height="15" fill="rgb(225,85,32)" fg:x="717" fg:w="2"/><text x="28.0947%" y="495.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.8447%" y="469" width="0.0777%" height="15" fill="rgb(245,209,47)" fg:x="717" fg:w="2"/><text x="28.0947%" y="479.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="27.8447%" y="453" width="0.0777%" height="15" fill="rgb(218,220,15)" fg:x="717" fg:w="2"/><text x="28.0947%" y="463.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.08%)</title><rect x="27.8447%" y="437" width="0.0777%" height="15" fill="rgb(222,202,31)" fg:x="717" fg:w="2"/><text x="28.0947%" y="447.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="27.8835%" y="421" width="0.0388%" height="15" fill="rgb(243,203,4)" fg:x="718" fg:w="1"/><text x="28.1335%" y="431.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="27.8835%" y="405" width="0.0388%" height="15" fill="rgb(237,92,17)" fg:x="718" fg:w="1"/><text x="28.1335%" y="415.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.04%)</title><rect x="27.8835%" y="389" width="0.0388%" height="15" fill="rgb(231,119,7)" fg:x="718" fg:w="1"/><text x="28.1335%" y="399.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::make_render_commands::_{{closure}} (1 samples, 0.04%)</title><rect x="27.8835%" y="373" width="0.0388%" height="15" fill="rgb(237,82,41)" fg:x="718" fg:w="1"/><text x="28.1335%" y="383.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_UpdateAndWriteRenderPipelineHwShRegs(GFX10_HwInfoRec const*, GFX10_RenderPipelineHwShRegsRec const*, GFX10_RenderPipelineHwShRegsRec*, unsigned int*) (1 samples, 0.04%)</title><rect x="27.9223%" y="437" width="0.0388%" height="15" fill="rgb(226,81,48)" fg:x="719" fg:w="1"/><text x="28.1723%" y="447.50"></text></g><g><title>wgpu_test`metal::encoder::RenderCommandEncoderRef::set_render_pipeline_state (2 samples, 0.08%)</title><rect x="27.9223%" y="501" width="0.0777%" height="15" fill="rgb(234,70,51)" fg:x="719" fg:w="2"/><text x="28.1723%" y="511.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="27.9223%" y="485" width="0.0777%" height="15" fill="rgb(251,86,4)" fg:x="719" fg:w="2"/><text x="28.1723%" y="495.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="27.9223%" y="469" width="0.0777%" height="15" fill="rgb(244,144,28)" fg:x="719" fg:w="2"/><text x="28.1723%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setRenderPipelineState:] (2 samples, 0.08%)</title><rect x="27.9223%" y="453" width="0.0777%" height="15" fill="rgb(232,161,39)" fg:x="719" fg:w="2"/><text x="28.1723%" y="463.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_UpdatePrimBatchBinning(GFX10_RenderCmdEncoderMembersRec*) (1 samples, 0.04%)</title><rect x="27.9612%" y="437" width="0.0388%" height="15" fill="rgb(247,34,51)" fg:x="720" fg:w="1"/><text x="28.2112%" y="447.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass (31 samples, 1.20%)</title><rect x="26.8350%" y="581" width="1.2039%" height="15" fill="rgb(225,132,2)" fg:x="691" fg:w="31"/><text x="27.0850%" y="591.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (22 samples, 0.85%)</title><rect x="27.1845%" y="565" width="0.8544%" height="15" fill="rgb(209,159,44)" fg:x="700" fg:w="22"/><text x="27.4345%" y="575.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass::_{{closure}} (22 samples, 0.85%)</title><rect x="27.1845%" y="549" width="0.8544%" height="15" fill="rgb(251,214,1)" fg:x="700" fg:w="22"/><text x="27.4345%" y="559.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::PreRender::issue_many (8 samples, 0.31%)</title><rect x="27.7282%" y="533" width="0.3107%" height="15" fill="rgb(247,84,47)" fg:x="714" fg:w="8"/><text x="27.9782%" y="543.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::exec_render (3 samples, 0.12%)</title><rect x="27.9223%" y="517" width="0.1165%" height="15" fill="rgb(240,111,43)" fg:x="719" fg:w="3"/><text x="28.1723%" y="527.50"></text></g><g><title>wgpu_test`metal::encoder::RenderCommandEncoderRef::set_viewport (1 samples, 0.04%)</title><rect x="28.0000%" y="501" width="0.0388%" height="15" fill="rgb(215,214,35)" fg:x="721" fg:w="1"/><text x="28.2500%" y="511.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="28.0000%" y="485" width="0.0388%" height="15" fill="rgb(248,207,23)" fg:x="721" fg:w="1"/><text x="28.2500%" y="495.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="28.0000%" y="469" width="0.0388%" height="15" fill="rgb(214,186,4)" fg:x="721" fg:w="1"/><text x="28.2500%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setViewport:] (1 samples, 0.04%)</title><rect x="28.0000%" y="453" width="0.0388%" height="15" fill="rgb(220,133,22)" fg:x="721" fg:w="1"/><text x="28.2500%" y="463.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_SetViewports(GFX10_RenderCmdEncoderMembersRec*, MTLViewport const*, unsigned int) (1 samples, 0.04%)</title><rect x="28.0000%" y="437" width="0.0388%" height="15" fill="rgb(239,134,19)" fg:x="721" fg:w="1"/><text x="28.2500%" y="447.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::native::SubpassFormats as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="28.0388%" y="581" width="0.0388%" height="15" fill="rgb(250,140,9)" fg:x="722" fg:w="1"/><text x="28.2888%" y="591.50"></text></g><g><title>wgpu_test`&lt;arrayvec::ArrayVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="28.0388%" y="565" width="0.0388%" height="15" fill="rgb(225,59,14)" fg:x="722" fg:w="1"/><text x="28.2888%" y="575.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="28.0388%" y="549" width="0.0388%" height="15" fill="rgb(214,152,51)" fg:x="722" fg:w="1"/><text x="28.2888%" y="559.50"></text></g><g><title>wgpu_test`&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="28.0388%" y="533" width="0.0388%" height="15" fill="rgb(251,227,43)" fg:x="722" fg:w="1"/><text x="28.2888%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;arrayvec::ScopeExitGuard&lt;&amp;mut u8,usize,&lt;arrayvec::ArrayVec&lt;[(metal::constants::MTLPixelFormat,gfx_backend_metal::internal::Channel) (1 samples, 0.04%)</title><rect x="28.0388%" y="517" width="0.0388%" height="15" fill="rgb(241,96,17)" fg:x="722" fg:w="1"/><text x="28.2888%" y="527.50"></text></g><g><title> 8]&gt; as core::iter::traits::collect::Extend&lt;&lt;[(metal::constants::MTLPixelFormat,gfx_backend_metal::internal::Channel) (1 samples, 0.04%)</title><rect x="28.0388%" y="501" width="0.0388%" height="15" fill="rgb(234,198,43)" fg:x="722" fg:w="1"/><text x="28.2888%" y="511.50"></text></g><g><title> 8] as arrayvec::array::Array&gt;::Item&gt;&gt;::extend&lt;core::iter::adapters::cloned::Cloned&lt;core::slice::iter::Iter&lt;(metal::constants::MTLPixelFormat,gfx_backend_metal::internal::Channel)&gt;&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.04%)</title><rect x="28.0388%" y="485" width="0.0388%" height="15" fill="rgb(220,108,29)" fg:x="722" fg:w="1"/><text x="28.2888%" y="495.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="28.0777%" y="549" width="0.0388%" height="15" fill="rgb(226,163,33)" fg:x="723" fg:w="1"/><text x="28.3277%" y="559.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="28.0777%" y="533" width="0.0388%" height="15" fill="rgb(205,194,45)" fg:x="723" fg:w="1"/><text x="28.3277%" y="543.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.1165%" y="549" width="0.0388%" height="15" fill="rgb(206,143,44)" fg:x="724" fg:w="1"/><text x="28.3665%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.1165%" y="533" width="0.0388%" height="15" fill="rgb(236,136,36)" fg:x="724" fg:w="1"/><text x="28.3665%" y="543.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="28.1553%" y="533" width="0.0388%" height="15" fill="rgb(249,172,42)" fg:x="725" fg:w="1"/><text x="28.4053%" y="543.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptorInternal renderPassDescriptor] (1 samples, 0.04%)</title><rect x="28.1942%" y="517" width="0.0388%" height="15" fill="rgb(216,139,23)" fg:x="726" fg:w="1"/><text x="28.4442%" y="527.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin_render_pass::_{{closure}} (5 samples, 0.19%)</title><rect x="28.0777%" y="565" width="0.1942%" height="15" fill="rgb(207,166,20)" fg:x="723" fg:w="5"/><text x="28.3277%" y="575.50"></text></g><g><title>wgpu_test`metal::renderpass::RenderPassDescriptor::new (3 samples, 0.12%)</title><rect x="28.1553%" y="549" width="0.1165%" height="15" fill="rgb(210,209,22)" fg:x="725" fg:w="3"/><text x="28.4053%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="28.1942%" y="533" width="0.0777%" height="15" fill="rgb(232,118,20)" fg:x="726" fg:w="2"/><text x="28.4442%" y="543.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="28.2330%" y="517" width="0.0388%" height="15" fill="rgb(238,113,42)" fg:x="727" fg:w="1"/><text x="28.4830%" y="527.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptorInternal renderPassDescriptor] (1 samples, 0.04%)</title><rect x="28.2330%" y="501" width="0.0388%" height="15" fill="rgb(231,42,5)" fg:x="727" fg:w="1"/><text x="28.4830%" y="511.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal init] (1 samples, 0.04%)</title><rect x="28.2330%" y="485" width="0.0388%" height="15" fill="rgb(243,166,24)" fg:x="727" fg:w="1"/><text x="28.4830%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (1 samples, 0.04%)</title><rect x="28.2330%" y="469" width="0.0388%" height="15" fill="rgb(237,226,12)" fg:x="727" fg:w="1"/><text x="28.4830%" y="479.50"></text></g><g><title>Metal`+[MTLRenderPassColorAttachmentDescriptorArray alloc] (1 samples, 0.04%)</title><rect x="28.2330%" y="453" width="0.0388%" height="15" fill="rgb(229,133,24)" fg:x="727" fg:w="1"/><text x="28.4830%" y="463.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.04%)</title><rect x="28.2330%" y="437" width="0.0388%" height="15" fill="rgb(238,33,43)" fg:x="727" fg:w="1"/><text x="28.4830%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="28.2330%" y="421" width="0.0388%" height="15" fill="rgb(227,59,38)" fg:x="727" fg:w="1"/><text x="28.4830%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.04%)</title><rect x="28.2330%" y="405" width="0.0388%" height="15" fill="rgb(230,97,0)" fg:x="727" fg:w="1"/><text x="28.4830%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="28.2330%" y="389" width="0.0388%" height="15" fill="rgb(250,173,50)" fg:x="727" fg:w="1"/><text x="28.4830%" y="399.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin_render_pass (38 samples, 1.48%)</title><rect x="26.8350%" y="597" width="1.4757%" height="15" fill="rgb(240,15,50)" fg:x="691" fg:w="38"/><text x="27.0850%" y="607.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.23%)</title><rect x="28.0777%" y="581" width="0.2330%" height="15" fill="rgb(221,93,22)" fg:x="723" fg:w="6"/><text x="28.3277%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;objc::rc::autorelease::AutoReleaseHelper&gt; (1 samples, 0.04%)</title><rect x="28.2718%" y="565" width="0.0388%" height="15" fill="rgb(245,180,53)" fg:x="728" fg:w="1"/><text x="28.5218%" y="575.50"></text></g><g><title>wgpu_test`&lt;objc::rc::autorelease::AutoReleaseHelper as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="28.2718%" y="549" width="0.0388%" height="15" fill="rgb(231,88,51)" fg:x="728" fg:w="1"/><text x="28.5218%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.04%)</title><rect x="28.2718%" y="533" width="0.0388%" height="15" fill="rgb(240,58,21)" fg:x="728" fg:w="1"/><text x="28.5218%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.04%)</title><rect x="28.2718%" y="517" width="0.0388%" height="15" fill="rgb(237,21,10)" fg:x="728" fg:w="1"/><text x="28.5218%" y="527.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="28.3883%" y="581" width="0.0388%" height="15" fill="rgb(218,43,11)" fg:x="731" fg:w="1"/><text x="28.6383%" y="591.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="28.3883%" y="565" width="0.0388%" height="15" fill="rgb(218,221,29)" fg:x="731" fg:w="1"/><text x="28.6383%" y="575.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="28.3883%" y="549" width="0.0388%" height="15" fill="rgb(214,118,42)" fg:x="731" fg:w="1"/><text x="28.6383%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="28.4272%" y="581" width="0.0388%" height="15" fill="rgb(251,200,26)" fg:x="732" fg:w="1"/><text x="28.6772%" y="591.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.4660%" y="581" width="0.0388%" height="15" fill="rgb(237,101,39)" fg:x="733" fg:w="1"/><text x="28.7160%" y="591.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="28.4660%" y="565" width="0.0388%" height="15" fill="rgb(251,117,11)" fg:x="733" fg:w="1"/><text x="28.7160%" y="575.50"></text></g><g><title>wgpu_test`core::array::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T (1 samples, 0.04%)</title><rect x="28.5049%" y="581" width="0.0388%" height="15" fill="rgb(216,223,23)" fg:x="734" fg:w="1"/><text x="28.7549%" y="591.50"></text></g><g><title> N]&gt;::into_iter (1 samples, 0.04%)</title><rect x="28.5049%" y="565" width="0.0388%" height="15" fill="rgb(251,54,12)" fg:x="734" fg:w="1"/><text x="28.7549%" y="575.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="28.5049%" y="549" width="0.0388%" height="15" fill="rgb(254,176,54)" fg:x="734" fg:w="1"/><text x="28.7549%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="28.5049%" y="533" width="0.0388%" height="15" fill="rgb(210,32,8)" fg:x="734" fg:w="1"/><text x="28.7549%" y="543.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_descriptor_sets (7 samples, 0.27%)</title><rect x="28.3107%" y="597" width="0.2718%" height="15" fill="rgb(235,52,38)" fg:x="729" fg:w="7"/><text x="28.5607%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::StageResources::pre_allocate (1 samples, 0.04%)</title><rect x="28.5437%" y="581" width="0.0388%" height="15" fill="rgb(231,4,44)" fg:x="735" fg:w="1"/><text x="28.7937%" y="591.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::StageResources::pre_allocate_buffers (1 samples, 0.04%)</title><rect x="28.5437%" y="565" width="0.0388%" height="15" fill="rgb(249,2,32)" fg:x="735" fg:w="1"/><text x="28.7937%" y="575.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="28.5437%" y="549" width="0.0388%" height="15" fill="rgb(224,65,26)" fg:x="735" fg:w="1"/><text x="28.7937%" y="559.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.5437%" y="533" width="0.0388%" height="15" fill="rgb(250,73,40)" fg:x="735" fg:w="1"/><text x="28.7937%" y="543.50"></text></g><g><title>wgpu_test`&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.04%)</title><rect x="28.5825%" y="581" width="0.0388%" height="15" fill="rgb(253,177,16)" fg:x="736" fg:w="1"/><text x="28.8325%" y="591.50"></text></g><g><title>wgpu_test`&lt;metal::pipeline::render::RenderPipelineState as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="28.5825%" y="565" width="0.0388%" height="15" fill="rgb(217,32,34)" fg:x="736" fg:w="1"/><text x="28.8325%" y="575.50"></text></g><g><title>wgpu_test`metal::obj_clone (1 samples, 0.04%)</title><rect x="28.5825%" y="549" width="0.0388%" height="15" fill="rgb(212,7,10)" fg:x="736" fg:w="1"/><text x="28.8325%" y="559.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="28.6214%" y="581" width="0.0388%" height="15" fill="rgb(245,89,8)" fg:x="737" fg:w="1"/><text x="28.8714%" y="591.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="28.6214%" y="565" width="0.0388%" height="15" fill="rgb(237,16,53)" fg:x="737" fg:w="1"/><text x="28.8714%" y="575.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="28.6214%" y="549" width="0.0388%" height="15" fill="rgb(250,204,30)" fg:x="737" fg:w="1"/><text x="28.8714%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="28.6214%" y="533" width="0.0388%" height="15" fill="rgb(208,77,27)" fg:x="737" fg:w="1"/><text x="28.8714%" y="543.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="28.6214%" y="517" width="0.0388%" height="15" fill="rgb(250,204,28)" fg:x="737" fg:w="1"/><text x="28.8714%" y="527.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="28.6214%" y="501" width="0.0388%" height="15" fill="rgb(244,63,21)" fg:x="737" fg:w="1"/><text x="28.8714%" y="511.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="28.6214%" y="485" width="0.0388%" height="15" fill="rgb(236,85,44)" fg:x="737" fg:w="1"/><text x="28.8714%" y="495.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$C$core..option..Option$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$$C$$LP$$RP$$C$core..option..Option$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$..Some$C$core..iter..traits..iterator..Iterator..for_each..call$LT$core..option..Option$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$$C$$LT$alloc..vec..Vec$LT$core..option..Option$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$core..option..Option$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$$C$core..iter..adapters..map..Map$LT$core..iter..adapters..cloned..Cloned$LT$core..slice..iter..Iter$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$$GT$$C$core..option..Option$LT$$LP$gfx_hal..pso..input_assembler..VertexBufferDesc$C$u32$RP$$GT$..Some$GT$$GT$$GT$..s (1 samples, 0.04%)</title><rect x="28.6214%" y="469" width="0.0388%" height="15" fill="rgb(215,98,4)" fg:x="737" fg:w="1"/><text x="28.8714%" y="479.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::native::SubpassFormats as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="28.6602%" y="581" width="0.0388%" height="15" fill="rgb(235,38,11)" fg:x="738" fg:w="1"/><text x="28.9102%" y="591.50"></text></g><g><title>wgpu_test`&lt;arrayvec::ArrayVec&lt;A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="28.6602%" y="565" width="0.0388%" height="15" fill="rgb(254,186,25)" fg:x="738" fg:w="1"/><text x="28.9102%" y="575.50"></text></g><g><title>wgpu_test`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="28.6602%" y="549" width="0.0388%" height="15" fill="rgb(225,55,31)" fg:x="738" fg:w="1"/><text x="28.9102%" y="559.50"></text></g><g><title>wgpu_test`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="28.6602%" y="533" width="0.0388%" height="15" fill="rgb(211,15,21)" fg:x="738" fg:w="1"/><text x="28.9102%" y="543.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="28.6602%" y="517" width="0.0388%" height="15" fill="rgb(215,187,41)" fg:x="738" fg:w="1"/><text x="28.9102%" y="527.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="28.6602%" y="501" width="0.0388%" height="15" fill="rgb(248,69,32)" fg:x="738" fg:w="1"/><text x="28.9102%" y="511.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="28.6602%" y="485" width="0.0388%" height="15" fill="rgb(252,102,52)" fg:x="738" fg:w="1"/><text x="28.9102%" y="495.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="28.6602%" y="469" width="0.0388%" height="15" fill="rgb(253,140,32)" fg:x="738" fg:w="1"/><text x="28.9102%" y="479.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="28.6602%" y="453" width="0.0388%" height="15" fill="rgb(216,56,42)" fg:x="738" fg:w="1"/><text x="28.9102%" y="463.50"></text></g><g><title>wgpu_test`metal::encoder::RenderCommandEncoderRef::set_cull_mode (1 samples, 0.04%)</title><rect x="28.6990%" y="549" width="0.0388%" height="15" fill="rgb(216,184,14)" fg:x="739" fg:w="1"/><text x="28.9490%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="28.6990%" y="533" width="0.0388%" height="15" fill="rgb(237,187,27)" fg:x="739" fg:w="1"/><text x="28.9490%" y="543.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="28.6990%" y="517" width="0.0388%" height="15" fill="rgb(219,65,3)" fg:x="739" fg:w="1"/><text x="28.9490%" y="527.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::PreRender::issue (2 samples, 0.08%)</title><rect x="28.6990%" y="581" width="0.0777%" height="15" fill="rgb(245,83,25)" fg:x="739" fg:w="2"/><text x="28.9490%" y="591.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::exec_render (2 samples, 0.08%)</title><rect x="28.6990%" y="565" width="0.0777%" height="15" fill="rgb(214,205,45)" fg:x="739" fg:w="2"/><text x="28.9490%" y="575.50"></text></g><g><title>wgpu_test`metal::encoder::RenderCommandEncoderRef::set_render_pipeline_state (1 samples, 0.04%)</title><rect x="28.7379%" y="549" width="0.0388%" height="15" fill="rgb(241,20,18)" fg:x="740" fg:w="1"/><text x="28.9879%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="28.7379%" y="533" width="0.0388%" height="15" fill="rgb(232,163,23)" fg:x="740" fg:w="1"/><text x="28.9879%" y="543.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="28.7379%" y="517" width="0.0388%" height="15" fill="rgb(214,5,46)" fg:x="740" fg:w="1"/><text x="28.9879%" y="527.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder setRenderPipelineState:] (1 samples, 0.04%)</title><rect x="28.7379%" y="501" width="0.0388%" height="15" fill="rgb(229,78,17)" fg:x="740" fg:w="1"/><text x="28.9879%" y="511.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::set_vertex_buffers (1 samples, 0.04%)</title><rect x="28.7767%" y="581" width="0.0388%" height="15" fill="rgb(248,89,10)" fg:x="741" fg:w="1"/><text x="29.0267%" y="591.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::StageResources::pre_allocate_buffers (1 samples, 0.04%)</title><rect x="28.7767%" y="565" width="0.0388%" height="15" fill="rgb(248,54,15)" fg:x="741" fg:w="1"/><text x="29.0267%" y="575.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="28.7767%" y="549" width="0.0388%" height="15" fill="rgb(223,116,6)" fg:x="741" fg:w="1"/><text x="29.0267%" y="559.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.04%)</title><rect x="28.7767%" y="533" width="0.0388%" height="15" fill="rgb(205,125,38)" fg:x="741" fg:w="1"/><text x="29.0267%" y="543.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="28.7767%" y="517" width="0.0388%" height="15" fill="rgb(251,78,38)" fg:x="741" fg:w="1"/><text x="29.0267%" y="527.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="28.7767%" y="501" width="0.0388%" height="15" fill="rgb(253,78,28)" fg:x="741" fg:w="1"/><text x="29.0267%" y="511.50"></text></g><g><title>wgpu_test`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="28.7767%" y="485" width="0.0388%" height="15" fill="rgb(209,120,3)" fg:x="741" fg:w="1"/><text x="29.0267%" y="495.50"></text></g><g><title>wgpu_test`&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.04%)</title><rect x="28.8155%" y="549" width="0.0388%" height="15" fill="rgb(238,229,9)" fg:x="742" fg:w="1"/><text x="29.0655%" y="559.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="28.8155%" y="533" width="0.0388%" height="15" fill="rgb(253,159,18)" fg:x="742" fg:w="1"/><text x="29.0655%" y="543.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="28.8155%" y="517" width="0.0388%" height="15" fill="rgb(244,42,34)" fg:x="742" fg:w="1"/><text x="29.0655%" y="527.50"></text></g><g><title>wgpu_test`gfx_backend_metal::internal::DepthStencilStates::get (2 samples, 0.08%)</title><rect x="28.8155%" y="581" width="0.0777%" height="15" fill="rgb(224,8,7)" fg:x="742" fg:w="2"/><text x="29.0655%" y="591.50"></text></g><g><title>wgpu_test`storage_map::StorageMap&lt;L,std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::get_or_create_with (2 samples, 0.08%)</title><rect x="28.8155%" y="565" width="0.0777%" height="15" fill="rgb(210,201,45)" fg:x="742" fg:w="2"/><text x="29.0655%" y="575.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="28.8544%" y="549" width="0.0388%" height="15" fill="rgb(252,185,21)" fg:x="743" fg:w="1"/><text x="29.1044%" y="559.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="28.8544%" y="533" width="0.0388%" height="15" fill="rgb(223,131,1)" fg:x="743" fg:w="1"/><text x="29.1044%" y="543.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="28.8544%" y="517" width="0.0388%" height="15" fill="rgb(245,141,16)" fg:x="743" fg:w="1"/><text x="29.1044%" y="527.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="28.8544%" y="501" width="0.0388%" height="15" fill="rgb(229,55,45)" fg:x="743" fg:w="1"/><text x="29.1044%" y="511.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="28.8544%" y="485" width="0.0388%" height="15" fill="rgb(208,92,15)" fg:x="743" fg:w="1"/><text x="29.1044%" y="495.50"></text></g><g><title>wgpu_test`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.04%)</title><rect x="28.8544%" y="469" width="0.0388%" height="15" fill="rgb(234,185,47)" fg:x="743" fg:w="1"/><text x="29.1044%" y="479.50"></text></g><g><title>wgpu_test`&lt;gfx_hal::pso::output_merger::DepthStencilDesc as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="28.8544%" y="453" width="0.0388%" height="15" fill="rgb(253,104,50)" fg:x="743" fg:w="1"/><text x="29.1044%" y="463.50"></text></g><g><title>wgpu_test`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="28.8544%" y="437" width="0.0388%" height="15" fill="rgb(205,70,7)" fg:x="743" fg:w="1"/><text x="29.1044%" y="447.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_pipeline (9 samples, 0.35%)</title><rect x="28.5825%" y="597" width="0.3495%" height="15" fill="rgb(240,178,43)" fg:x="736" fg:w="9"/><text x="28.8325%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::native::SubpassFormats::copy_from (1 samples, 0.04%)</title><rect x="28.8932%" y="581" width="0.0388%" height="15" fill="rgb(214,112,2)" fg:x="744" fg:w="1"/><text x="29.1432%" y="591.50"></text></g><g><title>wgpu_test`&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="28.8932%" y="565" width="0.0388%" height="15" fill="rgb(206,46,17)" fg:x="744" fg:w="1"/><text x="29.1432%" y="575.50"></text></g><g><title>wgpu_test`core::ptr::write (1 samples, 0.04%)</title><rect x="28.8932%" y="549" width="0.0388%" height="15" fill="rgb(225,220,16)" fg:x="744" fg:w="1"/><text x="29.1432%" y="559.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::end_render_pass (1 samples, 0.04%)</title><rect x="28.9320%" y="597" width="0.0388%" height="15" fill="rgb(238,65,40)" fg:x="745" fg:w="1"/><text x="29.1820%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::stop_encoding (1 samples, 0.04%)</title><rect x="28.9320%" y="581" width="0.0388%" height="15" fill="rgb(230,151,21)" fg:x="745" fg:w="1"/><text x="29.1820%" y="591.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::EncoderState::end (1 samples, 0.04%)</title><rect x="28.9320%" y="565" width="0.0388%" height="15" fill="rgb(218,58,49)" fg:x="745" fg:w="1"/><text x="29.1820%" y="575.50"></text></g><g><title>wgpu_test`metal::encoder::CommandEncoderRef::end_encoding (1 samples, 0.04%)</title><rect x="28.9320%" y="549" width="0.0388%" height="15" fill="rgb(219,179,14)" fg:x="745" fg:w="1"/><text x="29.1820%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="28.9320%" y="533" width="0.0388%" height="15" fill="rgb(223,72,1)" fg:x="745" fg:w="1"/><text x="29.1820%" y="543.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="28.9320%" y="517" width="0.0388%" height="15" fill="rgb(238,126,10)" fg:x="745" fg:w="1"/><text x="29.1820%" y="527.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderCmdEncoder endEncoding] (1 samples, 0.04%)</title><rect x="28.9320%" y="501" width="0.0388%" height="15" fill="rgb(224,206,38)" fg:x="745" fg:w="1"/><text x="29.1820%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="28.9320%" y="485" width="0.0388%" height="15" fill="rgb(212,201,54)" fg:x="745" fg:w="1"/><text x="29.1820%" y="495.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::push_graphics_constants (1 samples, 0.04%)</title><rect x="28.9709%" y="597" width="0.0388%" height="15" fill="rgb(218,154,48)" fg:x="746" fg:w="1"/><text x="29.2209%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::update_push_constants (1 samples, 0.04%)</title><rect x="28.9709%" y="581" width="0.0388%" height="15" fill="rgb(232,93,24)" fg:x="746" fg:w="1"/><text x="29.2209%" y="591.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="28.9709%" y="565" width="0.0388%" height="15" fill="rgb(245,30,21)" fg:x="746" fg:w="1"/><text x="29.2209%" y="575.50"></text></g><g><title>wgpu_test`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="28.9709%" y="549" width="0.0388%" height="15" fill="rgb(242,148,29)" fg:x="746" fg:w="1"/><text x="29.2209%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="28.9709%" y="533" width="0.0388%" height="15" fill="rgb(244,153,54)" fg:x="746" fg:w="1"/><text x="29.2209%" y="543.50"></text></g><g><title>wgpu_test`core::array::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T (1 samples, 0.04%)</title><rect x="29.0097%" y="581" width="0.0388%" height="15" fill="rgb(252,87,22)" fg:x="747" fg:w="1"/><text x="29.2597%" y="591.50"></text></g><g><title> N]&gt;::into_iter (1 samples, 0.04%)</title><rect x="29.0097%" y="565" width="0.0388%" height="15" fill="rgb(210,51,29)" fg:x="747" fg:w="1"/><text x="29.2597%" y="575.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="29.0097%" y="549" width="0.0388%" height="15" fill="rgb(242,136,47)" fg:x="747" fg:w="1"/><text x="29.2597%" y="559.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="29.0097%" y="533" width="0.0388%" height="15" fill="rgb(238,68,4)" fg:x="747" fg:w="1"/><text x="29.2597%" y="543.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="29.0097%" y="517" width="0.0388%" height="15" fill="rgb(242,161,30)" fg:x="747" fg:w="1"/><text x="29.2597%" y="527.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::set_scissors (2 samples, 0.08%)</title><rect x="29.0097%" y="597" width="0.0777%" height="15" fill="rgb(218,58,44)" fg:x="747" fg:w="2"/><text x="29.2597%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::set_scissor (1 samples, 0.04%)</title><rect x="29.0485%" y="581" width="0.0388%" height="15" fill="rgb(252,125,32)" fg:x="748" fg:w="1"/><text x="29.2985%" y="591.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::clamp_scissor (1 samples, 0.04%)</title><rect x="29.0485%" y="565" width="0.0388%" height="15" fill="rgb(219,178,0)" fg:x="748" fg:w="1"/><text x="29.2985%" y="575.50"></text></g><g><title>wgpu_test`core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="29.0485%" y="549" width="0.0388%" height="15" fill="rgb(213,152,7)" fg:x="748" fg:w="1"/><text x="29.2985%" y="559.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.04%)</title><rect x="29.0874%" y="565" width="0.0388%" height="15" fill="rgb(249,109,34)" fg:x="749" fg:w="1"/><text x="29.3374%" y="575.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="29.0874%" y="549" width="0.0388%" height="15" fill="rgb(232,96,21)" fg:x="749" fg:w="1"/><text x="29.3374%" y="559.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (1 samples, 0.04%)</title><rect x="29.1262%" y="437" width="0.0388%" height="15" fill="rgb(228,27,39)" fg:x="750" fg:w="1"/><text x="29.3762%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.04%)</title><rect x="29.1262%" y="421" width="0.0388%" height="15" fill="rgb(211,182,52)" fg:x="750" fg:w="1"/><text x="29.3762%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.04%)</title><rect x="29.1262%" y="405" width="0.0388%" height="15" fill="rgb(234,178,38)" fg:x="750" fg:w="1"/><text x="29.3762%" y="415.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (3 samples, 0.12%)</title><rect x="29.1262%" y="469" width="0.1165%" height="15" fill="rgb(221,111,3)" fg:x="750" fg:w="3"/><text x="29.3762%" y="479.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (3 samples, 0.12%)</title><rect x="29.1262%" y="453" width="0.1165%" height="15" fill="rgb(228,175,21)" fg:x="750" fg:w="3"/><text x="29.3762%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.08%)</title><rect x="29.1650%" y="437" width="0.0777%" height="15" fill="rgb(228,174,43)" fg:x="751" fg:w="2"/><text x="29.4150%" y="447.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (1 samples, 0.04%)</title><rect x="29.2039%" y="421" width="0.0388%" height="15" fill="rgb(211,191,0)" fg:x="752" fg:w="1"/><text x="29.4539%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.04%)</title><rect x="29.2039%" y="405" width="0.0388%" height="15" fill="rgb(253,117,3)" fg:x="752" fg:w="1"/><text x="29.4539%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.04%)</title><rect x="29.2039%" y="389" width="0.0388%" height="15" fill="rgb(241,127,19)" fg:x="752" fg:w="1"/><text x="29.4539%" y="399.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandPool as gfx_hal::pool::CommandPool&lt;gfx_backend_metal::Backend&gt;&gt;::reset (5 samples, 0.19%)</title><rect x="29.0874%" y="597" width="0.1942%" height="15" fill="rgb(218,103,12)" fg:x="749" fg:w="5"/><text x="29.3374%" y="607.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandBufferInner::reset (5 samples, 0.19%)</title><rect x="29.0874%" y="581" width="0.1942%" height="15" fill="rgb(236,214,43)" fg:x="749" fg:w="5"/><text x="29.3374%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;metal::commandbuffer::CommandBuffer&gt; (4 samples, 0.16%)</title><rect x="29.1262%" y="565" width="0.1553%" height="15" fill="rgb(244,144,19)" fg:x="750" fg:w="4"/><text x="29.3762%" y="575.50"></text></g><g><title>wgpu_test`&lt;metal::commandbuffer::CommandBuffer as core::ops::drop::Drop&gt;::drop (4 samples, 0.16%)</title><rect x="29.1262%" y="549" width="0.1553%" height="15" fill="rgb(246,188,10)" fg:x="750" fg:w="4"/><text x="29.3762%" y="559.50"></text></g><g><title>wgpu_test`metal::obj_drop (4 samples, 0.16%)</title><rect x="29.1262%" y="533" width="0.1553%" height="15" fill="rgb(212,193,33)" fg:x="750" fg:w="4"/><text x="29.3762%" y="543.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (4 samples, 0.16%)</title><rect x="29.1262%" y="517" width="0.1553%" height="15" fill="rgb(241,51,29)" fg:x="750" fg:w="4"/><text x="29.3762%" y="527.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (4 samples, 0.16%)</title><rect x="29.1262%" y="501" width="0.1553%" height="15" fill="rgb(211,58,19)" fg:x="750" fg:w="4"/><text x="29.3762%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (4 samples, 0.16%)</title><rect x="29.1262%" y="485" width="0.1553%" height="15" fill="rgb(229,111,26)" fg:x="750" fg:w="4"/><text x="29.3762%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.04%)</title><rect x="29.2427%" y="469" width="0.0388%" height="15" fill="rgb(213,115,40)" fg:x="753" fg:w="1"/><text x="29.4927%" y="479.50"></text></g><g><title>wgpu_test`gfx_backend_metal::window::SurfaceImage::into_drawable (1 samples, 0.04%)</title><rect x="29.2816%" y="581" width="0.0388%" height="15" fill="rgb(209,56,44)" fg:x="754" fg:w="1"/><text x="29.5316%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;gfx_backend_metal::native::ImageView&gt; (1 samples, 0.04%)</title><rect x="29.2816%" y="565" width="0.0388%" height="15" fill="rgb(230,108,32)" fg:x="754" fg:w="1"/><text x="29.5316%" y="575.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;metal::texture::Texture&gt; (1 samples, 0.04%)</title><rect x="29.2816%" y="549" width="0.0388%" height="15" fill="rgb(216,165,31)" fg:x="754" fg:w="1"/><text x="29.5316%" y="559.50"></text></g><g><title>wgpu_test`metal::obj_drop (1 samples, 0.04%)</title><rect x="29.2816%" y="533" width="0.0388%" height="15" fill="rgb(218,122,21)" fg:x="754" fg:w="1"/><text x="29.5316%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.16%)</title><rect x="29.3204%" y="453" width="0.1553%" height="15" fill="rgb(223,224,47)" fg:x="755" fg:w="4"/><text x="29.5704%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (4 samples, 0.16%)</title><rect x="29.3204%" y="437" width="0.1553%" height="15" fill="rgb(238,102,44)" fg:x="755" fg:w="4"/><text x="29.5704%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (4 samples, 0.16%)</title><rect x="29.3204%" y="421" width="0.1553%" height="15" fill="rgb(236,46,40)" fg:x="755" fg:w="4"/><text x="29.5704%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_resume_activate (1 samples, 0.04%)</title><rect x="29.4757%" y="453" width="0.0388%" height="15" fill="rgb(247,202,50)" fg:x="759" fg:w="1"/><text x="29.7257%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_compute_priority_and_wlh (1 samples, 0.04%)</title><rect x="29.4757%" y="437" width="0.0388%" height="15" fill="rgb(209,99,20)" fg:x="759" fg:w="1"/><text x="29.7257%" y="447.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::present (7 samples, 0.27%)</title><rect x="29.2816%" y="597" width="0.2718%" height="15" fill="rgb(252,27,34)" fg:x="754" fg:w="7"/><text x="29.5316%" y="607.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.23%)</title><rect x="29.3204%" y="581" width="0.2330%" height="15" fill="rgb(215,206,23)" fg:x="755" fg:w="6"/><text x="29.5704%" y="591.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::present::_{{closure}} (6 samples, 0.23%)</title><rect x="29.3204%" y="565" width="0.2330%" height="15" fill="rgb(212,135,36)" fg:x="755" fg:w="6"/><text x="29.5704%" y="575.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::present_drawable (6 samples, 0.23%)</title><rect x="29.3204%" y="549" width="0.2330%" height="15" fill="rgb(240,189,1)" fg:x="755" fg:w="6"/><text x="29.5704%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (6 samples, 0.23%)</title><rect x="29.3204%" y="533" width="0.2330%" height="15" fill="rgb(242,56,20)" fg:x="755" fg:w="6"/><text x="29.5704%" y="543.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (6 samples, 0.23%)</title><rect x="29.3204%" y="517" width="0.2330%" height="15" fill="rgb(247,132,33)" fg:x="755" fg:w="6"/><text x="29.5704%" y="527.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer presentDrawable:] (6 samples, 0.23%)</title><rect x="29.3204%" y="501" width="0.2330%" height="15" fill="rgb(208,149,11)" fg:x="755" fg:w="6"/><text x="29.5704%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (6 samples, 0.23%)</title><rect x="29.3204%" y="485" width="0.2330%" height="15" fill="rgb(211,33,11)" fg:x="755" fg:w="6"/><text x="29.5704%" y="495.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable addPresentScheduledHandler:] (6 samples, 0.23%)</title><rect x="29.3204%" y="469" width="0.2330%" height="15" fill="rgb(221,29,38)" fg:x="755" fg:w="6"/><text x="29.5704%" y="479.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.04%)</title><rect x="29.5146%" y="453" width="0.0388%" height="15" fill="rgb(206,182,49)" fg:x="760" fg:w="1"/><text x="29.7646%" y="463.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="29.5534%" y="581" width="0.0388%" height="15" fill="rgb(216,140,1)" fg:x="761" fg:w="1"/><text x="29.8034%" y="591.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="29.5922%" y="533" width="0.0388%" height="15" fill="rgb(232,57,40)" fg:x="762" fg:w="1"/><text x="29.8422%" y="543.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (2 samples, 0.08%)</title><rect x="29.5922%" y="581" width="0.0777%" height="15" fill="rgb(224,186,18)" fg:x="762" fg:w="2"/><text x="29.8422%" y="591.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="29.5922%" y="565" width="0.0777%" height="15" fill="rgb(215,121,11)" fg:x="762" fg:w="2"/><text x="29.8422%" y="575.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.08%)</title><rect x="29.5922%" y="549" width="0.0777%" height="15" fill="rgb(245,147,10)" fg:x="762" fg:w="2"/><text x="29.8422%" y="559.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="29.6311%" y="533" width="0.0388%" height="15" fill="rgb(238,153,13)" fg:x="763" fg:w="1"/><text x="29.8811%" y="543.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::find_map (1 samples, 0.04%)</title><rect x="29.6311%" y="517" width="0.0388%" height="15" fill="rgb(233,108,0)" fg:x="763" fg:w="1"/><text x="29.8811%" y="527.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="29.6311%" y="501" width="0.0388%" height="15" fill="rgb(212,157,17)" fg:x="763" fg:w="1"/><text x="29.8811%" y="511.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1 samples, 0.04%)</title><rect x="29.6311%" y="485" width="0.0388%" height="15" fill="rgb(225,213,38)" fg:x="763" fg:w="1"/><text x="29.8811%" y="495.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit::_{{closure}} (1 samples, 0.04%)</title><rect x="29.6311%" y="469" width="0.0388%" height="15" fill="rgb(248,16,11)" fg:x="763" fg:w="1"/><text x="29.8811%" y="479.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="29.6699%" y="549" width="0.0388%" height="15" fill="rgb(241,33,4)" fg:x="764" fg:w="1"/><text x="29.9199%" y="559.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="29.7087%" y="517" width="0.0388%" height="15" fill="rgb(222,26,43)" fg:x="765" fg:w="1"/><text x="29.9587%" y="527.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="29.7087%" y="501" width="0.0388%" height="15" fill="rgb(243,29,36)" fg:x="765" fg:w="1"/><text x="29.9587%" y="511.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.04%)</title><rect x="29.7087%" y="485" width="0.0388%" height="15" fill="rgb(241,9,27)" fg:x="765" fg:w="1"/><text x="29.9587%" y="495.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;metal::buffer::Buffer&gt;&gt; (1 samples, 0.04%)</title><rect x="29.7476%" y="485" width="0.0388%" height="15" fill="rgb(205,117,26)" fg:x="766" fg:w="1"/><text x="29.9976%" y="495.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="29.7476%" y="469" width="0.0388%" height="15" fill="rgb(209,80,39)" fg:x="766" fg:w="1"/><text x="29.9976%" y="479.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;metal::buffer::Buffer,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="29.7476%" y="453" width="0.0388%" height="15" fill="rgb(239,155,6)" fg:x="766" fg:w="1"/><text x="29.9976%" y="463.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="29.7476%" y="437" width="0.0388%" height="15" fill="rgb(212,104,12)" fg:x="766" fg:w="1"/><text x="29.9976%" y="447.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.12%)</title><rect x="29.7087%" y="549" width="0.1165%" height="15" fill="rgb(234,204,3)" fg:x="765" fg:w="3"/><text x="29.9587%" y="559.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.12%)</title><rect x="29.7087%" y="533" width="0.1165%" height="15" fill="rgb(251,218,7)" fg:x="765" fg:w="3"/><text x="29.9587%" y="543.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="29.7476%" y="517" width="0.0777%" height="15" fill="rgb(221,81,32)" fg:x="766" fg:w="2"/><text x="29.9976%" y="527.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="29.7476%" y="501" width="0.0777%" height="15" fill="rgb(214,152,26)" fg:x="766" fg:w="2"/><text x="29.9976%" y="511.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;u32&gt;&gt; (1 samples, 0.04%)</title><rect x="29.7864%" y="485" width="0.0388%" height="15" fill="rgb(223,22,3)" fg:x="767" fg:w="1"/><text x="30.0364%" y="495.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="29.7864%" y="469" width="0.0388%" height="15" fill="rgb(207,174,7)" fg:x="767" fg:w="1"/><text x="30.0364%" y="479.50"></text></g><g><title>wgpu_test`&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="29.7864%" y="453" width="0.0388%" height="15" fill="rgb(224,19,52)" fg:x="767" fg:w="1"/><text x="30.0364%" y="463.50"></text></g><g><title>wgpu_test`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (1 samples, 0.04%)</title><rect x="29.8252%" y="549" width="0.0388%" height="15" fill="rgb(228,24,14)" fg:x="768" fg:w="1"/><text x="30.0752%" y="559.50"></text></g><g><title>wgpu_test`block::ConcreteBlock&lt;A,R,F&gt;::new (1 samples, 0.04%)</title><rect x="29.8641%" y="549" width="0.0388%" height="15" fill="rgb(230,153,43)" fg:x="769" fg:w="1"/><text x="30.1141%" y="559.50"></text></g><g><title>wgpu_test`&lt;X as block::IntoConcreteBlock&lt;(A,)&gt;&gt;::into_concrete_block (1 samples, 0.04%)</title><rect x="29.8641%" y="533" width="0.0388%" height="15" fill="rgb(231,106,12)" fg:x="769" fg:w="1"/><text x="30.1141%" y="543.50"></text></g><g><title>wgpu_test`DYLD-STUB$$memcpy (1 samples, 0.04%)</title><rect x="29.8641%" y="517" width="0.0388%" height="15" fill="rgb(215,92,2)" fg:x="769" fg:w="1"/><text x="30.1141%" y="527.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="29.9029%" y="533" width="0.0388%" height="15" fill="rgb(249,143,25)" fg:x="770" fg:w="1"/><text x="30.1529%" y="543.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="29.9029%" y="517" width="0.0388%" height="15" fill="rgb(252,7,35)" fg:x="770" fg:w="1"/><text x="30.1529%" y="527.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="29.9029%" y="501" width="0.0388%" height="15" fill="rgb(216,69,40)" fg:x="770" fg:w="1"/><text x="30.1529%" y="511.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="29.9029%" y="485" width="0.0388%" height="15" fill="rgb(240,36,33)" fg:x="770" fg:w="1"/><text x="30.1529%" y="495.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (2 samples, 0.08%)</title><rect x="29.9029%" y="549" width="0.0777%" height="15" fill="rgb(231,128,14)" fg:x="770" fg:w="2"/><text x="30.1529%" y="559.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="29.9417%" y="533" width="0.0388%" height="15" fill="rgb(245,143,14)" fg:x="771" fg:w="1"/><text x="30.1917%" y="543.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="29.9417%" y="517" width="0.0388%" height="15" fill="rgb(222,130,28)" fg:x="771" fg:w="1"/><text x="30.1917%" y="527.50"></text></g><g><title>wgpu_test`objc::message::platform::arch::msg_send_fn (1 samples, 0.04%)</title><rect x="29.9806%" y="485" width="0.0388%" height="15" fill="rgb(212,10,48)" fg:x="772" fg:w="1"/><text x="30.2306%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.04%)</title><rect x="30.0194%" y="389" width="0.0388%" height="15" fill="rgb(254,118,45)" fg:x="773" fg:w="1"/><text x="30.2694%" y="399.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.04%)</title><rect x="30.0194%" y="373" width="0.0388%" height="15" fill="rgb(228,6,45)" fg:x="773" fg:w="1"/><text x="30.2694%" y="383.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (2 samples, 0.08%)</title><rect x="30.0194%" y="421" width="0.0777%" height="15" fill="rgb(241,18,35)" fg:x="773" fg:w="2"/><text x="30.2694%" y="431.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.08%)</title><rect x="30.0194%" y="405" width="0.0777%" height="15" fill="rgb(227,214,53)" fg:x="773" fg:w="2"/><text x="30.2694%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.04%)</title><rect x="30.0583%" y="389" width="0.0388%" height="15" fill="rgb(224,107,51)" fg:x="774" fg:w="1"/><text x="30.3083%" y="399.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn_temp (4 samples, 0.16%)</title><rect x="29.9806%" y="517" width="0.1553%" height="15" fill="rgb(248,60,28)" fg:x="772" fg:w="4"/><text x="30.2306%" y="527.50"></text></g><g><title>wgpu_test`metal::commandqueue::CommandQueueRef::new_command_buffer_with_unretained_references (4 samples, 0.16%)</title><rect x="29.9806%" y="501" width="0.1553%" height="15" fill="rgb(249,101,23)" fg:x="772" fg:w="4"/><text x="30.2306%" y="511.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (3 samples, 0.12%)</title><rect x="30.0194%" y="485" width="0.1165%" height="15" fill="rgb(228,51,19)" fg:x="773" fg:w="3"/><text x="30.2694%" y="495.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (3 samples, 0.12%)</title><rect x="30.0194%" y="469" width="0.1165%" height="15" fill="rgb(213,20,6)" fg:x="773" fg:w="3"/><text x="30.2694%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (3 samples, 0.12%)</title><rect x="30.0194%" y="453" width="0.1165%" height="15" fill="rgb(212,124,10)" fg:x="773" fg:w="3"/><text x="30.2694%" y="463.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (3 samples, 0.12%)</title><rect x="30.0194%" y="437" width="0.1165%" height="15" fill="rgb(248,3,40)" fg:x="773" fg:w="3"/><text x="30.2694%" y="447.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:] (1 samples, 0.04%)</title><rect x="30.0971%" y="421" width="0.0388%" height="15" fill="rgb(223,178,23)" fg:x="775" fg:w="1"/><text x="30.3471%" y="431.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap_or_else (5 samples, 0.19%)</title><rect x="29.9806%" y="549" width="0.1942%" height="15" fill="rgb(240,132,45)" fg:x="772" fg:w="5"/><text x="30.2306%" y="559.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit::_{{closure}}::_{{closure}} (5 samples, 0.19%)</title><rect x="29.9806%" y="533" width="0.1942%" height="15" fill="rgb(245,164,36)" fg:x="772" fg:w="5"/><text x="30.2306%" y="543.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.04%)</title><rect x="30.1359%" y="517" width="0.0388%" height="15" fill="rgb(231,188,53)" fg:x="776" fg:w="1"/><text x="30.3859%" y="527.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (1 samples, 0.04%)</title><rect x="30.1359%" y="501" width="0.0388%" height="15" fill="rgb(237,198,39)" fg:x="776" fg:w="1"/><text x="30.3859%" y="511.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="30.1359%" y="485" width="0.0388%" height="15" fill="rgb(223,120,35)" fg:x="776" fg:w="1"/><text x="30.3859%" y="495.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="30.1359%" y="469" width="0.0388%" height="15" fill="rgb(253,107,49)" fg:x="776" fg:w="1"/><text x="30.3859%" y="479.50"></text></g><g><title>Foundation`+[NSString allocWithZone:] (1 samples, 0.04%)</title><rect x="30.1359%" y="453" width="0.0388%" height="15" fill="rgb(216,44,31)" fg:x="776" fg:w="1"/><text x="30.3859%" y="463.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer commit] (1 samples, 0.04%)</title><rect x="30.1748%" y="485" width="0.0388%" height="15" fill="rgb(253,87,21)" fg:x="777" fg:w="1"/><text x="30.4248%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer commit] (1 samples, 0.04%)</title><rect x="30.1748%" y="469" width="0.0388%" height="15" fill="rgb(226,18,2)" fg:x="777" fg:w="1"/><text x="30.4248%" y="479.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (1 samples, 0.04%)</title><rect x="30.1748%" y="453" width="0.0388%" height="15" fill="rgb(216,8,46)" fg:x="777" fg:w="1"/><text x="30.4248%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (1 samples, 0.04%)</title><rect x="30.1748%" y="437" width="0.0388%" height="15" fill="rgb(226,140,39)" fg:x="777" fg:w="1"/><text x="30.4248%" y="447.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueBlocker::submit_impl (2 samples, 0.08%)</title><rect x="30.1748%" y="549" width="0.0777%" height="15" fill="rgb(221,194,54)" fg:x="777" fg:w="2"/><text x="30.4248%" y="559.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::commit (2 samples, 0.08%)</title><rect x="30.1748%" y="533" width="0.0777%" height="15" fill="rgb(213,92,11)" fg:x="777" fg:w="2"/><text x="30.4248%" y="543.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="30.1748%" y="517" width="0.0777%" height="15" fill="rgb(229,162,46)" fg:x="777" fg:w="2"/><text x="30.4248%" y="527.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="30.1748%" y="501" width="0.0777%" height="15" fill="rgb(214,111,36)" fg:x="777" fg:w="2"/><text x="30.4248%" y="511.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.04%)</title><rect x="30.2136%" y="485" width="0.0388%" height="15" fill="rgb(207,6,21)" fg:x="778" fg:w="1"/><text x="30.4636%" y="495.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit::_{{closure}} (16 samples, 0.62%)</title><rect x="29.6699%" y="565" width="0.6214%" height="15" fill="rgb(213,127,38)" fg:x="764" fg:w="16"/><text x="29.9199%" y="575.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="30.2524%" y="549" width="0.0388%" height="15" fill="rgb(238,118,32)" fg:x="779" fg:w="1"/><text x="30.5024%" y="559.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="30.2524%" y="533" width="0.0388%" height="15" fill="rgb(240,139,39)" fg:x="779" fg:w="1"/><text x="30.5024%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="30.2524%" y="517" width="0.0388%" height="15" fill="rgb(235,10,37)" fg:x="779" fg:w="1"/><text x="30.5024%" y="527.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.04%)</title><rect x="30.2913%" y="565" width="0.0388%" height="15" fill="rgb(249,171,38)" fg:x="780" fg:w="1"/><text x="30.5413%" y="575.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (21 samples, 0.82%)</title><rect x="29.5534%" y="597" width="0.8155%" height="15" fill="rgb(242,144,32)" fg:x="761" fg:w="21"/><text x="29.8034%" y="607.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (18 samples, 0.70%)</title><rect x="29.6699%" y="581" width="0.6990%" height="15" fill="rgb(217,117,21)" fg:x="764" fg:w="18"/><text x="29.9199%" y="591.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="30.3301%" y="565" width="0.0388%" height="15" fill="rgb(249,87,1)" fg:x="781" fg:w="1"/><text x="30.5801%" y="575.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::reset_fence (1 samples, 0.04%)</title><rect x="30.3689%" y="597" width="0.0388%" height="15" fill="rgb(248,196,48)" fg:x="782" fg:w="1"/><text x="30.6189%" y="607.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;gfx_backend_metal::native::FenceInner&gt; (1 samples, 0.04%)</title><rect x="30.3689%" y="581" width="0.0388%" height="15" fill="rgb(251,206,33)" fg:x="782" fg:w="1"/><text x="30.6189%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;metal::commandbuffer::CommandBuffer&gt; (1 samples, 0.04%)</title><rect x="30.3689%" y="565" width="0.0388%" height="15" fill="rgb(232,141,28)" fg:x="782" fg:w="1"/><text x="30.6189%" y="575.50"></text></g><g><title>wgpu_test`&lt;metal::commandbuffer::CommandBuffer as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="30.3689%" y="549" width="0.0388%" height="15" fill="rgb(209,167,14)" fg:x="782" fg:w="1"/><text x="30.6189%" y="559.50"></text></g><g><title>wgpu_test`metal::obj_drop (1 samples, 0.04%)</title><rect x="30.3689%" y="533" width="0.0388%" height="15" fill="rgb(225,11,50)" fg:x="782" fg:w="1"/><text x="30.6189%" y="543.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="30.3689%" y="517" width="0.0388%" height="15" fill="rgb(209,50,20)" fg:x="782" fg:w="1"/><text x="30.6189%" y="527.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="30.3689%" y="501" width="0.0388%" height="15" fill="rgb(212,17,46)" fg:x="782" fg:w="1"/><text x="30.6189%" y="511.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (1 samples, 0.04%)</title><rect x="30.3689%" y="485" width="0.0388%" height="15" fill="rgb(216,101,39)" fg:x="782" fg:w="1"/><text x="30.6189%" y="495.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (1 samples, 0.04%)</title><rect x="30.3689%" y="469" width="0.0388%" height="15" fill="rgb(212,228,48)" fg:x="782" fg:w="1"/><text x="30.6189%" y="479.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.04%)</title><rect x="30.3689%" y="453" width="0.0388%" height="15" fill="rgb(250,6,50)" fg:x="782" fg:w="1"/><text x="30.6189%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (1 samples, 0.04%)</title><rect x="30.3689%" y="437" width="0.0388%" height="15" fill="rgb(250,160,48)" fg:x="782" fg:w="1"/><text x="30.6189%" y="447.50"></text></g><g><title>Metal`-[_MTLCommandBuffer executeSynchronizationNotifications:] (1 samples, 0.04%)</title><rect x="30.3689%" y="421" width="0.0388%" height="15" fill="rgb(244,216,33)" fg:x="782" fg:w="1"/><text x="30.6189%" y="431.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="30.4854%" y="581" width="0.0388%" height="15" fill="rgb(207,157,5)" fg:x="785" fg:w="1"/><text x="30.7354%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="30.4854%" y="565" width="0.0388%" height="15" fill="rgb(228,199,8)" fg:x="785" fg:w="1"/><text x="30.7354%" y="575.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="30.5243%" y="581" width="0.0388%" height="15" fill="rgb(227,80,20)" fg:x="786" fg:w="1"/><text x="30.7743%" y="591.50"></text></g><g><title>wgpu_test`core::time::Duration::as_secs (1 samples, 0.04%)</title><rect x="30.5631%" y="581" width="0.0388%" height="15" fill="rgb(222,9,33)" fg:x="787" fg:w="1"/><text x="30.8131%" y="591.50"></text></g><g><title>wgpu_test`foreign_types_shared::ForeignTypeRef::from_ptr (1 samples, 0.04%)</title><rect x="30.6019%" y="581" width="0.0388%" height="15" fill="rgb(239,44,28)" fg:x="788" fg:w="1"/><text x="30.8519%" y="591.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="30.6408%" y="549" width="0.0388%" height="15" fill="rgb(249,187,43)" fg:x="789" fg:w="1"/><text x="30.8908%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.16%)</title><rect x="30.6796%" y="533" width="0.1553%" height="15" fill="rgb(216,141,28)" fg:x="790" fg:w="4"/><text x="30.9296%" y="543.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.19%)</title><rect x="30.6796%" y="549" width="0.1942%" height="15" fill="rgb(230,154,53)" fg:x="790" fg:w="5"/><text x="30.9296%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="30.8350%" y="533" width="0.0388%" height="15" fill="rgb(227,82,4)" fg:x="794" fg:w="1"/><text x="31.0850%" y="543.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueBlocker::triage (7 samples, 0.27%)</title><rect x="30.6408%" y="581" width="0.2718%" height="15" fill="rgb(220,107,16)" fg:x="789" fg:w="7"/><text x="30.8908%" y="591.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.27%)</title><rect x="30.6408%" y="565" width="0.2718%" height="15" fill="rgb(207,187,2)" fg:x="789" fg:w="7"/><text x="30.8908%" y="575.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="30.8738%" y="549" width="0.0388%" height="15" fill="rgb(210,162,52)" fg:x="795" fg:w="1"/><text x="31.1238%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="30.8738%" y="533" width="0.0388%" height="15" fill="rgb(217,216,49)" fg:x="795" fg:w="1"/><text x="31.1238%" y="543.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.04%)</title><rect x="30.9126%" y="549" width="0.0388%" height="15" fill="rgb(218,146,49)" fg:x="796" fg:w="1"/><text x="31.1626%" y="559.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.04%)</title><rect x="30.9126%" y="533" width="0.0388%" height="15" fill="rgb(216,55,40)" fg:x="796" fg:w="1"/><text x="31.1626%" y="543.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.04%)</title><rect x="30.9515%" y="549" width="0.0388%" height="15" fill="rgb(208,196,21)" fg:x="797" fg:w="1"/><text x="31.2015%" y="559.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="30.9515%" y="533" width="0.0388%" height="15" fill="rgb(242,117,42)" fg:x="797" fg:w="1"/><text x="31.2015%" y="543.50"></text></g><g><title>wgpu_test`lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.12%)</title><rect x="30.9126%" y="581" width="0.1165%" height="15" fill="rgb(210,11,23)" fg:x="796" fg:w="3"/><text x="31.1626%" y="591.50"></text></g><g><title>wgpu_test`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.12%)</title><rect x="30.9126%" y="565" width="0.1165%" height="15" fill="rgb(217,110,2)" fg:x="796" fg:w="3"/><text x="31.1626%" y="575.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="30.9903%" y="549" width="0.0388%" height="15" fill="rgb(229,77,54)" fg:x="798" fg:w="1"/><text x="31.2403%" y="559.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="31.0680%" y="565" width="0.0388%" height="15" fill="rgb(218,53,16)" fg:x="800" fg:w="1"/><text x="31.3180%" y="575.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="31.1068%" y="565" width="0.0388%" height="15" fill="rgb(215,38,13)" fg:x="801" fg:w="1"/><text x="31.3568%" y="575.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::status (7 samples, 0.27%)</title><rect x="31.0291%" y="581" width="0.2718%" height="15" fill="rgb(235,42,18)" fg:x="799" fg:w="7"/><text x="31.2791%" y="591.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (4 samples, 0.16%)</title><rect x="31.1456%" y="565" width="0.1553%" height="15" fill="rgb(219,66,54)" fg:x="802" fg:w="4"/><text x="31.3956%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.16%)</title><rect x="31.1456%" y="549" width="0.1553%" height="15" fill="rgb(222,205,4)" fg:x="802" fg:w="4"/><text x="31.3956%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.04%)</title><rect x="31.3398%" y="533" width="0.0388%" height="15" fill="rgb(227,213,46)" fg:x="807" fg:w="1"/><text x="31.5898%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (77 samples, 2.99%)</title><rect x="31.3398%" y="549" width="2.9903%" height="15" fill="rgb(250,145,42)" fg:x="807" fg:w="77"/><text x="31.5898%" y="559.50">lib..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (76 samples, 2.95%)</title><rect x="31.3786%" y="533" width="2.9515%" height="15" fill="rgb(219,15,2)" fg:x="808" fg:w="76"/><text x="31.6286%" y="543.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (3 samples, 0.12%)</title><rect x="34.3301%" y="549" width="0.1165%" height="15" fill="rgb(231,181,52)" fg:x="884" fg:w="3"/><text x="34.5801%" y="559.50"></text></g><g><title>libsystem_c.dylib`nanosleep (82 samples, 3.18%)</title><rect x="31.3010%" y="565" width="3.1845%" height="15" fill="rgb(235,1,42)" fg:x="806" fg:w="82"/><text x="31.5510%" y="575.50">lib..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.04%)</title><rect x="34.4466%" y="549" width="0.0388%" height="15" fill="rgb(249,88,27)" fg:x="887" fg:w="1"/><text x="34.6966%" y="559.50"></text></g><g><title>wgpu_test`std::thread::sleep (122 samples, 4.74%)</title><rect x="31.3010%" y="581" width="4.7379%" height="15" fill="rgb(235,145,16)" fg:x="806" fg:w="122"/><text x="31.5510%" y="591.50">wgpu_t..</text></g><g><title>libsystem_kernel.dylib`__semwait_signal (40 samples, 1.55%)</title><rect x="34.4854%" y="565" width="1.5534%" height="15" fill="rgb(237,114,19)" fg:x="888" fg:w="40"/><text x="34.7354%" y="575.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::wait_for_fence (149 samples, 5.79%)</title><rect x="30.4078%" y="597" width="5.7864%" height="15" fill="rgb(238,51,50)" fg:x="783" fg:w="149"/><text x="30.6578%" y="607.50">wgpu_te..</text></g><g><title>wgpu_test`std::time::Instant::elapsed (4 samples, 0.16%)</title><rect x="36.0388%" y="581" width="0.1553%" height="15" fill="rgb(205,194,25)" fg:x="928" fg:w="4"/><text x="36.2888%" y="591.50"></text></g><g><title>wgpu_test`lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.04%)</title><rect x="36.1942%" y="581" width="0.0388%" height="15" fill="rgb(215,203,17)" fg:x="932" fg:w="1"/><text x="36.4442%" y="591.50"></text></g><g><title>wgpu_test`metal::CoreAnimationDrawableRef::texture (1 samples, 0.04%)</title><rect x="36.2330%" y="549" width="0.0388%" height="15" fill="rgb(233,112,49)" fg:x="933" fg:w="1"/><text x="36.4830%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="36.2330%" y="533" width="0.0388%" height="15" fill="rgb(241,130,26)" fg:x="933" fg:w="1"/><text x="36.4830%" y="543.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (3 samples, 0.12%)</title><rect x="36.2718%" y="485" width="0.1165%" height="15" fill="rgb(252,223,19)" fg:x="934" fg:w="3"/><text x="36.5218%" y="495.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent init] (3 samples, 0.12%)</title><rect x="36.2718%" y="469" width="0.1165%" height="15" fill="rgb(211,95,25)" fg:x="934" fg:w="3"/><text x="36.5218%" y="479.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.12%)</title><rect x="36.2718%" y="453" width="0.1165%" height="15" fill="rgb(251,182,27)" fg:x="934" fg:w="3"/><text x="36.5218%" y="463.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.12%)</title><rect x="36.2718%" y="437" width="0.1165%" height="15" fill="rgb(238,24,4)" fg:x="934" fg:w="3"/><text x="36.5218%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.12%)</title><rect x="36.2718%" y="421" width="0.1165%" height="15" fill="rgb(224,220,25)" fg:x="934" fg:w="3"/><text x="36.5218%" y="431.50"></text></g><g><title>IOSurface`IOSurfaceClientGetDetachModeCode (1 samples, 0.04%)</title><rect x="36.3883%" y="453" width="0.0388%" height="15" fill="rgb(239,133,26)" fg:x="937" fg:w="1"/><text x="36.6383%" y="463.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (2 samples, 0.08%)</title><rect x="36.3883%" y="469" width="0.0777%" height="15" fill="rgb(211,94,48)" fg:x="937" fg:w="2"/><text x="36.6383%" y="479.50"></text></g><g><title>IOSurface`IOSurfaceGetDetachModeCode (1 samples, 0.04%)</title><rect x="36.4272%" y="453" width="0.0388%" height="15" fill="rgb(239,87,6)" fg:x="938" fg:w="1"/><text x="36.6772%" y="463.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (3 samples, 0.12%)</title><rect x="36.3883%" y="485" width="0.1165%" height="15" fill="rgb(227,62,0)" fg:x="937" fg:w="3"/><text x="36.6383%" y="495.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (1 samples, 0.04%)</title><rect x="36.4660%" y="469" width="0.0388%" height="15" fill="rgb(211,226,4)" fg:x="939" fg:w="1"/><text x="36.7160%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (1 samples, 0.04%)</title><rect x="36.4660%" y="453" width="0.0388%" height="15" fill="rgb(253,38,52)" fg:x="939" fg:w="1"/><text x="36.7160%" y="463.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (1 samples, 0.04%)</title><rect x="36.4660%" y="437" width="0.0388%" height="15" fill="rgb(229,126,40)" fg:x="939" fg:w="1"/><text x="36.7160%" y="447.50"></text></g><g><title>QuartzCore`CA::Render::create_iosurface_with_pixel_format (1 samples, 0.04%)</title><rect x="36.5049%" y="469" width="0.0388%" height="15" fill="rgb(229,165,44)" fg:x="940" fg:w="1"/><text x="36.7549%" y="479.50"></text></g><g><title>QuartzCore`CA::SurfaceUtil::CAIOSurfaceCreate (1 samples, 0.04%)</title><rect x="36.5049%" y="453" width="0.0388%" height="15" fill="rgb(247,95,47)" fg:x="940" fg:w="1"/><text x="36.7549%" y="463.50"></text></g><g><title>IOSurface`-[IOSurface initWithProperties:] (1 samples, 0.04%)</title><rect x="36.5049%" y="437" width="0.0388%" height="15" fill="rgb(216,140,30)" fg:x="940" fg:w="1"/><text x="36.7549%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceClientCreateChild (1 samples, 0.04%)</title><rect x="36.5049%" y="421" width="0.0388%" height="15" fill="rgb(246,214,8)" fg:x="940" fg:w="1"/><text x="36.7549%" y="431.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.04%)</title><rect x="36.5049%" y="405" width="0.0388%" height="15" fill="rgb(227,224,15)" fg:x="940" fg:w="1"/><text x="36.7549%" y="415.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.04%)</title><rect x="36.5049%" y="389" width="0.0388%" height="15" fill="rgb(233,175,4)" fg:x="940" fg:w="1"/><text x="36.7549%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="36.5049%" y="373" width="0.0388%" height="15" fill="rgb(221,66,45)" fg:x="940" fg:w="1"/><text x="36.7549%" y="383.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (2 samples, 0.08%)</title><rect x="36.5049%" y="485" width="0.0777%" height="15" fill="rgb(221,178,18)" fg:x="940" fg:w="2"/><text x="36.7549%" y="495.50"></text></g><g><title>QuartzCore`register_drawable(_CAMetalDrawablePrivate*, _CAImageQueue*) (1 samples, 0.04%)</title><rect x="36.5437%" y="469" width="0.0388%" height="15" fill="rgb(213,81,29)" fg:x="941" fg:w="1"/><text x="36.7937%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueueRegisterIOSurfaceBuffer (1 samples, 0.04%)</title><rect x="36.5437%" y="453" width="0.0388%" height="15" fill="rgb(220,89,49)" fg:x="941" fg:w="1"/><text x="36.7937%" y="463.50"></text></g><g><title>QuartzCore`CA::Render::Surface::Surface (1 samples, 0.04%)</title><rect x="36.5437%" y="437" width="0.0388%" height="15" fill="rgb(227,60,33)" fg:x="941" fg:w="1"/><text x="36.7937%" y="447.50"></text></g><g><title>QuartzCore`CA::Render::iosurface_load_attachments (1 samples, 0.04%)</title><rect x="36.5437%" y="421" width="0.0388%" height="15" fill="rgb(205,113,12)" fg:x="941" fg:w="1"/><text x="36.7937%" y="431.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.04%)</title><rect x="36.5437%" y="405" width="0.0388%" height="15" fill="rgb(211,32,1)" fg:x="941" fg:w="1"/><text x="36.7937%" y="415.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (1 samples, 0.04%)</title><rect x="36.5437%" y="389" width="0.0388%" height="15" fill="rgb(246,2,12)" fg:x="941" fg:w="1"/><text x="36.7937%" y="399.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (1 samples, 0.04%)</title><rect x="36.5437%" y="373" width="0.0388%" height="15" fill="rgb(243,37,27)" fg:x="941" fg:w="1"/><text x="36.7937%" y="383.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_metal::Backend&gt;&gt;::acquire_image (11 samples, 0.43%)</title><rect x="36.1942%" y="597" width="0.4272%" height="15" fill="rgb(248,211,31)" fg:x="932" fg:w="11"/><text x="36.4442%" y="607.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (10 samples, 0.39%)</title><rect x="36.2330%" y="581" width="0.3883%" height="15" fill="rgb(242,146,47)" fg:x="933" fg:w="10"/><text x="36.4830%" y="591.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_metal::Backend&gt;&gt;::acquire_image::_{{closure}} (10 samples, 0.39%)</title><rect x="36.2330%" y="565" width="0.3883%" height="15" fill="rgb(206,70,20)" fg:x="933" fg:w="10"/><text x="36.4830%" y="575.50"></text></g><g><title>wgpu_test`metal::CoreAnimationLayerRef::next_drawable (9 samples, 0.35%)</title><rect x="36.2718%" y="549" width="0.3495%" height="15" fill="rgb(215,10,51)" fg:x="934" fg:w="9"/><text x="36.5218%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (9 samples, 0.35%)</title><rect x="36.2718%" y="533" width="0.3495%" height="15" fill="rgb(243,178,53)" fg:x="934" fg:w="9"/><text x="36.5218%" y="543.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (9 samples, 0.35%)</title><rect x="36.2718%" y="517" width="0.3495%" height="15" fill="rgb(233,221,20)" fg:x="934" fg:w="9"/><text x="36.5218%" y="527.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (9 samples, 0.35%)</title><rect x="36.2718%" y="501" width="0.3495%" height="15" fill="rgb(218,95,35)" fg:x="934" fg:w="9"/><text x="36.5218%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.04%)</title><rect x="36.5825%" y="485" width="0.0388%" height="15" fill="rgb(229,13,5)" fg:x="942" fg:w="1"/><text x="36.8325%" y="495.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (1 samples, 0.04%)</title><rect x="36.6214%" y="565" width="0.0388%" height="15" fill="rgb(252,164,30)" fg:x="943" fg:w="1"/><text x="36.8714%" y="575.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::reset_resources (1 samples, 0.04%)</title><rect x="36.6214%" y="549" width="0.0388%" height="15" fill="rgb(232,68,36)" fg:x="943" fg:w="1"/><text x="36.8714%" y="559.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="36.6214%" y="533" width="0.0388%" height="15" fill="rgb(219,59,54)" fg:x="943" fg:w="1"/><text x="36.8714%" y="543.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_BuildHwCmdBufInfo(AMD_HwCmdBufInfoRec*, GFXAAMD_MtlCmdBuffer*, MTLIOAccelCommandBufferStorage*, MTLResourceList*, MTLResourceList*) (1 samples, 0.04%)</title><rect x="36.6602%" y="373" width="0.0388%" height="15" fill="rgb(250,92,33)" fg:x="944" fg:w="1"/><text x="36.9102%" y="383.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetNextGlobalTraceID (1 samples, 0.04%)</title><rect x="36.6990%" y="357" width="0.0388%" height="15" fill="rgb(229,162,54)" fg:x="945" fg:w="1"/><text x="36.9490%" y="367.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (3 samples, 0.12%)</title><rect x="36.6602%" y="437" width="0.1165%" height="15" fill="rgb(244,114,52)" fg:x="944" fg:w="3"/><text x="36.9102%" y="447.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (3 samples, 0.12%)</title><rect x="36.6602%" y="421" width="0.1165%" height="15" fill="rgb(212,211,43)" fg:x="944" fg:w="3"/><text x="36.9102%" y="431.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.12%)</title><rect x="36.6602%" y="405" width="0.1165%" height="15" fill="rgb(226,147,8)" fg:x="944" fg:w="3"/><text x="36.9102%" y="415.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.12%)</title><rect x="36.6602%" y="389" width="0.1165%" height="15" fill="rgb(226,23,13)" fg:x="944" fg:w="3"/><text x="36.9102%" y="399.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.08%)</title><rect x="36.6990%" y="373" width="0.0777%" height="15" fill="rgb(240,63,4)" fg:x="945" fg:w="2"/><text x="36.9490%" y="383.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.04%)</title><rect x="36.7379%" y="357" width="0.0388%" height="15" fill="rgb(221,1,32)" fg:x="946" fg:w="1"/><text x="36.9879%" y="367.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (1 samples, 0.04%)</title><rect x="36.7379%" y="341" width="0.0388%" height="15" fill="rgb(242,117,10)" fg:x="946" fg:w="1"/><text x="36.9879%" y="351.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (1 samples, 0.04%)</title><rect x="36.7379%" y="325" width="0.0388%" height="15" fill="rgb(249,172,44)" fg:x="946" fg:w="1"/><text x="36.9879%" y="335.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.04%)</title><rect x="36.7379%" y="309" width="0.0388%" height="15" fill="rgb(244,46,45)" fg:x="946" fg:w="1"/><text x="36.9879%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="36.7379%" y="293" width="0.0388%" height="15" fill="rgb(206,43,17)" fg:x="946" fg:w="1"/><text x="36.9879%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.04%)</title><rect x="36.7379%" y="277" width="0.0388%" height="15" fill="rgb(239,218,39)" fg:x="946" fg:w="1"/><text x="36.9879%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="36.7379%" y="261" width="0.0388%" height="15" fill="rgb(208,169,54)" fg:x="946" fg:w="1"/><text x="36.9879%" y="271.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.04%)</title><rect x="36.7767%" y="437" width="0.0388%" height="15" fill="rgb(247,25,42)" fg:x="947" fg:w="1"/><text x="37.0267%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="36.7767%" y="421" width="0.0388%" height="15" fill="rgb(226,23,31)" fg:x="947" fg:w="1"/><text x="37.0267%" y="431.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn (5 samples, 0.19%)</title><rect x="36.6602%" y="565" width="0.1942%" height="15" fill="rgb(247,16,28)" fg:x="944" fg:w="5"/><text x="36.9102%" y="575.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (5 samples, 0.19%)</title><rect x="36.6602%" y="549" width="0.1942%" height="15" fill="rgb(231,147,38)" fg:x="944" fg:w="5"/><text x="36.9102%" y="559.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn::_{{closure}} (5 samples, 0.19%)</title><rect x="36.6602%" y="533" width="0.1942%" height="15" fill="rgb(253,81,48)" fg:x="944" fg:w="5"/><text x="36.9102%" y="543.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn_temp (5 samples, 0.19%)</title><rect x="36.6602%" y="517" width="0.1942%" height="15" fill="rgb(249,222,43)" fg:x="944" fg:w="5"/><text x="36.9102%" y="527.50"></text></g><g><title>wgpu_test`metal::commandqueue::CommandQueueRef::new_command_buffer_with_unretained_references (5 samples, 0.19%)</title><rect x="36.6602%" y="501" width="0.1942%" height="15" fill="rgb(221,3,27)" fg:x="944" fg:w="5"/><text x="36.9102%" y="511.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (5 samples, 0.19%)</title><rect x="36.6602%" y="485" width="0.1942%" height="15" fill="rgb(228,180,5)" fg:x="944" fg:w="5"/><text x="36.9102%" y="495.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (5 samples, 0.19%)</title><rect x="36.6602%" y="469" width="0.1942%" height="15" fill="rgb(227,131,42)" fg:x="944" fg:w="5"/><text x="36.9102%" y="479.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (5 samples, 0.19%)</title><rect x="36.6602%" y="453" width="0.1942%" height="15" fill="rgb(212,3,39)" fg:x="944" fg:w="5"/><text x="36.9102%" y="463.50"></text></g><g><title>libobjc.A.dylib`object_cxxConstructFromClass (1 samples, 0.04%)</title><rect x="36.8155%" y="437" width="0.0388%" height="15" fill="rgb(226,45,5)" fg:x="948" fg:w="1"/><text x="37.0655%" y="447.50"></text></g><g><title>libobjc.A.dylib`object_cxxConstructFromClass (1 samples, 0.04%)</title><rect x="36.8155%" y="421" width="0.0388%" height="15" fill="rgb(215,167,45)" fg:x="948" fg:w="1"/><text x="37.0655%" y="431.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="36.8544%" y="533" width="0.0388%" height="15" fill="rgb(250,218,53)" fg:x="949" fg:w="1"/><text x="37.1044%" y="543.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="36.8544%" y="517" width="0.0388%" height="15" fill="rgb(207,140,0)" fg:x="949" fg:w="1"/><text x="37.1044%" y="527.50"></text></g><g><title>wgpu_test`gfx_hal::command::CommandBuffer::begin_primary (8 samples, 0.31%)</title><rect x="36.6214%" y="597" width="0.3107%" height="15" fill="rgb(238,133,51)" fg:x="943" fg:w="8"/><text x="36.8714%" y="607.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (8 samples, 0.31%)</title><rect x="36.6214%" y="581" width="0.3107%" height="15" fill="rgb(218,203,53)" fg:x="943" fg:w="8"/><text x="36.8714%" y="591.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::set_label (2 samples, 0.08%)</title><rect x="36.8544%" y="565" width="0.0777%" height="15" fill="rgb(226,184,25)" fg:x="949" fg:w="2"/><text x="37.1044%" y="575.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (2 samples, 0.08%)</title><rect x="36.8544%" y="549" width="0.0777%" height="15" fill="rgb(231,121,21)" fg:x="949" fg:w="2"/><text x="37.1044%" y="559.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="36.8932%" y="533" width="0.0388%" height="15" fill="rgb(251,14,34)" fg:x="950" fg:w="1"/><text x="37.1432%" y="543.50"></text></g><g><title>wgpu_test`&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="36.8932%" y="517" width="0.0388%" height="15" fill="rgb(249,193,11)" fg:x="950" fg:w="1"/><text x="37.1432%" y="527.50"></text></g><g><title>Foundation`-[NSPlaceholderString initWithBytes:length:encoding:] (1 samples, 0.04%)</title><rect x="36.8932%" y="501" width="0.0388%" height="15" fill="rgb(220,172,37)" fg:x="950" fg:w="1"/><text x="37.1432%" y="511.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::render::render_draw (268 samples, 10.41%)</title><rect x="26.5631%" y="613" width="10.4078%" height="15" fill="rgb(231,229,43)" fg:x="684" fg:w="268"/><text x="26.8131%" y="623.50">wgpu_test`wgpu_..</text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::status (1 samples, 0.04%)</title><rect x="36.9320%" y="597" width="0.0388%" height="15" fill="rgb(250,161,5)" fg:x="951" fg:w="1"/><text x="37.1820%" y="607.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::create_window::_{{closure}} (878 samples, 34.10%)</title><rect x="2.9903%" y="629" width="34.0971%" height="15" fill="rgb(218,225,18)" fg:x="77" fg:w="878"/><text x="3.2403%" y="639.50">wgpu_test`wgpu_test::rendering::create_window::_{{closu..</text></g><g><title>wgpu_test`winit::window::Window::request_redraw (3 samples, 0.12%)</title><rect x="36.9709%" y="613" width="0.1165%" height="15" fill="rgb(245,45,42)" fg:x="952" fg:w="3"/><text x="37.2209%" y="623.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::UnownedWindow::request_redraw (3 samples, 0.12%)</title><rect x="36.9709%" y="597" width="0.1165%" height="15" fill="rgb(211,115,1)" fg:x="952" fg:w="3"/><text x="37.2209%" y="607.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::queue_redraw (3 samples, 0.12%)</title><rect x="36.9709%" y="581" width="0.1165%" height="15" fill="rgb(248,133,52)" fg:x="952" fg:w="3"/><text x="37.2209%" y="591.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (3 samples, 0.12%)</title><rect x="36.9709%" y="565" width="0.1165%" height="15" fill="rgb(238,100,21)" fg:x="952" fg:w="3"/><text x="37.2209%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.12%)</title><rect x="36.9709%" y="549" width="0.1165%" height="15" fill="rgb(247,144,11)" fg:x="952" fg:w="3"/><text x="37.2209%" y="559.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (879 samples, 34.14%)</title><rect x="2.9903%" y="693" width="34.1359%" height="15" fill="rgb(206,164,16)" fg:x="77" fg:w="879"/><text x="3.2403%" y="703.50">wgpu_test`winit::platform_impl::platform::app_state::Ha..</text></g><g><title>wgpu_test`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (879 samples, 34.14%)</title><rect x="2.9903%" y="677" width="34.1359%" height="15" fill="rgb(222,34,3)" fg:x="77" fg:w="879"/><text x="3.2403%" y="687.50">wgpu_test`&lt;winit::platform_impl::platform::app_state::E..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (879 samples, 34.14%)</title><rect x="2.9903%" y="661" width="34.1359%" height="15" fill="rgb(248,82,4)" fg:x="77" fg:w="879"/><text x="3.2403%" y="671.50">wgpu_test`winit::platform_impl::platform::app_state::Ev..</text></g><g><title>wgpu_test`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event::_{{closure}} (879 samples, 34.14%)</title><rect x="2.9903%" y="645" width="34.1359%" height="15" fill="rgb(228,81,46)" fg:x="77" fg:w="879"/><text x="3.2403%" y="655.50">wgpu_test`&lt;winit::platform_impl::platform::app_state::E..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (1 samples, 0.04%)</title><rect x="37.0874%" y="629" width="0.0388%" height="15" fill="rgb(227,67,47)" fg:x="955" fg:w="1"/><text x="37.3374%" y="639.50"></text></g><g><title>wgpu_test`winit::event::Event&lt;T&gt;::map_nonuser_event (1 samples, 0.04%)</title><rect x="37.0874%" y="613" width="0.0388%" height="15" fill="rgb(215,93,53)" fg:x="955" fg:w="1"/><text x="37.3374%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="37.0874%" y="597" width="0.0388%" height="15" fill="rgb(248,194,39)" fg:x="955" fg:w="1"/><text x="37.3374%" y="607.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (893 samples, 34.68%)</title><rect x="2.4854%" y="869" width="34.6796%" height="15" fill="rgb(215,5,19)" fg:x="64" fg:w="893"/><text x="2.7354%" y="879.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER..</text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_end_handler (882 samples, 34.25%)</title><rect x="2.9126%" y="853" width="34.2524%" height="15" fill="rgb(226,215,51)" fg:x="75" fg:w="882"/><text x="3.1626%" y="863.50">wgpu_test`winit::platform_impl::platform::observer::cont..</text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_handler (882 samples, 34.25%)</title><rect x="2.9126%" y="837" width="34.2524%" height="15" fill="rgb(225,56,26)" fg:x="75" fg:w="882"/><text x="3.1626%" y="847.50">wgpu_test`winit::platform_impl::platform::observer::cont..</text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::stop_app_on_panic (882 samples, 34.25%)</title><rect x="2.9126%" y="821" width="34.2524%" height="15" fill="rgb(222,75,29)" fg:x="75" fg:w="882"/><text x="3.1626%" y="831.50">wgpu_test`winit::platform_impl::platform::event_loop::st..</text></g><g><title>wgpu_test`std::panic::catch_unwind (882 samples, 34.25%)</title><rect x="2.9126%" y="805" width="34.2524%" height="15" fill="rgb(236,139,6)" fg:x="75" fg:w="882"/><text x="3.1626%" y="815.50">wgpu_test`std::panic::catch_unwind</text></g><g><title>wgpu_test`std::panicking::try (882 samples, 34.25%)</title><rect x="2.9126%" y="789" width="34.2524%" height="15" fill="rgb(223,137,36)" fg:x="75" fg:w="882"/><text x="3.1626%" y="799.50">wgpu_test`std::panicking::try</text></g><g><title>wgpu_test`__rust_try (882 samples, 34.25%)</title><rect x="2.9126%" y="773" width="34.2524%" height="15" fill="rgb(226,99,2)" fg:x="75" fg:w="882"/><text x="3.1626%" y="783.50">wgpu_test`__rust_try</text></g><g><title>wgpu_test`std::panicking::try::do_call (882 samples, 34.25%)</title><rect x="2.9126%" y="757" width="34.2524%" height="15" fill="rgb(206,133,23)" fg:x="75" fg:w="882"/><text x="3.1626%" y="767.50">wgpu_test`std::panicking::try::do_call</text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (882 samples, 34.25%)</title><rect x="2.9126%" y="741" width="34.2524%" height="15" fill="rgb(243,173,15)" fg:x="75" fg:w="882"/><text x="3.1626%" y="751.50">wgpu_test`winit::platform_impl::platform::observer::cont..</text></g><g><title>wgpu_test`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}} (882 samples, 34.25%)</title><rect x="2.9126%" y="725" width="34.2524%" height="15" fill="rgb(228,69,28)" fg:x="75" fg:w="882"/><text x="3.1626%" y="735.50">wgpu_test`winit::platform_impl::platform::observer::cont..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::AppState::cleared (882 samples, 34.25%)</title><rect x="2.9126%" y="709" width="34.2524%" height="15" fill="rgb(212,51,22)" fg:x="75" fg:w="882"/><text x="3.1626%" y="719.50">wgpu_test`winit::platform_impl::platform::app_state::App..</text></g><g><title>wgpu_test`winit::platform_impl::platform::app_state::Handler::take_events (1 samples, 0.04%)</title><rect x="37.1262%" y="693" width="0.0388%" height="15" fill="rgb(227,113,0)" fg:x="956" fg:w="1"/><text x="37.3762%" y="703.50"></text></g><g><title>wgpu_test`&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="37.1262%" y="677" width="0.0388%" height="15" fill="rgb(252,84,27)" fg:x="956" fg:w="1"/><text x="37.3762%" y="687.50"></text></g><g><title>wgpu_test`alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="37.1262%" y="661" width="0.0388%" height="15" fill="rgb(223,145,39)" fg:x="956" fg:w="1"/><text x="37.3762%" y="671.50"></text></g><g><title>wgpu_test`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (1 samples, 0.04%)</title><rect x="37.1262%" y="645" width="0.0388%" height="15" fill="rgb(239,219,30)" fg:x="956" fg:w="1"/><text x="37.3762%" y="655.50"></text></g><g><title>wgpu_test`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="37.1262%" y="629" width="0.0388%" height="15" fill="rgb(224,196,39)" fg:x="956" fg:w="1"/><text x="37.3762%" y="639.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="37.1262%" y="613" width="0.0388%" height="15" fill="rgb(205,35,43)" fg:x="956" fg:w="1"/><text x="37.3762%" y="623.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="37.1262%" y="597" width="0.0388%" height="15" fill="rgb(228,201,21)" fg:x="956" fg:w="1"/><text x="37.3762%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (895 samples, 34.76%)</title><rect x="2.4466%" y="885" width="34.7573%" height="15" fill="rgb(237,118,16)" fg:x="63" fg:w="895"/><text x="2.6966%" y="895.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (1 samples, 0.04%)</title><rect x="37.1650%" y="869" width="0.0388%" height="15" fill="rgb(241,17,19)" fg:x="957" fg:w="1"/><text x="37.4150%" y="879.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (1 samples, 0.04%)</title><rect x="37.1650%" y="853" width="0.0388%" height="15" fill="rgb(214,10,25)" fg:x="957" fg:w="1"/><text x="37.4150%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.04%)</title><rect x="37.1650%" y="837" width="0.0388%" height="15" fill="rgb(238,37,29)" fg:x="957" fg:w="1"/><text x="37.4150%" y="847.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.04%)</title><rect x="37.1650%" y="821" width="0.0388%" height="15" fill="rgb(253,83,25)" fg:x="957" fg:w="1"/><text x="37.4150%" y="831.50"></text></g><g><title>Metal`-[_MTLCommandEncoder dealloc] (1 samples, 0.04%)</title><rect x="37.1650%" y="805" width="0.0388%" height="15" fill="rgb(234,192,12)" fg:x="957" fg:w="1"/><text x="37.4150%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (1 samples, 0.04%)</title><rect x="37.2039%" y="885" width="0.0388%" height="15" fill="rgb(241,216,45)" fg:x="958" fg:w="1"/><text x="37.4539%" y="895.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (1 samples, 0.04%)</title><rect x="37.2039%" y="869" width="0.0388%" height="15" fill="rgb(242,22,33)" fg:x="958" fg:w="1"/><text x="37.4539%" y="879.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (1 samples, 0.04%)</title><rect x="37.2039%" y="853" width="0.0388%" height="15" fill="rgb(231,105,49)" fg:x="958" fg:w="1"/><text x="37.4539%" y="863.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (1 samples, 0.04%)</title><rect x="37.2039%" y="837" width="0.0388%" height="15" fill="rgb(218,204,15)" fg:x="958" fg:w="1"/><text x="37.4539%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (1 samples, 0.04%)</title><rect x="37.2039%" y="821" width="0.0388%" height="15" fill="rgb(235,138,41)" fg:x="958" fg:w="1"/><text x="37.4539%" y="831.50"></text></g><g><title>CoreFoundation`__CFRunLoopInsertionIndexInTimerArray (1 samples, 0.04%)</title><rect x="38.9515%" y="837" width="0.0388%" height="15" fill="rgb(246,0,9)" fg:x="1003" fg:w="1"/><text x="39.2015%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (46 samples, 1.79%)</title><rect x="37.2427%" y="885" width="1.7864%" height="15" fill="rgb(210,74,4)" fg:x="959" fg:w="46"/><text x="37.4927%" y="895.50">C..</text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (46 samples, 1.79%)</title><rect x="37.2427%" y="869" width="1.7864%" height="15" fill="rgb(250,60,41)" fg:x="959" fg:w="46"/><text x="37.4927%" y="879.50">C..</text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (2 samples, 0.08%)</title><rect x="38.9515%" y="853" width="0.0777%" height="15" fill="rgb(220,115,12)" fg:x="1003" fg:w="2"/><text x="39.2015%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (1 samples, 0.04%)</title><rect x="38.9903%" y="837" width="0.0388%" height="15" fill="rgb(237,100,13)" fg:x="1004" fg:w="1"/><text x="39.2403%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (1 samples, 0.04%)</title><rect x="39.0291%" y="885" width="0.0388%" height="15" fill="rgb(213,55,26)" fg:x="1005" fg:w="1"/><text x="39.2791%" y="895.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (1 samples, 0.04%)</title><rect x="39.0291%" y="869" width="0.0388%" height="15" fill="rgb(216,17,4)" fg:x="1005" fg:w="1"/><text x="39.2791%" y="879.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.04%)</title><rect x="39.0291%" y="853" width="0.0388%" height="15" fill="rgb(220,153,47)" fg:x="1005" fg:w="1"/><text x="39.2791%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.04%)</title><rect x="39.0680%" y="869" width="0.0388%" height="15" fill="rgb(215,131,9)" fg:x="1006" fg:w="1"/><text x="39.3180%" y="879.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (2 samples, 0.08%)</title><rect x="39.0680%" y="885" width="0.0777%" height="15" fill="rgb(233,46,42)" fg:x="1006" fg:w="2"/><text x="39.3180%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.1068%" y="869" width="0.0388%" height="15" fill="rgb(226,86,7)" fg:x="1007" fg:w="1"/><text x="39.3568%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (1 samples, 0.04%)</title><rect x="39.1456%" y="885" width="0.0388%" height="15" fill="rgb(239,226,21)" fg:x="1008" fg:w="1"/><text x="39.3956%" y="895.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (958 samples, 37.20%)</title><rect x="2.0194%" y="901" width="37.2039%" height="15" fill="rgb(244,137,22)" fg:x="52" fg:w="958"/><text x="2.2694%" y="911.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (1 samples, 0.04%)</title><rect x="39.1845%" y="885" width="0.0388%" height="15" fill="rgb(211,139,35)" fg:x="1009" fg:w="1"/><text x="39.4345%" y="895.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (966 samples, 37.51%)</title><rect x="1.7476%" y="917" width="37.5146%" height="15" fill="rgb(214,62,50)" fg:x="45" fg:w="966"/><text x="1.9976%" y="927.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>libsystem_kernel.dylib`mach_port_insert_member (1 samples, 0.04%)</title><rect x="39.2233%" y="901" width="0.0388%" height="15" fill="rgb(212,113,44)" fg:x="1010" fg:w="1"/><text x="39.4733%" y="911.50"></text></g><g><title>AE`aeInstallRunLoopDispatcher (1 samples, 0.04%)</title><rect x="39.2621%" y="901" width="0.0388%" height="15" fill="rgb(226,150,43)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="39.2621%" y="885" width="0.0388%" height="15" fill="rgb(250,71,37)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="39.2621%" y="869" width="0.0388%" height="15" fill="rgb(219,76,19)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="879.50"></text></g><g><title>AE`0x00007ff80fd1f8d8 (1 samples, 0.04%)</title><rect x="39.2621%" y="853" width="0.0388%" height="15" fill="rgb(250,39,11)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="863.50"></text></g><g><title>AE`0x00007ff80fd1fdae (1 samples, 0.04%)</title><rect x="39.2621%" y="837" width="0.0388%" height="15" fill="rgb(230,64,31)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="847.50"></text></g><g><title>AE`AEGetRegisteredMachPort (1 samples, 0.04%)</title><rect x="39.2621%" y="821" width="0.0388%" height="15" fill="rgb(208,222,23)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="39.2621%" y="805" width="0.0388%" height="15" fill="rgb(227,125,18)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="39.2621%" y="789" width="0.0388%" height="15" fill="rgb(234,210,9)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="799.50"></text></g><g><title>AE`0x00007ff80fd2076b (1 samples, 0.04%)</title><rect x="39.2621%" y="773" width="0.0388%" height="15" fill="rgb(217,127,24)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="783.50"></text></g><g><title>AE`_AERegisterCurrentApplicationInfomationWithAppleEventsD (1 samples, 0.04%)</title><rect x="39.2621%" y="757" width="0.0388%" height="15" fill="rgb(239,141,48)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="39.2621%" y="741" width="0.0388%" height="15" fill="rgb(227,109,8)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="39.2621%" y="725" width="0.0388%" height="15" fill="rgb(235,184,23)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="735.50"></text></g><g><title>AE`0x00007ff80fd209c7 (1 samples, 0.04%)</title><rect x="39.2621%" y="709" width="0.0388%" height="15" fill="rgb(227,226,48)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="719.50"></text></g><g><title>AE`0x00007ff80fd3e4cd (1 samples, 0.04%)</title><rect x="39.2621%" y="693" width="0.0388%" height="15" fill="rgb(206,150,11)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="703.50"></text></g><g><title>AE`0x00007ff80fd45a82 (1 samples, 0.04%)</title><rect x="39.2621%" y="677" width="0.0388%" height="15" fill="rgb(254,2,33)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="687.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_set_mach_send (1 samples, 0.04%)</title><rect x="39.2621%" y="661" width="0.0388%" height="15" fill="rgb(243,160,20)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_insert (1 samples, 0.04%)</title><rect x="39.2621%" y="645" width="0.0388%" height="15" fill="rgb(218,208,30)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcpy (1 samples, 0.04%)</title><rect x="39.2621%" y="629" width="0.0388%" height="15" fill="rgb(224,120,49)" fg:x="1011" fg:w="1"/><text x="39.5121%" y="639.50"></text></g><g><title>HIToolbox`_FirstEventTime (2 samples, 0.08%)</title><rect x="39.2621%" y="917" width="0.0777%" height="15" fill="rgb(246,12,2)" fg:x="1011" fg:w="2"/><text x="39.5121%" y="927.50"></text></g><g><title>HIToolbox`RegisterCallbackInternal(unsigned int, void (*)(unsigned int, void*, void*), unsigned int, void*, unsigned int) (1 samples, 0.04%)</title><rect x="39.3010%" y="901" width="0.0388%" height="15" fill="rgb(236,117,3)" fg:x="1012" fg:w="1"/><text x="39.5510%" y="911.50"></text></g><g><title>SkyLight`SLSRegisterConnectionNotifyProc (1 samples, 0.04%)</title><rect x="39.3010%" y="885" width="0.0388%" height="15" fill="rgb(216,128,52)" fg:x="1012" fg:w="1"/><text x="39.5510%" y="895.50"></text></g><g><title>SkyLight`CGSConnectionNotifierAddCallback (1 samples, 0.04%)</title><rect x="39.3010%" y="869" width="0.0388%" height="15" fill="rgb(246,145,19)" fg:x="1012" fg:w="1"/><text x="39.5510%" y="879.50"></text></g><g><title>SkyLight`CGSConnectionNotifier::notify (1 samples, 0.04%)</title><rect x="39.3010%" y="853" width="0.0388%" height="15" fill="rgb(222,11,46)" fg:x="1012" fg:w="1"/><text x="39.5510%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.3010%" y="837" width="0.0388%" height="15" fill="rgb(245,82,36)" fg:x="1012" fg:w="1"/><text x="39.5510%" y="847.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (1 samples, 0.04%)</title><rect x="39.3398%" y="869" width="0.0388%" height="15" fill="rgb(250,73,51)" fg:x="1013" fg:w="1"/><text x="39.5898%" y="879.50"></text></g><g><title>HIToolbox`ReleaseEvent (1 samples, 0.04%)</title><rect x="39.3398%" y="853" width="0.0388%" height="15" fill="rgb(221,189,23)" fg:x="1013" fg:w="1"/><text x="39.5898%" y="863.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.04%)</title><rect x="39.3398%" y="837" width="0.0388%" height="15" fill="rgb(210,33,7)" fg:x="1013" fg:w="1"/><text x="39.5898%" y="847.50"></text></g><g><title>SkyLight`event_finalize(void const*) (1 samples, 0.04%)</title><rect x="39.3398%" y="821" width="0.0388%" height="15" fill="rgb(210,107,22)" fg:x="1013" fg:w="1"/><text x="39.5898%" y="831.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (1 samples, 0.04%)</title><rect x="39.3398%" y="805" width="0.0388%" height="15" fill="rgb(222,116,37)" fg:x="1013" fg:w="1"/><text x="39.5898%" y="815.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (1 samples, 0.04%)</title><rect x="39.3398%" y="789" width="0.0388%" height="15" fill="rgb(254,17,48)" fg:x="1013" fg:w="1"/><text x="39.5898%" y="799.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (970 samples, 37.67%)</title><rect x="1.7476%" y="933" width="37.6699%" height="15" fill="rgb(224,36,32)" fg:x="45" fg:w="970"/><text x="1.9976%" y="943.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (2 samples, 0.08%)</title><rect x="39.3398%" y="917" width="0.0777%" height="15" fill="rgb(232,90,46)" fg:x="1013" fg:w="2"/><text x="39.5898%" y="927.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (2 samples, 0.08%)</title><rect x="39.3398%" y="901" width="0.0777%" height="15" fill="rgb(241,66,40)" fg:x="1013" fg:w="2"/><text x="39.5898%" y="911.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (2 samples, 0.08%)</title><rect x="39.3398%" y="885" width="0.0777%" height="15" fill="rgb(249,184,29)" fg:x="1013" fg:w="2"/><text x="39.5898%" y="895.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (1 samples, 0.04%)</title><rect x="39.3786%" y="869" width="0.0388%" height="15" fill="rgb(231,181,1)" fg:x="1014" fg:w="1"/><text x="39.6286%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.3786%" y="853" width="0.0388%" height="15" fill="rgb(224,94,2)" fg:x="1014" fg:w="1"/><text x="39.6286%" y="863.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (1 samples, 0.04%)</title><rect x="39.4175%" y="901" width="0.0388%" height="15" fill="rgb(229,170,15)" fg:x="1015" fg:w="1"/><text x="39.6675%" y="911.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (1 samples, 0.04%)</title><rect x="39.4175%" y="885" width="0.0388%" height="15" fill="rgb(240,127,35)" fg:x="1015" fg:w="1"/><text x="39.6675%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (1 samples, 0.04%)</title><rect x="39.4175%" y="869" width="0.0388%" height="15" fill="rgb(248,196,34)" fg:x="1015" fg:w="1"/><text x="39.6675%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.4175%" y="853" width="0.0388%" height="15" fill="rgb(236,137,7)" fg:x="1015" fg:w="1"/><text x="39.6675%" y="863.50"></text></g><g><title>wgpu_test`0x102628b1c (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1125" width="39.3398%" height="15" fill="rgb(235,127,16)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1135.50">wgpu_test`0x102628b1c</text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1109" width="39.3398%" height="15" fill="rgb(250,192,54)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1119.50">wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;..</text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1093" width="39.3398%" height="15" fill="rgb(218,98,20)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1103.50">wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;..</text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1077" width="39.3398%" height="15" fill="rgb(230,176,47)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1087.50">wgpu_test`objc::rc::autorelease::autoreleasepool</text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return::_{{closure}} (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1061" width="39.3398%" height="15" fill="rgb(244,2,33)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1071.50">wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;..</text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1045" width="39.3398%" height="15" fill="rgb(231,100,17)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1055.50">wgpu_test`objc::message::platform::send_unverified</text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1029" width="39.3398%" height="15" fill="rgb(245,23,12)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1039.50">wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke</text></g><g><title>AppKit`-[NSApplication run] (1,013 samples, 39.34%)</title><rect x="0.1553%" y="1013" width="39.3398%" height="15" fill="rgb(249,55,22)" fg:x="4" fg:w="1013"/><text x="0.4053%" y="1023.50">AppKit`-[NSApplication run]</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (997 samples, 38.72%)</title><rect x="0.7767%" y="997" width="38.7184%" height="15" fill="rgb(207,134,9)" fg:x="20" fg:w="997"/><text x="1.0267%" y="1007.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:unt..</text></g><g><title>AppKit`_DPSNextEvent (990 samples, 38.45%)</title><rect x="1.0485%" y="981" width="38.4466%" height="15" fill="rgb(218,134,0)" fg:x="27" fg:w="990"/><text x="1.2985%" y="991.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (982 samples, 38.14%)</title><rect x="1.3592%" y="965" width="38.1359%" height="15" fill="rgb(213,212,33)" fg:x="35" fg:w="982"/><text x="1.6092%" y="975.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (982 samples, 38.14%)</title><rect x="1.3592%" y="949" width="38.1359%" height="15" fill="rgb(252,106,18)" fg:x="35" fg:w="982"/><text x="1.6092%" y="959.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`_DropPendingBoost (2 samples, 0.08%)</title><rect x="39.4175%" y="933" width="0.0777%" height="15" fill="rgb(208,126,42)" fg:x="1015" fg:w="2"/><text x="39.6675%" y="943.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.08%)</title><rect x="39.4175%" y="917" width="0.0777%" height="15" fill="rgb(246,175,29)" fg:x="1015" fg:w="2"/><text x="39.6675%" y="927.50"></text></g><g><title>libdispatch.dylib`-[OS_voucher dealloc] (1 samples, 0.04%)</title><rect x="39.4563%" y="901" width="0.0388%" height="15" fill="rgb(215,13,50)" fg:x="1016" fg:w="1"/><text x="39.7063%" y="911.50"></text></g><g><title>libdispatch.dylib`_voucher_dispose (1 samples, 0.04%)</title><rect x="39.4563%" y="885" width="0.0388%" height="15" fill="rgb(216,172,15)" fg:x="1016" fg:w="1"/><text x="39.7063%" y="895.50"></text></g><g><title>libdispatch.dylib`_voucher_dealloc_mach_voucher (1 samples, 0.04%)</title><rect x="39.4563%" y="869" width="0.0388%" height="15" fill="rgb(212,103,13)" fg:x="1016" fg:w="1"/><text x="39.7063%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_deallocate_trap (1 samples, 0.04%)</title><rect x="39.4563%" y="853" width="0.0388%" height="15" fill="rgb(231,171,36)" fg:x="1016" fg:w="1"/><text x="39.7063%" y="863.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::Experiments as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="39.4951%" y="1125" width="0.0388%" height="15" fill="rgb(250,123,20)" fg:x="1017" fg:w="1"/><text x="39.7451%" y="1135.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.04%)</title><rect x="39.5340%" y="709" width="0.0388%" height="15" fill="rgb(212,53,50)" fg:x="1018" fg:w="1"/><text x="39.7840%" y="719.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_uint64 (1 samples, 0.04%)</title><rect x="39.5340%" y="693" width="0.0388%" height="15" fill="rgb(243,54,12)" fg:x="1018" fg:w="1"/><text x="39.7840%" y="703.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_fast (1 samples, 0.04%)</title><rect x="39.5340%" y="677" width="0.0388%" height="15" fill="rgb(234,101,34)" fg:x="1018" fg:w="1"/><text x="39.7840%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.04%)</title><rect x="39.5340%" y="661" width="0.0388%" height="15" fill="rgb(254,67,22)" fg:x="1018" fg:w="1"/><text x="39.7840%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_wire (1 samples, 0.04%)</title><rect x="39.5340%" y="645" width="0.0388%" height="15" fill="rgb(250,35,47)" fg:x="1018" fg:w="1"/><text x="39.7840%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_graph_deserializer_read_string (1 samples, 0.04%)</title><rect x="39.5340%" y="629" width="0.0388%" height="15" fill="rgb(226,126,38)" fg:x="1018" fg:w="1"/><text x="39.7840%" y="639.50"></text></g><g><title>IOSurface`IOSurfaceClientCopyGPUPolicies (2 samples, 0.08%)</title><rect x="39.5340%" y="949" width="0.0777%" height="15" fill="rgb(216,138,53)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (2 samples, 0.08%)</title><rect x="39.5340%" y="933" width="0.0777%" height="15" fill="rgb(246,199,43)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (2 samples, 0.08%)</title><rect x="39.5340%" y="917" width="0.0777%" height="15" fill="rgb(232,125,11)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (2 samples, 0.08%)</title><rect x="39.5340%" y="901" width="0.0777%" height="15" fill="rgb(218,219,45)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="911.50"></text></g><g><title>IOSurface`_iosConnectInitalize (2 samples, 0.08%)</title><rect x="39.5340%" y="885" width="0.0777%" height="15" fill="rgb(216,102,54)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="895.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyValueWithContainer (2 samples, 0.08%)</title><rect x="39.5340%" y="869" width="0.0777%" height="15" fill="rgb(250,228,7)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="879.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyValueForKey:identifier:user:host:container:] (2 samples, 0.08%)</title><rect x="39.5340%" y="853" width="0.0777%" height="15" fill="rgb(226,125,25)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="863.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (2 samples, 0.08%)</title><rect x="39.5340%" y="837" width="0.0777%" height="15" fill="rgb(224,165,27)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="847.50"></text></g><g><title>CoreFoundation`__66-[_CFXPreferences copyValueForKey:identifier:user:host:container:]_block_invoke (2 samples, 0.08%)</title><rect x="39.5340%" y="821" width="0.0777%" height="15" fill="rgb(233,86,3)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="831.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource copyValueForKey:] (2 samples, 0.08%)</title><rect x="39.5340%" y="805" width="0.0777%" height="15" fill="rgb(228,116,20)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="815.50"></text></g><g><title>CoreFoundation`_copyValueForKey (2 samples, 0.08%)</title><rect x="39.5340%" y="789" width="0.0777%" height="15" fill="rgb(209,192,17)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="799.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource alreadylocked_requestNewData] (2 samples, 0.08%)</title><rect x="39.5340%" y="773" width="0.0777%" height="15" fill="rgb(224,88,34)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="783.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:performBlock:] (2 samples, 0.08%)</title><rect x="39.5340%" y="757" width="0.0777%" height="15" fill="rgb(233,38,6)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="767.50"></text></g><g><title>CoreFoundation`__50-[CFPrefsPlistSource alreadylocked_requestNewData]_block_invoke (2 samples, 0.08%)</title><rect x="39.5340%" y="741" width="0.0777%" height="15" fill="rgb(212,59,30)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="751.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:] (2 samples, 0.08%)</title><rect x="39.5340%" y="725" width="0.0777%" height="15" fill="rgb(213,80,3)" fg:x="1018" fg:w="2"/><text x="39.7840%" y="735.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 0.04%)</title><rect x="39.5728%" y="709" width="0.0388%" height="15" fill="rgb(251,178,7)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="719.50"></text></g><g><title>CoreFoundation`__78-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:]_block_invoke (1 samples, 0.04%)</title><rect x="39.5728%" y="693" width="0.0388%" height="15" fill="rgb(213,154,26)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="703.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.04%)</title><rect x="39.5728%" y="677" width="0.0388%" height="15" fill="rgb(238,165,49)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="687.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.04%)</title><rect x="39.5728%" y="661" width="0.0388%" height="15" fill="rgb(248,91,46)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.04%)</title><rect x="39.5728%" y="645" width="0.0388%" height="15" fill="rgb(244,21,52)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.04%)</title><rect x="39.5728%" y="629" width="0.0388%" height="15" fill="rgb(247,122,20)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.04%)</title><rect x="39.5728%" y="613" width="0.0388%" height="15" fill="rgb(218,27,9)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.04%)</title><rect x="39.5728%" y="597" width="0.0388%" height="15" fill="rgb(246,7,6)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="607.50"></text></g><g><title>libdispatch.dylib`_voucher_create_mach_voucher_with_priority (1 samples, 0.04%)</title><rect x="39.5728%" y="581" width="0.0388%" height="15" fill="rgb(227,135,54)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`host_create_mach_voucher_trap (1 samples, 0.04%)</title><rect x="39.5728%" y="565" width="0.0388%" height="15" fill="rgb(247,14,11)" fg:x="1019" fg:w="1"/><text x="39.8228%" y="575.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlDevice initWithAcceleratorPort:] (1 samples, 0.04%)</title><rect x="39.6117%" y="853" width="0.0388%" height="15" fill="rgb(206,149,34)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="863.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlDevice initWithAcceleratorPort:] (1 samples, 0.04%)</title><rect x="39.6117%" y="837" width="0.0388%" height="15" fill="rgb(227,228,4)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="847.50"></text></g><g><title>Metal`-[MTLIOAccelDevice initWithAcceleratorPort:] (1 samples, 0.04%)</title><rect x="39.6117%" y="821" width="0.0388%" height="15" fill="rgb(238,218,28)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="831.50"></text></g><g><title>IOAccelerator`IOAccelDeviceCreateWithAPIProperty (1 samples, 0.04%)</title><rect x="39.6117%" y="805" width="0.0388%" height="15" fill="rgb(252,86,40)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="815.50"></text></g><g><title>IOKit`IOServiceOpen (1 samples, 0.04%)</title><rect x="39.6117%" y="789" width="0.0388%" height="15" fill="rgb(251,225,11)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="799.50"></text></g><g><title>IOKit`io_service_open_extended (1 samples, 0.04%)</title><rect x="39.6117%" y="773" width="0.0388%" height="15" fill="rgb(206,46,49)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.6117%" y="757" width="0.0388%" height="15" fill="rgb(245,128,24)" fg:x="1020" fg:w="1"/><text x="39.8617%" y="767.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice initWithAcceleratorPort:] (1 samples, 0.04%)</title><rect x="39.6505%" y="853" width="0.0388%" height="15" fill="rgb(219,177,34)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="863.50"></text></g><g><title>Metal`-[MTLIOAccelDevice initWithAcceleratorPort:] (1 samples, 0.04%)</title><rect x="39.6505%" y="837" width="0.0388%" height="15" fill="rgb(218,60,48)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="847.50"></text></g><g><title>Metal`-[MTLIOAccelDevice updateGPUSelectionProperties] (1 samples, 0.04%)</title><rect x="39.6505%" y="821" width="0.0388%" height="15" fill="rgb(221,11,5)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="831.50"></text></g><g><title>Metal`-[MTLIOAccelDevice isSlotted] (1 samples, 0.04%)</title><rect x="39.6505%" y="805" width="0.0388%" height="15" fill="rgb(220,148,13)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="815.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (1 samples, 0.04%)</title><rect x="39.6505%" y="789" width="0.0388%" height="15" fill="rgb(210,16,3)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="799.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (1 samples, 0.04%)</title><rect x="39.6505%" y="773" width="0.0388%" height="15" fill="rgb(236,80,2)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.6505%" y="757" width="0.0388%" height="15" fill="rgb(239,129,19)" fg:x="1021" fg:w="1"/><text x="39.9005%" y="767.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::create_surface (5 samples, 0.19%)</title><rect x="39.5340%" y="1125" width="0.1942%" height="15" fill="rgb(220,106,35)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1135.50"></text></g><g><title>wgpu_test`gfx_backend_metal::Instance::create_surface_from_nsview (5 samples, 0.19%)</title><rect x="39.5340%" y="1109" width="0.1942%" height="15" fill="rgb(252,139,45)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1119.50"></text></g><g><title>wgpu_test`gfx_backend_metal::Instance::create_from_nsview (5 samples, 0.19%)</title><rect x="39.5340%" y="1093" width="0.1942%" height="15" fill="rgb(229,8,36)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1103.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (5 samples, 0.19%)</title><rect x="39.5340%" y="1077" width="0.1942%" height="15" fill="rgb(230,126,33)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1087.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (5 samples, 0.19%)</title><rect x="39.5340%" y="1061" width="0.1942%" height="15" fill="rgb(239,140,21)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1071.50"></text></g><g><title>QuartzCore`-[CAMetalLayer init] (5 samples, 0.19%)</title><rect x="39.5340%" y="1045" width="0.1942%" height="15" fill="rgb(254,104,9)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1055.50"></text></g><g><title>QuartzCore`CAMetalContextCreate (5 samples, 0.19%)</title><rect x="39.5340%" y="1029" width="0.1942%" height="15" fill="rgb(239,52,14)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1039.50"></text></g><g><title>Metal`MTLCopyAllDevices (5 samples, 0.19%)</title><rect x="39.5340%" y="1013" width="0.1942%" height="15" fill="rgb(208,227,44)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.19%)</title><rect x="39.5340%" y="997" width="0.1942%" height="15" fill="rgb(246,18,19)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.19%)</title><rect x="39.5340%" y="981" width="0.1942%" height="15" fill="rgb(235,228,25)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="991.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (5 samples, 0.19%)</title><rect x="39.5340%" y="965" width="0.1942%" height="15" fill="rgb(240,156,20)" fg:x="1018" fg:w="5"/><text x="39.7840%" y="975.50"></text></g><g><title>Metal`+[MTLIOAccelDevice registerDevices] (3 samples, 0.12%)</title><rect x="39.6117%" y="949" width="0.1165%" height="15" fill="rgb(224,8,20)" fg:x="1020" fg:w="3"/><text x="39.8617%" y="959.50"></text></g><g><title>Metal`MTLIOAccelServiceRegisterService (3 samples, 0.12%)</title><rect x="39.6117%" y="933" width="0.1165%" height="15" fill="rgb(214,12,52)" fg:x="1020" fg:w="3"/><text x="39.8617%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.12%)</title><rect x="39.6117%" y="917" width="0.1165%" height="15" fill="rgb(211,220,47)" fg:x="1020" fg:w="3"/><text x="39.8617%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.12%)</title><rect x="39.6117%" y="901" width="0.1165%" height="15" fill="rgb(250,173,5)" fg:x="1020" fg:w="3"/><text x="39.8617%" y="911.50"></text></g><g><title>Metal`+[MTLIOAccelService registerService:] (3 samples, 0.12%)</title><rect x="39.6117%" y="885" width="0.1165%" height="15" fill="rgb(250,125,52)" fg:x="1020" fg:w="3"/><text x="39.8617%" y="895.50"></text></g><g><title>Metal`-[MTLIOAccelService initWithAcceleratorPort:] (3 samples, 0.12%)</title><rect x="39.6117%" y="869" width="0.1165%" height="15" fill="rgb(209,133,18)" fg:x="1020" fg:w="3"/><text x="39.8617%" y="879.50"></text></g><g><title>Metal`getMetalPluginClassForService (1 samples, 0.04%)</title><rect x="39.6893%" y="853" width="0.0388%" height="15" fill="rgb(216,173,22)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="863.50"></text></g><g><title>Foundation`-[NSBundle classNamed:] (1 samples, 0.04%)</title><rect x="39.6893%" y="837" width="0.0388%" height="15" fill="rgb(205,3,22)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="847.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (1 samples, 0.04%)</title><rect x="39.6893%" y="821" width="0.0388%" height="15" fill="rgb(248,22,20)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="831.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (1 samples, 0.04%)</title><rect x="39.6893%" y="805" width="0.0388%" height="15" fill="rgb(233,6,29)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="815.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadBundle (1 samples, 0.04%)</title><rect x="39.6893%" y="789" width="0.0388%" height="15" fill="rgb(240,22,54)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="799.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.04%)</title><rect x="39.6893%" y="773" width="0.0388%" height="15" fill="rgb(231,133,32)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="783.50"></text></g><g><title>dyld`dyld4::Loader::runInitializersBottomUpPlusUpwardLinks (1 samples, 0.04%)</title><rect x="39.6893%" y="757" width="0.0388%" height="15" fill="rgb(248,193,4)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="767.50"></text></g><g><title>dyld`dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array (1 samples, 0.04%)</title><rect x="39.6893%" y="741" width="0.0388%" height="15" fill="rgb(211,178,46)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="751.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::runInitializers (1 samples, 0.04%)</title><rect x="39.6893%" y="725" width="0.0388%" height="15" fill="rgb(224,5,42)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="735.50"></text></g><g><title>dyld`dyld4::Loader::findAndRunAllInitializers (1 samples, 0.04%)</title><rect x="39.6893%" y="709" width="0.0388%" height="15" fill="rgb(239,176,25)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="719.50"></text></g><g><title>dyld`dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void  (1 samples, 0.04%)</title><rect x="39.6893%" y="693" width="0.0388%" height="15" fill="rgb(245,187,50)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="703.50"></text></g><g><title>dyld`dyld3::MachOFile::forEachSection(void  (1 samples, 0.04%)</title><rect x="39.6893%" y="677" width="0.0388%" height="15" fill="rgb(248,24,15)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="687.50"></text></g><g><title>dyld`dyld3::MachOFile::forEachLoadCommand(Diagnostics&amp;, void  (1 samples, 0.04%)</title><rect x="39.6893%" y="661" width="0.0388%" height="15" fill="rgb(205,166,13)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="671.50"></text></g><g><title>dyld`invocation function for block in dyld3::MachOFile::forEachSection(void  (1 samples, 0.04%)</title><rect x="39.6893%" y="645" width="0.0388%" height="15" fill="rgb(208,114,23)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="655.50"></text></g><g><title>dyld`invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void  (1 samples, 0.04%)</title><rect x="39.6893%" y="629" width="0.0388%" height="15" fill="rgb(239,127,18)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="639.50"></text></g><g><title>dyld`invocation function for block in dyld4::Loader::findAndRunAllInitializers (1 samples, 0.04%)</title><rect x="39.6893%" y="613" width="0.0388%" height="15" fill="rgb(219,154,28)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="623.50"></text></g><g><title>AMDRadeonX6000MTLDriver`_GLOBAL__sub_I_implot.cpp (1 samples, 0.04%)</title><rect x="39.6893%" y="597" width="0.0388%" height="15" fill="rgb(225,157,23)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`ImPlot::ImPlotContext::ImPlotContext (1 samples, 0.04%)</title><rect x="39.6893%" y="581" width="0.0388%" height="15" fill="rgb(219,8,6)" fg:x="1022" fg:w="1"/><text x="39.9393%" y="591.50"></text></g><g><title>wgpu_test`gfx_backend_metal::internal::DepthStencilStates::new (1 samples, 0.04%)</title><rect x="39.7282%" y="917" width="0.0388%" height="15" fill="rgb(212,47,6)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="927.50"></text></g><g><title>wgpu_test`storage_map::StorageMap&lt;L,std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::get_or_create_with (1 samples, 0.04%)</title><rect x="39.7282%" y="901" width="0.0388%" height="15" fill="rgb(224,190,4)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="911.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="39.7282%" y="885" width="0.0388%" height="15" fill="rgb(239,183,29)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="895.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="39.7282%" y="869" width="0.0388%" height="15" fill="rgb(213,57,7)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="879.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="39.7282%" y="853" width="0.0388%" height="15" fill="rgb(216,148,1)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="863.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="39.7282%" y="837" width="0.0388%" height="15" fill="rgb(236,182,29)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="847.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="39.7282%" y="821" width="0.0388%" height="15" fill="rgb(244,120,48)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="831.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="39.7282%" y="805" width="0.0388%" height="15" fill="rgb(206,71,34)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="815.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="39.7282%" y="789" width="0.0388%" height="15" fill="rgb(242,32,6)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="799.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::match_empty (1 samples, 0.04%)</title><rect x="39.7282%" y="773" width="0.0388%" height="15" fill="rgb(241,35,3)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="783.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="39.7282%" y="757" width="0.0388%" height="15" fill="rgb(222,62,19)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="767.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.04%)</title><rect x="39.7282%" y="741" width="0.0388%" height="15" fill="rgb(223,110,41)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="751.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.04%)</title><rect x="39.7282%" y="725" width="0.0388%" height="15" fill="rgb(208,224,4)" fg:x="1023" fg:w="1"/><text x="39.9782%" y="735.50"></text></g><g><title>wgpu_test`gfx_backend_metal::internal::ServicePipes::new (2 samples, 0.08%)</title><rect x="39.7282%" y="933" width="0.0777%" height="15" fill="rgb(241,137,19)" fg:x="1023" fg:w="2"/><text x="39.9782%" y="943.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_library_with_data (1 samples, 0.04%)</title><rect x="39.7670%" y="917" width="0.0388%" height="15" fill="rgb(244,24,17)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="927.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="39.7670%" y="901" width="0.0388%" height="15" fill="rgb(245,178,49)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="911.50"></text></g><g><title>wgpu_test`&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="39.7670%" y="885" width="0.0388%" height="15" fill="rgb(219,160,38)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="895.50"></text></g><g><title>Metal`-[_MTLDevice newLibraryWithData:error:] (1 samples, 0.04%)</title><rect x="39.7670%" y="869" width="0.0388%" height="15" fill="rgb(228,137,14)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="879.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithData(id&lt;MTLDevice&gt;, NSObject (1 samples, 0.04%)</title><rect x="39.7670%" y="853" width="0.0388%" height="15" fill="rgb(237,134,11)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="863.50"></text></g><g><title>Metal`getHash (1 samples, 0.04%)</title><rect x="39.7670%" y="837" width="0.0388%" height="15" fill="rgb(211,126,44)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="847.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA256_Update (1 samples, 0.04%)</title><rect x="39.7670%" y="821" width="0.0388%" height="15" fill="rgb(226,171,33)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="831.50"></text></g><g><title>libcommonCrypto.dylib`ccdigest_process (1 samples, 0.04%)</title><rect x="39.7670%" y="805" width="0.0388%" height="15" fill="rgb(253,99,13)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="815.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA256_compress_AVX2 (1 samples, 0.04%)</title><rect x="39.7670%" y="789" width="0.0388%" height="15" fill="rgb(244,48,7)" fg:x="1024" fg:w="1"/><text x="40.0170%" y="799.50"></text></g><g><title>wgpu_test`gfx_backend_metal::Shared::new (3 samples, 0.12%)</title><rect x="39.7282%" y="949" width="0.1165%" height="15" fill="rgb(244,217,54)" fg:x="1023" fg:w="3"/><text x="39.9782%" y="959.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_buffer (1 samples, 0.04%)</title><rect x="39.8058%" y="933" width="0.0388%" height="15" fill="rgb(224,15,18)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="943.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="39.8058%" y="917" width="0.0388%" height="15" fill="rgb(244,99,12)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="927.50"></text></g><g><title>wgpu_test`&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="39.8058%" y="901" width="0.0388%" height="15" fill="rgb(233,226,8)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="911.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlDevice newBufferWithLength:options:] (1 samples, 0.04%)</title><rect x="39.8058%" y="885" width="0.0388%" height="15" fill="rgb(229,211,3)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="895.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (1 samples, 0.04%)</title><rect x="39.8058%" y="869" width="0.0388%" height="15" fill="rgb(216,140,21)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="879.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (1 samples, 0.04%)</title><rect x="39.8058%" y="853" width="0.0388%" height="15" fill="rgb(234,122,30)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="863.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (1 samples, 0.04%)</title><rect x="39.8058%" y="837" width="0.0388%" height="15" fill="rgb(236,25,46)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="847.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.04%)</title><rect x="39.8058%" y="821" width="0.0388%" height="15" fill="rgb(217,52,54)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="831.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.04%)</title><rect x="39.8058%" y="805" width="0.0388%" height="15" fill="rgb(222,29,26)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="815.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (1 samples, 0.04%)</title><rect x="39.8058%" y="789" width="0.0388%" height="15" fill="rgb(216,177,29)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="799.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.04%)</title><rect x="39.8058%" y="773" width="0.0388%" height="15" fill="rgb(247,136,51)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="783.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.04%)</title><rect x="39.8058%" y="757" width="0.0388%" height="15" fill="rgb(231,47,47)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.8058%" y="741" width="0.0388%" height="15" fill="rgb(211,192,36)" fg:x="1025" fg:w="1"/><text x="40.0558%" y="751.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::enumerate_adapters (4 samples, 0.16%)</title><rect x="39.7282%" y="1125" width="0.1553%" height="15" fill="rgb(229,156,32)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1135.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (4 samples, 0.16%)</title><rect x="39.7282%" y="1109" width="0.1553%" height="15" fill="rgb(248,213,20)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1119.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.16%)</title><rect x="39.7282%" y="1093" width="0.1553%" height="15" fill="rgb(217,64,7)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1103.50"></text></g><g><title>wgpu_test`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.16%)</title><rect x="39.7282%" y="1077" width="0.1553%" height="15" fill="rgb(232,142,8)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1087.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.16%)</title><rect x="39.7282%" y="1061" width="0.1553%" height="15" fill="rgb(224,92,44)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1071.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.16%)</title><rect x="39.7282%" y="1045" width="0.1553%" height="15" fill="rgb(214,169,17)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1055.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (4 samples, 0.16%)</title><rect x="39.7282%" y="1029" width="0.1553%" height="15" fill="rgb(210,59,37)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1039.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.16%)</title><rect x="39.7282%" y="1013" width="0.1553%" height="15" fill="rgb(214,116,48)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1023.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (4 samples, 0.16%)</title><rect x="39.7282%" y="997" width="0.1553%" height="15" fill="rgb(244,191,6)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="1007.50"></text></g><g><title>wgpu_test`core::iter::adapters::map::map_fold::_{{closure}} (4 samples, 0.16%)</title><rect x="39.7282%" y="981" width="0.1553%" height="15" fill="rgb(241,50,52)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="991.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::enumerate_adapters::_{{closure}} (4 samples, 0.16%)</title><rect x="39.7282%" y="965" width="0.1553%" height="15" fill="rgb(236,75,39)" fg:x="1023" fg:w="4"/><text x="39.9782%" y="975.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::name (1 samples, 0.04%)</title><rect x="39.8447%" y="949" width="0.0388%" height="15" fill="rgb(236,99,0)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="959.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="39.8447%" y="933" width="0.0388%" height="15" fill="rgb(207,202,15)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="943.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="39.8447%" y="917" width="0.0388%" height="15" fill="rgb(233,207,14)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="927.50"></text></g><g><title>Metal`-[_MTLDevice name] (1 samples, 0.04%)</title><rect x="39.8447%" y="901" width="0.0388%" height="15" fill="rgb(226,27,51)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="911.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlDevice productName] (1 samples, 0.04%)</title><rect x="39.8447%" y="885" width="0.0388%" height="15" fill="rgb(206,104,42)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="895.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_FetchNameFromEFI(unsigned int, NSString*) (1 samples, 0.04%)</title><rect x="39.8447%" y="869" width="0.0388%" height="15" fill="rgb(212,225,4)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="879.50"></text></g><g><title>IOKit`IORegistryEntryGetParentEntry (1 samples, 0.04%)</title><rect x="39.8447%" y="853" width="0.0388%" height="15" fill="rgb(233,96,42)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="863.50"></text></g><g><title>IOKit`io_registry_entry_get_parent_iterator (1 samples, 0.04%)</title><rect x="39.8447%" y="837" width="0.0388%" height="15" fill="rgb(229,21,32)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="39.8447%" y="821" width="0.0388%" height="15" fill="rgb(226,216,24)" fg:x="1026" fg:w="1"/><text x="40.0947%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::analyze_image_and_sampler_usage (1 samples, 0.04%)</title><rect x="39.8835%" y="981" width="0.0388%" height="15" fill="rgb(221,163,17)" fg:x="1027" fg:w="1"/><text x="40.1335%" y="991.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.04%)</title><rect x="39.8835%" y="965" width="0.0388%" height="15" fill="rgb(216,216,42)" fg:x="1027" fg:w="1"/><text x="40.1335%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.04%)</title><rect x="39.8835%" y="949" width="0.0388%" height="15" fill="rgb(240,118,7)" fg:x="1027" fg:w="1"/><text x="40.1335%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.04%)</title><rect x="39.8835%" y="933" width="0.0388%" height="15" fill="rgb(221,67,37)" fg:x="1027" fg:w="1"/><text x="40.1335%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (1 samples, 0.04%)</title><rect x="39.8835%" y="917" width="0.0388%" height="15" fill="rgb(241,32,44)" fg:x="1027" fg:w="1"/><text x="40.1335%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::CombinedImageSamplerUsageHandler::handle (1 samples, 0.04%)</title><rect x="39.8835%" y="901" width="0.0388%" height="15" fill="rgb(235,204,43)" fg:x="1027" fg:w="1"/><text x="40.1335%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::AnalyzeVariableScopeAccessHandler::~AnalyzeVariableScopeAccessHandler (1 samples, 0.04%)</title><rect x="39.9223%" y="965" width="0.0388%" height="15" fill="rgb(213,116,10)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::AnalyzeVariableScopeAccessHandler::~AnalyzeVariableScopeAccessHandler (1 samples, 0.04%)</title><rect x="39.9223%" y="949" width="0.0388%" height="15" fill="rgb(239,15,48)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="959.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::~unordered_map (1 samples, 0.04%)</title><rect x="39.9223%" y="933" width="0.0388%" height="15" fill="rgb(207,123,36)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="943.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::~unordered_map (1 samples, 0.04%)</title><rect x="39.9223%" y="917" width="0.0388%" height="15" fill="rgb(209,103,30)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="927.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::~__hash_ta (1 samples, 0.04%)</title><rect x="39.9223%" y="901" width="0.0388%" height="15" fill="rgb(238,100,19)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::~__hash_ta (1 samples, 0.04%)</title><rect x="39.9223%" y="885" width="0.0388%" height="15" fill="rgb(244,30,14)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="895.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::__dealloca (1 samples, 0.04%)</title><rect x="39.9223%" y="869" width="0.0388%" height="15" fill="rgb(249,174,6)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="879.50"></text></g><g><title>wgpu_test`void std::__1::allocator_traits&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy&lt;std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void, void&gt;(std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt; &gt;&amp;, std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="39.9223%" y="853" width="0.0388%" height="15" fill="rgb(235,213,41)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="863.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;::~pair (1 samples, 0.04%)</title><rect x="39.9223%" y="837" width="0.0388%" height="15" fill="rgb(213,118,6)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="847.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;::~pair (1 samples, 0.04%)</title><rect x="39.9223%" y="821" width="0.0388%" height="15" fill="rgb(235,44,51)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="831.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="39.9223%" y="805" width="0.0388%" height="15" fill="rgb(217,9,53)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="815.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="39.9223%" y="789" width="0.0388%" height="15" fill="rgb(237,172,34)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="799.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::~__hash_table (1 samples, 0.04%)</title><rect x="39.9223%" y="773" width="0.0388%" height="15" fill="rgb(206,206,11)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="783.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::~__hash_table (1 samples, 0.04%)</title><rect x="39.9223%" y="757" width="0.0388%" height="15" fill="rgb(214,149,29)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="767.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__deallocate_node(std::__1::__hash_node_base&lt;std::__1::__hash_node (1 samples, 0.04%)</title><rect x="39.9223%" y="741" width="0.0388%" height="15" fill="rgb(208,123,3)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="751.50"></text></g><g><title>wgpu_test`std::__1::allocator_traits&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt; &gt;::deallocate(std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt;&amp;, std::__1::__hash_node (1 samples, 0.04%)</title><rect x="39.9223%" y="725" width="0.0388%" height="15" fill="rgb(229,126,4)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="735.50"></text></g><g><title>wgpu_test`std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt;::deallocate(std::__1::__hash_node (1 samples, 0.04%)</title><rect x="39.9223%" y="709" width="0.0388%" height="15" fill="rgb(222,92,36)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="719.50"></text></g><g><title>wgpu_test`std::__1::__libcpp_deallocate (1 samples, 0.04%)</title><rect x="39.9223%" y="693" width="0.0388%" height="15" fill="rgb(216,39,41)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="703.50"></text></g><g><title>wgpu_test`void std::__1::__do_deallocate_handle_size&lt;&gt; (1 samples, 0.04%)</title><rect x="39.9223%" y="677" width="0.0388%" height="15" fill="rgb(253,127,28)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="687.50"></text></g><g><title>wgpu_test`void std::__1::__libcpp_operator_delete&lt;void*&gt; (1 samples, 0.04%)</title><rect x="39.9223%" y="661" width="0.0388%" height="15" fill="rgb(249,152,51)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.04%)</title><rect x="39.9223%" y="645" width="0.0388%" height="15" fill="rgb(209,123,42)" fg:x="1028" fg:w="1"/><text x="40.1723%" y="655.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="39.9612%" y="901" width="0.0388%" height="15" fill="rgb(241,118,22)" fg:x="1029" fg:w="1"/><text x="40.2112%" y="911.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::equal_to&lt;unsigne (1 samples, 0.04%)</title><rect x="39.9612%" y="885" width="0.0388%" height="15" fill="rgb(208,25,7)" fg:x="1029" fg:w="1"/><text x="40.2112%" y="895.50"></text></g><g><title>wgpu_test`std::__1::unique_ptr&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt;, std::__1::__hash_node_destructor&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt; &gt; &gt; &gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__ (1 samples, 0.04%)</title><rect x="39.9612%" y="869" width="0.0388%" height="15" fill="rgb(243,144,39)" fg:x="1029" fg:w="1"/><text x="40.2112%" y="879.50"></text></g><g><title>wgpu_test`void std::__1::allocator_traits&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt; &gt; &gt;::construct&lt;std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;, std::__1::tuple&lt;&gt;, void&gt;(std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;, void*&gt; &gt;&amp;, std::__1::pair&lt;unsigned int const, std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;*, std::__1::piecewise_construct_t const&amp;, std::__1::tup (1 samples, 0.04%)</title><rect x="39.9612%" y="853" width="0.0388%" height="15" fill="rgb(250,50,5)" fg:x="1029" fg:w="1"/><text x="40.2112%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::build_function_control_flow_graphs_and_analyze (3 samples, 0.12%)</title><rect x="39.9223%" y="981" width="0.1165%" height="15" fill="rgb(207,67,11)" fg:x="1028" fg:w="3"/><text x="40.1723%" y="991.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::analyze_variable_scope (2 samples, 0.08%)</title><rect x="39.9612%" y="965" width="0.0777%" height="15" fill="rgb(245,204,40)" fg:x="1029" fg:w="2"/><text x="40.2112%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (2 samples, 0.08%)</title><rect x="39.9612%" y="949" width="0.0777%" height="15" fill="rgb(238,228,24)" fg:x="1029" fg:w="2"/><text x="40.2112%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::traverse_all_reachable_opcodes (2 samples, 0.08%)</title><rect x="39.9612%" y="933" width="0.0777%" height="15" fill="rgb(217,116,22)" fg:x="1029" fg:w="2"/><text x="40.2112%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::AnalyzeVariableScopeAccessHandler::handle (2 samples, 0.08%)</title><rect x="39.9612%" y="917" width="0.0777%" height="15" fill="rgb(234,98,12)" fg:x="1029" fg:w="2"/><text x="40.2112%" y="927.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="40.0000%" y="901" width="0.0388%" height="15" fill="rgb(242,170,50)" fg:x="1030" fg:w="1"/><text x="40.2500%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__insert_unique (1 samples, 0.04%)</title><rect x="40.0000%" y="885" width="0.0388%" height="15" fill="rgb(235,7,5)" fg:x="1030" fg:w="1"/><text x="40.2500%" y="895.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__emplace_unique_key_args&lt;unsigned int, unsigned int&gt; (1 samples, 0.04%)</title><rect x="40.0000%" y="869" width="0.0388%" height="15" fill="rgb(241,114,28)" fg:x="1030" fg:w="1"/><text x="40.2500%" y="879.50"></text></g><g><title>wgpu_test`ceil(float) (1 samples, 0.04%)</title><rect x="40.0000%" y="853" width="0.0388%" height="15" fill="rgb(246,112,42)" fg:x="1030" fg:w="1"/><text x="40.2500%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.0388%" y="949" width="0.0388%" height="15" fill="rgb(248,228,14)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.0388%" y="933" width="0.0388%" height="15" fill="rgb(208,133,18)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::attempt_emit_loop_header (1 samples, 0.04%)</title><rect x="40.0388%" y="917" width="0.0388%" height="15" fill="rgb(207,35,49)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::branch(spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt; (1 samples, 0.04%)</title><rect x="40.0388%" y="901" width="0.0388%" height="15" fill="rgb(205,68,36)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.0388%" y="885" width="0.0388%" height="15" fill="rgb(245,62,40)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_instructions (1 samples, 0.04%)</title><rect x="40.0388%" y="869" width="0.0388%" height="15" fill="rgb(228,27,24)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::emit_instruction (1 samples, 0.04%)</title><rect x="40.0388%" y="853" width="0.0388%" height="15" fill="rgb(253,19,12)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_instruction (1 samples, 0.04%)</title><rect x="40.0388%" y="837" width="0.0388%" height="15" fill="rgb(232,28,20)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::access_chain (1 samples, 0.04%)</title><rect x="40.0388%" y="821" width="0.0388%" height="15" fill="rgb(218,35,51)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::access_chain_internal (1 samples, 0.04%)</title><rect x="40.0388%" y="805" width="0.0388%" height="15" fill="rgb(212,90,40)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::member_is_packed_physical_type (1 samples, 0.04%)</title><rect x="40.0388%" y="789" width="0.0388%" height="15" fill="rgb(220,172,12)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="799.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::has_extended_member_decoration (1 samples, 0.04%)</title><rect x="40.0388%" y="773" width="0.0388%" height="15" fill="rgb(226,159,20)" fg:x="1031" fg:w="1"/><text x="40.2888%" y="783.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::access_chain (1 samples, 0.04%)</title><rect x="40.0777%" y="901" width="0.0388%" height="15" fill="rgb(234,205,16)" fg:x="1032" fg:w="1"/><text x="40.3277%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::access_chain_internal (1 samples, 0.04%)</title><rect x="40.0777%" y="885" width="0.0388%" height="15" fill="rgb(207,9,39)" fg:x="1032" fg:w="1"/><text x="40.3277%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_enclosed_expression (1 samples, 0.04%)</title><rect x="40.0777%" y="869" width="0.0388%" height="15" fill="rgb(249,143,15)" fg:x="1032" fg:w="1"/><text x="40.3277%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::enclose_expression(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.0777%" y="853" width="0.0388%" height="15" fill="rgb(253,133,29)" fg:x="1032" fg:w="1"/><text x="40.3277%" y="863.50"></text></g><g><title>wgpu_test`std::__1::__wrap_iter&lt;char const*&gt;::__wrap_iter (1 samples, 0.04%)</title><rect x="40.0777%" y="837" width="0.0388%" height="15" fill="rgb(221,187,0)" fg:x="1032" fg:w="1"/><text x="40.3277%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (3 samples, 0.12%)</title><rect x="40.0388%" y="965" width="0.1165%" height="15" fill="rgb(205,204,26)" fg:x="1031" fg:w="3"/><text x="40.2888%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_instructions (2 samples, 0.08%)</title><rect x="40.0777%" y="949" width="0.0777%" height="15" fill="rgb(224,68,54)" fg:x="1032" fg:w="2"/><text x="40.3277%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::emit_instruction (2 samples, 0.08%)</title><rect x="40.0777%" y="933" width="0.0777%" height="15" fill="rgb(209,67,4)" fg:x="1032" fg:w="2"/><text x="40.3277%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_instruction (2 samples, 0.08%)</title><rect x="40.0777%" y="917" width="0.0777%" height="15" fill="rgb(228,229,18)" fg:x="1032" fg:w="2"/><text x="40.3277%" y="927.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="40.1165%" y="901" width="0.0388%" height="15" fill="rgb(231,89,13)" fg:x="1033" fg:w="1"/><text x="40.3665%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__insert_unique (1 samples, 0.04%)</title><rect x="40.1165%" y="885" width="0.0388%" height="15" fill="rgb(210,182,18)" fg:x="1033" fg:w="1"/><text x="40.3665%" y="895.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__emplace_unique_key_args&lt;unsigned int, unsigned int const&amp;&gt; (1 samples, 0.04%)</title><rect x="40.1165%" y="869" width="0.0388%" height="15" fill="rgb(240,105,2)" fg:x="1033" fg:w="1"/><text x="40.3665%" y="879.50"></text></g><g><title>wgpu_test`std::__1::unique_ptr&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;, std::__1::__hash_node_destructor&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt; &gt; &gt; std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__construct_node_hash&lt;unsigned int const&amp;&gt; (1 samples, 0.04%)</title><rect x="40.1165%" y="853" width="0.0388%" height="15" fill="rgb(207,170,50)" fg:x="1033" fg:w="1"/><text x="40.3665%" y="863.50"></text></g><g><title>wgpu_test`std::__1::unique_ptr&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;, std::__1::__hash_node_destructor&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="40.1165%" y="837" width="0.0388%" height="15" fill="rgb(232,133,24)" fg:x="1033" fg:w="1"/><text x="40.3665%" y="847.50"></text></g><g><title> (1 samples, 0.04%)</title><rect x="40.1165%" y="821" width="0.0388%" height="15" fill="rgb(235,166,27)" fg:x="1033" fg:w="1"/><text x="40.3665%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::branch(spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, unsigned int, spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt; (1 samples, 0.04%)</title><rect x="40.1553%" y="821" width="0.0388%" height="15" fill="rgb(209,19,13)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::branch(spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt; (1 samples, 0.04%)</title><rect x="40.1553%" y="805" width="0.0388%" height="15" fill="rgb(226,79,39)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.1553%" y="789" width="0.0388%" height="15" fill="rgb(222,163,10)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="799.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_instructions (1 samples, 0.04%)</title><rect x="40.1553%" y="773" width="0.0388%" height="15" fill="rgb(214,44,19)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="783.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::emit_instruction (1 samples, 0.04%)</title><rect x="40.1553%" y="757" width="0.0388%" height="15" fill="rgb(210,217,13)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="767.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_instruction (1 samples, 0.04%)</title><rect x="40.1553%" y="741" width="0.0388%" height="15" fill="rgb(237,61,54)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="751.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="40.1553%" y="725" width="0.0388%" height="15" fill="rgb(226,184,24)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="735.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__insert_unique (1 samples, 0.04%)</title><rect x="40.1553%" y="709" width="0.0388%" height="15" fill="rgb(223,226,4)" fg:x="1034" fg:w="1"/><text x="40.4053%" y="719.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (2 samples, 0.08%)</title><rect x="40.1553%" y="933" width="0.0777%" height="15" fill="rgb(210,26,41)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (2 samples, 0.08%)</title><rect x="40.1553%" y="917" width="0.0777%" height="15" fill="rgb(220,221,6)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (2 samples, 0.08%)</title><rect x="40.1553%" y="901" width="0.0777%" height="15" fill="rgb(225,89,49)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (2 samples, 0.08%)</title><rect x="40.1553%" y="885" width="0.0777%" height="15" fill="rgb(218,70,45)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::attempt_emit_loop_header (2 samples, 0.08%)</title><rect x="40.1553%" y="869" width="0.0777%" height="15" fill="rgb(238,166,21)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::branch(spirv_cross::TypedID&lt;(spirv_cross::Types)6&gt;, spirv_cross::TypedID&lt; (2 samples, 0.08%)</title><rect x="40.1553%" y="853" width="0.0777%" height="15" fill="rgb(224,141,44)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (2 samples, 0.08%)</title><rect x="40.1553%" y="837" width="0.0777%" height="15" fill="rgb(230,12,49)" fg:x="1034" fg:w="2"/><text x="40.4053%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.1942%" y="821" width="0.0388%" height="15" fill="rgb(212,174,12)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.1942%" y="805" width="0.0388%" height="15" fill="rgb(246,67,9)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (1 samples, 0.04%)</title><rect x="40.1942%" y="789" width="0.0388%" height="15" fill="rgb(239,35,23)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="799.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_instructions (1 samples, 0.04%)</title><rect x="40.1942%" y="773" width="0.0388%" height="15" fill="rgb(211,167,0)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="783.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::emit_instruction (1 samples, 0.04%)</title><rect x="40.1942%" y="757" width="0.0388%" height="15" fill="rgb(225,119,45)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="767.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_binary_op_cast (1 samples, 0.04%)</title><rect x="40.1942%" y="741" width="0.0388%" height="15" fill="rgb(210,162,6)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="751.50"></text></g><g><title>wgpu_test`decltype(fp.end()) std::__1::end&lt;std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;(std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.1942%" y="725" width="0.0388%" height="15" fill="rgb(208,118,35)" fg:x="1035" fg:w="1"/><text x="40.4442%" y="735.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_binary_op (1 samples, 0.04%)</title><rect x="40.2718%" y="901" width="0.0388%" height="15" fill="rgb(239,4,53)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_enclosed_unpacked_expression (1 samples, 0.04%)</title><rect x="40.2718%" y="885" width="0.0388%" height="15" fill="rgb(213,130,21)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_enclosed_expression (1 samples, 0.04%)</title><rect x="40.2718%" y="869" width="0.0388%" height="15" fill="rgb(235,148,0)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_expression (1 samples, 0.04%)</title><rect x="40.2718%" y="853" width="0.0388%" height="15" fill="rgb(244,224,18)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="863.50"></text></g><g><title>wgpu_test`decltype(fp.end()) std::__1::end&lt;std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt; &gt;(std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.2718%" y="837" width="0.0388%" height="15" fill="rgb(211,214,4)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="847.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="40.2718%" y="821" width="0.0388%" height="15" fill="rgb(206,119,25)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="831.50"></text></g><g><title>wgpu_test`std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;::__hash_const_iterator(std::__1::__hash_iterator&lt;std::__1::__hash_node (1 samples, 0.04%)</title><rect x="40.2718%" y="805" width="0.0388%" height="15" fill="rgb(243,93,47)" fg:x="1037" fg:w="1"/><text x="40.5218%" y="815.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_function (5 samples, 0.19%)</title><rect x="40.1553%" y="965" width="0.1942%" height="15" fill="rgb(224,194,6)" fg:x="1034" fg:w="5"/><text x="40.4053%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_chain (5 samples, 0.19%)</title><rect x="40.1553%" y="949" width="0.1942%" height="15" fill="rgb(243,229,6)" fg:x="1034" fg:w="5"/><text x="40.4053%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_block_instructions (3 samples, 0.12%)</title><rect x="40.2330%" y="933" width="0.1165%" height="15" fill="rgb(207,23,50)" fg:x="1036" fg:w="3"/><text x="40.4830%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::emit_instruction (3 samples, 0.12%)</title><rect x="40.2330%" y="917" width="0.1165%" height="15" fill="rgb(253,192,32)" fg:x="1036" fg:w="3"/><text x="40.4830%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_instruction (1 samples, 0.04%)</title><rect x="40.3107%" y="901" width="0.0388%" height="15" fill="rgb(213,21,6)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_binary_op_cast (1 samples, 0.04%)</title><rect x="40.3107%" y="885" width="0.0388%" height="15" fill="rgb(243,151,13)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::binary_op_bitcast_helper(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.3107%" y="869" width="0.0388%" height="15" fill="rgb(233,165,41)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_enclosed_unpacked_expression (1 samples, 0.04%)</title><rect x="40.3107%" y="853" width="0.0388%" height="15" fill="rgb(246,176,45)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_enclosed_expression (1 samples, 0.04%)</title><rect x="40.3107%" y="837" width="0.0388%" height="15" fill="rgb(217,170,52)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::to_expression (1 samples, 0.04%)</title><rect x="40.3107%" y="821" width="0.0388%" height="15" fill="rgb(214,203,54)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::track_expression_read (1 samples, 0.04%)</title><rect x="40.3107%" y="805" width="0.0388%" height="15" fill="rgb(248,215,49)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="815.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;unsigned int, unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="40.3107%" y="789" width="0.0388%" height="15" fill="rgb(208,46,10)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="799.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(unsigned int const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned int const&amp;&gt;&amp;&amp;, std::__1::tuple (1 samples, 0.04%)</title><rect x="40.3107%" y="773" width="0.0388%" height="15" fill="rgb(254,5,31)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="783.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt; &gt; &gt;::rehash (1 samples, 0.04%)</title><rect x="40.3107%" y="757" width="0.0388%" height="15" fill="rgb(222,104,33)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="767.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt; &gt; &gt;::__rehash (1 samples, 0.04%)</title><rect x="40.3107%" y="741" width="0.0388%" height="15" fill="rgb(248,49,16)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="751.50"></text></g><g><title>wgpu_test`std::__1::enable_if&lt;_CheckArrayPointerConversion&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;**&gt;::value, void&gt;::type std::__1::unique_ptr&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;* [], std::__1::__bucket_list_deallocator&lt;std::__1::allocator&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;*&gt; &gt; &gt;::reset&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;**&gt;(std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type (1 samples, 0.04%)</title><rect x="40.3107%" y="725" width="0.0388%" height="15" fill="rgb(232,198,41)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="735.50"></text></g><g><title>wgpu_test`std::__1::__bucket_list_deallocator&lt;std::__1::allocator&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt;*&gt;*&gt; &gt;::operator()(std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type (1 samples, 0.04%)</title><rect x="40.3107%" y="709" width="0.0388%" height="15" fill="rgb(214,125,3)" fg:x="1038" fg:w="1"/><text x="40.5607%" y="719.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::emit_function (9 samples, 0.35%)</title><rect x="40.0388%" y="981" width="0.3495%" height="15" fill="rgb(229,220,28)" fg:x="1031" fg:w="9"/><text x="40.2888%" y="991.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::variable_decl_function_local (1 samples, 0.04%)</title><rect x="40.3495%" y="965" width="0.0388%" height="15" fill="rgb(222,64,37)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::variable_decl (1 samples, 0.04%)</title><rect x="40.3495%" y="949" width="0.0388%" height="15" fill="rgb(249,184,13)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::variable_decl (1 samples, 0.04%)</title><rect x="40.3495%" y="933" width="0.0388%" height="15" fill="rgb(252,176,6)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::variable_decl(spirv_cross::SPIRType const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.3495%" y="917" width="0.0388%" height="15" fill="rgb(228,153,7)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::variable_decl(spirv_cross::SPIRType const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.3495%" y="901" width="0.0388%" height="15" fill="rgb(242,193,5)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="911.50"></text></g><g><title>wgpu_test`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; spirv_cross::join&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;, char const (&amp;) [2], std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;, char const (&amp;) [2], std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.3495%" y="885" width="0.0388%" height="15" fill="rgb(232,140,9)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="895.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="40.3495%" y="869" width="0.0388%" height="15" fill="rgb(213,222,16)" fg:x="1039" fg:w="1"/><text x="40.5995%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::reset (1 samples, 0.04%)</title><rect x="40.3883%" y="981" width="0.0388%" height="15" fill="rgb(222,75,50)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="991.50"></text></g><g><title>wgpu_test`std::__1::unordered_map&lt;unsigned int, unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="40.3883%" y="965" width="0.0388%" height="15" fill="rgb(205,180,2)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="975.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="40.3883%" y="949" width="0.0388%" height="15" fill="rgb(216,34,7)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="959.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt; &gt; &gt;::__deallocate_node(std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type (1 samples, 0.04%)</title><rect x="40.3883%" y="933" width="0.0388%" height="15" fill="rgb(253,16,32)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="943.50"></text></g><g><title>wgpu_test`std::__1::allocator_traits&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt; &gt; &gt;::deallocate(std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt; &gt;&amp;, std::__1::__hash_node&lt;std::__1::__hash_value_type (1 samples, 0.04%)</title><rect x="40.3883%" y="917" width="0.0388%" height="15" fill="rgb(208,97,28)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="927.50"></text></g><g><title>wgpu_test`std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, unsigned int&gt;, void*&gt; &gt;::deallocate(std::__1::__hash_node&lt;std::__1::__hash_value_type (1 samples, 0.04%)</title><rect x="40.3883%" y="901" width="0.0388%" height="15" fill="rgb(225,92,11)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__libcpp_deallocate (1 samples, 0.04%)</title><rect x="40.3883%" y="885" width="0.0388%" height="15" fill="rgb(243,38,12)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="895.50"></text></g><g><title>wgpu_test`void std::__1::__do_deallocate_handle_size&lt;&gt; (1 samples, 0.04%)</title><rect x="40.3883%" y="869" width="0.0388%" height="15" fill="rgb(208,139,16)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="879.50"></text></g><g><title>wgpu_test`void std::__1::__libcpp_operator_delete&lt;void*&gt; (1 samples, 0.04%)</title><rect x="40.3883%" y="853" width="0.0388%" height="15" fill="rgb(227,24,9)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="40.3883%" y="837" width="0.0388%" height="15" fill="rgb(206,62,11)" fg:x="1040" fg:w="1"/><text x="40.6383%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::spirv::Ast&lt;TTarget&gt;::compile (15 samples, 0.58%)</title><rect x="39.8835%" y="1061" width="0.5825%" height="15" fill="rgb(228,134,27)" fg:x="1027" fg:w="15"/><text x="40.1335%" y="1071.50"></text></g><g><title>wgpu_test`spirv_cross::msl::_&lt;impl spirv_cross::spirv::Compile&lt;spirv_cross::msl::Target&gt; for spirv_cross::spirv::Ast&lt;spirv_cross::msl::Target&gt;&gt;::compile (15 samples, 0.58%)</title><rect x="39.8835%" y="1045" width="0.5825%" height="15" fill="rgb(205,55,33)" fg:x="1027" fg:w="15"/><text x="40.1335%" y="1055.50"></text></g><g><title>wgpu_test`spirv_cross::msl::_&lt;impl spirv_cross::spirv::Ast&lt;spirv_cross::msl::Target&gt;&gt;::compile_internal (15 samples, 0.58%)</title><rect x="39.8835%" y="1029" width="0.5825%" height="15" fill="rgb(243,75,43)" fg:x="1027" fg:w="15"/><text x="40.1335%" y="1039.50"></text></g><g><title>wgpu_test`sc_internal_compiler_msl_compile (15 samples, 0.58%)</title><rect x="39.8835%" y="1013" width="0.5825%" height="15" fill="rgb(223,27,42)" fg:x="1027" fg:w="15"/><text x="40.1335%" y="1023.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::compile (15 samples, 0.58%)</title><rect x="39.8835%" y="997" width="0.5825%" height="15" fill="rgb(232,189,33)" fg:x="1027" fg:w="15"/><text x="40.1335%" y="1007.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::add_interface_block (1 samples, 0.04%)</title><rect x="40.4272%" y="981" width="0.0388%" height="15" fill="rgb(210,9,39)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="991.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::add_variable_to_interface_block(spv::StorageClass, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.4272%" y="965" width="0.0388%" height="15" fill="rgb(242,85,26)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::add_plain_variable_to_interface_block(spv::StorageClass, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.4272%" y="949" width="0.0388%" height="15" fill="rgb(248,44,4)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::set_member_name(spirv_cross::TypedID&lt;(spirv_cross::Types)1&gt;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.4272%" y="933" width="0.0388%" height="15" fill="rgb(250,96,46)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::ParsedIR::set_member_name(spirv_cross::TypedID&lt;(spirv_cross::Types)1&gt;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.4272%" y="917" width="0.0388%" height="15" fill="rgb(229,116,26)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::SmallVector&lt;spirv_cross::Meta::Decoration, 0ul&gt;::resize (1 samples, 0.04%)</title><rect x="40.4272%" y="901" width="0.0388%" height="15" fill="rgb(246,94,34)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="911.50"></text></g><g><title>wgpu_test`spirv_cross::Meta::Decoration::Decoration (1 samples, 0.04%)</title><rect x="40.4272%" y="885" width="0.0388%" height="15" fill="rgb(251,73,21)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="895.50"></text></g><g><title>wgpu_test`spirv_cross::Meta::Decoration::Decoration (1 samples, 0.04%)</title><rect x="40.4272%" y="869" width="0.0388%" height="15" fill="rgb(254,121,25)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="879.50"></text></g><g><title>wgpu_test`spirv_cross::Meta::Decoration::Extended::Extended (1 samples, 0.04%)</title><rect x="40.4272%" y="853" width="0.0388%" height="15" fill="rgb(215,161,49)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="863.50"></text></g><g><title>wgpu_test`spirv_cross::Meta::Decoration::Extended::Extended (1 samples, 0.04%)</title><rect x="40.4272%" y="837" width="0.0388%" height="15" fill="rgb(221,43,13)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="847.50"></text></g><g><title>wgpu_test`spirv_cross::Bitset::Bitset (1 samples, 0.04%)</title><rect x="40.4272%" y="821" width="0.0388%" height="15" fill="rgb(249,5,37)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="831.50"></text></g><g><title>wgpu_test`spirv_cross::Bitset::Bitset (1 samples, 0.04%)</title><rect x="40.4272%" y="805" width="0.0388%" height="15" fill="rgb(226,25,44)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="815.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="40.4272%" y="789" width="0.0388%" height="15" fill="rgb(238,189,16)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="799.50"></text></g><g><title>wgpu_test`std::__1::unordered_set&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="40.4272%" y="773" width="0.0388%" height="15" fill="rgb(251,186,8)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="783.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__hash_table (1 samples, 0.04%)</title><rect x="40.4272%" y="757" width="0.0388%" height="15" fill="rgb(254,34,31)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="767.50"></text></g><g><title>wgpu_test`std::__1::__hash_table&lt;unsigned int, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;unsigned int&gt; &gt;::__hash_table (1 samples, 0.04%)</title><rect x="40.4272%" y="741" width="0.0388%" height="15" fill="rgb(225,215,27)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="751.50"></text></g><g><title>wgpu_test`std::__1::__compressed_pair&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;, std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt; &gt;::__compressed_pair&lt;true, void&gt; (1 samples, 0.04%)</title><rect x="40.4272%" y="725" width="0.0388%" height="15" fill="rgb(221,192,48)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="735.50"></text></g><g><title>wgpu_test`std::__1::__compressed_pair&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;, std::__1::allocator&lt;std::__1::__hash_node&lt;unsigned int, void*&gt; &gt; &gt;::__compressed_pair&lt;true, void&gt; (1 samples, 0.04%)</title><rect x="40.4272%" y="709" width="0.0388%" height="15" fill="rgb(219,137,20)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="719.50"></text></g><g><title>wgpu_test`std::__1::__compressed_pair_elem&lt;std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;, 0, false&gt;::__compressed_pair_elem (1 samples, 0.04%)</title><rect x="40.4272%" y="693" width="0.0388%" height="15" fill="rgb(219,84,11)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="703.50"></text></g><g><title>wgpu_test`std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;::__hash_node_base (1 samples, 0.04%)</title><rect x="40.4272%" y="677" width="0.0388%" height="15" fill="rgb(224,10,23)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="687.50"></text></g><g><title>wgpu_test`std::__1::__hash_node_base&lt;std::__1::__hash_node&lt;unsigned int, void*&gt;*&gt;::__hash_node_base (1 samples, 0.04%)</title><rect x="40.4272%" y="661" width="0.0388%" height="15" fill="rgb(248,22,39)" fg:x="1041" fg:w="1"/><text x="40.6772%" y="671.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::set_ir (1 samples, 0.04%)</title><rect x="40.4660%" y="949" width="0.0388%" height="15" fill="rgb(212,154,20)" fg:x="1042" fg:w="1"/><text x="40.7160%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::ParsedIR::operator= (1 samples, 0.04%)</title><rect x="40.4660%" y="933" width="0.0388%" height="15" fill="rgb(236,199,50)" fg:x="1042" fg:w="1"/><text x="40.7160%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::SmallVector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, 8ul&gt;::operator=(spirv_cross::SmallVector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.4660%" y="917" width="0.0388%" height="15" fill="rgb(211,9,17)" fg:x="1042" fg:w="1"/><text x="40.7160%" y="927.50"></text></g><g><title>wgpu_test`spirv_cross::SmallVector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, 8ul&gt;::reserve (1 samples, 0.04%)</title><rect x="40.4660%" y="901" width="0.0388%" height="15" fill="rgb(243,216,36)" fg:x="1042" fg:w="1"/><text x="40.7160%" y="911.50"></text></g><g><title>wgpu_test`gfx_backend_metal::device::Device::load_shader (17 samples, 0.66%)</title><rect x="39.8835%" y="1093" width="0.6602%" height="15" fill="rgb(250,2,10)" fg:x="1027" fg:w="17"/><text x="40.1335%" y="1103.50"></text></g><g><title>wgpu_test`gfx_backend_metal::device::Device::compile_shader_library (17 samples, 0.66%)</title><rect x="39.8835%" y="1077" width="0.6602%" height="15" fill="rgb(226,50,48)" fg:x="1027" fg:w="17"/><text x="40.1335%" y="1087.50"></text></g><g><title>wgpu_test`spirv_cross::spirv::Ast&lt;TTarget&gt;::parse (2 samples, 0.08%)</title><rect x="40.4660%" y="1061" width="0.0777%" height="15" fill="rgb(243,81,16)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="1071.50"></text></g><g><title>wgpu_test`spirv_cross::msl::_&lt;impl spirv_cross::spirv::Parse&lt;spirv_cross::msl::Target&gt; for spirv_cross::spirv::Ast&lt;spirv_cross::msl::Target&gt;&gt;::parse (2 samples, 0.08%)</title><rect x="40.4660%" y="1045" width="0.0777%" height="15" fill="rgb(250,14,2)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="1055.50"></text></g><g><title>wgpu_test`sc_internal_compiler_msl_new (2 samples, 0.08%)</title><rect x="40.4660%" y="1029" width="0.0777%" height="15" fill="rgb(233,135,29)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="1039.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::CompilerMSL (2 samples, 0.08%)</title><rect x="40.4660%" y="1013" width="0.0777%" height="15" fill="rgb(224,64,43)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="1023.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerMSL::CompilerMSL (2 samples, 0.08%)</title><rect x="40.4660%" y="997" width="0.0777%" height="15" fill="rgb(238,84,13)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="1007.50"></text></g><g><title>wgpu_test`spirv_cross::CompilerGLSL::CompilerGLSL (2 samples, 0.08%)</title><rect x="40.4660%" y="981" width="0.0777%" height="15" fill="rgb(253,48,26)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="991.50"></text></g><g><title>wgpu_test`spirv_cross::Compiler::Compiler (2 samples, 0.08%)</title><rect x="40.4660%" y="965" width="0.0777%" height="15" fill="rgb(205,223,31)" fg:x="1042" fg:w="2"/><text x="40.7160%" y="975.50"></text></g><g><title>wgpu_test`spirv_cross::Parser::parse (1 samples, 0.04%)</title><rect x="40.5049%" y="949" width="0.0388%" height="15" fill="rgb(221,41,32)" fg:x="1043" fg:w="1"/><text x="40.7549%" y="959.50"></text></g><g><title>wgpu_test`spirv_cross::ParsedIR::set_id_bounds (1 samples, 0.04%)</title><rect x="40.5049%" y="933" width="0.0388%" height="15" fill="rgb(213,158,31)" fg:x="1043" fg:w="1"/><text x="40.7549%" y="943.50"></text></g><g><title>wgpu_test`spirv_cross::SmallVector&lt;unsigned char, 8ul&gt;::reserve (1 samples, 0.04%)</title><rect x="40.5049%" y="917" width="0.0388%" height="15" fill="rgb(245,126,43)" fg:x="1043" fg:w="1"/><text x="40.7549%" y="927.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::create_graphics_pipeline (18 samples, 0.70%)</title><rect x="39.8835%" y="1109" width="0.6990%" height="15" fill="rgb(227,7,22)" fg:x="1027" fg:w="18"/><text x="40.1335%" y="1119.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_render_pipeline_state (1 samples, 0.04%)</title><rect x="40.5437%" y="1093" width="0.0388%" height="15" fill="rgb(252,90,44)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1103.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="40.5437%" y="1077" width="0.0388%" height="15" fill="rgb(253,91,0)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1087.50"></text></g><g><title>wgpu_test`&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="40.5437%" y="1061" width="0.0388%" height="15" fill="rgb(252,175,49)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1071.50"></text></g><g><title>Metal`-[_MTLDevice newRenderPipelineStateWithDescriptor:error:] (1 samples, 0.04%)</title><rect x="40.5437%" y="1045" width="0.0388%" height="15" fill="rgb(246,150,1)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1055.50"></text></g><g><title>Metal`-[MTLCompiler newRenderPipelineStateWithDescriptor:options:reflection:error:completionHandler:] (1 samples, 0.04%)</title><rect x="40.5437%" y="1029" width="0.0388%" height="15" fill="rgb(241,192,25)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1039.50"></text></g><g><title>Metal`-[MTLCompiler newRenderPipelineStateWithDescriptorInternal:options:reflection:destinationBinaryArchive:error:completionHandler:] (1 samples, 0.04%)</title><rect x="40.5437%" y="1013" width="0.0388%" height="15" fill="rgb(239,187,11)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1023.50"></text></g><g><title>Metal`__128-[MTLCompiler newRenderPipelineStateWithDescriptorInternal:options:reflection:destinationBinaryArchive:error:completionHandler:]_block_invoke_3 (1 samples, 0.04%)</title><rect x="40.5437%" y="997" width="0.0388%" height="15" fill="rgb(218,202,51)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="1007.50"></text></g><g><title>Metal`-[MTLCompiler createVertexStageAndLinkPipelineWithFragment:fragmentVariant:vertexFunction:serializedVertexDescriptor:descriptor:destinationArchive:options:reflection:compileStatistics:fragmentCompileTimeData:error:completionHandler:] (1 samples, 0.04%)</title><rect x="40.5437%" y="981" width="0.0388%" height="15" fill="rgb(225,176,8)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="991.50"></text></g><g><title>Metal`__233-[MTLCompiler createVertexStageAndLinkPipelineWithFragment:fragmentVariant:vertexFunction:serializedVertexDescriptor:descriptor:destinationArchive:options:reflection:compileStatistics:fragmentCompileTimeData:error:completionHandler:]_block_invoke.1384 (1 samples, 0.04%)</title><rect x="40.5437%" y="965" width="0.0388%" height="15" fill="rgb(219,122,41)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="975.50"></text></g><g><title>Metal`newRenderPipeline(MTLProgramObject*, MTLFunctionVariant*, MTLProgramObject*, MTLFunctionVariant*, _MTLDevice*, NSObject&lt;OS_dispatch_data&gt;*, MTLRenderPipelineDescriptor*, unsigned long, unsigned long, MTLRenderPipelineReflection**, NSMutableDictionary*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, void (id&lt;MTLRenderPipelineState&gt;, MTLRenderPipelineReflection*, NSError*) block_pointer, NSError*) (1 samples, 0.04%)</title><rect x="40.5437%" y="949" width="0.0388%" height="15" fill="rgb(248,140,20)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="959.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlDevice newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:] (1 samples, 0.04%)</title><rect x="40.5437%" y="933" width="0.0388%" height="15" fill="rgb(245,41,37)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="943.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlRenderPipelineState initWithDevice:pipelineStateDescriptor:vertexVariant:fragmentVariant:] (1 samples, 0.04%)</title><rect x="40.5437%" y="917" width="0.0388%" height="15" fill="rgb(235,82,39)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="927.50"></text></g><g><title>AMDRadeonX6000MTLDriver`amdMtl_GFX10_ResourceMgrCreateConstState(GFX10_HwShaderCommonRec const* const*, unsigned int) (1 samples, 0.04%)</title><rect x="40.5437%" y="901" width="0.0388%" height="15" fill="rgb(230,108,42)" fg:x="1044" fg:w="1"/><text x="40.7937%" y="911.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::destroy_shader_module (1 samples, 0.04%)</title><rect x="40.5825%" y="1109" width="0.0388%" height="15" fill="rgb(215,150,50)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1119.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;gfx_backend_metal::native::ShaderModule&gt; (1 samples, 0.04%)</title><rect x="40.5825%" y="1093" width="0.0388%" height="15" fill="rgb(233,212,5)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1103.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.04%)</title><rect x="40.5825%" y="1077" width="0.0388%" height="15" fill="rgb(245,80,22)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1087.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.04%)</title><rect x="40.5825%" y="1061" width="0.0388%" height="15" fill="rgb(238,129,16)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1071.50"></text></g><g><title>wgpu_test`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="40.5825%" y="1045" width="0.0388%" height="15" fill="rgb(240,19,0)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1055.50"></text></g><g><title>wgpu_test`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="40.5825%" y="1029" width="0.0388%" height="15" fill="rgb(232,42,35)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1039.50"></text></g><g><title>wgpu_test`alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="40.5825%" y="1013" width="0.0388%" height="15" fill="rgb(223,130,24)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.04%)</title><rect x="40.5825%" y="997" width="0.0388%" height="15" fill="rgb(237,16,22)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.04%)</title><rect x="40.5825%" y="981" width="0.0388%" height="15" fill="rgb(248,192,20)" fg:x="1045" fg:w="1"/><text x="40.8325%" y="991.50"></text></g><g><title>wgpu_test`glslang::HlslScanContext::deleteKeywordMap (1 samples, 0.04%)</title><rect x="40.6602%" y="1013" width="0.0388%" height="15" fill="rgb(233,167,2)" fg:x="1047" fg:w="1"/><text x="40.9102%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.04%)</title><rect x="40.6602%" y="997" width="0.0388%" height="15" fill="rgb(252,71,44)" fg:x="1047" fg:w="1"/><text x="40.9102%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.04%)</title><rect x="40.6602%" y="981" width="0.0388%" height="15" fill="rgb(238,37,47)" fg:x="1047" fg:w="1"/><text x="40.9102%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.04%)</title><rect x="40.6602%" y="965" width="0.0388%" height="15" fill="rgb(214,202,54)" fg:x="1047" fg:w="1"/><text x="40.9102%" y="975.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::~TPoolAllocator (2 samples, 0.08%)</title><rect x="40.6990%" y="1013" width="0.0777%" height="15" fill="rgb(254,165,40)" fg:x="1048" fg:w="2"/><text x="40.9490%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.08%)</title><rect x="40.6990%" y="997" width="0.0777%" height="15" fill="rgb(246,173,38)" fg:x="1048" fg:w="2"/><text x="40.9490%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (2 samples, 0.08%)</title><rect x="40.6990%" y="981" width="0.0777%" height="15" fill="rgb(215,3,27)" fg:x="1048" fg:w="2"/><text x="40.9490%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.08%)</title><rect x="40.6990%" y="965" width="0.0777%" height="15" fill="rgb(239,169,51)" fg:x="1048" fg:w="2"/><text x="40.9490%" y="975.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;shaderc::Compiler&gt; (7 samples, 0.27%)</title><rect x="40.6214%" y="1093" width="0.2718%" height="15" fill="rgb(212,5,25)" fg:x="1046" fg:w="7"/><text x="40.8714%" y="1103.50"></text></g><g><title>wgpu_test`&lt;shaderc::Compiler as core::ops::drop::Drop&gt;::drop (7 samples, 0.27%)</title><rect x="40.6214%" y="1077" width="0.2718%" height="15" fill="rgb(243,45,17)" fg:x="1046" fg:w="7"/><text x="40.8714%" y="1087.50"></text></g><g><title>wgpu_test`shaderc_compiler_release (7 samples, 0.27%)</title><rect x="40.6214%" y="1061" width="0.2718%" height="15" fill="rgb(242,97,9)" fg:x="1046" fg:w="7"/><text x="40.8714%" y="1071.50"></text></g><g><title>wgpu_test`shaderc_util::GlslangInitializer::~GlslangInitializer (7 samples, 0.27%)</title><rect x="40.6214%" y="1045" width="0.2718%" height="15" fill="rgb(228,71,31)" fg:x="1046" fg:w="7"/><text x="40.8714%" y="1055.50"></text></g><g><title>wgpu_test`ShFinalize (7 samples, 0.27%)</title><rect x="40.6214%" y="1029" width="0.2718%" height="15" fill="rgb(252,184,16)" fg:x="1046" fg:w="7"/><text x="40.8714%" y="1039.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::~TSymbolTableLevel (3 samples, 0.12%)</title><rect x="40.7767%" y="1013" width="0.1165%" height="15" fill="rgb(236,169,46)" fg:x="1050" fg:w="3"/><text x="41.0267%" y="1023.50"></text></g><g><title>wgpu_test`glslang::TFunction::~TFunction (3 samples, 0.12%)</title><rect x="40.7767%" y="997" width="0.1165%" height="15" fill="rgb(207,17,47)" fg:x="1050" fg:w="3"/><text x="41.0267%" y="1007.50"></text></g><g><title>wgpu_test`glslang::GlslangToSpv(glslang::TIntermediate const&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.8932%" y="997" width="0.0388%" height="15" fill="rgb(206,201,28)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="1007.50"></text></g><g><title>wgpu_test`glslang::GlslangToSpv(glslang::TIntermediate const&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (1 samples, 0.04%)</title><rect x="40.8932%" y="981" width="0.0388%" height="15" fill="rgb(224,184,23)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="991.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.04%)</title><rect x="40.8932%" y="965" width="0.0388%" height="15" fill="rgb(208,139,48)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="975.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TGlslangToSpvTraverser::visitAggregate (1 samples, 0.04%)</title><rect x="40.8932%" y="949" width="0.0388%" height="15" fill="rgb(208,130,10)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="959.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.04%)</title><rect x="40.8932%" y="933" width="0.0388%" height="15" fill="rgb(211,213,45)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="943.50"></text></g><g><title>wgpu_test`glslang::TIntermAggregate::traverse (1 samples, 0.04%)</title><rect x="40.8932%" y="917" width="0.0388%" height="15" fill="rgb(235,100,30)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="927.50"></text></g><g><title>wgpu_test`glslang::TIntermBranch::traverse (1 samples, 0.04%)</title><rect x="40.8932%" y="901" width="0.0388%" height="15" fill="rgb(206,144,31)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="911.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TGlslangToSpvTraverser::visitBranch (1 samples, 0.04%)</title><rect x="40.8932%" y="885" width="0.0388%" height="15" fill="rgb(224,200,26)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="895.50"></text></g><g><title>wgpu_test`(anonymous namespace)::TGlslangToSpvTraverser::visitConstantUnion (1 samples, 0.04%)</title><rect x="40.8932%" y="869" width="0.0388%" height="15" fill="rgb(247,104,53)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="879.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="40.8932%" y="853" width="0.0388%" height="15" fill="rgb(220,14,17)" fg:x="1053" fg:w="1"/><text x="41.1432%" y="863.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.04%)</title><rect x="40.9320%" y="853" width="0.0388%" height="15" fill="rgb(230,140,40)" fg:x="1054" fg:w="1"/><text x="41.1820%" y="863.50"></text></g><g><title>wgpu_test`(anonymous namespace)::AddContextSpecificSymbols (2 samples, 0.08%)</title><rect x="40.9320%" y="965" width="0.0777%" height="15" fill="rgb(229,2,41)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="975.50"></text></g><g><title>wgpu_test`(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.08%)</title><rect x="40.9320%" y="949" width="0.0777%" height="15" fill="rgb(232,89,16)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="959.50"></text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (2 samples, 0.08%)</title><rect x="40.9320%" y="933" width="0.0777%" height="15" fill="rgb(247,59,52)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="943.50"></text></g><g><title>wgpu_test`yyparse(glslang::TParseContext*) (2 samples, 0.08%)</title><rect x="40.9320%" y="917" width="0.0777%" height="15" fill="rgb(226,110,21)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="927.50"></text></g><g><title>wgpu_test`yylex(YYSTYPE*, glslang::TParseContext&amp;) (2 samples, 0.08%)</title><rect x="40.9320%" y="901" width="0.0777%" height="15" fill="rgb(224,176,43)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="911.50"></text></g><g><title>wgpu_test`glslang::TScanContext::tokenize (2 samples, 0.08%)</title><rect x="40.9320%" y="885" width="0.0777%" height="15" fill="rgb(221,73,6)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="895.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tokenize (2 samples, 0.08%)</title><rect x="40.9320%" y="869" width="0.0777%" height="15" fill="rgb(232,78,19)" fg:x="1054" fg:w="2"/><text x="41.1820%" y="879.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::scan (1 samples, 0.04%)</title><rect x="40.9709%" y="853" width="0.0388%" height="15" fill="rgb(233,112,48)" fg:x="1055" fg:w="1"/><text x="41.2209%" y="863.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::getch (1 samples, 0.04%)</title><rect x="40.9709%" y="837" width="0.0388%" height="15" fill="rgb(243,131,47)" fg:x="1055" fg:w="1"/><text x="41.2209%" y="847.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::get (1 samples, 0.04%)</title><rect x="40.9709%" y="821" width="0.0388%" height="15" fill="rgb(226,51,1)" fg:x="1055" fg:w="1"/><text x="41.2209%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.16%)</title><rect x="41.0097%" y="917" width="0.1553%" height="15" fill="rgb(247,58,7)" fg:x="1056" fg:w="4"/><text x="41.2597%" y="927.50"></text></g><g><title>wgpu_test`DYLD-STUB$$memcpy (1 samples, 0.04%)</title><rect x="41.1650%" y="917" width="0.0388%" height="15" fill="rgb(209,7,32)" fg:x="1060" fg:w="1"/><text x="41.4150%" y="927.50"></text></g><g><title>wgpu_test`glslang::TParseContextBase::renameShaderFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.04%)</title><rect x="41.2039%" y="917" width="0.0388%" height="15" fill="rgb(209,39,41)" fg:x="1061" fg:w="1"/><text x="41.4539%" y="927.50"></text></g><g><title>wgpu_test`glslang::TType::getBasicType (1 samples, 0.04%)</title><rect x="41.2427%" y="917" width="0.0388%" height="15" fill="rgb(226,182,46)" fg:x="1062" fg:w="1"/><text x="41.4927%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.85%)</title><rect x="41.8641%" y="901" width="0.8544%" height="15" fill="rgb(230,219,10)" fg:x="1078" fg:w="22"/><text x="42.1141%" y="911.50"></text></g><g><title>wgpu_test`glslang::TFunction::TFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (3 samples, 0.12%)</title><rect x="42.7184%" y="901" width="0.1165%" height="15" fill="rgb(227,175,30)" fg:x="1100" fg:w="3"/><text x="42.9684%" y="911.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (1 samples, 0.04%)</title><rect x="42.8350%" y="885" width="0.0388%" height="15" fill="rgb(217,2,50)" fg:x="1103" fg:w="1"/><text x="43.0850%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="42.9126%" y="869" width="0.0388%" height="15" fill="rgb(229,160,0)" fg:x="1105" fg:w="1"/><text x="43.1626%" y="879.50"></text></g><g><title>wgpu_test`glslang::TFunction::addParameter (7 samples, 0.27%)</title><rect x="42.8350%" y="901" width="0.2718%" height="15" fill="rgb(207,78,37)" fg:x="1103" fg:w="7"/><text x="43.0850%" y="911.50"></text></g><g><title>wgpu_test`glslang::TType::appendMangledName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (6 samples, 0.23%)</title><rect x="42.8738%" y="885" width="0.2330%" height="15" fill="rgb(225,57,0)" fg:x="1104" fg:w="6"/><text x="43.1238%" y="895.50"></text></g><g><title>wgpu_test`glslang::TType::buildMangledName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (4 samples, 0.16%)</title><rect x="42.9515%" y="869" width="0.1553%" height="15" fill="rgb(232,154,2)" fg:x="1106" fg:w="4"/><text x="43.2015%" y="879.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="43.0680%" y="853" width="0.0388%" height="15" fill="rgb(241,212,25)" fg:x="1109" fg:w="1"/><text x="43.3180%" y="863.50"></text></g><g><title>wgpu_test`glslang::TParseContext::globalQualifierFixCheck (1 samples, 0.04%)</title><rect x="43.1068%" y="901" width="0.0388%" height="15" fill="rgb(226,69,20)" fg:x="1110" fg:w="1"/><text x="43.3568%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="43.1456%" y="869" width="0.0388%" height="15" fill="rgb(247,184,54)" fg:x="1111" fg:w="1"/><text x="43.3956%" y="879.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (1 samples, 0.04%)</title><rect x="43.1845%" y="869" width="0.0388%" height="15" fill="rgb(210,145,0)" fg:x="1112" fg:w="1"/><text x="43.4345%" y="879.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVa (5 samples, 0.19%)</title><rect x="43.2233%" y="869" width="0.1942%" height="15" fill="rgb(253,82,12)" fg:x="1113" fg:w="5"/><text x="43.4733%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (4 samples, 0.16%)</title><rect x="43.2621%" y="853" width="0.1553%" height="15" fill="rgb(245,42,11)" fg:x="1114" fg:w="4"/><text x="43.5121%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.04%)</title><rect x="43.4175%" y="853" width="0.0388%" height="15" fill="rgb(219,147,32)" fg:x="1118" fg:w="1"/><text x="43.6675%" y="863.50"></text></g><g><title>wgpu_test`bool std::__1::__tree_is_left_child&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base (1 samples, 0.04%)</title><rect x="43.4563%" y="853" width="0.0388%" height="15" fill="rgb(246,12,7)" fg:x="1119" fg:w="1"/><text x="43.7063%" y="863.50"></text></g><g><title>wgpu_test`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (8 samples, 0.31%)</title><rect x="43.4951%" y="853" width="0.3107%" height="15" fill="rgb(243,50,9)" fg:x="1120" fg:w="8"/><text x="43.7451%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (3 samples, 0.12%)</title><rect x="43.6893%" y="837" width="0.1165%" height="15" fill="rgb(219,149,6)" fg:x="1125" fg:w="3"/><text x="43.9393%" y="847.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::insert (19 samples, 0.74%)</title><rect x="43.1456%" y="885" width="0.7379%" height="15" fill="rgb(241,51,42)" fg:x="1111" fg:w="19"/><text x="43.3956%" y="895.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSy (12 samples, 0.47%)</title><rect x="43.4175%" y="869" width="0.4660%" height="15" fill="rgb(226,128,27)" fg:x="1118" fg:w="12"/><text x="43.6675%" y="879.50"></text></g><g><title>wgpu_test`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (2 samples, 0.08%)</title><rect x="43.8058%" y="853" width="0.0777%" height="15" fill="rgb(244,144,4)" fg:x="1128" fg:w="2"/><text x="44.0558%" y="863.50"></text></g><g><title>wgpu_test`glslang::TParseContext::handleFunctionDeclarator (30 samples, 1.17%)</title><rect x="43.1456%" y="901" width="1.1650%" height="15" fill="rgb(221,4,13)" fg:x="1111" fg:w="30"/><text x="43.3956%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVa (11 samples, 0.43%)</title><rect x="43.8835%" y="885" width="0.4272%" height="15" fill="rgb(208,170,28)" fg:x="1130" fg:w="11"/><text x="44.1335%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.23%)</title><rect x="44.0777%" y="869" width="0.2330%" height="15" fill="rgb(226,131,13)" fg:x="1135" fg:w="6"/><text x="44.3277%" y="879.50"></text></g><g><title>wgpu_test`glslang::TParseContext::mergeQualifiers (2 samples, 0.08%)</title><rect x="44.3107%" y="901" width="0.0777%" height="15" fill="rgb(215,72,41)" fg:x="1141" fg:w="2"/><text x="44.5607%" y="911.50"></text></g><g><title>wgpu_test`glslang::TParseVersions::fullIntegerCheck (1 samples, 0.04%)</title><rect x="44.3883%" y="901" width="0.0388%" height="15" fill="rgb(243,108,20)" fg:x="1143" fg:w="1"/><text x="44.6383%" y="911.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (4 samples, 0.16%)</title><rect x="44.4272%" y="901" width="0.1553%" height="15" fill="rgb(230,189,17)" fg:x="1144" fg:w="4"/><text x="44.6772%" y="911.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::insert (1 samples, 0.04%)</title><rect x="44.5825%" y="901" width="0.0388%" height="15" fill="rgb(220,50,17)" fg:x="1148" fg:w="1"/><text x="44.8325%" y="911.50"></text></g><g><title>wgpu_test`glslang::TType::TType (4 samples, 0.16%)</title><rect x="44.6214%" y="901" width="0.1553%" height="15" fill="rgb(248,152,48)" fg:x="1149" fg:w="4"/><text x="44.8714%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.04%)</title><rect x="44.8932%" y="869" width="0.0388%" height="15" fill="rgb(244,91,11)" fg:x="1156" fg:w="1"/><text x="45.1432%" y="879.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$os_unfair_lock_unlock (1 samples, 0.04%)</title><rect x="45.0874%" y="773" width="0.0388%" height="15" fill="rgb(220,157,5)" fg:x="1161" fg:w="1"/><text x="45.3374%" y="783.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (2 samples, 0.08%)</title><rect x="45.1262%" y="773" width="0.0777%" height="15" fill="rgb(253,137,8)" fg:x="1162" fg:w="2"/><text x="45.3762%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.08%)</title><rect x="45.2039%" y="773" width="0.0777%" height="15" fill="rgb(217,137,51)" fg:x="1164" fg:w="2"/><text x="45.4539%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="45.2816%" y="773" width="0.0388%" height="15" fill="rgb(218,209,53)" fg:x="1166" fg:w="1"/><text x="45.5316%" y="783.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (2 samples, 0.08%)</title><rect x="45.3204%" y="773" width="0.0777%" height="15" fill="rgb(249,137,25)" fg:x="1167" fg:w="2"/><text x="45.5704%" y="783.50"></text></g><g><title>libsystem_c.dylib`snprintf (14 samples, 0.54%)</title><rect x="44.9320%" y="853" width="0.5437%" height="15" fill="rgb(239,155,26)" fg:x="1157" fg:w="14"/><text x="45.1820%" y="863.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (14 samples, 0.54%)</title><rect x="44.9320%" y="837" width="0.5437%" height="15" fill="rgb(227,85,46)" fg:x="1157" fg:w="14"/><text x="45.1820%" y="847.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (14 samples, 0.54%)</title><rect x="44.9320%" y="821" width="0.5437%" height="15" fill="rgb(251,107,43)" fg:x="1157" fg:w="14"/><text x="45.1820%" y="831.50"></text></g><g><title>libsystem_c.dylib`__v2printf (14 samples, 0.54%)</title><rect x="44.9320%" y="805" width="0.5437%" height="15" fill="rgb(234,170,33)" fg:x="1157" fg:w="14"/><text x="45.1820%" y="815.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (13 samples, 0.50%)</title><rect x="44.9709%" y="789" width="0.5049%" height="15" fill="rgb(206,29,35)" fg:x="1158" fg:w="13"/><text x="45.2209%" y="799.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (2 samples, 0.08%)</title><rect x="45.3981%" y="773" width="0.0777%" height="15" fill="rgb(227,138,25)" fg:x="1169" fg:w="2"/><text x="45.6481%" y="783.50"></text></g><g><title>wgpu_test`glslang::TPpContext::MacroExpand (7 samples, 0.27%)</title><rect x="45.4757%" y="853" width="0.2718%" height="15" fill="rgb(249,131,35)" fg:x="1171" fg:w="7"/><text x="45.7257%" y="863.50"></text></g><g><title>wgpu_test`std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, gls (5 samples, 0.19%)</title><rect x="45.5534%" y="837" width="0.1942%" height="15" fill="rgb(239,6,40)" fg:x="1173" fg:w="5"/><text x="45.8034%" y="847.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::get (2 samples, 0.08%)</title><rect x="46.1748%" y="837" width="0.0777%" height="15" fill="rgb(246,136,47)" fg:x="1189" fg:w="2"/><text x="46.4248%" y="847.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::getch (7 samples, 0.27%)</title><rect x="46.2524%" y="837" width="0.2718%" height="15" fill="rgb(253,58,26)" fg:x="1191" fg:w="7"/><text x="46.5024%" y="847.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::get (2 samples, 0.08%)</title><rect x="46.4466%" y="821" width="0.0777%" height="15" fill="rgb(237,141,10)" fg:x="1196" fg:w="2"/><text x="46.6966%" y="831.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::scan (24 samples, 0.93%)</title><rect x="45.7476%" y="853" width="0.9320%" height="15" fill="rgb(234,156,12)" fg:x="1178" fg:w="24"/><text x="45.9976%" y="863.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::ungetch (4 samples, 0.16%)</title><rect x="46.5243%" y="837" width="0.1553%" height="15" fill="rgb(243,224,36)" fg:x="1198" fg:w="4"/><text x="46.7743%" y="847.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::unget (3 samples, 0.12%)</title><rect x="46.5631%" y="821" width="0.1165%" height="15" fill="rgb(205,229,51)" fg:x="1199" fg:w="3"/><text x="46.8131%" y="831.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tokenize (46 samples, 1.79%)</title><rect x="44.9320%" y="869" width="1.7864%" height="15" fill="rgb(223,189,4)" fg:x="1157" fg:w="46"/><text x="45.1820%" y="879.50">w..</text></g><g><title>wgpu_test`glslang::TPpContext::tokenPaste (1 samples, 0.04%)</title><rect x="46.6796%" y="853" width="0.0388%" height="15" fill="rgb(249,167,54)" fg:x="1202" fg:w="1"/><text x="46.9296%" y="863.50"></text></g><g><title>wgpu_test`glslang::TScanContext::identifierOrType (8 samples, 0.31%)</title><rect x="46.7184%" y="869" width="0.3107%" height="15" fill="rgb(218,34,28)" fg:x="1203" fg:w="8"/><text x="46.9684%" y="879.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVa (8 samples, 0.31%)</title><rect x="46.7184%" y="853" width="0.3107%" height="15" fill="rgb(232,109,42)" fg:x="1203" fg:w="8"/><text x="46.9684%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (5 samples, 0.19%)</title><rect x="46.8350%" y="837" width="0.1942%" height="15" fill="rgb(248,214,46)" fg:x="1206" fg:w="5"/><text x="47.0850%" y="847.50"></text></g><g><title>wgpu_test`(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (168 samples, 6.52%)</title><rect x="41.0097%" y="949" width="6.5243%" height="15" fill="rgb(244,216,40)" fg:x="1056" fg:w="168"/><text x="41.2597%" y="959.50">wgpu_test..</text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (168 samples, 6.52%)</title><rect x="41.0097%" y="933" width="6.5243%" height="15" fill="rgb(231,226,31)" fg:x="1056" fg:w="168"/><text x="41.2597%" y="943.50">wgpu_test..</text></g><g><title>wgpu_test`yyparse(glslang::TParseContext*) (161 samples, 6.25%)</title><rect x="41.2816%" y="917" width="6.2524%" height="15" fill="rgb(238,38,43)" fg:x="1063" fg:w="161"/><text x="41.5316%" y="927.50">wgpu_tes..</text></g><g><title>wgpu_test`yylex(YYSTYPE*, glslang::TParseContext&amp;) (71 samples, 2.76%)</title><rect x="44.7767%" y="901" width="2.7573%" height="15" fill="rgb(208,88,43)" fg:x="1153" fg:w="71"/><text x="45.0267%" y="911.50">wg..</text></g><g><title>wgpu_test`glslang::TScanContext::tokenize (71 samples, 2.76%)</title><rect x="44.7767%" y="885" width="2.7573%" height="15" fill="rgb(205,136,37)" fg:x="1153" fg:w="71"/><text x="45.0267%" y="895.50">wg..</text></g><g><title>wgpu_test`glslang::TScanContext::tokenizeIdentifier (13 samples, 0.50%)</title><rect x="47.0291%" y="869" width="0.5049%" height="15" fill="rgb(237,34,14)" fg:x="1211" fg:w="13"/><text x="47.2791%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (2 samples, 0.08%)</title><rect x="47.4563%" y="853" width="0.0777%" height="15" fill="rgb(236,193,44)" fg:x="1222" fg:w="2"/><text x="47.7063%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="47.5340%" y="933" width="0.0388%" height="15" fill="rgb(231,48,10)" fg:x="1224" fg:w="1"/><text x="47.7840%" y="943.50"></text></g><g><title>wgpu_test`glslang::BuiltInVariable (1 samples, 0.04%)</title><rect x="47.5728%" y="933" width="0.0388%" height="15" fill="rgb(213,141,34)" fg:x="1225" fg:w="1"/><text x="47.8228%" y="943.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.04%)</title><rect x="47.5728%" y="917" width="0.0388%" height="15" fill="rgb(249,130,34)" fg:x="1225" fg:w="1"/><text x="47.8228%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="47.8835%" y="901" width="0.0777%" height="15" fill="rgb(219,42,41)" fg:x="1233" fg:w="2"/><text x="48.1335%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="47.9612%" y="901" width="0.0388%" height="15" fill="rgb(224,100,54)" fg:x="1235" fg:w="1"/><text x="48.2112%" y="911.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::relateToOperator (11 samples, 0.43%)</title><rect x="47.6117%" y="917" width="0.4272%" height="15" fill="rgb(229,200,27)" fg:x="1226" fg:w="11"/><text x="47.8617%" y="927.50"></text></g><g><title>wgpu_test`spvtools::opt::analysis::NullConstant::AsNullConstant (1 samples, 0.04%)</title><rect x="48.0000%" y="901" width="0.0388%" height="15" fill="rgb(217,118,10)" fg:x="1236" fg:w="1"/><text x="48.2500%" y="911.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::relateTabledBuiltins (12 samples, 0.47%)</title><rect x="47.6117%" y="933" width="0.4660%" height="15" fill="rgb(206,22,3)" fg:x="1226" fg:w="12"/><text x="47.8617%" y="943.50"></text></g><g><title>wgpu_test`spvtools::opt::analysis::NullConstant::AsNullConstant (1 samples, 0.04%)</title><rect x="48.0388%" y="917" width="0.0388%" height="15" fill="rgb(232,163,46)" fg:x="1237" fg:w="1"/><text x="48.2888%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (6 samples, 0.23%)</title><rect x="48.3883%" y="917" width="0.2330%" height="15" fill="rgb(206,95,13)" fg:x="1246" fg:w="6"/><text x="48.6383%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.23%)</title><rect x="48.6214%" y="917" width="0.2330%" height="15" fill="rgb(253,154,18)" fg:x="1252" fg:w="6"/><text x="48.8714%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="48.8544%" y="917" width="0.0388%" height="15" fill="rgb(219,32,23)" fg:x="1258" fg:w="1"/><text x="49.1044%" y="927.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::relateToOperator (22 samples, 0.85%)</title><rect x="48.0777%" y="933" width="0.8544%" height="15" fill="rgb(230,191,45)" fg:x="1238" fg:w="22"/><text x="48.3277%" y="943.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (1 samples, 0.04%)</title><rect x="48.8932%" y="917" width="0.0388%" height="15" fill="rgb(229,64,36)" fg:x="1259" fg:w="1"/><text x="49.1432%" y="927.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::identifyBuiltIns (37 samples, 1.44%)</title><rect x="47.5340%" y="949" width="1.4369%" height="15" fill="rgb(205,129,25)" fg:x="1224" fg:w="37"/><text x="47.7840%" y="959.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::setFunctionExtensions (1 samples, 0.04%)</title><rect x="48.9320%" y="933" width="0.0388%" height="15" fill="rgb(254,112,7)" fg:x="1260" fg:w="1"/><text x="49.1820%" y="943.50"></text></g><g><title>libsystem_c.dylib`snprintf (2 samples, 0.08%)</title><rect x="48.9709%" y="933" width="0.0777%" height="15" fill="rgb(226,53,48)" fg:x="1261" fg:w="2"/><text x="49.2209%" y="943.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (2 samples, 0.08%)</title><rect x="48.9709%" y="917" width="0.0777%" height="15" fill="rgb(214,153,38)" fg:x="1261" fg:w="2"/><text x="49.2209%" y="927.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (2 samples, 0.08%)</title><rect x="48.9709%" y="901" width="0.0777%" height="15" fill="rgb(243,101,7)" fg:x="1261" fg:w="2"/><text x="49.2209%" y="911.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.04%)</title><rect x="49.0097%" y="885" width="0.0388%" height="15" fill="rgb(240,140,22)" fg:x="1262" fg:w="1"/><text x="49.2597%" y="895.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.04%)</title><rect x="49.0097%" y="869" width="0.0388%" height="15" fill="rgb(235,114,2)" fg:x="1262" fg:w="1"/><text x="49.2597%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="49.0097%" y="853" width="0.0388%" height="15" fill="rgb(242,59,12)" fg:x="1262" fg:w="1"/><text x="49.2597%" y="863.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::addGatherFunctions(glslang::TSampler, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.04%)</title><rect x="49.0485%" y="917" width="0.0388%" height="15" fill="rgb(252,134,9)" fg:x="1263" fg:w="1"/><text x="49.2985%" y="927.50"></text></g><g><title>wgpu_test`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.04%)</title><rect x="49.0485%" y="901" width="0.0388%" height="15" fill="rgb(236,4,44)" fg:x="1263" fg:w="1"/><text x="49.2985%" y="911.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::initialize (5 samples, 0.19%)</title><rect x="48.9709%" y="949" width="0.1942%" height="15" fill="rgb(254,172,41)" fg:x="1261" fg:w="5"/><text x="49.2209%" y="959.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::add2ndGenerationSamplingImaging (3 samples, 0.12%)</title><rect x="49.0485%" y="933" width="0.1165%" height="15" fill="rgb(244,63,20)" fg:x="1263" fg:w="3"/><text x="49.2985%" y="943.50"></text></g><g><title>wgpu_test`glslang::TBuiltIns::addSamplingFunctions(glslang::TSampler, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.08%)</title><rect x="49.0874%" y="917" width="0.0777%" height="15" fill="rgb(250,73,31)" fg:x="1264" fg:w="2"/><text x="49.3374%" y="927.50"></text></g><g><title>wgpu_test`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (2 samples, 0.08%)</title><rect x="49.0874%" y="901" width="0.0777%" height="15" fill="rgb(241,38,36)" fg:x="1264" fg:w="2"/><text x="49.3374%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="49.1262%" y="885" width="0.0388%" height="15" fill="rgb(245,211,2)" fg:x="1265" fg:w="1"/><text x="49.3762%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (2 samples, 0.08%)</title><rect x="49.1650%" y="917" width="0.0777%" height="15" fill="rgb(206,120,28)" fg:x="1266" fg:w="2"/><text x="49.4150%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.08%)</title><rect x="49.1650%" y="901" width="0.0777%" height="15" fill="rgb(211,59,34)" fg:x="1266" fg:w="2"/><text x="49.4150%" y="911.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::~TPoolAllocator (3 samples, 0.12%)</title><rect x="49.1650%" y="949" width="0.1165%" height="15" fill="rgb(233,168,5)" fg:x="1266" fg:w="3"/><text x="49.4150%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.12%)</title><rect x="49.1650%" y="933" width="0.1165%" height="15" fill="rgb(234,33,13)" fg:x="1266" fg:w="3"/><text x="49.4150%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (1 samples, 0.04%)</title><rect x="49.2427%" y="917" width="0.0388%" height="15" fill="rgb(231,150,26)" fg:x="1268" fg:w="1"/><text x="49.4927%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.04%)</title><rect x="49.2427%" y="901" width="0.0388%" height="15" fill="rgb(217,191,4)" fg:x="1268" fg:w="1"/><text x="49.4927%" y="911.50"></text></g><g><title>wgpu_test`glslang::TSymbol::makeReadOnly (2 samples, 0.08%)</title><rect x="49.2816%" y="949" width="0.0777%" height="15" fill="rgb(246,198,38)" fg:x="1269" fg:w="2"/><text x="49.5316%" y="959.50"></text></g><g><title>wgpu_test`glslang::GetThreadPoolAllocator (1 samples, 0.04%)</title><rect x="49.7476%" y="885" width="0.0388%" height="15" fill="rgb(245,64,37)" fg:x="1281" fg:w="1"/><text x="49.9976%" y="895.50"></text></g><g><title>wgpu_test`glslang::TPoolAllocator::allocate (2 samples, 0.08%)</title><rect x="49.7864%" y="885" width="0.0777%" height="15" fill="rgb(250,30,36)" fg:x="1282" fg:w="2"/><text x="50.0364%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.04%)</title><rect x="49.8641%" y="869" width="0.0388%" height="15" fill="rgb(217,86,53)" fg:x="1284" fg:w="1"/><text x="50.1141%" y="879.50"></text></g><g><title>wgpu_test`glslang::TSymbol::TSymbol (2 samples, 0.08%)</title><rect x="49.8641%" y="885" width="0.0777%" height="15" fill="rgb(228,157,16)" fg:x="1284" fg:w="2"/><text x="50.1141%" y="895.50"></text></g><g><title>wgpu_test`glslang::OS_GetTLSValue (1 samples, 0.04%)</title><rect x="49.9029%" y="869" width="0.0388%" height="15" fill="rgb(217,59,31)" fg:x="1285" fg:w="1"/><text x="50.1529%" y="879.50"></text></g><g><title>wgpu_test`glslang::TSymbol::setExtensions (1 samples, 0.04%)</title><rect x="49.9417%" y="885" width="0.0388%" height="15" fill="rgb(237,138,41)" fg:x="1286" fg:w="1"/><text x="50.1917%" y="895.50"></text></g><g><title>wgpu_test`glslang::TFunction::clone (17 samples, 0.66%)</title><rect x="49.4369%" y="917" width="0.6602%" height="15" fill="rgb(227,91,49)" fg:x="1273" fg:w="17"/><text x="49.6869%" y="927.50"></text></g><g><title>wgpu_test`glslang::TFunction::TFunction (16 samples, 0.62%)</title><rect x="49.4757%" y="901" width="0.6214%" height="15" fill="rgb(247,21,44)" fg:x="1274" fg:w="16"/><text x="49.7257%" y="911.50"></text></g><g><title>wgpu_test`glslang::TType::deepCopy(glslang::TType const&amp;, glslang::TMap&lt;glslang::TVector&lt;glslang::TTypeLoc&gt;*, glslang::TVector&lt;glslang::TTypeLoc&gt;*, std::__1::less&lt;glslang::TVector (3 samples, 0.12%)</title><rect x="49.9806%" y="885" width="0.1165%" height="15" fill="rgb(219,210,51)" fg:x="1287" fg:w="3"/><text x="50.2306%" y="895.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="50.0971%" y="901" width="0.0388%" height="15" fill="rgb(209,140,6)" fg:x="1290" fg:w="1"/><text x="50.3471%" y="911.50"></text></g><g><title>wgpu_test`DYLD-STUB$$memcmp (1 samples, 0.04%)</title><rect x="50.1359%" y="901" width="0.0388%" height="15" fill="rgb(221,188,24)" fg:x="1291" fg:w="1"/><text x="50.3859%" y="911.50"></text></g><g><title>wgpu_test`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVa (3 samples, 0.12%)</title><rect x="50.1748%" y="901" width="0.1165%" height="15" fill="rgb(232,154,20)" fg:x="1292" fg:w="3"/><text x="50.4248%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (3 samples, 0.12%)</title><rect x="50.1748%" y="885" width="0.1165%" height="15" fill="rgb(244,137,50)" fg:x="1292" fg:w="3"/><text x="50.4248%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="50.2913%" y="885" width="0.0388%" height="15" fill="rgb(225,185,43)" fg:x="1295" fg:w="1"/><text x="50.5413%" y="895.50"></text></g><g><title>wgpu_test`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (12 samples, 0.47%)</title><rect x="50.3301%" y="885" width="0.4660%" height="15" fill="rgb(213,205,38)" fg:x="1296" fg:w="12"/><text x="50.5801%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (10 samples, 0.39%)</title><rect x="50.4078%" y="869" width="0.3883%" height="15" fill="rgb(236,73,12)" fg:x="1298" fg:w="10"/><text x="50.6578%" y="879.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::insert (20 samples, 0.78%)</title><rect x="50.0971%" y="917" width="0.7767%" height="15" fill="rgb(235,219,13)" fg:x="1290" fg:w="20"/><text x="50.3471%" y="927.50"></text></g><g><title>wgpu_test`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSy (15 samples, 0.58%)</title><rect x="50.2913%" y="901" width="0.5825%" height="15" fill="rgb(218,59,36)" fg:x="1295" fg:w="15"/><text x="50.5413%" y="911.50"></text></g><g><title>wgpu_test`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (2 samples, 0.08%)</title><rect x="50.7961%" y="885" width="0.0777%" height="15" fill="rgb(205,110,39)" fg:x="1308" fg:w="2"/><text x="51.0461%" y="895.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::clone (40 samples, 1.55%)</title><rect x="49.3592%" y="933" width="1.5534%" height="15" fill="rgb(218,206,42)" fg:x="1271" fg:w="40"/><text x="49.6092%" y="943.50"></text></g><g><title>wgpu_test`glslang::TVariable::clone (1 samples, 0.04%)</title><rect x="50.8738%" y="917" width="0.0388%" height="15" fill="rgb(248,125,24)" fg:x="1310" fg:w="1"/><text x="51.1238%" y="927.50"></text></g><g><title>wgpu_test`glslang::TVariable::TVariable (1 samples, 0.04%)</title><rect x="50.8738%" y="901" width="0.0388%" height="15" fill="rgb(242,28,27)" fg:x="1310" fg:w="1"/><text x="51.1238%" y="911.50"></text></g><g><title>wgpu_test`glslang::TSymbol::TSymbol (1 samples, 0.04%)</title><rect x="50.8738%" y="885" width="0.0388%" height="15" fill="rgb(216,228,15)" fg:x="1310" fg:w="1"/><text x="51.1238%" y="895.50"></text></g><g><title>wgpu_test`glslang::TSymbolTable::copyTable (41 samples, 1.59%)</title><rect x="49.3592%" y="949" width="1.5922%" height="15" fill="rgb(235,116,46)" fg:x="1271" fg:w="41"/><text x="49.6092%" y="959.50"></text></g><g><title>wgpu_test`spvtools::opt::analysis::Constant::AsCompositeConstant (1 samples, 0.04%)</title><rect x="50.9126%" y="933" width="0.0388%" height="15" fill="rgb(224,18,32)" fg:x="1311" fg:w="1"/><text x="51.1626%" y="943.50"></text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::readOnly (9 samples, 0.35%)</title><rect x="50.9515%" y="949" width="0.3495%" height="15" fill="rgb(252,5,12)" fg:x="1312" fg:w="9"/><text x="51.2015%" y="959.50"></text></g><g><title>wgpu_test`glslang::TSymbol::makeReadOnly (1 samples, 0.04%)</title><rect x="51.2621%" y="933" width="0.0388%" height="15" fill="rgb(251,36,5)" fg:x="1320" fg:w="1"/><text x="51.5121%" y="943.50"></text></g><g><title>wgpu_test`(anonymous namespace)::SetupBuiltinSymbolTable (269 samples, 10.45%)</title><rect x="41.0097%" y="965" width="10.4466%" height="15" fill="rgb(217,53,14)" fg:x="1056" fg:w="269"/><text x="41.2597%" y="975.50">wgpu_test`(anon..</text></g><g><title>wgpu_test`glslang::TSymbolTableLevel::~TSymbolTableLevel (4 samples, 0.16%)</title><rect x="51.3010%" y="949" width="0.1553%" height="15" fill="rgb(215,86,45)" fg:x="1321" fg:w="4"/><text x="51.5510%" y="959.50"></text></g><g><title>wgpu_test`glslang::TFunction::~TFunction (3 samples, 0.12%)</title><rect x="51.3398%" y="933" width="0.1165%" height="15" fill="rgb(242,169,11)" fg:x="1322" fg:w="3"/><text x="51.5898%" y="943.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::pipeline::make_pipeline (300 samples, 11.65%)</title><rect x="39.8835%" y="1125" width="11.6505%" height="15" fill="rgb(211,213,45)" fg:x="1027" fg:w="300"/><text x="40.1335%" y="1135.50">wgpu_test`wgpu_te..</text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::pipeline::compile_shader (281 samples, 10.91%)</title><rect x="40.6214%" y="1109" width="10.9126%" height="15" fill="rgb(205,88,11)" fg:x="1046" fg:w="281"/><text x="40.8714%" y="1119.50">wgpu_test`wgpu_t..</text></g><g><title>wgpu_test`shaderc::Compiler::compile_into_spirv (274 samples, 10.64%)</title><rect x="40.8932%" y="1093" width="10.6408%" height="15" fill="rgb(252,69,26)" fg:x="1053" fg:w="274"/><text x="41.1432%" y="1103.50">wgpu_test`shader..</text></g><g><title>wgpu_test`shaderc::propagate_panic (274 samples, 10.64%)</title><rect x="40.8932%" y="1077" width="10.6408%" height="15" fill="rgb(246,123,37)" fg:x="1053" fg:w="274"/><text x="41.1432%" y="1087.50">wgpu_test`shader..</text></g><g><title>wgpu_test`shaderc::Compiler::compile_into_spirv::_{{closure}} (274 samples, 10.64%)</title><rect x="40.8932%" y="1061" width="10.6408%" height="15" fill="rgb(212,205,5)" fg:x="1053" fg:w="274"/><text x="41.1432%" y="1071.50">wgpu_test`shader..</text></g><g><title>wgpu_test`shaderc_compile_into_spv (274 samples, 10.64%)</title><rect x="40.8932%" y="1045" width="10.6408%" height="15" fill="rgb(253,148,0)" fg:x="1053" fg:w="274"/><text x="41.1432%" y="1055.50">wgpu_test`shader..</text></g><g><title>wgpu_test`(anonymous namespace)::CompileToSpecifiedOutputType (274 samples, 10.64%)</title><rect x="40.8932%" y="1029" width="10.6408%" height="15" fill="rgb(239,22,4)" fg:x="1053" fg:w="274"/><text x="41.1432%" y="1039.50">wgpu_test`(anony..</text></g><g><title>wgpu_test`shaderc_util::Compiler::Compile(shaderc_util::string_piece const&amp;, EShLanguage, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, char const*, std::__1::function&lt;EShLanguage (std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;*, shaderc_util::string_piece const&amp;)&gt; const&amp;, shaderc_util::CountingIncluder&amp;, shaderc_util::Compiler::OutputType, std::__1::basic_ostream&lt;char, std::__1::char_traits (274 samples, 10.64%)</title><rect x="40.8932%" y="1013" width="10.6408%" height="15" fill="rgb(226,26,53)" fg:x="1053" fg:w="274"/><text x="41.1432%" y="1023.50">wgpu_test`shader..</text></g><g><title>wgpu_test`glslang::TShader::parse (273 samples, 10.60%)</title><rect x="40.9320%" y="997" width="10.6019%" height="15" fill="rgb(225,229,45)" fg:x="1054" fg:w="273"/><text x="41.1820%" y="1007.50">wgpu_test`glsla..</text></g><g><title>wgpu_test`(anonymous namespace)::CompileDeferred(TCompiler*, char const* const*, int, int const*, char const* const*, char const*, EShOptimizationLevel, TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TIntermediate&amp;, glslang::TShader::Includer&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (273 samples, 10.60%)</title><rect x="40.9320%" y="981" width="10.6019%" height="15" fill="rgb(220,60,37)" fg:x="1054" fg:w="273"/><text x="41.1820%" y="991.50">wgpu_test`(anon..</text></g><g><title>wgpu_test`glslang::TParseContext::parseShaderStrings (2 samples, 0.08%)</title><rect x="51.4563%" y="965" width="0.0777%" height="15" fill="rgb(217,180,35)" fg:x="1325" fg:w="2"/><text x="51.7063%" y="975.50"></text></g><g><title>wgpu_test`yyparse(glslang::TParseContext*) (2 samples, 0.08%)</title><rect x="51.4563%" y="949" width="0.0777%" height="15" fill="rgb(229,7,53)" fg:x="1325" fg:w="2"/><text x="51.7063%" y="959.50"></text></g><g><title>wgpu_test`yylex(YYSTYPE*, glslang::TParseContext&amp;) (1 samples, 0.04%)</title><rect x="51.4951%" y="933" width="0.0388%" height="15" fill="rgb(254,137,3)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="943.50"></text></g><g><title>wgpu_test`glslang::TScanContext::tokenize (1 samples, 0.04%)</title><rect x="51.4951%" y="917" width="0.0388%" height="15" fill="rgb(215,140,41)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="927.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tokenize (1 samples, 0.04%)</title><rect x="51.4951%" y="901" width="0.0388%" height="15" fill="rgb(250,80,15)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="911.50"></text></g><g><title>wgpu_test`glslang::TPpContext::readCPPline (1 samples, 0.04%)</title><rect x="51.4951%" y="885" width="0.0388%" height="15" fill="rgb(252,191,6)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="895.50"></text></g><g><title>wgpu_test`glslang::TPpContext::CPPdefine (1 samples, 0.04%)</title><rect x="51.4951%" y="869" width="0.0388%" height="15" fill="rgb(246,217,18)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="879.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::scan (1 samples, 0.04%)</title><rect x="51.4951%" y="853" width="0.0388%" height="15" fill="rgb(223,93,7)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="863.50"></text></g><g><title>wgpu_test`glslang::TPpContext::tStringInput::ungetch (1 samples, 0.04%)</title><rect x="51.4951%" y="837" width="0.0388%" height="15" fill="rgb(225,55,52)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="847.50"></text></g><g><title>wgpu_test`glslang::TInputScanner::unget (1 samples, 0.04%)</title><rect x="51.4951%" y="821" width="0.0388%" height="15" fill="rgb(240,31,24)" fg:x="1326" fg:w="1"/><text x="51.7451%" y="831.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::screen::device_info (1 samples, 0.04%)</title><rect x="51.5340%" y="1125" width="0.0388%" height="15" fill="rgb(205,56,52)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1135.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::device::PhysicalDevice as gfx_hal::adapter::PhysicalDevice&lt;gfx_backend_metal::Backend&gt;&gt;::open (1 samples, 0.04%)</title><rect x="51.5340%" y="1109" width="0.0388%" height="15" fill="rgb(246,146,12)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1119.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::new (1 samples, 0.04%)</title><rect x="51.5340%" y="1093" width="0.0388%" height="15" fill="rgb(239,84,36)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1103.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_command_queue_with_max_command_buffer_count (1 samples, 0.04%)</title><rect x="51.5340%" y="1077" width="0.0388%" height="15" fill="rgb(207,41,40)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1087.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="51.5340%" y="1061" width="0.0388%" height="15" fill="rgb(241,179,25)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1071.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="51.5340%" y="1045" width="0.0388%" height="15" fill="rgb(210,0,34)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1055.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue initWithDevice:descriptor:] (1 samples, 0.04%)</title><rect x="51.5340%" y="1029" width="0.0388%" height="15" fill="rgb(225,217,29)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1039.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueCreateWithQoS (1 samples, 0.04%)</title><rect x="51.5340%" y="1013" width="0.0388%" height="15" fill="rgb(216,191,38)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1023.50"></text></g><g><title>IOKit`IOServiceOpen (1 samples, 0.04%)</title><rect x="51.5340%" y="997" width="0.0388%" height="15" fill="rgb(232,140,52)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="1007.50"></text></g><g><title>IOKit`io_service_open_extended (1 samples, 0.04%)</title><rect x="51.5340%" y="981" width="0.0388%" height="15" fill="rgb(223,158,51)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="51.5340%" y="965" width="0.0388%" height="15" fill="rgb(235,29,51)" fg:x="1327" fg:w="1"/><text x="51.7840%" y="975.50"></text></g><g><title>wgpu_test`wgpu_test::rendering::constructs::screen::get_sizes (1 samples, 0.04%)</title><rect x="51.5728%" y="1125" width="0.0388%" height="15" fill="rgb(215,181,18)" fg:x="1328" fg:w="1"/><text x="51.8228%" y="1135.50"></text></g><g><title>wgpu_test`winit::dpi::PhysicalSize&lt;P&gt;::cast (1 samples, 0.04%)</title><rect x="51.5728%" y="1109" width="0.0388%" height="15" fill="rgb(227,125,34)" fg:x="1328" fg:w="1"/><text x="51.8228%" y="1119.50"></text></g><g><title>AppKit`+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders] (1 samples, 0.04%)</title><rect x="51.6117%" y="1013" width="0.0388%" height="15" fill="rgb(230,197,49)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.6117%" y="997" width="0.0388%" height="15" fill="rgb(239,141,16)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.6117%" y="981" width="0.0388%" height="15" fill="rgb(225,105,43)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="991.50"></text></g><g><title>AppKit`__71+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders]_block_invoke (1 samples, 0.04%)</title><rect x="51.6117%" y="965" width="0.0388%" height="15" fill="rgb(214,131,14)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="975.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.04%)</title><rect x="51.6117%" y="949" width="0.0388%" height="15" fill="rgb(229,177,11)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="959.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(dyld3::Array (1 samples, 0.04%)</title><rect x="51.6117%" y="933" width="0.0388%" height="15" fill="rgb(231,180,14)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="943.50"></text></g><g><title>libobjc.A.dylib`map_images (1 samples, 0.04%)</title><rect x="51.6117%" y="917" width="0.0388%" height="15" fill="rgb(232,88,2)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="927.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (1 samples, 0.04%)</title><rect x="51.6117%" y="901" width="0.0388%" height="15" fill="rgb(205,220,8)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="911.50"></text></g><g><title>libobjc.A.dylib`_read_images (1 samples, 0.04%)</title><rect x="51.6117%" y="885" width="0.0388%" height="15" fill="rgb(225,23,53)" fg:x="1329" fg:w="1"/><text x="51.8617%" y="895.50"></text></g><g><title>AppKit`-[NSApplication _registerWithDock] (1 samples, 0.04%)</title><rect x="51.6505%" y="1013" width="0.0388%" height="15" fill="rgb(213,62,29)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="1023.50"></text></g><g><title>HIToolbox`InstallEventHandler (1 samples, 0.04%)</title><rect x="51.6505%" y="997" width="0.0388%" height="15" fill="rgb(227,75,7)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="1007.50"></text></g><g><title>HIToolbox`PushEventHandler(EventTargetRec*, int (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*), unsigned char, unsigned long, EventTypeSpec const*, void*, OpaqueEventHandlerRef**) (1 samples, 0.04%)</title><rect x="51.6505%" y="981" width="0.0388%" height="15" fill="rgb(207,105,14)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="991.50"></text></g><g><title>HIToolbox`AddHandlersToIndex(EventTargetRec*, HandlerRec*, unsigned long, EventTypeSpec const*) (1 samples, 0.04%)</title><rect x="51.6505%" y="965" width="0.0388%" height="15" fill="rgb(245,62,29)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="975.50"></text></g><g><title>HIToolbox`TEventTypeIndex::AddTypes (1 samples, 0.04%)</title><rect x="51.6505%" y="949" width="0.0388%" height="15" fill="rgb(236,202,4)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="959.50"></text></g><g><title>HIToolbox`GlobalRegistryEventRegistered(unsigned int, unsigned int) (1 samples, 0.04%)</title><rect x="51.6505%" y="933" width="0.0388%" height="15" fill="rgb(250,67,1)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="943.50"></text></g><g><title>HIToolbox`HandlerStatusChanged (1 samples, 0.04%)</title><rect x="51.6505%" y="917" width="0.0388%" height="15" fill="rgb(253,115,44)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="927.50"></text></g><g><title>HIToolbox`getHIToolboxAnyASNNotificationFunc (1 samples, 0.04%)</title><rect x="51.6505%" y="901" width="0.0388%" height="15" fill="rgb(251,139,18)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="911.50"></text></g><g><title>LaunchServices`_LSScheduleNotificationFunction (1 samples, 0.04%)</title><rect x="51.6505%" y="885" width="0.0388%" height="15" fill="rgb(218,22,32)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="895.50"></text></g><g><title>CoreFoundation`CFGetTypeID (1 samples, 0.04%)</title><rect x="51.6505%" y="869" width="0.0388%" height="15" fill="rgb(243,53,5)" fg:x="1330" fg:w="1"/><text x="51.9005%" y="879.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter addObserver:selector:name:object:] (1 samples, 0.04%)</title><rect x="51.6893%" y="917" width="0.0388%" height="15" fill="rgb(227,56,16)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="927.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _addOrRemoveObserver:forName:isAdding:] (1 samples, 0.04%)</title><rect x="51.6893%" y="901" width="0.0388%" height="15" fill="rgb(245,53,0)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="911.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _createSubsystemIfNecessary:] (1 samples, 0.04%)</title><rect x="51.6893%" y="885" width="0.0388%" height="15" fill="rgb(216,170,35)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="895.50"></text></g><g><title>AppKit`createAccessibilityDisplaySubsystem (1 samples, 0.04%)</title><rect x="51.6893%" y="869" width="0.0388%" height="15" fill="rgb(211,200,8)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="879.50"></text></g><g><title>Foundation`-[NSDistributedNotificationCenter addObserver:selector:name:object:suspensionBehavior:] (1 samples, 0.04%)</title><rect x="51.6893%" y="853" width="0.0388%" height="15" fill="rgb(228,204,44)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="863.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegisterObserver (1 samples, 0.04%)</title><rect x="51.6893%" y="837" width="0.0388%" height="15" fill="rgb(214,121,17)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="847.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message (1 samples, 0.04%)</title><rect x="51.6893%" y="821" width="0.0388%" height="15" fill="rgb(233,64,38)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="831.50"></text></g><g><title>libxpc.dylib`_xpc_connection_pack_message (1 samples, 0.04%)</title><rect x="51.6893%" y="805" width="0.0388%" height="15" fill="rgb(253,54,19)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="815.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.04%)</title><rect x="51.6893%" y="789" width="0.0388%" height="15" fill="rgb(253,94,18)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="799.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (1 samples, 0.04%)</title><rect x="51.6893%" y="773" width="0.0388%" height="15" fill="rgb(227,57,52)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="783.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.04%)</title><rect x="51.6893%" y="757" width="0.0388%" height="15" fill="rgb(230,228,50)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.04%)</title><rect x="51.6893%" y="741" width="0.0388%" height="15" fill="rgb(217,205,27)" fg:x="1331" fg:w="1"/><text x="51.9393%" y="751.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f4cad (1 samples, 0.04%)</title><rect x="51.7282%" y="741" width="0.0388%" height="15" fill="rgb(252,71,50)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="751.50"></text></g><g><title>libMobileGestalt.dylib`is_restore_os (1 samples, 0.04%)</title><rect x="51.7282%" y="725" width="0.0388%" height="15" fill="rgb(209,86,4)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.7282%" y="709" width="0.0388%" height="15" fill="rgb(229,94,0)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.7282%" y="693" width="0.0388%" height="15" fill="rgb(252,223,21)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="703.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f85f3 (1 samples, 0.04%)</title><rect x="51.7282%" y="677" width="0.0388%" height="15" fill="rgb(230,210,4)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="687.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f8604 (1 samples, 0.04%)</title><rect x="51.7282%" y="661" width="0.0388%" height="15" fill="rgb(240,149,38)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="671.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e501cc4 (1 samples, 0.04%)</title><rect x="51.7282%" y="645" width="0.0388%" height="15" fill="rgb(254,105,20)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="655.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f4cfe (1 samples, 0.04%)</title><rect x="51.7282%" y="629" width="0.0388%" height="15" fill="rgb(253,87,46)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="639.50"></text></g><g><title>CoreFoundation`_CFCopySystemVersionDictionary (1 samples, 0.04%)</title><rect x="51.7282%" y="613" width="0.0388%" height="15" fill="rgb(253,116,33)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.7282%" y="597" width="0.0388%" height="15" fill="rgb(229,198,5)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.7282%" y="581" width="0.0388%" height="15" fill="rgb(242,38,37)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="591.50"></text></g><g><title>CoreFoundation`___CFCopySystemVersionDictionary_block_invoke (1 samples, 0.04%)</title><rect x="51.7282%" y="565" width="0.0388%" height="15" fill="rgb(242,69,53)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="575.50"></text></g><g><title>CoreFoundation`_CFCopyVersionDictionary (1 samples, 0.04%)</title><rect x="51.7282%" y="549" width="0.0388%" height="15" fill="rgb(249,80,16)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="559.50"></text></g><g><title>CoreFoundation`_CFCopyLocalizedVersionKey (1 samples, 0.04%)</title><rect x="51.7282%" y="533" width="0.0388%" height="15" fill="rgb(206,128,11)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="543.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.04%)</title><rect x="51.7282%" y="517" width="0.0388%" height="15" fill="rgb(212,35,20)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="527.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleVersionForURL (1 samples, 0.04%)</title><rect x="51.7282%" y="501" width="0.0388%" height="15" fill="rgb(236,79,13)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="511.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.04%)</title><rect x="51.7282%" y="485" width="0.0388%" height="15" fill="rgb(233,123,3)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="495.50"></text></g><g><title>libsystem_c.dylib`__opendir2$INODE64 (1 samples, 0.04%)</title><rect x="51.7282%" y="469" width="0.0388%" height="15" fill="rgb(214,93,52)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.04%)</title><rect x="51.7282%" y="453" width="0.0388%" height="15" fill="rgb(251,37,40)" fg:x="1332" fg:w="1"/><text x="51.9782%" y="463.50"></text></g><g><title>AppKit`NSColorGetUserAccentColor (2 samples, 0.08%)</title><rect x="51.7282%" y="869" width="0.0777%" height="15" fill="rgb(227,80,54)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.08%)</title><rect x="51.7282%" y="853" width="0.0777%" height="15" fill="rgb(254,48,11)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.08%)</title><rect x="51.7282%" y="837" width="0.0777%" height="15" fill="rgb(235,193,26)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="847.50"></text></g><g><title>AppKit`__NSUserAccentHasHardwareColor_block_invoke (2 samples, 0.08%)</title><rect x="51.7282%" y="821" width="0.0777%" height="15" fill="rgb(229,99,21)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.08%)</title><rect x="51.7282%" y="805" width="0.0777%" height="15" fill="rgb(211,140,41)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.08%)</title><rect x="51.7282%" y="789" width="0.0777%" height="15" fill="rgb(240,227,30)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="799.50"></text></g><g><title>AppKit`__NSUserAccentColorGetHardwareAccentColorName_block_invoke (2 samples, 0.08%)</title><rect x="51.7282%" y="773" width="0.0777%" height="15" fill="rgb(215,224,45)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="783.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e4f7773 (2 samples, 0.08%)</title><rect x="51.7282%" y="757" width="0.0777%" height="15" fill="rgb(206,123,31)" fg:x="1332" fg:w="2"/><text x="51.9782%" y="767.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e5065c1 (1 samples, 0.04%)</title><rect x="51.7670%" y="741" width="0.0388%" height="15" fill="rgb(210,138,16)" fg:x="1333" fg:w="1"/><text x="52.0170%" y="751.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e508d52 (1 samples, 0.04%)</title><rect x="51.7670%" y="725" width="0.0388%" height="15" fill="rgb(228,57,28)" fg:x="1333" fg:w="1"/><text x="52.0170%" y="735.50"></text></g><g><title>libMobileGestalt.dylib`0x00007ff80e50d38c (1 samples, 0.04%)</title><rect x="51.7670%" y="709" width="0.0388%" height="15" fill="rgb(242,170,10)" fg:x="1333" fg:w="1"/><text x="52.0170%" y="719.50"></text></g><g><title>IOKit`IOServiceGetMatchingService (1 samples, 0.04%)</title><rect x="51.7670%" y="693" width="0.0388%" height="15" fill="rgb(228,214,39)" fg:x="1333" fg:w="1"/><text x="52.0170%" y="703.50"></text></g><g><title>IOKit`io_service_get_matching_service_bin (1 samples, 0.04%)</title><rect x="51.7670%" y="677" width="0.0388%" height="15" fill="rgb(218,179,33)" fg:x="1333" fg:w="1"/><text x="52.0170%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="51.7670%" y="661" width="0.0388%" height="15" fill="rgb(235,193,39)" fg:x="1333" fg:w="1"/><text x="52.0170%" y="671.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (4 samples, 0.16%)</title><rect x="51.6893%" y="1013" width="0.1553%" height="15" fill="rgb(219,221,36)" fg:x="1331" fg:w="4"/><text x="51.9393%" y="1023.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (4 samples, 0.16%)</title><rect x="51.6893%" y="997" width="0.1553%" height="15" fill="rgb(248,218,19)" fg:x="1331" fg:w="4"/><text x="51.9393%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.16%)</title><rect x="51.6893%" y="981" width="0.1553%" height="15" fill="rgb(205,50,9)" fg:x="1331" fg:w="4"/><text x="51.9393%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.16%)</title><rect x="51.6893%" y="965" width="0.1553%" height="15" fill="rgb(238,81,28)" fg:x="1331" fg:w="4"/><text x="51.9393%" y="975.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (4 samples, 0.16%)</title><rect x="51.6893%" y="949" width="0.1553%" height="15" fill="rgb(235,110,19)" fg:x="1331" fg:w="4"/><text x="51.9393%" y="959.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (4 samples, 0.16%)</title><rect x="51.6893%" y="933" width="0.1553%" height="15" fill="rgb(214,7,14)" fg:x="1331" fg:w="4"/><text x="51.9393%" y="943.50"></text></g><g><title>AppKit`_NSAppearanceCurrentSystemAppearance (3 samples, 0.12%)</title><rect x="51.7282%" y="917" width="0.1165%" height="15" fill="rgb(211,77,3)" fg:x="1332" fg:w="3"/><text x="51.9782%" y="927.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (3 samples, 0.12%)</title><rect x="51.7282%" y="901" width="0.1165%" height="15" fill="rgb(229,5,9)" fg:x="1332" fg:w="3"/><text x="51.9782%" y="911.50"></text></g><g><title>AppKit`+[NSAppearance _aquaAppearance] (3 samples, 0.12%)</title><rect x="51.7282%" y="885" width="0.1165%" height="15" fill="rgb(225,90,11)" fg:x="1332" fg:w="3"/><text x="51.9782%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.8058%" y="869" width="0.0388%" height="15" fill="rgb(242,56,8)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.8058%" y="853" width="0.0388%" height="15" fill="rgb(249,212,39)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="863.50"></text></g><g><title>AppKit`__33+[NSAppearance _initializeCoreUI]_block_invoke (1 samples, 0.04%)</title><rect x="51.8058%" y="837" width="0.0388%" height="15" fill="rgb(236,90,9)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="847.50"></text></g><g><title>Foundation`_NSFaultInObject (1 samples, 0.04%)</title><rect x="51.8058%" y="821" width="0.0388%" height="15" fill="rgb(206,88,35)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="831.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (1 samples, 0.04%)</title><rect x="51.8058%" y="805" width="0.0388%" height="15" fill="rgb(205,126,30)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="815.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (1 samples, 0.04%)</title><rect x="51.8058%" y="789" width="0.0388%" height="15" fill="rgb(230,176,12)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="799.50"></text></g><g><title>AppKit`NSCreateCoreUIRenderer (1 samples, 0.04%)</title><rect x="51.8058%" y="773" width="0.0388%" height="15" fill="rgb(243,19,9)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="783.50"></text></g><g><title>CoreUI`CUIRenderer::Create (1 samples, 0.04%)</title><rect x="51.8058%" y="757" width="0.0388%" height="15" fill="rgb(245,171,17)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="767.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CUICoreThemeRenderer (1 samples, 0.04%)</title><rect x="51.8058%" y="741" width="0.0388%" height="15" fill="rgb(227,52,21)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="751.50"></text></g><g><title>CoreUI`+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (1 samples, 0.04%)</title><rect x="51.8058%" y="725" width="0.0388%" height="15" fill="rgb(238,69,14)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="735.50"></text></g><g><title>CoreUI`PerformBlockWithThemeRefCache (1 samples, 0.04%)</title><rect x="51.8058%" y="709" width="0.0388%" height="15" fill="rgb(241,156,39)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.04%)</title><rect x="51.8058%" y="693" width="0.0388%" height="15" fill="rgb(212,227,28)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.8058%" y="677" width="0.0388%" height="15" fill="rgb(209,118,27)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="687.50"></text></g><g><title>CoreUI`__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (1 samples, 0.04%)</title><rect x="51.8058%" y="661" width="0.0388%" height="15" fill="rgb(226,102,5)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="671.50"></text></g><g><title>Foundation`-[NSBundle pathForResource:ofType:inDirectory:] (1 samples, 0.04%)</title><rect x="51.8058%" y="645" width="0.0388%" height="15" fill="rgb(223,34,3)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="655.50"></text></g><g><title>Foundation`-[NSBundle URLForResource:withExtension:subdirectory:] (1 samples, 0.04%)</title><rect x="51.8058%" y="629" width="0.0388%" height="15" fill="rgb(221,81,38)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="639.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.04%)</title><rect x="51.8058%" y="613" width="0.0388%" height="15" fill="rgb(236,219,28)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="623.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.04%)</title><rect x="51.8058%" y="597" width="0.0388%" height="15" fill="rgb(213,200,14)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="607.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.04%)</title><rect x="51.8058%" y="581" width="0.0388%" height="15" fill="rgb(240,33,19)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="591.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.04%)</title><rect x="51.8058%" y="565" width="0.0388%" height="15" fill="rgb(233,113,27)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="575.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.04%)</title><rect x="51.8058%" y="549" width="0.0388%" height="15" fill="rgb(220,221,18)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="559.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.04%)</title><rect x="51.8058%" y="533" width="0.0388%" height="15" fill="rgb(238,92,8)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="543.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.04%)</title><rect x="51.8058%" y="517" width="0.0388%" height="15" fill="rgb(222,164,16)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="527.50"></text></g><g><title>CoreFoundation`___CFBundleReadDirectory_block_invoke (1 samples, 0.04%)</title><rect x="51.8058%" y="501" width="0.0388%" height="15" fill="rgb(241,119,3)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="511.50"></text></g><g><title>CoreFoundation`_CFBundleSplitFileName (1 samples, 0.04%)</title><rect x="51.8058%" y="485" width="0.0388%" height="15" fill="rgb(241,44,8)" fg:x="1334" fg:w="1"/><text x="52.0558%" y="495.50"></text></g><g><title>SkyLight`SLDisplayCopyAllDisplayModes (1 samples, 0.04%)</title><rect x="51.8447%" y="821" width="0.0388%" height="15" fill="rgb(230,36,40)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="831.50"></text></g><g><title>SkyLight`findDirectDisplay (1 samples, 0.04%)</title><rect x="51.8447%" y="805" width="0.0388%" height="15" fill="rgb(243,16,36)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="815.50"></text></g><g><title>SkyLight`findDisplay (1 samples, 0.04%)</title><rect x="51.8447%" y="789" width="0.0388%" height="15" fill="rgb(231,4,26)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="799.50"></text></g><g><title>SkyLight`initDisplayModeList (1 samples, 0.04%)</title><rect x="51.8447%" y="773" width="0.0388%" height="15" fill="rgb(240,9,31)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="783.50"></text></g><g><title>CoreFoundation`CFDictionaryCreate (1 samples, 0.04%)</title><rect x="51.8447%" y="757" width="0.0388%" height="15" fill="rgb(207,173,15)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="767.50"></text></g><g><title>CoreFoundation`__NSCFDictionaryCreate (1 samples, 0.04%)</title><rect x="51.8447%" y="741" width="0.0388%" height="15" fill="rgb(224,192,53)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="751.50"></text></g><g><title>CoreFoundation`__NSDictionaryI_new (1 samples, 0.04%)</title><rect x="51.8447%" y="725" width="0.0388%" height="15" fill="rgb(223,67,28)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="735.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.04%)</title><rect x="51.8447%" y="709" width="0.0388%" height="15" fill="rgb(211,20,47)" fg:x="1335" fg:w="1"/><text x="52.0947%" y="719.50"></text></g><g><title>ColorSync`ColorSyncProfileCreate (1 samples, 0.04%)</title><rect x="51.8835%" y="773" width="0.0388%" height="15" fill="rgb(240,228,2)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="783.50"></text></g><g><title>ColorSync`create (1 samples, 0.04%)</title><rect x="51.8835%" y="757" width="0.0388%" height="15" fill="rgb(248,151,12)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="767.50"></text></g><g><title>ColorSync`AppleCMMValidateProfile (1 samples, 0.04%)</title><rect x="51.8835%" y="741" width="0.0388%" height="15" fill="rgb(244,8,39)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="751.50"></text></g><g><title>ColorSync`DoValidateProfile (1 samples, 0.04%)</title><rect x="51.8835%" y="725" width="0.0388%" height="15" fill="rgb(222,26,8)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="735.50"></text></g><g><title>ColorSync`CMMProfile::Usable (1 samples, 0.04%)</title><rect x="51.8835%" y="709" width="0.0388%" height="15" fill="rgb(213,106,44)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="719.50"></text></g><g><title>ColorSync`CMMProfile::GetTag (1 samples, 0.04%)</title><rect x="51.8835%" y="693" width="0.0388%" height="15" fill="rgb(214,129,20)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="703.50"></text></g><g><title>ColorSync`CMMProfile::MakeTag (1 samples, 0.04%)</title><rect x="51.8835%" y="677" width="0.0388%" height="15" fill="rgb(212,32,13)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="687.50"></text></g><g><title>ColorSync`CMMBase::NewInternal (1 samples, 0.04%)</title><rect x="51.8835%" y="661" width="0.0388%" height="15" fill="rgb(208,168,33)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="671.50"></text></g><g><title>ColorSync`CMMMemMgr::New (1 samples, 0.04%)</title><rect x="51.8835%" y="645" width="0.0388%" height="15" fill="rgb(231,207,8)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="51.8835%" y="629" width="0.0388%" height="15" fill="rgb(235,219,23)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.04%)</title><rect x="51.8835%" y="613" width="0.0388%" height="15" fill="rgb(226,216,26)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="51.8835%" y="597" width="0.0388%" height="15" fill="rgb(239,137,16)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.04%)</title><rect x="51.8835%" y="581" width="0.0388%" height="15" fill="rgb(207,12,36)" fg:x="1336" fg:w="1"/><text x="52.1335%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (3 samples, 0.12%)</title><rect x="51.8447%" y="1013" width="0.1165%" height="15" fill="rgb(210,214,24)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.12%)</title><rect x="51.8447%" y="997" width="0.1165%" height="15" fill="rgb(206,56,30)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.12%)</title><rect x="51.8447%" y="981" width="0.1165%" height="15" fill="rgb(228,143,26)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="991.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (3 samples, 0.12%)</title><rect x="51.8447%" y="965" width="0.1165%" height="15" fill="rgb(216,218,46)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="975.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (3 samples, 0.12%)</title><rect x="51.8447%" y="949" width="0.1165%" height="15" fill="rgb(206,6,19)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="959.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (3 samples, 0.12%)</title><rect x="51.8447%" y="933" width="0.1165%" height="15" fill="rgb(239,177,51)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.12%)</title><rect x="51.8447%" y="917" width="0.1165%" height="15" fill="rgb(216,55,25)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.12%)</title><rect x="51.8447%" y="901" width="0.1165%" height="15" fill="rgb(231,163,29)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="911.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (3 samples, 0.12%)</title><rect x="51.8447%" y="885" width="0.1165%" height="15" fill="rgb(232,149,50)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="895.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (3 samples, 0.12%)</title><rect x="51.8447%" y="869" width="0.1165%" height="15" fill="rgb(223,142,48)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="879.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (3 samples, 0.12%)</title><rect x="51.8447%" y="853" width="0.1165%" height="15" fill="rgb(245,83,23)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="863.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (3 samples, 0.12%)</title><rect x="51.8447%" y="837" width="0.1165%" height="15" fill="rgb(224,63,2)" fg:x="1335" fg:w="3"/><text x="52.0947%" y="847.50"></text></g><g><title>SkyLight`SLSCopyDisplayColorSpace (2 samples, 0.08%)</title><rect x="51.8835%" y="821" width="0.0777%" height="15" fill="rgb(218,65,53)" fg:x="1336" fg:w="2"/><text x="52.1335%" y="831.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryCopyColorSpace (2 samples, 0.08%)</title><rect x="51.8835%" y="805" width="0.0777%" height="15" fill="rgb(221,84,29)" fg:x="1336" fg:w="2"/><text x="52.1335%" y="815.50"></text></g><g><title>CoreGraphics`CGColorSpaceFromICCDataCacheGetRetained (2 samples, 0.08%)</title><rect x="51.8835%" y="789" width="0.0777%" height="15" fill="rgb(234,0,32)" fg:x="1336" fg:w="2"/><text x="52.1335%" y="799.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithICCDataInternal (1 samples, 0.04%)</title><rect x="51.9223%" y="773" width="0.0388%" height="15" fill="rgb(206,20,16)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="783.50"></text></g><g><title>CoreGraphics`CGColorSpaceFindMatchingSingleton (1 samples, 0.04%)</title><rect x="51.9223%" y="757" width="0.0388%" height="15" fill="rgb(244,172,18)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.9223%" y="741" width="0.0388%" height="15" fill="rgb(254,133,1)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.9223%" y="725" width="0.0388%" height="15" fill="rgb(222,206,41)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="735.50"></text></g><g><title>CoreGraphics`__CGColorSpaceFindMatchingSingleton_block_invoke_2 (1 samples, 0.04%)</title><rect x="51.9223%" y="709" width="0.0388%" height="15" fill="rgb(212,3,42)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="719.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.04%)</title><rect x="51.9223%" y="693" width="0.0388%" height="15" fill="rgb(241,11,4)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="703.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateGenericRGB (1 samples, 0.04%)</title><rect x="51.9223%" y="677" width="0.0388%" height="15" fill="rgb(205,19,26)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.9223%" y="661" width="0.0388%" height="15" fill="rgb(210,179,32)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.9223%" y="645" width="0.0388%" height="15" fill="rgb(227,116,49)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="655.50"></text></g><g><title>CoreGraphics`__CGColorSpaceCreateGenericRGB_block_invoke (1 samples, 0.04%)</title><rect x="51.9223%" y="629" width="0.0388%" height="15" fill="rgb(211,146,6)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="639.50"></text></g><g><title>CoreGraphics`color_space_state_create_generic_rgb (1 samples, 0.04%)</title><rect x="51.9223%" y="613" width="0.0388%" height="15" fill="rgb(219,44,39)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="623.50"></text></g><g><title>ColorSync`create_GenericRGBProfile (1 samples, 0.04%)</title><rect x="51.9223%" y="597" width="0.0388%" height="15" fill="rgb(234,128,11)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="51.9223%" y="581" width="0.0388%" height="15" fill="rgb(220,183,53)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="51.9223%" y="565" width="0.0388%" height="15" fill="rgb(213,219,32)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="575.50"></text></g><g><title>ColorSync`__create_GenericRGBProfile_block_invoke (1 samples, 0.04%)</title><rect x="51.9223%" y="549" width="0.0388%" height="15" fill="rgb(232,156,16)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="559.50"></text></g><g><title>ColorSync`ColorSyncProfileCreateSigleton (1 samples, 0.04%)</title><rect x="51.9223%" y="533" width="0.0388%" height="15" fill="rgb(246,135,34)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="543.50"></text></g><g><title>ColorSync`create (1 samples, 0.04%)</title><rect x="51.9223%" y="517" width="0.0388%" height="15" fill="rgb(241,99,0)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="527.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.04%)</title><rect x="51.9223%" y="501" width="0.0388%" height="15" fill="rgb(222,103,45)" fg:x="1337" fg:w="1"/><text x="52.1723%" y="511.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.04%)</title><rect x="51.9612%" y="1013" width="0.0388%" height="15" fill="rgb(212,57,4)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="1023.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.04%)</title><rect x="51.9612%" y="997" width="0.0388%" height="15" fill="rgb(215,68,47)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="1007.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.04%)</title><rect x="51.9612%" y="981" width="0.0388%" height="15" fill="rgb(230,84,2)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="991.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.04%)</title><rect x="51.9612%" y="965" width="0.0388%" height="15" fill="rgb(220,102,14)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="975.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.04%)</title><rect x="51.9612%" y="949" width="0.0388%" height="15" fill="rgb(240,10,32)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="959.50"></text></g><g><title>AppKit`+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (1 samples, 0.04%)</title><rect x="51.9612%" y="933" width="0.0388%" height="15" fill="rgb(215,47,27)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="943.50"></text></g><g><title>dyld`dyld4::APIs::dyld_image_header_containing_address (1 samples, 0.04%)</title><rect x="51.9612%" y="917" width="0.0388%" height="15" fill="rgb(233,188,43)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="927.50"></text></g><g><title>dyld`dyld4::APIs::findImageMappedAt (1 samples, 0.04%)</title><rect x="51.9612%" y="901" width="0.0388%" height="15" fill="rgb(253,190,1)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="911.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.04%)</title><rect x="51.9612%" y="885" width="0.0388%" height="15" fill="rgb(206,114,52)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="895.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageMappedAt (1 samples, 0.04%)</title><rect x="51.9612%" y="869" width="0.0388%" height="15" fill="rgb(233,120,37)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="879.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::contains (1 samples, 0.04%)</title><rect x="51.9612%" y="853" width="0.0388%" height="15" fill="rgb(214,52,39)" fg:x="1338" fg:w="1"/><text x="52.2112%" y="863.50"></text></g><g><title>SkyLight`CGS_CHECK_INIT (1 samples, 0.04%)</title><rect x="52.0000%" y="869" width="0.0388%" height="15" fill="rgb(223,80,29)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="52.0000%" y="853" width="0.0388%" height="15" fill="rgb(230,101,40)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="52.0000%" y="837" width="0.0388%" height="15" fill="rgb(219,211,8)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="847.50"></text></g><g><title>SkyLight`__SLSInitialize_block_invoke (1 samples, 0.04%)</title><rect x="52.0000%" y="821" width="0.0388%" height="15" fill="rgb(252,126,28)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="831.50"></text></g><g><title>SkyLight`initDisplayMappings() (1 samples, 0.04%)</title><rect x="52.0000%" y="805" width="0.0388%" height="15" fill="rgb(215,56,38)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="815.50"></text></g><g><title>SkyLight`initDisplayState() (1 samples, 0.04%)</title><rect x="52.0000%" y="789" width="0.0388%" height="15" fill="rgb(249,55,44)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="799.50"></text></g><g><title>CarbonCore`_CSCheckFix (1 samples, 0.04%)</title><rect x="52.0000%" y="773" width="0.0388%" height="15" fill="rgb(220,221,32)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="52.0000%" y="757" width="0.0388%" height="15" fill="rgb(212,216,41)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="52.0000%" y="741" width="0.0388%" height="15" fill="rgb(228,213,43)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="751.50"></text></g><g><title>CarbonCore`__initializeOurBundleInformation_block_invoke (1 samples, 0.04%)</title><rect x="52.0000%" y="725" width="0.0388%" height="15" fill="rgb(211,31,26)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="735.50"></text></g><g><title>CoreFoundation`CFBundleGetValueForInfoDictionaryKey (1 samples, 0.04%)</title><rect x="52.0000%" y="709" width="0.0388%" height="15" fill="rgb(229,202,19)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="719.50"></text></g><g><title>CoreFoundation`CFBundleGetLocalInfoDictionary (1 samples, 0.04%)</title><rect x="52.0000%" y="693" width="0.0388%" height="15" fill="rgb(229,105,46)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="703.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.04%)</title><rect x="52.0000%" y="677" width="0.0388%" height="15" fill="rgb(235,108,1)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="687.50"></text></g><g><title>CoreFoundation`CFStringGetLength (1 samples, 0.04%)</title><rect x="52.0000%" y="661" width="0.0388%" height="15" fill="rgb(245,111,35)" fg:x="1339" fg:w="1"/><text x="52.2500%" y="671.50"></text></g><g><title>HIToolbox`IsMenuBarVisible (2 samples, 0.08%)</title><rect x="52.0000%" y="997" width="0.0777%" height="15" fill="rgb(219,185,31)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="1007.50"></text></g><g><title>HIToolbox`GetUserSpaceMenuBar() (2 samples, 0.08%)</title><rect x="52.0000%" y="981" width="0.0777%" height="15" fill="rgb(214,4,43)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="991.50"></text></g><g><title>HIToolbox`MenuBarInstance::MenuBarInstance (2 samples, 0.08%)</title><rect x="52.0000%" y="965" width="0.0777%" height="15" fill="rgb(235,227,40)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="975.50"></text></g><g><title>HIToolbox`MBWindows::Get (2 samples, 0.08%)</title><rect x="52.0000%" y="949" width="0.0777%" height="15" fill="rgb(230,88,30)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="959.50"></text></g><g><title>HIToolbox`MBWindows::MBWindows (2 samples, 0.08%)</title><rect x="52.0000%" y="933" width="0.0777%" height="15" fill="rgb(216,217,1)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="943.50"></text></g><g><title>HIToolbox`RegisterForDisplayConfigChangeNotificationsIfNecessary (2 samples, 0.08%)</title><rect x="52.0000%" y="917" width="0.0777%" height="15" fill="rgb(248,139,50)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="927.50"></text></g><g><title>HIToolbox`RegisterCallbackInternal(unsigned int, void (*)(unsigned int, void*, void*), unsigned int, void*, unsigned int) (2 samples, 0.08%)</title><rect x="52.0000%" y="901" width="0.0777%" height="15" fill="rgb(233,1,21)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="911.50"></text></g><g><title>SkyLight`SLSMainConnectionID (2 samples, 0.08%)</title><rect x="52.0000%" y="885" width="0.0777%" height="15" fill="rgb(215,183,12)" fg:x="1339" fg:w="2"/><text x="52.2500%" y="895.50"></text></g><g><title>SkyLight`SLSNewConnection (1 samples, 0.04%)</title><rect x="52.0388%" y="869" width="0.0388%" height="15" fill="rgb(229,104,42)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="879.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertyForKey (1 samples, 0.04%)</title><rect x="52.0388%" y="853" width="0.0388%" height="15" fill="rgb(243,34,48)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="52.0388%" y="837" width="0.0388%" height="15" fill="rgb(239,11,44)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="52.0388%" y="821" width="0.0388%" height="15" fill="rgb(231,98,35)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="831.50"></text></g><g><title>CoreFoundation`____CFCoreServicesInternal__FSURLCopyResourcePropertyForKey_block_invoke (1 samples, 0.04%)</title><rect x="52.0388%" y="805" width="0.0388%" height="15" fill="rgb(233,28,25)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="815.50"></text></g><g><title>CoreFoundation`__CFLookupCoreServicesInternalFunction (1 samples, 0.04%)</title><rect x="52.0388%" y="789" width="0.0388%" height="15" fill="rgb(234,123,11)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="799.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.04%)</title><rect x="52.0388%" y="773" width="0.0388%" height="15" fill="rgb(220,69,3)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="783.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(dyld3::Array (1 samples, 0.04%)</title><rect x="52.0388%" y="757" width="0.0388%" height="15" fill="rgb(214,64,36)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="767.50"></text></g><g><title>dyld`dyld4::notifyMonitoringDyld (1 samples, 0.04%)</title><rect x="52.0388%" y="741" width="0.0388%" height="15" fill="rgb(211,138,32)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="751.50"></text></g><g><title>dyld`dyld4::notifyMonitoringDyld (1 samples, 0.04%)</title><rect x="52.0388%" y="725" width="0.0388%" height="15" fill="rgb(213,118,47)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="735.50"></text></g><g><title>dyld`dyld4::RemoteNotificationResponder::sendMessage (1 samples, 0.04%)</title><rect x="52.0388%" y="709" width="0.0388%" height="15" fill="rgb(243,124,49)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="719.50"></text></g><g><title>dyld`mach_msg_overwrite_trap (1 samples, 0.04%)</title><rect x="52.0388%" y="693" width="0.0388%" height="15" fill="rgb(221,30,28)" fg:x="1340" fg:w="1"/><text x="52.2888%" y="703.50"></text></g><g><title>CoreFoundation`_CFBundleCreateWithExecutableURLIfMightBeBundle (1 samples, 0.04%)</title><rect x="52.0777%" y="933" width="0.0388%" height="15" fill="rgb(246,37,13)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="943.50"></text></g><g><title>CoreFoundation`_CFBundleCreateWithExecutableURLIfLooksLikeBundle (1 samples, 0.04%)</title><rect x="52.0777%" y="917" width="0.0388%" height="15" fill="rgb(249,66,14)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="927.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.04%)</title><rect x="52.0777%" y="901" width="0.0388%" height="15" fill="rgb(213,166,5)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="911.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleVersionForURL (1 samples, 0.04%)</title><rect x="52.0777%" y="885" width="0.0388%" height="15" fill="rgb(221,66,24)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="895.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.04%)</title><rect x="52.0777%" y="869" width="0.0388%" height="15" fill="rgb(210,132,17)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="879.50"></text></g><g><title>libsystem_c.dylib`__opendir2$INODE64 (1 samples, 0.04%)</title><rect x="52.0777%" y="853" width="0.0388%" height="15" fill="rgb(243,202,5)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.04%)</title><rect x="52.0777%" y="837" width="0.0388%" height="15" fill="rgb(233,70,48)" fg:x="1341" fg:w="1"/><text x="52.3277%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopSetOptionsReason (1 samples, 0.04%)</title><rect x="52.1165%" y="917" width="0.0388%" height="15" fill="rgb(238,41,26)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="52.1165%" y="901" width="0.0388%" height="15" fill="rgb(241,19,31)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="52.1165%" y="885" width="0.0388%" height="15" fill="rgb(214,76,10)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="895.50"></text></g><g><title>CoreFoundation`____CFRunLoopSetOptionsReason_block_invoke_2 (1 samples, 0.04%)</title><rect x="52.1165%" y="869" width="0.0388%" height="15" fill="rgb(254,202,22)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="879.50"></text></g><g><title>CoreFoundation`_CFAppSleepSetupLaunchServices (1 samples, 0.04%)</title><rect x="52.1165%" y="853" width="0.0388%" height="15" fill="rgb(214,72,24)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="863.50"></text></g><g><title>LaunchServices`_LSScheduleNotificationFunction (1 samples, 0.04%)</title><rect x="52.1165%" y="837" width="0.0388%" height="15" fill="rgb(221,92,46)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="847.50"></text></g><g><title>LaunchServices`_LSScheduleNotificationOnQueueWithBlock (1 samples, 0.04%)</title><rect x="52.1165%" y="821" width="0.0388%" height="15" fill="rgb(246,13,50)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="831.50"></text></g><g><title>LaunchServices`LSNotificationReceiver::modify (1 samples, 0.04%)</title><rect x="52.1165%" y="805" width="0.0388%" height="15" fill="rgb(240,165,38)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="815.50"></text></g><g><title>LaunchServices`LSClientToServerConnection::sendWithReply (1 samples, 0.04%)</title><rect x="52.1165%" y="789" width="0.0388%" height="15" fill="rgb(241,24,51)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="799.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.04%)</title><rect x="52.1165%" y="773" width="0.0388%" height="15" fill="rgb(227,51,44)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="783.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.04%)</title><rect x="52.1165%" y="757" width="0.0388%" height="15" fill="rgb(231,121,3)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.04%)</title><rect x="52.1165%" y="741" width="0.0388%" height="15" fill="rgb(245,3,41)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="52.1165%" y="725" width="0.0388%" height="15" fill="rgb(214,13,26)" fg:x="1342" fg:w="1"/><text x="52.3665%" y="735.50"></text></g><g><title>LaunchServices`LSClientToServerConnection::sendWithReply (1 samples, 0.04%)</title><rect x="52.1553%" y="917" width="0.0388%" height="15" fill="rgb(252,75,11)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="927.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.04%)</title><rect x="52.1553%" y="901" width="0.0388%" height="15" fill="rgb(218,226,17)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="911.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.04%)</title><rect x="52.1553%" y="885" width="0.0388%" height="15" fill="rgb(248,89,38)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.04%)</title><rect x="52.1553%" y="869" width="0.0388%" height="15" fill="rgb(237,73,46)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="879.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (1 samples, 0.04%)</title><rect x="52.1553%" y="853" width="0.0388%" height="15" fill="rgb(242,78,33)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="863.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.04%)</title><rect x="52.1553%" y="837" width="0.0388%" height="15" fill="rgb(235,60,3)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="847.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.04%)</title><rect x="52.1553%" y="821" width="0.0388%" height="15" fill="rgb(216,172,19)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.04%)</title><rect x="52.1553%" y="805" width="0.0388%" height="15" fill="rgb(227,6,42)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="52.1553%" y="789" width="0.0388%" height="15" fill="rgb(223,207,42)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="52.1553%" y="773" width="0.0388%" height="15" fill="rgb(246,138,30)" fg:x="1343" fg:w="1"/><text x="52.4053%" y="783.50"></text></g><g><title>LaunchServices`_LSRegisterSelf (1 samples, 0.04%)</title><rect x="52.1942%" y="917" width="0.0388%" height="15" fill="rgb(251,199,47)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="927.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCProxyForServiceClass (1 samples, 0.04%)</title><rect x="52.1942%" y="901" width="0.0388%" height="15" fill="rgb(228,218,44)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="911.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCConnection (1 samples, 0.04%)</title><rect x="52.1942%" y="885" width="0.0388%" height="15" fill="rgb(220,68,6)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="895.50"></text></g><g><title>LaunchServices`_LSLazyLoadObjectForKey (1 samples, 0.04%)</title><rect x="52.1942%" y="869" width="0.0388%" height="15" fill="rgb(240,60,26)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.04%)</title><rect x="52.1942%" y="853" width="0.0388%" height="15" fill="rgb(211,200,19)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="52.1942%" y="837" width="0.0388%" height="15" fill="rgb(242,145,30)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="847.50"></text></g><g><title>LaunchServices`___LSLazyLoadObjectForKey_block_invoke.54 (1 samples, 0.04%)</title><rect x="52.1942%" y="821" width="0.0388%" height="15" fill="rgb(225,64,13)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="831.50"></text></g><g><title>LaunchServices`___LSDServiceGetXPCConnection_block_invoke_2 (1 samples, 0.04%)</title><rect x="52.1942%" y="805" width="0.0388%" height="15" fill="rgb(218,103,35)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="815.50"></text></g><g><title>LaunchServices`+[_LSDModifyService XPCInterface] (1 samples, 0.04%)</title><rect x="52.1942%" y="789" width="0.0388%" height="15" fill="rgb(216,93,46)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="52.1942%" y="773" width="0.0388%" height="15" fill="rgb(225,159,27)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="52.1942%" y="757" width="0.0388%" height="15" fill="rgb(225,204,11)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="767.50"></text></g><g><title>LaunchServices`__33+[_LSDModifyService XPCInterface]_block_invoke (1 samples, 0.04%)</title><rect x="52.1942%" y="741" width="0.0388%" height="15" fill="rgb(205,56,4)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="751.50"></text></g><g><title>Foundation`+[NSXPCInterface interfaceWithProtocol:] (1 samples, 0.04%)</title><rect x="52.1942%" y="725" width="0.0388%" height="15" fill="rgb(206,6,35)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="735.50"></text></g><g><title>Foundation`-[NSXPCInterface setProtocol:] (1 samples, 0.04%)</title><rect x="52.1942%" y="709" width="0.0388%" height="15" fill="rgb(247,73,52)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="719.50"></text></g><g><title>Foundation`setProtocolMetadata (1 samples, 0.04%)</title><rect x="52.1942%" y="693" width="0.0388%" height="15" fill="rgb(246,97,4)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="703.50"></text></g><g><title>Foundation`setProtocolMetdataWithMethods (1 samples, 0.04%)</title><rect x="52.1942%" y="677" width="0.0388%" height="15" fill="rgb(212,37,15)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="687.50"></text></g><g><title>CoreFoundation`+[NSMethodSignature signatureWithObjCTypes:] (1 samples, 0.04%)</title><rect x="52.1942%" y="661" width="0.0388%" height="15" fill="rgb(208,130,40)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="671.50"></text></g><g><title>CoreFoundation`__CFSearchSignatureROM (1 samples, 0.04%)</title><rect x="52.1942%" y="645" width="0.0388%" height="15" fill="rgb(236,55,29)" fg:x="1344" fg:w="1"/><text x="52.4442%" y="655.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (5 samples, 0.19%)</title><rect x="52.0777%" y="997" width="0.1942%" height="15" fill="rgb(209,156,45)" fg:x="1341" fg:w="5"/><text x="52.3277%" y="1007.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (5 samples, 0.19%)</title><rect x="52.0777%" y="981" width="0.1942%" height="15" fill="rgb(249,107,4)" fg:x="1341" fg:w="5"/><text x="52.3277%" y="991.50"></text></g><g><title>HIServices`GetCurrentProcess (5 samples, 0.19%)</title><rect x="52.0777%" y="965" width="0.1942%" height="15" fill="rgb(227,7,13)" fg:x="1341" fg:w="5"/><text x="52.3277%" y="975.50"></text></g><g><title>HIServices`_RegisterApplication (5 samples, 0.19%)</title><rect x="52.0777%" y="949" width="0.1942%" height="15" fill="rgb(250,129,14)" fg:x="1341" fg:w="5"/><text x="52.3277%" y="959.50"></text></g><g><title>LaunchServices`_LSApplicationCheckIn (4 samples, 0.16%)</title><rect x="52.1165%" y="933" width="0.1553%" height="15" fill="rgb(229,92,13)" fg:x="1342" fg:w="4"/><text x="52.3665%" y="943.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.04%)</title><rect x="52.2330%" y="917" width="0.0388%" height="15" fill="rgb(245,98,39)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="927.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.04%)</title><rect x="52.2330%" y="901" width="0.0388%" height="15" fill="rgb(234,135,48)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="911.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetGregorianDate (1 samples, 0.04%)</title><rect x="52.2330%" y="885" width="0.0388%" height="15" fill="rgb(230,98,28)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="895.50"></text></g><g><title>CoreFoundation`CFTimeZoneGetSecondsFromGMT (1 samples, 0.04%)</title><rect x="52.2330%" y="869" width="0.0388%" height="15" fill="rgb(223,121,0)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="879.50"></text></g><g><title>CoreFoundation`-[__NSTimeZone secondsFromGMTForDate:] (1 samples, 0.04%)</title><rect x="52.2330%" y="853" width="0.0388%" height="15" fill="rgb(234,173,33)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="863.50"></text></g><g><title>libicucore.A.dylib`ucal_open (1 samples, 0.04%)</title><rect x="52.2330%" y="837" width="0.0388%" height="15" fill="rgb(245,47,8)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="847.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::createInstance (1 samples, 0.04%)</title><rect x="52.2330%" y="821" width="0.0388%" height="15" fill="rgb(205,17,20)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="831.50"></text></g><g><title>libicucore.A.dylib`0x00007ff80ba5ca2a (1 samples, 0.04%)</title><rect x="52.2330%" y="805" width="0.0388%" height="15" fill="rgb(232,151,16)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="815.50"></text></g><g><title>libicucore.A.dylib`0x00007ff80ba60728 (1 samples, 0.04%)</title><rect x="52.2330%" y="789" width="0.0388%" height="15" fill="rgb(208,30,32)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="799.50"></text></g><g><title>libicucore.A.dylib`icu::UnifiedCache::_get (1 samples, 0.04%)</title><rect x="52.2330%" y="773" width="0.0388%" height="15" fill="rgb(254,26,3)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="783.50"></text></g><g><title>libicucore.A.dylib`icu::LocaleCacheKey&lt;icu::SharedCalendar&gt;::createObject (1 samples, 0.04%)</title><rect x="52.2330%" y="757" width="0.0388%" height="15" fill="rgb(240,177,30)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="767.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::makeInstance (1 samples, 0.04%)</title><rect x="52.2330%" y="741" width="0.0388%" height="15" fill="rgb(248,76,44)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="751.50"></text></g><g><title>libicucore.A.dylib`icu::GregorianCalendar::GregorianCalendar (1 samples, 0.04%)</title><rect x="52.2330%" y="725" width="0.0388%" height="15" fill="rgb(241,186,54)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="735.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::forLocaleOrDefault (1 samples, 0.04%)</title><rect x="52.2330%" y="709" width="0.0388%" height="15" fill="rgb(249,171,29)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="719.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::createDefault (1 samples, 0.04%)</title><rect x="52.2330%" y="693" width="0.0388%" height="15" fill="rgb(237,151,44)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="703.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::detectHostTimeZone (1 samples, 0.04%)</title><rect x="52.2330%" y="677" width="0.0388%" height="15" fill="rgb(228,174,30)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="687.50"></text></g><g><title>libsystem_c.dylib`tzsetwall_basic (1 samples, 0.04%)</title><rect x="52.2330%" y="661" width="0.0388%" height="15" fill="rgb(252,14,37)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="671.50"></text></g><g><title>libsystem_c.dylib`tzload (1 samples, 0.04%)</title><rect x="52.2330%" y="645" width="0.0388%" height="15" fill="rgb(207,111,40)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="655.50"></text></g><g><title>libsystem_c.dylib`tzparse (1 samples, 0.04%)</title><rect x="52.2330%" y="629" width="0.0388%" height="15" fill="rgb(248,171,54)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="639.50"></text></g><g><title>libsystem_c.dylib`tzload (1 samples, 0.04%)</title><rect x="52.2330%" y="613" width="0.0388%" height="15" fill="rgb(211,127,2)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.04%)</title><rect x="52.2330%" y="597" width="0.0388%" height="15" fill="rgb(236,87,47)" fg:x="1345" fg:w="1"/><text x="52.4830%" y="607.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (18 samples, 0.70%)</title><rect x="51.6117%" y="1045" width="0.6990%" height="15" fill="rgb(223,190,45)" fg:x="1329" fg:w="18"/><text x="51.8617%" y="1055.50"></text></g><g><title>AppKit`-[NSApplication init] (18 samples, 0.70%)</title><rect x="51.6117%" y="1029" width="0.6990%" height="15" fill="rgb(215,5,16)" fg:x="1329" fg:w="18"/><text x="51.8617%" y="1039.50"></text></g><g><title>AppKit`_NSInitializeAppContext (8 samples, 0.31%)</title><rect x="52.0000%" y="1013" width="0.3107%" height="15" fill="rgb(252,82,33)" fg:x="1339" fg:w="8"/><text x="52.2500%" y="1023.50"></text></g><g><title>HIToolbox`_HLTBAddEventSourceToMode (1 samples, 0.04%)</title><rect x="52.2718%" y="997" width="0.0388%" height="15" fill="rgb(247,213,44)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="1007.50"></text></g><g><title>HIToolbox`GetEventLoopSource() (1 samples, 0.04%)</title><rect x="52.2718%" y="981" width="0.0388%" height="15" fill="rgb(205,196,44)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="991.50"></text></g><g><title>HIToolbox`CreateEventLoopSource (1 samples, 0.04%)</title><rect x="52.2718%" y="965" width="0.0388%" height="15" fill="rgb(237,96,54)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="975.50"></text></g><g><title>CoreFoundation`_CFMachPortCreateWithPort2 (1 samples, 0.04%)</title><rect x="52.2718%" y="949" width="0.0388%" height="15" fill="rgb(230,113,34)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="959.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.04%)</title><rect x="52.2718%" y="933" width="0.0388%" height="15" fill="rgb(221,224,12)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="943.50"></text></g><g><title>libobjc.A.dylib`object_setClass (1 samples, 0.04%)</title><rect x="52.2718%" y="917" width="0.0388%" height="15" fill="rgb(219,112,44)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="927.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.04%)</title><rect x="52.2718%" y="901" width="0.0388%" height="15" fill="rgb(210,31,13)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="911.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.04%)</title><rect x="52.2718%" y="885" width="0.0388%" height="15" fill="rgb(230,25,16)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="895.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.04%)</title><rect x="52.2718%" y="869" width="0.0388%" height="15" fill="rgb(246,108,53)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="879.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.04%)</title><rect x="52.2718%" y="853" width="0.0388%" height="15" fill="rgb(241,172,50)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="863.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.04%)</title><rect x="52.2718%" y="837" width="0.0388%" height="15" fill="rgb(235,141,10)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="847.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.04%)</title><rect x="52.2718%" y="821" width="0.0388%" height="15" fill="rgb(220,174,43)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="831.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.04%)</title><rect x="52.2718%" y="805" width="0.0388%" height="15" fill="rgb(215,181,40)" fg:x="1346" fg:w="1"/><text x="52.5218%" y="815.50"></text></g><g><title>Foundation`+[NSUserDefaults(NSUserDefaults) standardUserDefaults] (1 samples, 0.04%)</title><rect x="52.3107%" y="933" width="0.0388%" height="15" fill="rgb(230,97,2)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="943.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) init] (1 samples, 0.04%)</title><rect x="52.3107%" y="917" width="0.0388%" height="15" fill="rgb(211,25,27)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="927.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.04%)</title><rect x="52.3107%" y="901" width="0.0388%" height="15" fill="rgb(230,87,26)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="911.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.04%)</title><rect x="52.3107%" y="885" width="0.0388%" height="15" fill="rgb(227,160,17)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="895.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.04%)</title><rect x="52.3107%" y="869" width="0.0388%" height="15" fill="rgb(244,85,34)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="879.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.04%)</title><rect x="52.3107%" y="853" width="0.0388%" height="15" fill="rgb(207,70,0)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="863.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (1 samples, 0.04%)</title><rect x="52.3107%" y="837" width="0.0388%" height="15" fill="rgb(223,129,7)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="847.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (1 samples, 0.04%)</title><rect x="52.3107%" y="821" width="0.0388%" height="15" fill="rgb(246,105,7)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="831.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (1 samples, 0.04%)</title><rect x="52.3107%" y="805" width="0.0388%" height="15" fill="rgb(215,154,42)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="815.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_getDictionary:] (1 samples, 0.04%)</title><rect x="52.3107%" y="789" width="0.0388%" height="15" fill="rgb(220,215,30)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="799.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:] (1 samples, 0.04%)</title><rect x="52.3107%" y="773" width="0.0388%" height="15" fill="rgb(228,81,51)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="783.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:] (1 samples, 0.04%)</title><rect x="52.3107%" y="757" width="0.0388%" height="15" fill="rgb(247,71,54)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="767.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 0.04%)</title><rect x="52.3107%" y="741" width="0.0388%" height="15" fill="rgb(234,176,34)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="751.50"></text></g><g><title>CoreFoundation`__104-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:]_block_invoke (1 samples, 0.04%)</title><rect x="52.3107%" y="725" width="0.0388%" height="15" fill="rgb(241,103,54)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="735.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:performBlock:] (1 samples, 0.04%)</title><rect x="52.3107%" y="709" width="0.0388%" height="15" fill="rgb(228,22,34)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="719.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences _copyDaemonConnectionSettingUpIfNecessaryForRole:] (1 samples, 0.04%)</title><rect x="52.3107%" y="693" width="0.0388%" height="15" fill="rgb(241,179,48)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="703.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences _setupNewDaemonConnection:] (1 samples, 0.04%)</title><rect x="52.3107%" y="677" width="0.0388%" height="15" fill="rgb(235,167,37)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_connection_activate_if_needed (1 samples, 0.04%)</title><rect x="52.3107%" y="661" width="0.0388%" height="15" fill="rgb(213,109,30)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_connection_init (1 samples, 0.04%)</title><rect x="52.3107%" y="645" width="0.0388%" height="15" fill="rgb(222,172,16)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_mach_port_allocate (1 samples, 0.04%)</title><rect x="52.3107%" y="629" width="0.0388%" height="15" fill="rgb(233,192,5)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_mach_port_construct (1 samples, 0.04%)</title><rect x="52.3107%" y="613" width="0.0388%" height="15" fill="rgb(247,189,41)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="623.50"></text></g><g><title>libxpc.dylib`_xpc_try_mach_port_construct (1 samples, 0.04%)</title><rect x="52.3107%" y="597" width="0.0388%" height="15" fill="rgb(218,134,47)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_construct_trap (1 samples, 0.04%)</title><rect x="52.3107%" y="581" width="0.0388%" height="15" fill="rgb(216,29,3)" fg:x="1347" fg:w="1"/><text x="52.5607%" y="591.50"></text></g><g><title>wgpu_test`winit::event_loop::EventLoop&lt;()&gt;::new (20 samples, 0.78%)</title><rect x="51.6117%" y="1125" width="0.7767%" height="15" fill="rgb(246,140,12)" fg:x="1329" fg:w="20"/><text x="51.8617%" y="1135.50"></text></g><g><title>wgpu_test`winit::event_loop::EventLoop&lt;T&gt;::with_user_event (20 samples, 0.78%)</title><rect x="51.6117%" y="1109" width="0.7767%" height="15" fill="rgb(230,136,11)" fg:x="1329" fg:w="20"/><text x="51.8617%" y="1119.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (20 samples, 0.78%)</title><rect x="51.6117%" y="1093" width="0.7767%" height="15" fill="rgb(247,22,47)" fg:x="1329" fg:w="20"/><text x="51.8617%" y="1103.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (20 samples, 0.78%)</title><rect x="51.6117%" y="1077" width="0.7767%" height="15" fill="rgb(218,84,22)" fg:x="1329" fg:w="20"/><text x="51.8617%" y="1087.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (20 samples, 0.78%)</title><rect x="51.6117%" y="1061" width="0.7767%" height="15" fill="rgb(216,87,39)" fg:x="1329" fg:w="20"/><text x="51.8617%" y="1071.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (2 samples, 0.08%)</title><rect x="52.3107%" y="1045" width="0.0777%" height="15" fill="rgb(221,178,8)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="1055.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (2 samples, 0.08%)</title><rect x="52.3107%" y="1029" width="0.0777%" height="15" fill="rgb(230,42,11)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="1039.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (2 samples, 0.08%)</title><rect x="52.3107%" y="1013" width="0.0777%" height="15" fill="rgb(237,229,4)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="1023.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.08%)</title><rect x="52.3107%" y="997" width="0.0777%" height="15" fill="rgb(222,31,33)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="1007.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.08%)</title><rect x="52.3107%" y="981" width="0.0777%" height="15" fill="rgb(210,17,39)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="991.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (2 samples, 0.08%)</title><rect x="52.3107%" y="965" width="0.0777%" height="15" fill="rgb(244,93,20)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="975.50"></text></g><g><title>AppKit`+[NSApplication initialize] (2 samples, 0.08%)</title><rect x="52.3107%" y="949" width="0.0777%" height="15" fill="rgb(210,40,47)" fg:x="1347" fg:w="2"/><text x="52.5607%" y="959.50"></text></g><g><title>Foundation`_NSFaultInObjectWithCleanup (1 samples, 0.04%)</title><rect x="52.3495%" y="933" width="0.0388%" height="15" fill="rgb(239,211,47)" fg:x="1348" fg:w="1"/><text x="52.5995%" y="943.50"></text></g><g><title>AppKit`newCachedSRGBColor (1 samples, 0.04%)</title><rect x="52.3495%" y="917" width="0.0388%" height="15" fill="rgb(251,223,49)" fg:x="1348" fg:w="1"/><text x="52.5995%" y="927.50"></text></g><g><title>AppKit`+[NSColorSpace specialColorSpaceWithID:] (1 samples, 0.04%)</title><rect x="52.3495%" y="901" width="0.0388%" height="15" fill="rgb(221,149,5)" fg:x="1348" fg:w="1"/><text x="52.5995%" y="911.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.04%)</title><rect x="52.3495%" y="885" width="0.0388%" height="15" fill="rgb(219,224,51)" fg:x="1348" fg:w="1"/><text x="52.5995%" y="895.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::makeKeyAndOrderFront_ (1 samples, 0.04%)</title><rect x="52.3883%" y="1045" width="0.0388%" height="15" fill="rgb(223,7,8)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="1055.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="52.3883%" y="1029" width="0.0388%" height="15" fill="rgb(241,217,22)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="1039.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="52.3883%" y="1013" width="0.0388%" height="15" fill="rgb(248,209,0)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="1023.50"></text></g><g><title>AppKit`-[NSWindow makeKeyAndOrderFront:] (1 samples, 0.04%)</title><rect x="52.3883%" y="997" width="0.0388%" height="15" fill="rgb(217,205,4)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="1007.50"></text></g><g><title>AppKit`-[NSWindow _makeKeyRegardlessOfVisibility] (1 samples, 0.04%)</title><rect x="52.3883%" y="981" width="0.0388%" height="15" fill="rgb(228,124,39)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="991.50"></text></g><g><title>AppKit`-[NSWindow(NSScreenLayout) _saveWindowLayoutForScreenLayout] (1 samples, 0.04%)</title><rect x="52.3883%" y="965" width="0.0388%" height="15" fill="rgb(250,116,42)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="975.50"></text></g><g><title>AppKit`-[NSWindow(NSScreenLayout) _saveWindowLayoutForScreen:] (1 samples, 0.04%)</title><rect x="52.3883%" y="949" width="0.0388%" height="15" fill="rgb(223,202,9)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="959.50"></text></g><g><title>AppKit`-[NSWindow(NSScreenLayout) _saveWindowLayoutFrame:forScreen:] (1 samples, 0.04%)</title><rect x="52.3883%" y="933" width="0.0388%" height="15" fill="rgb(242,222,40)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="943.50"></text></g><g><title>AppKit`-[NSWindow _performBlockWithWindowLayoutsLock:] (1 samples, 0.04%)</title><rect x="52.3883%" y="917" width="0.0388%" height="15" fill="rgb(229,99,46)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="927.50"></text></g><g><title>AppKit`__61-[NSWindow(NSScreenLayout) _saveWindowLayoutFrame:forScreen:]_block_invoke (1 samples, 0.04%)</title><rect x="52.3883%" y="901" width="0.0388%" height="15" fill="rgb(225,56,46)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="911.50"></text></g><g><title>AppKit`+[NSScreenLayout layoutWithScreen:] (1 samples, 0.04%)</title><rect x="52.3883%" y="885" width="0.0388%" height="15" fill="rgb(227,94,5)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSCFString copy] (1 samples, 0.04%)</title><rect x="52.3883%" y="869" width="0.0388%" height="15" fill="rgb(205,112,38)" fg:x="1349" fg:w="1"/><text x="52.6383%" y="879.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::create_view (1 samples, 0.04%)</title><rect x="52.4272%" y="1045" width="0.0388%" height="15" fill="rgb(231,133,46)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="1055.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="52.4272%" y="1029" width="0.0388%" height="15" fill="rgb(217,16,9)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="1039.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::create_view::_{{closure}} (1 samples, 0.04%)</title><rect x="52.4272%" y="1013" width="0.0388%" height="15" fill="rgb(249,173,9)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="1023.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSView&gt;::setWantsLayer (1 samples, 0.04%)</title><rect x="52.4272%" y="997" width="0.0388%" height="15" fill="rgb(205,163,53)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="1007.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="52.4272%" y="981" width="0.0388%" height="15" fill="rgb(217,54,41)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="991.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="52.4272%" y="965" width="0.0388%" height="15" fill="rgb(228,216,12)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="975.50"></text></g><g><title>AppKit`-[NSView didChangeValueForKey:] (1 samples, 0.04%)</title><rect x="52.4272%" y="949" width="0.0388%" height="15" fill="rgb(244,228,15)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="959.50"></text></g><g><title>AppKit`-[NSView _updateLayerBackedness] (1 samples, 0.04%)</title><rect x="52.4272%" y="933" width="0.0388%" height="15" fill="rgb(221,176,53)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="943.50"></text></g><g><title>AppKit`-[NSView _createLayerAndInitialize] (1 samples, 0.04%)</title><rect x="52.4272%" y="917" width="0.0388%" height="15" fill="rgb(205,94,34)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="927.50"></text></g><g><title>AppKit`-[NSView(NSPrivateLayerSupport) _createLayer] (1 samples, 0.04%)</title><rect x="52.4272%" y="901" width="0.0388%" height="15" fill="rgb(213,110,48)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="911.50"></text></g><g><title>QuartzCore`+[CALayer layer] (1 samples, 0.04%)</title><rect x="52.4272%" y="885" width="0.0388%" height="15" fill="rgb(236,142,28)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="895.50"></text></g><g><title>QuartzCore`-[CALayer init] (1 samples, 0.04%)</title><rect x="52.4272%" y="869" width="0.0388%" height="15" fill="rgb(225,135,29)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="879.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (1 samples, 0.04%)</title><rect x="52.4272%" y="853" width="0.0388%" height="15" fill="rgb(252,45,31)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="863.50"></text></g><g><title>libobjc.A.dylib`class_getMethodImplementation (1 samples, 0.04%)</title><rect x="52.4272%" y="837" width="0.0388%" height="15" fill="rgb(211,187,50)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="847.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (1 samples, 0.04%)</title><rect x="52.4272%" y="821" width="0.0388%" height="15" fill="rgb(229,109,7)" fg:x="1350" fg:w="1"/><text x="52.6772%" y="831.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.04%)</title><rect x="52.4660%" y="917" width="0.0388%" height="15" fill="rgb(251,131,51)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="927.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.04%)</title><rect x="52.4660%" y="901" width="0.0388%" height="15" fill="rgb(251,180,35)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="911.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.04%)</title><rect x="52.4660%" y="885" width="0.0388%" height="15" fill="rgb(211,46,32)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="895.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.04%)</title><rect x="52.4660%" y="869" width="0.0388%" height="15" fill="rgb(248,123,17)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="879.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.04%)</title><rect x="52.4660%" y="853" width="0.0388%" height="15" fill="rgb(227,141,18)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="863.50"></text></g><g><title>AppKit`+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (1 samples, 0.04%)</title><rect x="52.4660%" y="837" width="0.0388%" height="15" fill="rgb(216,102,9)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="847.50"></text></g><g><title>libobjc.A.dylib`class_getProperty (1 samples, 0.04%)</title><rect x="52.4660%" y="821" width="0.0388%" height="15" fill="rgb(253,47,13)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.04%)</title><rect x="52.4660%" y="805" width="0.0388%" height="15" fill="rgb(226,93,23)" fg:x="1351" fg:w="1"/><text x="52.7160%" y="815.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (2 samples, 0.08%)</title><rect x="52.4660%" y="997" width="0.0777%" height="15" fill="rgb(247,104,17)" fg:x="1351" fg:w="2"/><text x="52.7160%" y="1007.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="52.4660%" y="981" width="0.0777%" height="15" fill="rgb(233,203,26)" fg:x="1351" fg:w="2"/><text x="52.7160%" y="991.50"></text></g><g><title>wgpu_test`&lt;(A,B,C,D) as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="52.4660%" y="965" width="0.0777%" height="15" fill="rgb(244,98,49)" fg:x="1351" fg:w="2"/><text x="52.7160%" y="975.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (2 samples, 0.08%)</title><rect x="52.4660%" y="949" width="0.0777%" height="15" fill="rgb(235,134,22)" fg:x="1351" fg:w="2"/><text x="52.7160%" y="959.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (2 samples, 0.08%)</title><rect x="52.4660%" y="933" width="0.0777%" height="15" fill="rgb(221,70,32)" fg:x="1351" fg:w="2"/><text x="52.7160%" y="943.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (1 samples, 0.04%)</title><rect x="52.5049%" y="917" width="0.0388%" height="15" fill="rgb(238,15,50)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="927.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (1 samples, 0.04%)</title><rect x="52.5049%" y="901" width="0.0388%" height="15" fill="rgb(215,221,48)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="911.50"></text></g><g><title>AppKit`_NSCreateWindowWithOpaqueShape2 (1 samples, 0.04%)</title><rect x="52.5049%" y="885" width="0.0388%" height="15" fill="rgb(236,73,3)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="895.50"></text></g><g><title>AppKit`-[NSCGSWindow(NSCGSWindowBackingStore) setHasBackingStore:] (1 samples, 0.04%)</title><rect x="52.5049%" y="869" width="0.0388%" height="15" fill="rgb(250,107,11)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="879.50"></text></g><g><title>AppKit`-[NSCGSWindow _updateLayer] (1 samples, 0.04%)</title><rect x="52.5049%" y="853" width="0.0388%" height="15" fill="rgb(242,39,14)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="863.50"></text></g><g><title>QuartzCore`+[CALayer layer] (1 samples, 0.04%)</title><rect x="52.5049%" y="837" width="0.0388%" height="15" fill="rgb(248,164,37)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="847.50"></text></g><g><title>QuartzCore`-[CALayer init] (1 samples, 0.04%)</title><rect x="52.5049%" y="821" width="0.0388%" height="15" fill="rgb(217,60,12)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="831.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (1 samples, 0.04%)</title><rect x="52.5049%" y="805" width="0.0388%" height="15" fill="rgb(240,125,29)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="815.50"></text></g><g><title>QuartzCore`classDescription(objc_class*) (1 samples, 0.04%)</title><rect x="52.5049%" y="789" width="0.0388%" height="15" fill="rgb(208,207,28)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="799.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.04%)</title><rect x="52.5049%" y="773" width="0.0388%" height="15" fill="rgb(209,159,27)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="783.50"></text></g><g><title>QuartzCore`defaultSetter(char const*) (1 samples, 0.04%)</title><rect x="52.5049%" y="757" width="0.0388%" height="15" fill="rgb(251,176,53)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="767.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.04%)</title><rect x="52.5049%" y="741" width="0.0388%" height="15" fill="rgb(211,85,7)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="751.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (1 samples, 0.04%)</title><rect x="52.5049%" y="725" width="0.0388%" height="15" fill="rgb(216,64,54)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="735.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (1 samples, 0.04%)</title><rect x="52.5049%" y="709" width="0.0388%" height="15" fill="rgb(217,54,24)" fg:x="1352" fg:w="1"/><text x="52.7549%" y="719.50"></text></g><g><title>AppKit`-[NSTextFieldCell initTextCell:] (1 samples, 0.04%)</title><rect x="52.5437%" y="773" width="0.0388%" height="15" fill="rgb(208,206,53)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="783.50"></text></g><g><title>AppKit`-[NSCell initTextCell:] (1 samples, 0.04%)</title><rect x="52.5437%" y="757" width="0.0388%" height="15" fill="rgb(251,74,39)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="767.50"></text></g><g><title>AppKit`-[NSCell setStringValue:] (1 samples, 0.04%)</title><rect x="52.5437%" y="741" width="0.0388%" height="15" fill="rgb(226,47,5)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="751.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (1 samples, 0.04%)</title><rect x="52.5437%" y="725" width="0.0388%" height="15" fill="rgb(234,111,33)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="735.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (1 samples, 0.04%)</title><rect x="52.5437%" y="709" width="0.0388%" height="15" fill="rgb(251,14,10)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="719.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (1 samples, 0.04%)</title><rect x="52.5437%" y="693" width="0.0388%" height="15" fill="rgb(232,43,0)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="703.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (1 samples, 0.04%)</title><rect x="52.5437%" y="677" width="0.0388%" height="15" fill="rgb(222,68,43)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="687.50"></text></g><g><title>Foundation`probeGC (1 samples, 0.04%)</title><rect x="52.5437%" y="661" width="0.0388%" height="15" fill="rgb(217,24,23)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="671.50"></text></g><g><title>CoreText`TDescriptor::Hash (1 samples, 0.04%)</title><rect x="52.5437%" y="645" width="0.0388%" height="15" fill="rgb(229,209,14)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="655.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (1 samples, 0.04%)</title><rect x="52.5437%" y="629" width="0.0388%" height="15" fill="rgb(250,149,48)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="639.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (1 samples, 0.04%)</title><rect x="52.5437%" y="613" width="0.0388%" height="15" fill="rgb(210,120,37)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="623.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (1 samples, 0.04%)</title><rect x="52.5437%" y="597" width="0.0388%" height="15" fill="rgb(210,21,8)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="607.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (1 samples, 0.04%)</title><rect x="52.5437%" y="581" width="0.0388%" height="15" fill="rgb(243,145,7)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="591.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (1 samples, 0.04%)</title><rect x="52.5437%" y="565" width="0.0388%" height="15" fill="rgb(238,178,32)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="575.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (1 samples, 0.04%)</title><rect x="52.5437%" y="549" width="0.0388%" height="15" fill="rgb(222,4,10)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="559.50"></text></g><g><title>CoreText`TDescriptorSource::CopyXTypeFontWithName (1 samples, 0.04%)</title><rect x="52.5437%" y="533" width="0.0388%" height="15" fill="rgb(239,7,37)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="543.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontWithName (1 samples, 0.04%)</title><rect x="52.5437%" y="517" width="0.0388%" height="15" fill="rgb(215,31,37)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="527.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::TGlobalFontRegistry (1 samples, 0.04%)</title><rect x="52.5437%" y="501" width="0.0388%" height="15" fill="rgb(224,83,33)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.04%)</title><rect x="52.5437%" y="485" width="0.0388%" height="15" fill="rgb(239,55,3)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.04%)</title><rect x="52.5437%" y="469" width="0.0388%" height="15" fill="rgb(247,92,11)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.04%)</title><rect x="52.5437%" y="453" width="0.0388%" height="15" fill="rgb(239,200,7)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="463.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::CreateRegistry (1 samples, 0.04%)</title><rect x="52.5437%" y="437" width="0.0388%" height="15" fill="rgb(227,115,8)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="447.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistryImp::RendezvousWithServer (1 samples, 0.04%)</title><rect x="52.5437%" y="421" width="0.0388%" height="15" fill="rgb(215,189,27)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="431.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient XTRendezvous:] (1 samples, 0.04%)</title><rect x="52.5437%" y="405" width="0.0388%" height="15" fill="rgb(251,216,39)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="415.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient run:errorHandler:] (1 samples, 0.04%)</title><rect x="52.5437%" y="389" width="0.0388%" height="15" fill="rgb(207,29,47)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="399.50"></text></g><g><title>libFontRegistry.dylib`__31-[XTypeXPCClient XTRendezvous:]_block_invoke (1 samples, 0.04%)</title><rect x="52.5437%" y="373" width="0.0388%" height="15" fill="rgb(210,71,34)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="383.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend1 (1 samples, 0.04%)</title><rect x="52.5437%" y="357" width="0.0388%" height="15" fill="rgb(253,217,51)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="367.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:] (1 samples, 0.04%)</title><rect x="52.5437%" y="341" width="0.0388%" height="15" fill="rgb(222,117,46)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="351.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.04%)</title><rect x="52.5437%" y="325" width="0.0388%" height="15" fill="rgb(226,132,6)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="335.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (1 samples, 0.04%)</title><rect x="52.5437%" y="309" width="0.0388%" height="15" fill="rgb(254,145,51)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="319.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (1 samples, 0.04%)</title><rect x="52.5437%" y="293" width="0.0388%" height="15" fill="rgb(231,199,27)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="303.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeReplyFromXPCObject:forSelector:interface:] (1 samples, 0.04%)</title><rect x="52.5437%" y="277" width="0.0388%" height="15" fill="rgb(245,158,14)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="287.50"></text></g><g><title>Foundation`-[NSXPCDecoder __decodeXPCObject:allowingSimpleMessageSend:outInvocation:outArguments:outArgumentsMaxCount:outMethodSignature:outSelector:isReply:replySelector:interface:] (1 samples, 0.04%)</title><rect x="52.5437%" y="261" width="0.0388%" height="15" fill="rgb(240,113,14)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="271.50"></text></g><g><title>Foundation`_NSXPCSerializationDecodeInvocationArgumentArray (1 samples, 0.04%)</title><rect x="52.5437%" y="245" width="0.0388%" height="15" fill="rgb(210,20,13)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="255.50"></text></g><g><title>Foundation`_NSXPCSerializationDecodeTypedObjCValuesFromArray (1 samples, 0.04%)</title><rect x="52.5437%" y="229" width="0.0388%" height="15" fill="rgb(241,144,13)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="239.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeObjectOfClasses:atObject:] (1 samples, 0.04%)</title><rect x="52.5437%" y="213" width="0.0388%" height="15" fill="rgb(235,43,34)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="223.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.04%)</title><rect x="52.5437%" y="197" width="0.0388%" height="15" fill="rgb(208,36,20)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="207.50"></text></g><g><title>Foundation`-[NSDictionary(NSDictionary) initWithCoder:] (1 samples, 0.04%)</title><rect x="52.5437%" y="181" width="0.0388%" height="15" fill="rgb(239,204,10)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="191.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeArrayOfObjectsForKey:] (1 samples, 0.04%)</title><rect x="52.5437%" y="165" width="0.0388%" height="15" fill="rgb(217,84,43)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="175.50"></text></g><g><title>Foundation`_NSXPCSerializationIterateArrayObject (1 samples, 0.04%)</title><rect x="52.5437%" y="149" width="0.0388%" height="15" fill="rgb(241,170,50)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="159.50"></text></g><g><title>Foundation`__44-[NSXPCDecoder _decodeArrayOfObjectsForKey:]_block_invoke (1 samples, 0.04%)</title><rect x="52.5437%" y="133" width="0.0388%" height="15" fill="rgb(226,205,29)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="143.50"></text></g><g><title>Foundation`_NSXPCSerializationStringForObject (1 samples, 0.04%)</title><rect x="52.5437%" y="117" width="0.0388%" height="15" fill="rgb(233,113,1)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="127.50"></text></g><g><title>Foundation`_getStringAtMarker (1 samples, 0.04%)</title><rect x="52.5437%" y="101" width="0.0388%" height="15" fill="rgb(253,98,13)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="111.50"></text></g><g><title>CoreFoundation`CFStringCreateWithCharacters (1 samples, 0.04%)</title><rect x="52.5437%" y="85" width="0.0388%" height="15" fill="rgb(211,115,12)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="95.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.04%)</title><rect x="52.5437%" y="69" width="0.0388%" height="15" fill="rgb(208,12,16)" fg:x="1353" fg:w="1"/><text x="52.7937%" y="79.50"></text></g><g><title>dyld`start (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1317" width="52.5825%" height="15" fill="rgb(237,193,54)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1327.50">dyld`start</text></g><g><title>wgpu_test`main (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1301" width="52.5825%" height="15" fill="rgb(243,22,42)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1311.50">wgpu_test`main</text></g><g><title>wgpu_test`std::rt::lang_start (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1285" width="52.5825%" height="15" fill="rgb(233,151,36)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1295.50">wgpu_test`std::rt::lang_start</text></g><g><title>wgpu_test`std::rt::lang_start_internal (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1269" width="52.5825%" height="15" fill="rgb(237,57,45)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1279.50">wgpu_test`std::rt::lang_start_internal</text></g><g><title>wgpu_test`std::rt::lang_start::_{{closure}} (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1253" width="52.5825%" height="15" fill="rgb(221,88,17)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1263.50">wgpu_test`std::rt::lang_start::_{{closure}}</text></g><g><title>wgpu_test`std::sys_common::backtrace::__rust_begin_short_backtrace (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1237" width="52.5825%" height="15" fill="rgb(230,79,15)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1247.50">wgpu_test`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1221" width="52.5825%" height="15" fill="rgb(213,57,13)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1231.50">wgpu_test`core::ops::function::FnOnce::call_once</text></g><g><title>wgpu_test`wgpu_test::main (1,354 samples, 52.58%)</title><rect x="0.0388%" y="1205" width="52.5825%" height="15" fill="rgb(222,116,39)" fg:x="1" fg:w="1354"/><text x="0.2888%" y="1215.50">wgpu_test`wgpu_test::main</text></g><g><title>wgpu_test`bevy_app::app::App::run (1,351 samples, 52.47%)</title><rect x="0.1553%" y="1189" width="52.4660%" height="15" fill="rgb(245,107,2)" fg:x="4" fg:w="1351"/><text x="0.4053%" y="1199.50">wgpu_test`bevy_app::app::App::run</text></g><g><title>wgpu_test`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1,351 samples, 52.47%)</title><rect x="0.1553%" y="1173" width="52.4660%" height="15" fill="rgb(238,1,10)" fg:x="4" fg:w="1351"/><text x="0.4053%" y="1183.50">wgpu_test`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call</text></g><g><title>wgpu_test`&lt;wgpu_test::rendering::CtklrRenderPlugin as bevy_app::plugin::Plugin&gt;::build::_{{closure}} (1,351 samples, 52.47%)</title><rect x="0.1553%" y="1157" width="52.4660%" height="15" fill="rgb(249,4,48)" fg:x="4" fg:w="1351"/><text x="0.4053%" y="1167.50">wgpu_test`&lt;wgpu_test::rendering::CtklrRenderPlugin as bevy_app::plugin::Plugin&gt;::build..</text></g><g><title>wgpu_test`wgpu_test::rendering::create_window (1,351 samples, 52.47%)</title><rect x="0.1553%" y="1141" width="52.4660%" height="15" fill="rgb(223,151,18)" fg:x="4" fg:w="1351"/><text x="0.4053%" y="1151.50">wgpu_test`wgpu_test::rendering::create_window</text></g><g><title>wgpu_test`winit::window::WindowBuilder::build (6 samples, 0.23%)</title><rect x="52.3883%" y="1125" width="0.2330%" height="15" fill="rgb(227,65,43)" fg:x="1349" fg:w="6"/><text x="52.6383%" y="1135.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::Window::new (6 samples, 0.23%)</title><rect x="52.3883%" y="1109" width="0.2330%" height="15" fill="rgb(218,40,45)" fg:x="1349" fg:w="6"/><text x="52.6383%" y="1119.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.23%)</title><rect x="52.3883%" y="1093" width="0.2330%" height="15" fill="rgb(252,121,31)" fg:x="1349" fg:w="6"/><text x="52.6383%" y="1103.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::Window::new::_{{closure}} (6 samples, 0.23%)</title><rect x="52.3883%" y="1077" width="0.2330%" height="15" fill="rgb(219,158,43)" fg:x="1349" fg:w="6"/><text x="52.6383%" y="1087.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::UnownedWindow::new (6 samples, 0.23%)</title><rect x="52.3883%" y="1061" width="0.2330%" height="15" fill="rgb(231,162,42)" fg:x="1349" fg:w="6"/><text x="52.6383%" y="1071.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::create_window (4 samples, 0.16%)</title><rect x="52.4660%" y="1045" width="0.1553%" height="15" fill="rgb(217,179,25)" fg:x="1351" fg:w="4"/><text x="52.7160%" y="1055.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (4 samples, 0.16%)</title><rect x="52.4660%" y="1029" width="0.1553%" height="15" fill="rgb(206,212,31)" fg:x="1351" fg:w="4"/><text x="52.7160%" y="1039.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::create_window::_{{closure}} (4 samples, 0.16%)</title><rect x="52.4660%" y="1013" width="0.1553%" height="15" fill="rgb(235,144,12)" fg:x="1351" fg:w="4"/><text x="52.7160%" y="1023.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="52.5437%" y="997" width="0.0777%" height="15" fill="rgb(213,51,10)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="1007.50"></text></g><g><title>wgpu_test`winit::platform_impl::platform::window::create_window::_{{closure}}::_{{closure}} (2 samples, 0.08%)</title><rect x="52.5437%" y="981" width="0.0777%" height="15" fill="rgb(231,145,14)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="991.50"></text></g><g><title>wgpu_test`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::setTitle_ (2 samples, 0.08%)</title><rect x="52.5437%" y="965" width="0.0777%" height="15" fill="rgb(235,15,28)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="975.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="52.5437%" y="949" width="0.0777%" height="15" fill="rgb(237,206,10)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="959.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="52.5437%" y="933" width="0.0777%" height="15" fill="rgb(236,227,27)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="943.50"></text></g><g><title>AppKit`-[NSWindow _dosetTitle:andDefeatWrap:] (2 samples, 0.08%)</title><rect x="52.5437%" y="917" width="0.0777%" height="15" fill="rgb(246,83,35)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="927.50"></text></g><g><title>AppKit`-[NSWindowTitleController _propertiesChanged:] (2 samples, 0.08%)</title><rect x="52.5437%" y="901" width="0.0777%" height="15" fill="rgb(220,136,24)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="911.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (2 samples, 0.08%)</title><rect x="52.5437%" y="885" width="0.0777%" height="15" fill="rgb(217,3,25)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="895.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (2 samples, 0.08%)</title><rect x="52.5437%" y="869" width="0.0777%" height="15" fill="rgb(239,24,14)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="879.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (2 samples, 0.08%)</title><rect x="52.5437%" y="853" width="0.0777%" height="15" fill="rgb(244,16,53)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="863.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (2 samples, 0.08%)</title><rect x="52.5437%" y="837" width="0.0777%" height="15" fill="rgb(208,175,44)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="847.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (2 samples, 0.08%)</title><rect x="52.5437%" y="821" width="0.0777%" height="15" fill="rgb(252,18,48)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="831.50"></text></g><g><title>AppKit`-[NSNextStepFrame _updateTitleProperties:] (2 samples, 0.08%)</title><rect x="52.5437%" y="805" width="0.0777%" height="15" fill="rgb(234,199,32)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="815.50"></text></g><g><title>AppKit`-[NSNextStepFrame setTitle:andDefeatWrap:] (2 samples, 0.08%)</title><rect x="52.5437%" y="789" width="0.0777%" height="15" fill="rgb(225,77,54)" fg:x="1353" fg:w="2"/><text x="52.7937%" y="799.50"></text></g><g><title>AppKit`initTitleForStyle (1 samples, 0.04%)</title><rect x="52.5825%" y="773" width="0.0388%" height="15" fill="rgb(225,42,25)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="783.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (1 samples, 0.04%)</title><rect x="52.5825%" y="757" width="0.0388%" height="15" fill="rgb(242,227,46)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="767.50"></text></g><g><title>UIFoundation`-[__NSFontTypefaceInfo fontInstanceForFontDescriptor:size:affineTransform:renderingMode:] (1 samples, 0.04%)</title><rect x="52.5825%" y="741" width="0.0388%" height="15" fill="rgb(246,197,35)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="751.50"></text></g><g><title>UIFoundation`-[__NSFontTypefaceInfo fontInstanceForKey:renderingMode:] (1 samples, 0.04%)</title><rect x="52.5825%" y="725" width="0.0388%" height="15" fill="rgb(215,159,26)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="735.50"></text></g><g><title>UIFoundation`-[NSFont initWithTypefaceInfo:key:renderingMode:] (1 samples, 0.04%)</title><rect x="52.5825%" y="709" width="0.0388%" height="15" fill="rgb(212,194,50)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="719.50"></text></g><g><title>UIFoundation`__CTFontGetExtraData (1 samples, 0.04%)</title><rect x="52.5825%" y="693" width="0.0388%" height="15" fill="rgb(246,132,1)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="703.50"></text></g><g><title>UIFoundation`-[__NSFontExtraData initWithFont:] (1 samples, 0.04%)</title><rect x="52.5825%" y="677" width="0.0388%" height="15" fill="rgb(217,71,7)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="687.50"></text></g><g><title>CoreText`CTFontGetAscent (1 samples, 0.04%)</title><rect x="52.5825%" y="661" width="0.0388%" height="15" fill="rgb(252,59,32)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="671.50"></text></g><g><title>CoreText`TFont::InitStrikeMetrics (1 samples, 0.04%)</title><rect x="52.5825%" y="645" width="0.0388%" height="15" fill="rgb(253,204,25)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="655.50"></text></g><g><title>CoreText`TFont::GetStrikeMetrics (1 samples, 0.04%)</title><rect x="52.5825%" y="629" width="0.0388%" height="15" fill="rgb(232,21,16)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="639.50"></text></g><g><title>CoreText`TBaseFont::GetStrikeMetrics (1 samples, 0.04%)</title><rect x="52.5825%" y="613" width="0.0388%" height="15" fill="rgb(248,90,29)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="623.50"></text></g><g><title>CoreText`TBaseFont::InitFontMetrics (1 samples, 0.04%)</title><rect x="52.5825%" y="597" width="0.0388%" height="15" fill="rgb(249,223,7)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="607.50"></text></g><g><title>CoreText`TComponentFont::CalculateFontMetrics (1 samples, 0.04%)</title><rect x="52.5825%" y="581" width="0.0388%" height="15" fill="rgb(231,119,42)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="591.50"></text></g><g><title>CoreText`TComponentFont::AdjustLineMetrics (1 samples, 0.04%)</title><rect x="52.5825%" y="565" width="0.0388%" height="15" fill="rgb(215,41,35)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="575.50"></text></g><g><title>CoreText`TTenuousComponentFont::HasExuberatedLineHeight (1 samples, 0.04%)</title><rect x="52.5825%" y="549" width="0.0388%" height="15" fill="rgb(220,44,45)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="559.50"></text></g><g><title>CoreText`CurrentLocaleIsExuberated() (1 samples, 0.04%)</title><rect x="52.5825%" y="533" width="0.0388%" height="15" fill="rgb(253,197,36)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="543.50"></text></g><g><title>CoreText`IsExuberatedLanguage(__CFString const*) (1 samples, 0.04%)</title><rect x="52.5825%" y="517" width="0.0388%" height="15" fill="rgb(245,225,54)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="527.50"></text></g><g><title>CoreText`MaximizedLocaleIdentifier(__CFString const*) (1 samples, 0.04%)</title><rect x="52.5825%" y="501" width="0.0388%" height="15" fill="rgb(239,94,37)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="511.50"></text></g><g><title>libicucore.A.dylib`uloc_addLikelySubtags (1 samples, 0.04%)</title><rect x="52.5825%" y="485" width="0.0388%" height="15" fill="rgb(242,217,10)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="495.50"></text></g><g><title>libicucore.A.dylib`0x00007ff80b9a4175 (1 samples, 0.04%)</title><rect x="52.5825%" y="469" width="0.0388%" height="15" fill="rgb(250,193,7)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="479.50"></text></g><g><title>libicucore.A.dylib`0x00007ff80b9a4ec3 (1 samples, 0.04%)</title><rect x="52.5825%" y="453" width="0.0388%" height="15" fill="rgb(230,104,19)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="463.50"></text></g><g><title>libicucore.A.dylib`0x00007ff80b9a52c8 (1 samples, 0.04%)</title><rect x="52.5825%" y="437" width="0.0388%" height="15" fill="rgb(230,181,4)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="447.50"></text></g><g><title>libicucore.A.dylib`0x00007ff80b9a58d2 (1 samples, 0.04%)</title><rect x="52.5825%" y="421" width="0.0388%" height="15" fill="rgb(216,219,49)" fg:x="1354" fg:w="1"/><text x="52.8325%" y="431.50"></text></g><g><title>libobjc.A.dylib`bool method_lists_contains_any&lt;WrappedPtr&lt;method_list_t, PtrauthRaw&gt; const&gt;(WrappedPtr&lt;method_list_t, PtrauthRaw&gt; const*, WrappedPtr&lt;method_list_t, PtrauthRaw&gt; const*, objc_selector**, unsigned long) (1 samples, 0.04%)</title><rect x="52.6214%" y="1317" width="0.0388%" height="15" fill="rgb(254,144,0)" fg:x="1355" fg:w="1"/><text x="52.8714%" y="1327.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (5 samples, 0.19%)</title><rect x="52.6602%" y="1317" width="0.1942%" height="15" fill="rgb(205,209,38)" fg:x="1356" fg:w="5"/><text x="52.9102%" y="1327.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.08%)</title><rect x="52.8544%" y="1317" width="0.0777%" height="15" fill="rgb(240,21,42)" fg:x="1361" fg:w="2"/><text x="53.1044%" y="1327.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (92 samples, 3.57%)</title><rect x="53.1262%" y="1301" width="3.5728%" height="15" fill="rgb(241,132,3)" fg:x="1368" fg:w="92"/><text x="53.3762%" y="1311.50">libs..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__workq_kernreturn (1 samples, 0.04%)</title><rect x="56.6990%" y="1301" width="0.0388%" height="15" fill="rgb(225,14,2)" fg:x="1460" fg:w="1"/><text x="56.9490%" y="1311.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (1 samples, 0.04%)</title><rect x="56.8155%" y="1269" width="0.0388%" height="15" fill="rgb(210,141,35)" fg:x="1463" fg:w="1"/><text x="57.0655%" y="1279.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.04%)</title><rect x="56.8155%" y="1253" width="0.0388%" height="15" fill="rgb(251,14,44)" fg:x="1463" fg:w="1"/><text x="57.0655%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.04%)</title><rect x="56.8155%" y="1237" width="0.0388%" height="15" fill="rgb(247,48,18)" fg:x="1463" fg:w="1"/><text x="57.0655%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (4 samples, 0.16%)</title><rect x="56.7767%" y="1285" width="0.1553%" height="15" fill="rgb(225,0,40)" fg:x="1462" fg:w="4"/><text x="57.0267%" y="1295.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (2 samples, 0.08%)</title><rect x="56.8544%" y="1269" width="0.0777%" height="15" fill="rgb(221,31,33)" fg:x="1464" fg:w="2"/><text x="57.1044%" y="1279.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="56.8544%" y="1253" width="0.0777%" height="15" fill="rgb(237,42,40)" fg:x="1464" fg:w="2"/><text x="57.1044%" y="1263.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_leave_deferred (1 samples, 0.04%)</title><rect x="57.4757%" y="1269" width="0.0388%" height="15" fill="rgb(233,51,29)" fg:x="1480" fg:w="1"/><text x="57.7257%" y="1279.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (1 samples, 0.04%)</title><rect x="57.5146%" y="1269" width="0.0388%" height="15" fill="rgb(226,58,20)" fg:x="1481" fg:w="1"/><text x="57.7646%" y="1279.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="57.5146%" y="1253" width="0.0388%" height="15" fill="rgb(208,98,7)" fg:x="1481" fg:w="1"/><text x="57.7646%" y="1263.50"></text></g><g><title>Metal`__36-[MTLIOAccelDevice kickCleanupQueue]_block_invoke (1 samples, 0.04%)</title><rect x="57.6699%" y="1221" width="0.0388%" height="15" fill="rgb(228,143,44)" fg:x="1485" fg:w="1"/><text x="57.9199%" y="1231.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (3 samples, 0.12%)</title><rect x="57.7087%" y="1221" width="0.1165%" height="15" fill="rgb(246,55,38)" fg:x="1486" fg:w="3"/><text x="57.9587%" y="1231.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (3 samples, 0.12%)</title><rect x="57.7087%" y="1205" width="0.1165%" height="15" fill="rgb(247,87,16)" fg:x="1486" fg:w="3"/><text x="57.9587%" y="1215.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (3 samples, 0.12%)</title><rect x="57.7087%" y="1189" width="0.1165%" height="15" fill="rgb(234,129,42)" fg:x="1486" fg:w="3"/><text x="57.9587%" y="1199.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (3 samples, 0.12%)</title><rect x="57.7087%" y="1173" width="0.1165%" height="15" fill="rgb(220,82,16)" fg:x="1486" fg:w="3"/><text x="57.9587%" y="1183.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (2 samples, 0.08%)</title><rect x="57.7476%" y="1157" width="0.0777%" height="15" fill="rgb(211,88,4)" fg:x="1487" fg:w="2"/><text x="57.9976%" y="1167.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (2 samples, 0.08%)</title><rect x="57.7476%" y="1141" width="0.0777%" height="15" fill="rgb(248,151,21)" fg:x="1487" fg:w="2"/><text x="57.9976%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (2 samples, 0.08%)</title><rect x="57.7476%" y="1125" width="0.0777%" height="15" fill="rgb(238,163,6)" fg:x="1487" fg:w="2"/><text x="57.9976%" y="1135.50"></text></g><g><title>AppKit`__35-[NSDockConnection startConnection]_block_invoke.37 (1 samples, 0.04%)</title><rect x="57.8252%" y="1205" width="0.0388%" height="15" fill="rgb(209,183,11)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1215.50"></text></g><g><title>AppKit`-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (1 samples, 0.04%)</title><rect x="57.8252%" y="1189" width="0.0388%" height="15" fill="rgb(219,37,20)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1199.50"></text></g><g><title>SkyLight`SLSessionCopyCurrentDictionary (1 samples, 0.04%)</title><rect x="57.8252%" y="1173" width="0.0388%" height="15" fill="rgb(210,158,4)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1183.50"></text></g><g><title>SkyLight`SLSCopyCurrentSessionPropertiesInternalBridge (1 samples, 0.04%)</title><rect x="57.8252%" y="1157" width="0.0388%" height="15" fill="rgb(221,167,53)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="57.8252%" y="1141" width="0.0388%" height="15" fill="rgb(237,151,45)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="57.8252%" y="1125" width="0.0388%" height="15" fill="rgb(231,39,3)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1135.50"></text></g><g><title>SkyLight`__loginframework_vtable_block_invoke (1 samples, 0.04%)</title><rect x="57.8252%" y="1109" width="0.0388%" height="15" fill="rgb(212,167,28)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1119.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.04%)</title><rect x="57.8252%" y="1093" width="0.0388%" height="15" fill="rgb(232,178,8)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1103.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="1077" width="0.0388%" height="15" fill="rgb(225,151,20)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1087.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="1061" width="0.0388%" height="15" fill="rgb(238,3,37)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1071.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="1045" width="0.0388%" height="15" fill="rgb(251,147,42)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1055.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="1029" width="0.0388%" height="15" fill="rgb(208,173,10)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1039.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="1013" width="0.0388%" height="15" fill="rgb(246,225,4)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1023.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="997" width="0.0388%" height="15" fill="rgb(248,102,6)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="1007.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.04%)</title><rect x="57.8252%" y="981" width="0.0388%" height="15" fill="rgb(232,6,21)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="991.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::dependent (1 samples, 0.04%)</title><rect x="57.8252%" y="965" width="0.0388%" height="15" fill="rgb(221,179,22)" fg:x="1489" fg:w="1"/><text x="58.0752%" y="975.50"></text></g><g><title>DFRFoundation`__DFRHandshake (1 samples, 0.04%)</title><rect x="57.8641%" y="1205" width="0.0388%" height="15" fill="rgb(252,50,20)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1215.50"></text></g><g><title>DFRFoundation`_DFRHandleHandshake (1 samples, 0.04%)</title><rect x="57.8641%" y="1189" width="0.0388%" height="15" fill="rgb(222,56,38)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1199.50"></text></g><g><title>DFRFoundation`DFRSessionShmemMap (1 samples, 0.04%)</title><rect x="57.8641%" y="1173" width="0.0388%" height="15" fill="rgb(206,193,29)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1183.50"></text></g><g><title>DFRFoundation`_DFRServerPort (1 samples, 0.04%)</title><rect x="57.8641%" y="1157" width="0.0388%" height="15" fill="rgb(239,192,45)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1167.50"></text></g><g><title>DFRFoundation`_DFRBootstrapLookup (1 samples, 0.04%)</title><rect x="57.8641%" y="1141" width="0.0388%" height="15" fill="rgb(254,18,36)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1151.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up2 (1 samples, 0.04%)</title><rect x="57.8641%" y="1125" width="0.0388%" height="15" fill="rgb(221,127,11)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1135.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up3 (1 samples, 0.04%)</title><rect x="57.8641%" y="1109" width="0.0388%" height="15" fill="rgb(234,146,35)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1119.50"></text></g><g><title>libxpc.dylib`_xpc_interface_routine (1 samples, 0.04%)</title><rect x="57.8641%" y="1093" width="0.0388%" height="15" fill="rgb(254,201,37)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1103.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.04%)</title><rect x="57.8641%" y="1077" width="0.0388%" height="15" fill="rgb(211,202,23)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (1 samples, 0.04%)</title><rect x="57.8641%" y="1061" width="0.0388%" height="15" fill="rgb(237,91,2)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="57.8641%" y="1045" width="0.0388%" height="15" fill="rgb(226,228,36)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.04%)</title><rect x="57.8641%" y="1029" width="0.0388%" height="15" fill="rgb(213,63,50)" fg:x="1490" fg:w="1"/><text x="58.1141%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (40 samples, 1.55%)</title><rect x="57.8252%" y="1221" width="1.5534%" height="15" fill="rgb(235,194,19)" fg:x="1489" fg:w="40"/><text x="58.0752%" y="1231.50"></text></g><g><title>QuartzCore`__CAImageQueueInsertImage__block_invoke (38 samples, 1.48%)</title><rect x="57.9029%" y="1205" width="1.4757%" height="15" fill="rgb(207,204,18)" fg:x="1491" fg:w="38"/><text x="58.1529%" y="1215.50"></text></g><g><title>IOSurface`IOSurfaceClientBindAccel (38 samples, 1.48%)</title><rect x="57.9029%" y="1189" width="1.4757%" height="15" fill="rgb(248,8,7)" fg:x="1491" fg:w="38"/><text x="58.1529%" y="1199.50"></text></g><g><title>IOKit`IOConnectCallMethod (38 samples, 1.48%)</title><rect x="57.9029%" y="1173" width="1.4757%" height="15" fill="rgb(223,145,47)" fg:x="1491" fg:w="38"/><text x="58.1529%" y="1183.50"></text></g><g><title>IOKit`io_connect_method (38 samples, 1.48%)</title><rect x="57.9029%" y="1157" width="1.4757%" height="15" fill="rgb(228,84,11)" fg:x="1491" fg:w="38"/><text x="58.1529%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (38 samples, 1.48%)</title><rect x="57.9029%" y="1141" width="1.4757%" height="15" fill="rgb(218,76,45)" fg:x="1491" fg:w="38"/><text x="58.1529%" y="1151.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.04%)</title><rect x="59.4175%" y="1189" width="0.0388%" height="15" fill="rgb(223,80,15)" fg:x="1530" fg:w="1"/><text x="59.6675%" y="1199.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.12%)</title><rect x="59.3786%" y="1221" width="0.1165%" height="15" fill="rgb(219,218,33)" fg:x="1529" fg:w="3"/><text x="59.6286%" y="1231.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (3 samples, 0.12%)</title><rect x="59.3786%" y="1205" width="0.1165%" height="15" fill="rgb(208,51,11)" fg:x="1529" fg:w="3"/><text x="59.6286%" y="1215.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (1 samples, 0.04%)</title><rect x="59.4563%" y="1189" width="0.0388%" height="15" fill="rgb(229,165,39)" fg:x="1531" fg:w="1"/><text x="59.7063%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (48 samples, 1.86%)</title><rect x="57.6699%" y="1237" width="1.8641%" height="15" fill="rgb(241,100,24)" fg:x="1485" fg:w="48"/><text x="57.9199%" y="1247.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.04%)</title><rect x="59.4951%" y="1221" width="0.0388%" height="15" fill="rgb(228,14,23)" fg:x="1532" fg:w="1"/><text x="59.7451%" y="1231.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (1 samples, 0.04%)</title><rect x="59.5340%" y="1237" width="0.0388%" height="15" fill="rgb(247,116,52)" fg:x="1533" fg:w="1"/><text x="59.7840%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.04%)</title><rect x="59.5340%" y="1221" width="0.0388%" height="15" fill="rgb(216,149,33)" fg:x="1533" fg:w="1"/><text x="59.7840%" y="1231.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_barrier_drain_invoke (1 samples, 0.04%)</title><rect x="59.5340%" y="1205" width="0.0388%" height="15" fill="rgb(238,142,29)" fg:x="1533" fg:w="1"/><text x="59.7840%" y="1215.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.04%)</title><rect x="59.5340%" y="1189" width="0.0388%" height="15" fill="rgb(224,83,40)" fg:x="1533" fg:w="1"/><text x="59.7840%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_barrier_invoke (1 samples, 0.04%)</title><rect x="59.5340%" y="1173" width="0.0388%" height="15" fill="rgb(234,165,11)" fg:x="1533" fg:w="1"/><text x="59.7840%" y="1183.50"></text></g><g><title>QuartzCore`layer_private_release(_CAMetalLayerPrivate*) (1 samples, 0.04%)</title><rect x="59.6505%" y="1205" width="0.0388%" height="15" fill="rgb(215,96,23)" fg:x="1536" fg:w="1"/><text x="59.9005%" y="1215.50"></text></g><g><title>IOKit`io_connect_method (41 samples, 1.59%)</title><rect x="59.7670%" y="1109" width="1.5922%" height="15" fill="rgb(233,179,26)" fg:x="1539" fg:w="41"/><text x="60.0170%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (41 samples, 1.59%)</title><rect x="59.7670%" y="1093" width="1.5922%" height="15" fill="rgb(225,129,33)" fg:x="1539" fg:w="41"/><text x="60.0170%" y="1103.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (42 samples, 1.63%)</title><rect x="59.7670%" y="1141" width="1.6311%" height="15" fill="rgb(237,49,13)" fg:x="1539" fg:w="42"/><text x="60.0170%" y="1151.50"></text></g><g><title>IOKit`IOConnectCallMethod (42 samples, 1.63%)</title><rect x="59.7670%" y="1125" width="1.6311%" height="15" fill="rgb(211,3,31)" fg:x="1539" fg:w="42"/><text x="60.0170%" y="1135.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__findenv_locked (1 samples, 0.04%)</title><rect x="61.3592%" y="1109" width="0.0388%" height="15" fill="rgb(216,152,19)" fg:x="1580" fg:w="1"/><text x="61.6092%" y="1119.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue submitCommandBuffers:count:] (44 samples, 1.71%)</title><rect x="59.7282%" y="1173" width="1.7087%" height="15" fill="rgb(251,121,35)" fg:x="1538" fg:w="44"/><text x="59.9782%" y="1183.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (44 samples, 1.71%)</title><rect x="59.7282%" y="1157" width="1.7087%" height="15" fill="rgb(210,217,47)" fg:x="1538" fg:w="44"/><text x="59.9782%" y="1167.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.04%)</title><rect x="61.3981%" y="1141" width="0.0388%" height="15" fill="rgb(244,116,22)" fg:x="1581" fg:w="1"/><text x="61.6481%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="61.3981%" y="1125" width="0.0388%" height="15" fill="rgb(228,17,21)" fg:x="1581" fg:w="1"/><text x="61.6481%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="61.3981%" y="1109" width="0.0388%" height="15" fill="rgb(240,149,34)" fg:x="1581" fg:w="1"/><text x="61.6481%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="61.3981%" y="1093" width="0.0388%" height="15" fill="rgb(208,125,47)" fg:x="1581" fg:w="1"/><text x="61.6481%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.04%)</title><rect x="61.3981%" y="1077" width="0.0388%" height="15" fill="rgb(249,186,39)" fg:x="1581" fg:w="1"/><text x="61.6481%" y="1087.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (1 samples, 0.04%)</title><rect x="61.4369%" y="1173" width="0.0388%" height="15" fill="rgb(240,220,33)" fg:x="1582" fg:w="1"/><text x="61.6869%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_wait (1 samples, 0.04%)</title><rect x="61.4757%" y="1157" width="0.0388%" height="15" fill="rgb(243,110,23)" fg:x="1583" fg:w="1"/><text x="61.7257%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait (1 samples, 0.04%)</title><rect x="61.5146%" y="1157" width="0.0388%" height="15" fill="rgb(219,163,46)" fg:x="1584" fg:w="1"/><text x="61.7646%" y="1167.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (53 samples, 2.06%)</title><rect x="59.6893%" y="1189" width="2.0583%" height="15" fill="rgb(216,126,30)" fg:x="1537" fg:w="53"/><text x="59.9393%" y="1199.50">M..</text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (7 samples, 0.27%)</title><rect x="61.4757%" y="1173" width="0.2718%" height="15" fill="rgb(208,139,11)" fg:x="1583" fg:w="7"/><text x="61.7257%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (5 samples, 0.19%)</title><rect x="61.5534%" y="1157" width="0.1942%" height="15" fill="rgb(213,118,36)" fg:x="1585" fg:w="5"/><text x="61.8034%" y="1167.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (1 samples, 0.04%)</title><rect x="61.7476%" y="1125" width="0.0388%" height="15" fill="rgb(226,43,17)" fg:x="1590" fg:w="1"/><text x="61.9976%" y="1135.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.04%)</title><rect x="61.7476%" y="1109" width="0.0388%" height="15" fill="rgb(254,217,4)" fg:x="1590" fg:w="1"/><text x="61.9976%" y="1119.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.04%)</title><rect x="61.7864%" y="997" width="0.0388%" height="15" fill="rgb(210,134,47)" fg:x="1591" fg:w="1"/><text x="62.0364%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.04%)</title><rect x="61.7864%" y="981" width="0.0388%" height="15" fill="rgb(237,24,49)" fg:x="1591" fg:w="1"/><text x="62.0364%" y="991.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.04%)</title><rect x="61.7864%" y="965" width="0.0388%" height="15" fill="rgb(251,39,46)" fg:x="1591" fg:w="1"/><text x="62.0364%" y="975.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (2 samples, 0.08%)</title><rect x="61.7864%" y="1061" width="0.0777%" height="15" fill="rgb(251,220,3)" fg:x="1591" fg:w="2"/><text x="62.0364%" y="1071.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (2 samples, 0.08%)</title><rect x="61.7864%" y="1045" width="0.0777%" height="15" fill="rgb(228,105,12)" fg:x="1591" fg:w="2"/><text x="62.0364%" y="1055.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.08%)</title><rect x="61.7864%" y="1029" width="0.0777%" height="15" fill="rgb(215,196,1)" fg:x="1591" fg:w="2"/><text x="62.0364%" y="1039.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (2 samples, 0.08%)</title><rect x="61.7864%" y="1013" width="0.0777%" height="15" fill="rgb(214,33,39)" fg:x="1591" fg:w="2"/><text x="62.0364%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="61.8252%" y="997" width="0.0388%" height="15" fill="rgb(220,19,52)" fg:x="1592" fg:w="1"/><text x="62.0752%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="61.8252%" y="981" width="0.0388%" height="15" fill="rgb(221,78,38)" fg:x="1592" fg:w="1"/><text x="62.0752%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="61.8252%" y="965" width="0.0388%" height="15" fill="rgb(253,30,16)" fg:x="1592" fg:w="1"/><text x="62.0752%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (3 samples, 0.12%)</title><rect x="61.7864%" y="1109" width="0.1165%" height="15" fill="rgb(242,65,0)" fg:x="1591" fg:w="3"/><text x="62.0364%" y="1119.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.12%)</title><rect x="61.7864%" y="1093" width="0.1165%" height="15" fill="rgb(235,201,12)" fg:x="1591" fg:w="3"/><text x="62.0364%" y="1103.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (3 samples, 0.12%)</title><rect x="61.7864%" y="1077" width="0.1165%" height="15" fill="rgb(233,161,9)" fg:x="1591" fg:w="3"/><text x="62.0364%" y="1087.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.04%)</title><rect x="61.8641%" y="1061" width="0.0388%" height="15" fill="rgb(241,207,41)" fg:x="1593" fg:w="1"/><text x="62.1141%" y="1071.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didScheduledPresent] (5 samples, 0.19%)</title><rect x="61.7864%" y="1125" width="0.1942%" height="15" fill="rgb(212,69,46)" fg:x="1591" fg:w="5"/><text x="62.0364%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (2 samples, 0.08%)</title><rect x="61.9029%" y="1109" width="0.0777%" height="15" fill="rgb(239,69,45)" fg:x="1594" fg:w="2"/><text x="62.1529%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (2 samples, 0.08%)</title><rect x="61.9029%" y="1093" width="0.0777%" height="15" fill="rgb(242,117,48)" fg:x="1594" fg:w="2"/><text x="62.1529%" y="1103.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (7 samples, 0.27%)</title><rect x="61.7476%" y="1173" width="0.2718%" height="15" fill="rgb(228,41,36)" fg:x="1590" fg:w="7"/><text x="61.9976%" y="1183.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (7 samples, 0.27%)</title><rect x="61.7476%" y="1157" width="0.2718%" height="15" fill="rgb(212,3,32)" fg:x="1590" fg:w="7"/><text x="61.9976%" y="1167.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (7 samples, 0.27%)</title><rect x="61.7476%" y="1141" width="0.2718%" height="15" fill="rgb(233,41,49)" fg:x="1590" fg:w="7"/><text x="61.9976%" y="1151.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (1 samples, 0.04%)</title><rect x="61.9806%" y="1125" width="0.0388%" height="15" fill="rgb(252,170,49)" fg:x="1596" fg:w="1"/><text x="62.2306%" y="1135.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (2 samples, 0.08%)</title><rect x="62.0194%" y="1173" width="0.0777%" height="15" fill="rgb(229,53,26)" fg:x="1597" fg:w="2"/><text x="62.2694%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.08%)</title><rect x="62.0194%" y="1157" width="0.0777%" height="15" fill="rgb(217,157,12)" fg:x="1597" fg:w="2"/><text x="62.2694%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.08%)</title><rect x="62.0194%" y="1141" width="0.0777%" height="15" fill="rgb(227,17,9)" fg:x="1597" fg:w="2"/><text x="62.2694%" y="1151.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (13 samples, 0.50%)</title><rect x="61.7476%" y="1189" width="0.5049%" height="15" fill="rgb(218,84,12)" fg:x="1590" fg:w="13"/><text x="61.9976%" y="1199.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.16%)</title><rect x="62.0971%" y="1173" width="0.1553%" height="15" fill="rgb(212,79,24)" fg:x="1599" fg:w="4"/><text x="62.3471%" y="1183.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (5 samples, 0.19%)</title><rect x="62.3689%" y="1077" width="0.1942%" height="15" fill="rgb(217,222,37)" fg:x="1606" fg:w="5"/><text x="62.6189%" y="1087.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.19%)</title><rect x="62.3689%" y="1061" width="0.1942%" height="15" fill="rgb(246,208,8)" fg:x="1606" fg:w="5"/><text x="62.6189%" y="1071.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.19%)</title><rect x="62.3689%" y="1045" width="0.1942%" height="15" fill="rgb(244,133,10)" fg:x="1606" fg:w="5"/><text x="62.6189%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.19%)</title><rect x="62.3689%" y="1029" width="0.1942%" height="15" fill="rgb(209,219,41)" fg:x="1606" fg:w="5"/><text x="62.6189%" y="1039.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (6 samples, 0.23%)</title><rect x="62.3689%" y="1125" width="0.2330%" height="15" fill="rgb(253,175,45)" fg:x="1606" fg:w="6"/><text x="62.6189%" y="1135.50"></text></g><g><title>Metal`MTLDispatchListApply (6 samples, 0.23%)</title><rect x="62.3689%" y="1109" width="0.2330%" height="15" fill="rgb(235,100,37)" fg:x="1606" fg:w="6"/><text x="62.6189%" y="1119.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (6 samples, 0.23%)</title><rect x="62.3689%" y="1093" width="0.2330%" height="15" fill="rgb(225,87,19)" fg:x="1606" fg:w="6"/><text x="62.6189%" y="1103.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (1 samples, 0.04%)</title><rect x="62.5631%" y="1077" width="0.0388%" height="15" fill="rgb(217,152,17)" fg:x="1611" fg:w="1"/><text x="62.8131%" y="1087.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.04%)</title><rect x="62.5631%" y="1061" width="0.0388%" height="15" fill="rgb(235,72,13)" fg:x="1611" fg:w="1"/><text x="62.8131%" y="1071.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.04%)</title><rect x="62.5631%" y="1045" width="0.0388%" height="15" fill="rgb(233,140,18)" fg:x="1611" fg:w="1"/><text x="62.8131%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="62.5631%" y="1029" width="0.0388%" height="15" fill="rgb(207,212,28)" fg:x="1611" fg:w="1"/><text x="62.8131%" y="1039.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (1 samples, 0.04%)</title><rect x="62.6408%" y="1093" width="0.0388%" height="15" fill="rgb(220,130,25)" fg:x="1613" fg:w="1"/><text x="62.8908%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="62.6408%" y="1077" width="0.0388%" height="15" fill="rgb(205,55,34)" fg:x="1613" fg:w="1"/><text x="62.8908%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="62.6408%" y="1061" width="0.0388%" height="15" fill="rgb(237,54,35)" fg:x="1613" fg:w="1"/><text x="62.8908%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="62.6408%" y="1045" width="0.0388%" height="15" fill="rgb(208,67,23)" fg:x="1613" fg:w="1"/><text x="62.8908%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.04%)</title><rect x="62.6408%" y="1029" width="0.0388%" height="15" fill="rgb(206,207,50)" fg:x="1613" fg:w="1"/><text x="62.8908%" y="1039.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (2 samples, 0.08%)</title><rect x="62.6408%" y="1109" width="0.0777%" height="15" fill="rgb(213,211,42)" fg:x="1613" fg:w="2"/><text x="62.8908%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (1 samples, 0.04%)</title><rect x="62.6796%" y="1093" width="0.0388%" height="15" fill="rgb(252,197,50)" fg:x="1614" fg:w="1"/><text x="62.9296%" y="1103.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectAtIndex:] (1 samples, 0.04%)</title><rect x="62.7184%" y="1109" width="0.0388%" height="15" fill="rgb(251,211,41)" fg:x="1615" fg:w="1"/><text x="62.9684%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.16%)</title><rect x="62.7573%" y="1077" width="0.1553%" height="15" fill="rgb(229,211,5)" fg:x="1616" fg:w="4"/><text x="63.0073%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.16%)</title><rect x="62.7573%" y="1061" width="0.1553%" height="15" fill="rgb(239,36,31)" fg:x="1616" fg:w="4"/><text x="63.0073%" y="1071.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (1 samples, 0.04%)</title><rect x="62.9126%" y="1029" width="0.0388%" height="15" fill="rgb(248,67,31)" fg:x="1620" fg:w="1"/><text x="63.1626%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="62.9515%" y="1029" width="0.0388%" height="15" fill="rgb(249,55,44)" fg:x="1621" fg:w="1"/><text x="63.2015%" y="1039.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (3 samples, 0.12%)</title><rect x="62.9126%" y="1045" width="0.1165%" height="15" fill="rgb(216,82,12)" fg:x="1620" fg:w="3"/><text x="63.1626%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="62.9903%" y="1029" width="0.0388%" height="15" fill="rgb(242,174,1)" fg:x="1622" fg:w="1"/><text x="63.2403%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (8 samples, 0.31%)</title><rect x="62.7573%" y="1093" width="0.3107%" height="15" fill="rgb(208,120,29)" fg:x="1616" fg:w="8"/><text x="63.0073%" y="1103.50"></text></g><g><title>libdispatch.dylib`dispatch_async (4 samples, 0.16%)</title><rect x="62.9126%" y="1077" width="0.1553%" height="15" fill="rgb(221,105,43)" fg:x="1620" fg:w="4"/><text x="63.1626%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (4 samples, 0.16%)</title><rect x="62.9126%" y="1061" width="0.1553%" height="15" fill="rgb(234,124,22)" fg:x="1620" fg:w="4"/><text x="63.1626%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="63.0291%" y="1045" width="0.0388%" height="15" fill="rgb(212,23,30)" fg:x="1623" fg:w="1"/><text x="63.2791%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.04%)</title><rect x="63.1068%" y="1045" width="0.0388%" height="15" fill="rgb(219,122,53)" fg:x="1625" fg:w="1"/><text x="63.3568%" y="1055.50"></text></g><g><title>CoreFoundation`CFAllocatorDeallocate (1 samples, 0.04%)</title><rect x="63.1456%" y="805" width="0.0388%" height="15" fill="rgb(248,84,24)" fg:x="1626" fg:w="1"/><text x="63.3956%" y="815.50"></text></g><g><title>CoreFoundation`_CFRelease (36 samples, 1.40%)</title><rect x="63.1456%" y="821" width="1.3981%" height="15" fill="rgb(245,115,18)" fg:x="1626" fg:w="36"/><text x="63.3956%" y="831.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (35 samples, 1.36%)</title><rect x="63.1845%" y="805" width="1.3592%" height="15" fill="rgb(227,176,51)" fg:x="1627" fg:w="35"/><text x="63.4345%" y="815.50"></text></g><g><title>IOKit`IOConnectCallMethod (34 samples, 1.32%)</title><rect x="63.2233%" y="789" width="1.3204%" height="15" fill="rgb(229,63,42)" fg:x="1628" fg:w="34"/><text x="63.4733%" y="799.50"></text></g><g><title>IOKit`io_connect_method (34 samples, 1.32%)</title><rect x="63.2233%" y="773" width="1.3204%" height="15" fill="rgb(247,202,24)" fg:x="1628" fg:w="34"/><text x="63.4733%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (34 samples, 1.32%)</title><rect x="63.2233%" y="757" width="1.3204%" height="15" fill="rgb(244,173,20)" fg:x="1628" fg:w="34"/><text x="63.4733%" y="767.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (2 samples, 0.08%)</title><rect x="64.5437%" y="805" width="0.0777%" height="15" fill="rgb(242,81,47)" fg:x="1662" fg:w="2"/><text x="64.7937%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.08%)</title><rect x="64.5437%" y="789" width="0.0777%" height="15" fill="rgb(231,185,54)" fg:x="1662" fg:w="2"/><text x="64.7937%" y="799.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (2 samples, 0.08%)</title><rect x="64.5437%" y="773" width="0.0777%" height="15" fill="rgb(243,55,32)" fg:x="1662" fg:w="2"/><text x="64.7937%" y="783.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (2 samples, 0.08%)</title><rect x="64.5437%" y="757" width="0.0777%" height="15" fill="rgb(208,167,19)" fg:x="1662" fg:w="2"/><text x="64.7937%" y="767.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (39 samples, 1.51%)</title><rect x="63.1456%" y="837" width="1.5146%" height="15" fill="rgb(231,72,35)" fg:x="1626" fg:w="39"/><text x="63.3956%" y="847.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (3 samples, 0.12%)</title><rect x="64.5437%" y="821" width="0.1165%" height="15" fill="rgb(250,173,51)" fg:x="1662" fg:w="3"/><text x="64.7937%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="64.6214%" y="805" width="0.0388%" height="15" fill="rgb(209,5,22)" fg:x="1664" fg:w="1"/><text x="64.8714%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="64.6214%" y="789" width="0.0388%" height="15" fill="rgb(250,174,19)" fg:x="1664" fg:w="1"/><text x="64.8714%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="64.6214%" y="773" width="0.0388%" height="15" fill="rgb(217,3,49)" fg:x="1664" fg:w="1"/><text x="64.8714%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[metal::buffer::Buffer (40 samples, 1.55%)</title><rect x="63.1456%" y="997" width="1.5534%" height="15" fill="rgb(218,225,5)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="1007.50"></text></g><g><title> 4]&gt;&gt; (40 samples, 1.55%)</title><rect x="63.1456%" y="981" width="1.5534%" height="15" fill="rgb(236,89,11)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="991.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 1.55%)</title><rect x="63.1456%" y="965" width="1.5534%" height="15" fill="rgb(206,33,28)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="975.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;[metal::buffer::Buffer]&gt; (40 samples, 1.55%)</title><rect x="63.1456%" y="949" width="1.5534%" height="15" fill="rgb(241,56,42)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="959.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;metal::buffer::Buffer&gt; (40 samples, 1.55%)</title><rect x="63.1456%" y="933" width="1.5534%" height="15" fill="rgb(222,44,11)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="943.50"></text></g><g><title>wgpu_test`&lt;metal::buffer::Buffer as core::ops::drop::Drop&gt;::drop (40 samples, 1.55%)</title><rect x="63.1456%" y="917" width="1.5534%" height="15" fill="rgb(234,111,20)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="927.50"></text></g><g><title>wgpu_test`metal::obj_drop (40 samples, 1.55%)</title><rect x="63.1456%" y="901" width="1.5534%" height="15" fill="rgb(237,77,6)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="911.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (40 samples, 1.55%)</title><rect x="63.1456%" y="885" width="1.5534%" height="15" fill="rgb(235,111,23)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="895.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (40 samples, 1.55%)</title><rect x="63.1456%" y="869" width="1.5534%" height="15" fill="rgb(251,135,29)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="879.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (40 samples, 1.55%)</title><rect x="63.1456%" y="853" width="1.5534%" height="15" fill="rgb(217,57,1)" fg:x="1626" fg:w="40"/><text x="63.3956%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.04%)</title><rect x="64.6602%" y="837" width="0.0388%" height="15" fill="rgb(249,119,31)" fg:x="1665" fg:w="1"/><text x="64.9102%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit&lt;&amp;mut gfx_backend_metal::command::CommandBuffer,alloc::vec::Vec&lt;&amp;&amp;mut gfx_backend_metal::command::CommandBuffer&gt;,gfx_backend_metal::native::Semaphore,core::option::Option&lt;(&amp;gfx_backend_metal::native::Semaphore,gfx_hal::pso::PipelineStage)&gt;,alloc::vec::Vec&lt;&amp;gfx_backend_metal::native::Semaphore&gt;&gt;::{{closure}}::{{closure}}&gt; (41 samples, 1.59%)</title><rect x="63.1456%" y="1013" width="1.5922%" height="15" fill="rgb(233,164,33)" fg:x="1626" fg:w="41"/><text x="63.3956%" y="1023.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[metal::texture::Texture (1 samples, 0.04%)</title><rect x="64.6990%" y="997" width="0.0388%" height="15" fill="rgb(250,217,43)" fg:x="1666" fg:w="1"/><text x="64.9490%" y="1007.50"></text></g><g><title> 4]&gt;&gt; (1 samples, 0.04%)</title><rect x="64.6990%" y="981" width="0.0388%" height="15" fill="rgb(232,154,50)" fg:x="1666" fg:w="1"/><text x="64.9490%" y="991.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.6990%" y="965" width="0.0388%" height="15" fill="rgb(227,190,8)" fg:x="1666" fg:w="1"/><text x="64.9490%" y="975.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="64.6990%" y="949" width="0.0388%" height="15" fill="rgb(209,217,32)" fg:x="1666" fg:w="1"/><text x="64.9490%" y="959.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="64.6990%" y="933" width="0.0388%" height="15" fill="rgb(243,203,50)" fg:x="1666" fg:w="1"/><text x="64.9490%" y="943.50"></text></g><g><title>wgpu_test`smallvec::SmallVec&lt;A&gt;::inline_capacity (1 samples, 0.04%)</title><rect x="64.6990%" y="917" width="0.0388%" height="15" fill="rgb(232,152,27)" fg:x="1666" fg:w="1"/><text x="64.9490%" y="927.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;block::BlockDescriptor&lt;block::ConcreteBlock&lt;(*mut (),),(),&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit&lt;&amp;mut gfx_backend_metal::command::CommandBuffer,alloc::vec::Vec&lt;&amp;&amp;mut gfx_backend_metal::command::CommandBuffer&gt;,gfx_backend_metal::native::Semaphore,core::option::Option&lt;(&amp;gfx_backend_metal::native::Semaphore,gfx_hal::pso::PipelineStage)&gt;,alloc::vec::Vec&lt;&amp;gfx_backend_metal::native::Semaphore&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7379%" y="1013" width="0.0388%" height="15" fill="rgb(240,34,29)" fg:x="1667" fg:w="1"/><text x="64.9879%" y="1023.50"></text></g><g><title>wgpu_test`alloc::alloc::box_free (1 samples, 0.04%)</title><rect x="64.7379%" y="997" width="0.0388%" height="15" fill="rgb(215,185,52)" fg:x="1667" fg:w="1"/><text x="64.9879%" y="1007.50"></text></g><g><title>wgpu_test`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="64.7379%" y="981" width="0.0388%" height="15" fill="rgb(240,89,49)" fg:x="1667" fg:w="1"/><text x="64.9879%" y="991.50"></text></g><g><title>wgpu_test`DYLD-STUB$$free (1 samples, 0.04%)</title><rect x="64.7379%" y="965" width="0.0388%" height="15" fill="rgb(225,12,52)" fg:x="1667" fg:w="1"/><text x="64.9879%" y="975.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (44 samples, 1.71%)</title><rect x="63.1068%" y="1061" width="1.7087%" height="15" fill="rgb(239,128,45)" fg:x="1625" fg:w="44"/><text x="63.3568%" y="1071.50"></text></g><g><title>wgpu_test`block::block_context_dispose (43 samples, 1.67%)</title><rect x="63.1456%" y="1045" width="1.6699%" height="15" fill="rgb(211,78,47)" fg:x="1626" fg:w="43"/><text x="63.3956%" y="1055.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;block::ConcreteBlock&lt;(*mut (),),(),&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit&lt;&amp;mut gfx_backend_metal::command::CommandBuffer,alloc::vec::Vec&lt;&amp;&amp;mut gfx_backend_metal::command::CommandBuffer&gt;,gfx_backend_metal::native::Semaphore,core::option::Option&lt;(&amp;gfx_backend_metal::native::Semaphore,gfx_hal::pso::PipelineStage)&gt;,alloc::vec::Vec&lt;&amp;gfx_backend_metal::native::Semaphore&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (43 samples, 1.67%)</title><rect x="63.1456%" y="1029" width="1.6699%" height="15" fill="rgb(232,31,21)" fg:x="1626" fg:w="43"/><text x="63.3956%" y="1039.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;,bool)&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7767%" y="1013" width="0.0388%" height="15" fill="rgb(222,168,14)" fg:x="1668" fg:w="1"/><text x="65.0267%" y="1023.50"></text></g><g><title>wgpu_test`&lt;&amp;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="64.8155%" y="1029" width="0.0388%" height="15" fill="rgb(209,128,24)" fg:x="1669" fg:w="1"/><text x="65.0655%" y="1039.50"></text></g><g><title>wgpu_test`smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.04%)</title><rect x="64.8155%" y="1013" width="0.0388%" height="15" fill="rgb(249,35,13)" fg:x="1669" fg:w="1"/><text x="65.0655%" y="1023.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (47 samples, 1.83%)</title><rect x="63.0680%" y="1093" width="1.8252%" height="15" fill="rgb(218,7,2)" fg:x="1624" fg:w="47"/><text x="63.3180%" y="1103.50">M..</text></g><g><title>Metal`MTLDispatchListApply (46 samples, 1.79%)</title><rect x="63.1068%" y="1077" width="1.7864%" height="15" fill="rgb(238,107,27)" fg:x="1625" fg:w="46"/><text x="63.3568%" y="1087.50">M..</text></g><g><title>wgpu_test`&lt;X as block::IntoConcreteBlock&lt;(A,)&gt;&gt;::into_concrete_block::concrete_block_invoke_args1 (2 samples, 0.08%)</title><rect x="64.8155%" y="1061" width="0.0777%" height="15" fill="rgb(217,88,38)" fg:x="1669" fg:w="2"/><text x="65.0655%" y="1071.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit::_{{closure}}::_{{closure}} (2 samples, 0.08%)</title><rect x="64.8155%" y="1045" width="0.0777%" height="15" fill="rgb(230,207,0)" fg:x="1669" fg:w="2"/><text x="65.0655%" y="1055.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="64.8544%" y="1029" width="0.0388%" height="15" fill="rgb(249,64,54)" fg:x="1670" fg:w="1"/><text x="65.1044%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer didCompleteWithStartTime:endTime:error:] (56 samples, 2.17%)</title><rect x="62.7573%" y="1109" width="2.1748%" height="15" fill="rgb(231,7,11)" fg:x="1616" fg:w="56"/><text x="63.0073%" y="1119.50">M..</text></g><g><title>Metal`-[_MTLCommandBuffer signalCommandBufferAvailable] (1 samples, 0.04%)</title><rect x="64.8932%" y="1093" width="0.0388%" height="15" fill="rgb(205,149,21)" fg:x="1671" fg:w="1"/><text x="65.1432%" y="1103.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (62 samples, 2.41%)</title><rect x="62.6019%" y="1125" width="2.4078%" height="15" fill="rgb(215,126,34)" fg:x="1612" fg:w="62"/><text x="62.8519%" y="1135.50">Me..</text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.08%)</title><rect x="64.9320%" y="1109" width="0.0777%" height="15" fill="rgb(241,132,45)" fg:x="1672" fg:w="2"/><text x="65.1820%" y="1119.50"></text></g><g><title>Metal`MTLAtomicDecrement (1 samples, 0.04%)</title><rect x="65.0097%" y="1061" width="0.0388%" height="15" fill="rgb(252,69,32)" fg:x="1674" fg:w="1"/><text x="65.2597%" y="1071.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer dealloc] (2 samples, 0.08%)</title><rect x="65.0097%" y="1109" width="0.0777%" height="15" fill="rgb(232,204,19)" fg:x="1674" fg:w="2"/><text x="65.2597%" y="1119.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer dealloc] (2 samples, 0.08%)</title><rect x="65.0097%" y="1093" width="0.0777%" height="15" fill="rgb(249,15,47)" fg:x="1674" fg:w="2"/><text x="65.2597%" y="1103.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (2 samples, 0.08%)</title><rect x="65.0097%" y="1077" width="0.0777%" height="15" fill="rgb(209,227,23)" fg:x="1674" fg:w="2"/><text x="65.2597%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.04%)</title><rect x="65.0485%" y="1061" width="0.0388%" height="15" fill="rgb(248,92,24)" fg:x="1675" fg:w="1"/><text x="65.2985%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (2 samples, 0.08%)</title><rect x="65.0874%" y="1093" width="0.0777%" height="15" fill="rgb(247,59,2)" fg:x="1676" fg:w="2"/><text x="65.3374%" y="1103.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (74 samples, 2.87%)</title><rect x="62.3301%" y="1141" width="2.8738%" height="15" fill="rgb(221,30,5)" fg:x="1605" fg:w="74"/><text x="62.5801%" y="1151.50">IO..</text></g><g><title>libsystem_blocks.dylib`_Block_release (5 samples, 0.19%)</title><rect x="65.0097%" y="1125" width="0.1942%" height="15" fill="rgb(208,108,53)" fg:x="1674" fg:w="5"/><text x="65.2597%" y="1135.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (3 samples, 0.12%)</title><rect x="65.0874%" y="1109" width="0.1165%" height="15" fill="rgb(211,183,26)" fg:x="1676" fg:w="3"/><text x="65.3374%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="65.1650%" y="1093" width="0.0388%" height="15" fill="rgb(232,132,4)" fg:x="1678" fg:w="1"/><text x="65.4150%" y="1103.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (2 samples, 0.08%)</title><rect x="65.2039%" y="1093" width="0.0777%" height="15" fill="rgb(253,128,37)" fg:x="1679" fg:w="2"/><text x="65.4539%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.08%)</title><rect x="65.2039%" y="1077" width="0.0777%" height="15" fill="rgb(221,58,24)" fg:x="1679" fg:w="2"/><text x="65.4539%" y="1087.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (77 samples, 2.99%)</title><rect x="62.3301%" y="1173" width="2.9903%" height="15" fill="rgb(230,54,45)" fg:x="1605" fg:w="77"/><text x="62.5801%" y="1183.50">IOK..</text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (77 samples, 2.99%)</title><rect x="62.3301%" y="1157" width="2.9903%" height="15" fill="rgb(254,21,18)" fg:x="1605" fg:w="77"/><text x="62.5801%" y="1167.50">IOK..</text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (3 samples, 0.12%)</title><rect x="65.2039%" y="1141" width="0.1165%" height="15" fill="rgb(221,108,0)" fg:x="1679" fg:w="3"/><text x="65.4539%" y="1151.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (3 samples, 0.12%)</title><rect x="65.2039%" y="1125" width="0.1165%" height="15" fill="rgb(206,95,1)" fg:x="1679" fg:w="3"/><text x="65.4539%" y="1135.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (3 samples, 0.12%)</title><rect x="65.2039%" y="1109" width="0.1165%" height="15" fill="rgb(237,52,5)" fg:x="1679" fg:w="3"/><text x="65.4539%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.04%)</title><rect x="65.2816%" y="1093" width="0.0388%" height="15" fill="rgb(218,150,34)" fg:x="1681" fg:w="1"/><text x="65.5316%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.04%)</title><rect x="65.2816%" y="1077" width="0.0388%" height="15" fill="rgb(235,194,28)" fg:x="1681" fg:w="1"/><text x="65.5316%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (158 samples, 6.14%)</title><rect x="59.5728%" y="1237" width="6.1359%" height="15" fill="rgb(245,92,18)" fg:x="1534" fg:w="158"/><text x="59.8228%" y="1247.50">libdispa..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (156 samples, 6.06%)</title><rect x="59.6505%" y="1221" width="6.0583%" height="15" fill="rgb(253,203,53)" fg:x="1536" fg:w="156"/><text x="59.9005%" y="1231.50">libdispa..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (155 samples, 6.02%)</title><rect x="59.6893%" y="1205" width="6.0194%" height="15" fill="rgb(249,185,47)" fg:x="1537" fg:w="155"/><text x="59.9393%" y="1215.50">libdispa..</text></g><g><title>libdispatch.dylib`dispatch_mig_server (89 samples, 3.46%)</title><rect x="62.2524%" y="1189" width="3.4563%" height="15" fill="rgb(252,194,52)" fg:x="1603" fg:w="89"/><text x="62.5024%" y="1199.50">lib..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (10 samples, 0.39%)</title><rect x="65.3204%" y="1173" width="0.3883%" height="15" fill="rgb(210,53,36)" fg:x="1682" fg:w="10"/><text x="65.5704%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_unote_resume_direct (1 samples, 0.04%)</title><rect x="65.7087%" y="1237" width="0.0388%" height="15" fill="rgb(237,37,25)" fg:x="1692" fg:w="1"/><text x="65.9587%" y="1247.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (331 samples, 12.85%)</title><rect x="52.9320%" y="1317" width="12.8544%" height="15" fill="rgb(242,116,27)" fg:x="1363" fg:w="331"/><text x="53.1820%" y="1327.50">libsystem_pthread.d..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (233 samples, 9.05%)</title><rect x="56.7379%" y="1301" width="9.0485%" height="15" fill="rgb(213,185,26)" fg:x="1461" fg:w="233"/><text x="56.9879%" y="1311.50">libsystem_pth..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (228 samples, 8.85%)</title><rect x="56.9320%" y="1285" width="8.8544%" height="15" fill="rgb(225,204,8)" fg:x="1466" fg:w="228"/><text x="57.1820%" y="1295.50">libdispatch.d..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (212 samples, 8.23%)</title><rect x="57.5534%" y="1269" width="8.2330%" height="15" fill="rgb(254,111,37)" fg:x="1482" fg:w="212"/><text x="57.8034%" y="1279.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (210 samples, 8.16%)</title><rect x="57.6311%" y="1253" width="8.1553%" height="15" fill="rgb(242,35,9)" fg:x="1484" fg:w="210"/><text x="57.8811%" y="1263.50">libdispatch..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="65.7476%" y="1237" width="0.0388%" height="15" fill="rgb(232,138,49)" fg:x="1693" fg:w="1"/><text x="65.9976%" y="1247.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (1 samples, 0.04%)</title><rect x="65.7864%" y="1157" width="0.0388%" height="15" fill="rgb(247,56,4)" fg:x="1694" fg:w="1"/><text x="66.0364%" y="1167.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (1 samples, 0.04%)</title><rect x="65.7864%" y="1141" width="0.0388%" height="15" fill="rgb(226,179,17)" fg:x="1694" fg:w="1"/><text x="66.0364%" y="1151.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (1 samples, 0.04%)</title><rect x="65.7864%" y="1125" width="0.0388%" height="15" fill="rgb(216,163,45)" fg:x="1694" fg:w="1"/><text x="66.0364%" y="1135.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (1 samples, 0.04%)</title><rect x="65.7864%" y="1109" width="0.0388%" height="15" fill="rgb(211,157,3)" fg:x="1694" fg:w="1"/><text x="66.0364%" y="1119.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (1 samples, 0.04%)</title><rect x="65.8252%" y="1109" width="0.0388%" height="15" fill="rgb(234,44,20)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1119.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (1 samples, 0.04%)</title><rect x="65.8252%" y="1093" width="0.0388%" height="15" fill="rgb(254,138,23)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1103.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.04%)</title><rect x="65.8252%" y="1077" width="0.0388%" height="15" fill="rgb(206,119,39)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1087.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.04%)</title><rect x="65.8252%" y="1061" width="0.0388%" height="15" fill="rgb(231,105,52)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1071.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.04%)</title><rect x="65.8252%" y="1045" width="0.0388%" height="15" fill="rgb(250,20,5)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1055.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.04%)</title><rect x="65.8252%" y="1029" width="0.0388%" height="15" fill="rgb(215,198,30)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1039.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.04%)</title><rect x="65.8252%" y="1013" width="0.0388%" height="15" fill="rgb(246,142,8)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="65.8252%" y="997" width="0.0388%" height="15" fill="rgb(243,26,38)" fg:x="1695" fg:w="1"/><text x="66.0752%" y="1007.50"></text></g><g><title>SkyLight`CGSEventLogEvent (2 samples, 0.08%)</title><rect x="65.8252%" y="1125" width="0.0777%" height="15" fill="rgb(205,133,28)" fg:x="1695" fg:w="2"/><text x="66.0752%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.04%)</title><rect x="65.8641%" y="1109" width="0.0388%" height="15" fill="rgb(212,34,0)" fg:x="1696" fg:w="1"/><text x="66.1141%" y="1119.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (1 samples, 0.04%)</title><rect x="65.9029%" y="1109" width="0.0388%" height="15" fill="rgb(251,226,22)" fg:x="1697" fg:w="1"/><text x="66.1529%" y="1119.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (1 samples, 0.04%)</title><rect x="65.9029%" y="1093" width="0.0388%" height="15" fill="rgb(252,119,9)" fg:x="1697" fg:w="1"/><text x="66.1529%" y="1103.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (1 samples, 0.04%)</title><rect x="65.9029%" y="1077" width="0.0388%" height="15" fill="rgb(213,150,50)" fg:x="1697" fg:w="1"/><text x="66.1529%" y="1087.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (1 samples, 0.04%)</title><rect x="65.9029%" y="1061" width="0.0388%" height="15" fill="rgb(212,24,39)" fg:x="1697" fg:w="1"/><text x="66.1529%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="65.9029%" y="1045" width="0.0388%" height="15" fill="rgb(213,46,39)" fg:x="1697" fg:w="1"/><text x="66.1529%" y="1055.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (7 samples, 0.27%)</title><rect x="65.8252%" y="1157" width="0.2718%" height="15" fill="rgb(239,106,12)" fg:x="1695" fg:w="7"/><text x="66.0752%" y="1167.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (7 samples, 0.27%)</title><rect x="65.8252%" y="1141" width="0.2718%" height="15" fill="rgb(249,229,21)" fg:x="1695" fg:w="7"/><text x="66.0752%" y="1151.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (5 samples, 0.19%)</title><rect x="65.9029%" y="1125" width="0.1942%" height="15" fill="rgb(212,158,3)" fg:x="1697" fg:w="5"/><text x="66.1529%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.16%)</title><rect x="65.9417%" y="1109" width="0.1553%" height="15" fill="rgb(253,26,48)" fg:x="1698" fg:w="4"/><text x="66.1917%" y="1119.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (9 samples, 0.35%)</title><rect x="65.7864%" y="1237" width="0.3495%" height="15" fill="rgb(238,178,20)" fg:x="1694" fg:w="9"/><text x="66.0364%" y="1247.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (9 samples, 0.35%)</title><rect x="65.7864%" y="1221" width="0.3495%" height="15" fill="rgb(208,86,15)" fg:x="1694" fg:w="9"/><text x="66.0364%" y="1231.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (9 samples, 0.35%)</title><rect x="65.7864%" y="1205" width="0.3495%" height="15" fill="rgb(239,42,53)" fg:x="1694" fg:w="9"/><text x="66.0364%" y="1215.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (9 samples, 0.35%)</title><rect x="65.7864%" y="1189" width="0.3495%" height="15" fill="rgb(245,226,8)" fg:x="1694" fg:w="9"/><text x="66.0364%" y="1199.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (9 samples, 0.35%)</title><rect x="65.7864%" y="1173" width="0.3495%" height="15" fill="rgb(216,176,32)" fg:x="1694" fg:w="9"/><text x="66.0364%" y="1183.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (1 samples, 0.04%)</title><rect x="66.0971%" y="1157" width="0.0388%" height="15" fill="rgb(231,186,21)" fg:x="1702" fg:w="1"/><text x="66.3471%" y="1167.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (1 samples, 0.04%)</title><rect x="66.1359%" y="1237" width="0.0388%" height="15" fill="rgb(205,95,49)" fg:x="1703" fg:w="1"/><text x="66.3859%" y="1247.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.04%)</title><rect x="66.1359%" y="1221" width="0.0388%" height="15" fill="rgb(217,145,8)" fg:x="1703" fg:w="1"/><text x="66.3859%" y="1231.50"></text></g><g><title>AppKit`_NSEventThread (11 samples, 0.43%)</title><rect x="65.7864%" y="1285" width="0.4272%" height="15" fill="rgb(239,144,48)" fg:x="1694" fg:w="11"/><text x="66.0364%" y="1295.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (11 samples, 0.43%)</title><rect x="65.7864%" y="1269" width="0.4272%" height="15" fill="rgb(214,189,23)" fg:x="1694" fg:w="11"/><text x="66.0364%" y="1279.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (11 samples, 0.43%)</title><rect x="65.7864%" y="1253" width="0.4272%" height="15" fill="rgb(229,157,17)" fg:x="1694" fg:w="11"/><text x="66.0364%" y="1263.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_revert (1 samples, 0.04%)</title><rect x="66.1748%" y="1237" width="0.0388%" height="15" fill="rgb(230,5,48)" fg:x="1704" fg:w="1"/><text x="66.4248%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_set_priority_and_mach_voucher_slow (1 samples, 0.04%)</title><rect x="66.1748%" y="1221" width="0.0388%" height="15" fill="rgb(224,156,48)" fg:x="1704" fg:w="1"/><text x="66.4248%" y="1231.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_ctl (1 samples, 0.04%)</title><rect x="66.1748%" y="1205" width="0.0388%" height="15" fill="rgb(223,14,29)" fg:x="1704" fg:w="1"/><text x="66.4248%" y="1215.50"></text></g><g><title>wgpu_test`&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="66.2136%" y="1061" width="0.0388%" height="15" fill="rgb(229,96,36)" fg:x="1705" fg:w="1"/><text x="66.4636%" y="1071.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="66.4466%" y="981" width="0.0388%" height="15" fill="rgb(231,102,53)" fg:x="1711" fg:w="1"/><text x="66.6966%" y="991.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.08%)</title><rect x="66.4854%" y="981" width="0.0777%" height="15" fill="rgb(210,77,38)" fg:x="1712" fg:w="2"/><text x="66.7354%" y="991.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="66.5243%" y="965" width="0.0388%" height="15" fill="rgb(235,131,6)" fg:x="1713" fg:w="1"/><text x="66.7743%" y="975.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="66.7184%" y="965" width="0.0388%" height="15" fill="rgb(252,55,38)" fg:x="1718" fg:w="1"/><text x="66.9684%" y="975.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="66.7184%" y="949" width="0.0388%" height="15" fill="rgb(246,38,14)" fg:x="1718" fg:w="1"/><text x="66.9684%" y="959.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="66.7184%" y="933" width="0.0388%" height="15" fill="rgb(242,27,5)" fg:x="1718" fg:w="1"/><text x="66.9684%" y="943.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="66.7573%" y="965" width="0.0388%" height="15" fill="rgb(228,65,35)" fg:x="1719" fg:w="1"/><text x="67.0073%" y="975.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="66.7573%" y="949" width="0.0388%" height="15" fill="rgb(245,93,11)" fg:x="1719" fg:w="1"/><text x="67.0073%" y="959.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="66.7961%" y="949" width="0.0388%" height="15" fill="rgb(213,1,31)" fg:x="1720" fg:w="1"/><text x="67.0461%" y="959.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.08%)</title><rect x="66.7961%" y="965" width="0.0777%" height="15" fill="rgb(237,205,14)" fg:x="1720" fg:w="2"/><text x="67.0461%" y="975.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="66.8350%" y="949" width="0.0388%" height="15" fill="rgb(232,118,45)" fg:x="1721" fg:w="1"/><text x="67.0850%" y="959.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="66.8350%" y="933" width="0.0388%" height="15" fill="rgb(218,5,6)" fg:x="1721" fg:w="1"/><text x="67.0850%" y="943.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="66.8350%" y="917" width="0.0388%" height="15" fill="rgb(251,87,51)" fg:x="1721" fg:w="1"/><text x="67.0850%" y="927.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="66.9126%" y="933" width="0.0388%" height="15" fill="rgb(207,225,20)" fg:x="1723" fg:w="1"/><text x="67.1626%" y="943.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::will_wake (3 samples, 0.12%)</title><rect x="66.8738%" y="965" width="0.1165%" height="15" fill="rgb(222,78,54)" fg:x="1722" fg:w="3"/><text x="67.1238%" y="975.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (3 samples, 0.12%)</title><rect x="66.8738%" y="949" width="0.1165%" height="15" fill="rgb(232,85,16)" fg:x="1722" fg:w="3"/><text x="67.1238%" y="959.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="66.9515%" y="933" width="0.0388%" height="15" fill="rgb(244,25,33)" fg:x="1724" fg:w="1"/><text x="67.2015%" y="943.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="66.9515%" y="917" width="0.0388%" height="15" fill="rgb(233,24,36)" fg:x="1724" fg:w="1"/><text x="67.2015%" y="927.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="66.9903%" y="933" width="0.0777%" height="15" fill="rgb(253,49,54)" fg:x="1725" fg:w="2"/><text x="67.2403%" y="943.50"></text></g><g><title>wgpu_test`std::sync::poison::map_result (2 samples, 0.08%)</title><rect x="66.9903%" y="917" width="0.0777%" height="15" fill="rgb(245,12,22)" fg:x="1725" fg:w="2"/><text x="67.2403%" y="927.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (16 samples, 0.62%)</title><rect x="66.5631%" y="981" width="0.6214%" height="15" fill="rgb(253,141,28)" fg:x="1714" fg:w="16"/><text x="66.8131%" y="991.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (5 samples, 0.19%)</title><rect x="66.9903%" y="965" width="0.1942%" height="15" fill="rgb(225,207,27)" fg:x="1725" fg:w="5"/><text x="67.2403%" y="975.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.19%)</title><rect x="66.9903%" y="949" width="0.1942%" height="15" fill="rgb(220,84,2)" fg:x="1725" fg:w="5"/><text x="67.2403%" y="959.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.12%)</title><rect x="67.0680%" y="933" width="0.1165%" height="15" fill="rgb(224,37,37)" fg:x="1727" fg:w="3"/><text x="67.3180%" y="943.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (2 samples, 0.08%)</title><rect x="67.1068%" y="917" width="0.0777%" height="15" fill="rgb(220,143,18)" fg:x="1728" fg:w="2"/><text x="67.3568%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.08%)</title><rect x="67.1068%" y="901" width="0.0777%" height="15" fill="rgb(210,88,33)" fg:x="1728" fg:w="2"/><text x="67.3568%" y="911.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="67.1845%" y="965" width="0.1165%" height="15" fill="rgb(219,87,51)" fg:x="1730" fg:w="3"/><text x="67.4345%" y="975.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (3 samples, 0.12%)</title><rect x="67.1845%" y="949" width="0.1165%" height="15" fill="rgb(211,7,35)" fg:x="1730" fg:w="3"/><text x="67.4345%" y="959.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.12%)</title><rect x="67.1845%" y="933" width="0.1165%" height="15" fill="rgb(232,77,2)" fg:x="1730" fg:w="3"/><text x="67.4345%" y="943.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="67.3010%" y="965" width="0.0388%" height="15" fill="rgb(249,94,25)" fg:x="1733" fg:w="1"/><text x="67.5510%" y="975.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (2 samples, 0.08%)</title><rect x="67.3398%" y="949" width="0.0777%" height="15" fill="rgb(215,112,2)" fg:x="1734" fg:w="2"/><text x="67.5898%" y="959.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (4 samples, 0.16%)</title><rect x="67.4563%" y="933" width="0.1553%" height="15" fill="rgb(226,115,48)" fg:x="1737" fg:w="4"/><text x="67.7063%" y="943.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 0.12%)</title><rect x="67.4951%" y="917" width="0.1165%" height="15" fill="rgb(249,196,10)" fg:x="1738" fg:w="3"/><text x="67.7451%" y="927.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.12%)</title><rect x="67.4951%" y="901" width="0.1165%" height="15" fill="rgb(237,109,14)" fg:x="1738" fg:w="3"/><text x="67.7451%" y="911.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (2 samples, 0.08%)</title><rect x="67.5340%" y="885" width="0.0777%" height="15" fill="rgb(217,103,53)" fg:x="1739" fg:w="2"/><text x="67.7840%" y="895.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6 samples, 0.23%)</title><rect x="67.4175%" y="949" width="0.2330%" height="15" fill="rgb(244,137,9)" fg:x="1736" fg:w="6"/><text x="67.6675%" y="959.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="67.6117%" y="933" width="0.0388%" height="15" fill="rgb(227,201,3)" fg:x="1741" fg:w="1"/><text x="67.8617%" y="943.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 1.24%)</title><rect x="66.4466%" y="997" width="1.2427%" height="15" fill="rgb(243,94,6)" fg:x="1711" fg:w="32"/><text x="66.6966%" y="1007.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (13 samples, 0.50%)</title><rect x="67.1845%" y="981" width="0.5049%" height="15" fill="rgb(235,118,5)" fg:x="1730" fg:w="13"/><text x="67.4345%" y="991.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (9 samples, 0.35%)</title><rect x="67.3398%" y="965" width="0.3495%" height="15" fill="rgb(247,10,30)" fg:x="1734" fg:w="9"/><text x="67.5898%" y="975.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="67.6505%" y="949" width="0.0388%" height="15" fill="rgb(205,26,28)" fg:x="1742" fg:w="1"/><text x="67.9005%" y="959.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="68.0388%" y="869" width="0.0388%" height="15" fill="rgb(206,99,35)" fg:x="1752" fg:w="1"/><text x="68.2888%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.16%)</title><rect x="68.2718%" y="853" width="0.1553%" height="15" fill="rgb(238,130,40)" fg:x="1758" fg:w="4"/><text x="68.5218%" y="863.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.35%)</title><rect x="68.4272%" y="853" width="0.3495%" height="15" fill="rgb(224,126,31)" fg:x="1762" fg:w="9"/><text x="68.6772%" y="863.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (5 samples, 0.19%)</title><rect x="68.5825%" y="837" width="0.1942%" height="15" fill="rgb(254,105,17)" fg:x="1766" fg:w="5"/><text x="68.8325%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.12%)</title><rect x="68.6602%" y="821" width="0.1165%" height="15" fill="rgb(216,87,36)" fg:x="1768" fg:w="3"/><text x="68.9102%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="68.7767%" y="853" width="0.0388%" height="15" fill="rgb(240,21,12)" fg:x="1771" fg:w="1"/><text x="69.0267%" y="863.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="68.7767%" y="837" width="0.0388%" height="15" fill="rgb(245,192,34)" fg:x="1771" fg:w="1"/><text x="69.0267%" y="847.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="68.7767%" y="821" width="0.0388%" height="15" fill="rgb(226,100,49)" fg:x="1771" fg:w="1"/><text x="69.0267%" y="831.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (1 samples, 0.04%)</title><rect x="69.2427%" y="773" width="0.0388%" height="15" fill="rgb(245,188,27)" fg:x="1783" fg:w="1"/><text x="69.4927%" y="783.50"></text></g><g><title>wgpu_test`core::cmp::min (1 samples, 0.04%)</title><rect x="69.2427%" y="757" width="0.0388%" height="15" fill="rgb(212,170,8)" fg:x="1783" fg:w="1"/><text x="69.4927%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (3 samples, 0.12%)</title><rect x="69.2427%" y="789" width="0.1165%" height="15" fill="rgb(217,113,29)" fg:x="1783" fg:w="3"/><text x="69.4927%" y="799.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="69.2816%" y="773" width="0.0777%" height="15" fill="rgb(237,30,3)" fg:x="1784" fg:w="2"/><text x="69.5316%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="69.3204%" y="757" width="0.0388%" height="15" fill="rgb(227,19,28)" fg:x="1785" fg:w="1"/><text x="69.5704%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.04%)</title><rect x="69.6699%" y="773" width="0.0388%" height="15" fill="rgb(239,172,45)" fg:x="1794" fg:w="1"/><text x="69.9199%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="69.7087%" y="773" width="0.0388%" height="15" fill="rgb(254,55,39)" fg:x="1795" fg:w="1"/><text x="69.9587%" y="783.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (3 samples, 0.12%)</title><rect x="69.9029%" y="741" width="0.1165%" height="15" fill="rgb(249,208,12)" fg:x="1800" fg:w="3"/><text x="70.1529%" y="751.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.08%)</title><rect x="69.9417%" y="725" width="0.0777%" height="15" fill="rgb(240,52,13)" fg:x="1801" fg:w="2"/><text x="70.1917%" y="735.50"></text></g><g><title>wgpu_test`async_executor::Runner::runnable::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.08%)</title><rect x="69.9417%" y="709" width="0.0777%" height="15" fill="rgb(252,149,13)" fg:x="1801" fg:w="2"/><text x="70.1917%" y="719.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (5 samples, 0.19%)</title><rect x="69.8641%" y="757" width="0.1942%" height="15" fill="rgb(232,81,48)" fg:x="1799" fg:w="5"/><text x="70.1141%" y="767.50"></text></g><g><title>wgpu_test`core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (1 samples, 0.04%)</title><rect x="70.0194%" y="741" width="0.0388%" height="15" fill="rgb(222,144,2)" fg:x="1803" fg:w="1"/><text x="70.2694%" y="751.50"></text></g><g><title>wgpu_test`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.12%)</title><rect x="70.0583%" y="757" width="0.1165%" height="15" fill="rgb(216,81,32)" fg:x="1804" fg:w="3"/><text x="70.3083%" y="767.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="70.2913%" y="741" width="0.0777%" height="15" fill="rgb(244,78,51)" fg:x="1810" fg:w="2"/><text x="70.5413%" y="751.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="70.2913%" y="725" width="0.0777%" height="15" fill="rgb(217,66,21)" fg:x="1810" fg:w="2"/><text x="70.5413%" y="735.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.31%)</title><rect x="70.1748%" y="757" width="0.3107%" height="15" fill="rgb(247,101,42)" fg:x="1807" fg:w="8"/><text x="70.4248%" y="767.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.12%)</title><rect x="70.3689%" y="741" width="0.1165%" height="15" fill="rgb(227,81,39)" fg:x="1812" fg:w="3"/><text x="70.6189%" y="751.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (9 samples, 0.35%)</title><rect x="70.6019%" y="725" width="0.3495%" height="15" fill="rgb(220,223,44)" fg:x="1818" fg:w="9"/><text x="70.8519%" y="735.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.19%)</title><rect x="70.7573%" y="709" width="0.1942%" height="15" fill="rgb(205,218,2)" fg:x="1822" fg:w="5"/><text x="71.0073%" y="719.50"></text></g><g><title>wgpu_test`async_executor::Runner::runnable::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.12%)</title><rect x="70.8350%" y="693" width="0.1165%" height="15" fill="rgb(212,207,28)" fg:x="1824" fg:w="3"/><text x="71.0850%" y="703.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::ptr_eq (2 samples, 0.08%)</title><rect x="70.8738%" y="677" width="0.0777%" height="15" fill="rgb(224,12,41)" fg:x="1825" fg:w="2"/><text x="71.1238%" y="687.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.08%)</title><rect x="70.8738%" y="661" width="0.0777%" height="15" fill="rgb(216,118,12)" fg:x="1825" fg:w="2"/><text x="71.1238%" y="671.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.50%)</title><rect x="70.4854%" y="757" width="0.5049%" height="15" fill="rgb(252,97,46)" fg:x="1815" fg:w="13"/><text x="70.7354%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (13 samples, 0.50%)</title><rect x="70.4854%" y="741" width="0.5049%" height="15" fill="rgb(244,206,19)" fg:x="1815" fg:w="13"/><text x="70.7354%" y="751.50"></text></g><g><title>wgpu_test`core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (1 samples, 0.04%)</title><rect x="70.9515%" y="725" width="0.0388%" height="15" fill="rgb(231,84,31)" fg:x="1827" fg:w="1"/><text x="71.2015%" y="735.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 1.67%)</title><rect x="69.3592%" y="789" width="1.6699%" height="15" fill="rgb(244,133,0)" fg:x="1786" fg:w="43"/><text x="69.6092%" y="799.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::try_fold (33 samples, 1.28%)</title><rect x="69.7476%" y="773" width="1.2816%" height="15" fill="rgb(223,15,50)" fg:x="1796" fg:w="33"/><text x="69.9976%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="70.9903%" y="757" width="0.0388%" height="15" fill="rgb(250,118,49)" fg:x="1828" fg:w="1"/><text x="71.2403%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (1 samples, 0.04%)</title><rect x="71.0291%" y="789" width="0.0388%" height="15" fill="rgb(248,25,38)" fg:x="1829" fg:w="1"/><text x="71.2791%" y="799.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 1.94%)</title><rect x="69.1650%" y="805" width="1.9417%" height="15" fill="rgb(215,70,14)" fg:x="1781" fg:w="50"/><text x="69.4150%" y="815.50">w..</text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="71.0680%" y="789" width="0.0388%" height="15" fill="rgb(215,28,15)" fg:x="1830" fg:w="1"/><text x="71.3180%" y="799.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 2.21%)</title><rect x="68.9320%" y="821" width="2.2136%" height="15" fill="rgb(243,6,28)" fg:x="1775" fg:w="57"/><text x="69.1820%" y="831.50">w..</text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::is_none (1 samples, 0.04%)</title><rect x="71.1068%" y="805" width="0.0388%" height="15" fill="rgb(222,130,1)" fg:x="1831" fg:w="1"/><text x="71.3568%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 2.37%)</title><rect x="68.8155%" y="853" width="2.3689%" height="15" fill="rgb(236,166,44)" fg:x="1772" fg:w="61"/><text x="69.0655%" y="863.50">wg..</text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::find (60 samples, 2.33%)</title><rect x="68.8544%" y="837" width="2.3301%" height="15" fill="rgb(221,108,14)" fg:x="1773" fg:w="60"/><text x="69.1044%" y="847.50">w..</text></g><g><title>wgpu_test`core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="71.1456%" y="821" width="0.0388%" height="15" fill="rgb(252,3,45)" fg:x="1832" fg:w="1"/><text x="71.3956%" y="831.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="71.1845%" y="853" width="0.0388%" height="15" fill="rgb(237,68,30)" fg:x="1833" fg:w="1"/><text x="71.4345%" y="863.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="71.2233%" y="853" width="0.0388%" height="15" fill="rgb(211,79,22)" fg:x="1834" fg:w="1"/><text x="71.4733%" y="863.50"></text></g><g><title>wgpu_test`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="71.3010%" y="837" width="0.0388%" height="15" fill="rgb(252,185,21)" fg:x="1836" fg:w="1"/><text x="71.5510%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="71.3398%" y="837" width="0.0388%" height="15" fill="rgb(225,189,26)" fg:x="1837" fg:w="1"/><text x="71.5898%" y="847.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (1 samples, 0.04%)</title><rect x="71.3786%" y="837" width="0.0388%" height="15" fill="rgb(241,30,40)" fg:x="1838" fg:w="1"/><text x="71.6286%" y="847.50"></text></g><g><title>wgpu_test`&lt;cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="71.6505%" y="805" width="0.1165%" height="15" fill="rgb(235,215,44)" fg:x="1845" fg:w="3"/><text x="71.9005%" y="815.50"></text></g><g><title>wgpu_test`concurrent_queue::bounded::Bounded&lt;T&gt;::len (13 samples, 0.50%)</title><rect x="71.5340%" y="821" width="0.5049%" height="15" fill="rgb(205,8,29)" fg:x="1842" fg:w="13"/><text x="71.7840%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (7 samples, 0.27%)</title><rect x="71.7670%" y="805" width="0.2718%" height="15" fill="rgb(241,137,42)" fg:x="1848" fg:w="7"/><text x="72.0170%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (5 samples, 0.19%)</title><rect x="71.8447%" y="789" width="0.1942%" height="15" fill="rgb(237,155,2)" fg:x="1850" fg:w="5"/><text x="72.0947%" y="799.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::len (19 samples, 0.74%)</title><rect x="71.4175%" y="837" width="0.7379%" height="15" fill="rgb(245,29,42)" fg:x="1839" fg:w="19"/><text x="71.6675%" y="847.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (3 samples, 0.12%)</title><rect x="72.0388%" y="821" width="0.1165%" height="15" fill="rgb(234,101,35)" fg:x="1855" fg:w="3"/><text x="72.2888%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="72.1553%" y="805" width="0.0388%" height="15" fill="rgb(228,64,37)" fg:x="1858" fg:w="1"/><text x="72.4053%" y="815.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.08%)</title><rect x="72.1553%" y="837" width="0.0777%" height="15" fill="rgb(217,214,36)" fg:x="1858" fg:w="2"/><text x="72.4053%" y="847.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.08%)</title><rect x="72.1553%" y="821" width="0.0777%" height="15" fill="rgb(243,70,3)" fg:x="1858" fg:w="2"/><text x="72.4053%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.04%)</title><rect x="72.1942%" y="805" width="0.0388%" height="15" fill="rgb(253,158,52)" fg:x="1859" fg:w="1"/><text x="72.4442%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="72.1942%" y="789" width="0.0388%" height="15" fill="rgb(234,111,54)" fg:x="1859" fg:w="1"/><text x="72.4442%" y="799.50"></text></g><g><title>wgpu_test`concurrent_queue::bounded::Bounded&lt;T&gt;::len (1 samples, 0.04%)</title><rect x="72.2330%" y="837" width="0.0388%" height="15" fill="rgb(217,70,32)" fg:x="1860" fg:w="1"/><text x="72.4830%" y="847.50"></text></g><g><title>wgpu_test`async_executor::steal (27 samples, 1.05%)</title><rect x="71.2621%" y="853" width="1.0485%" height="15" fill="rgb(234,18,33)" fg:x="1835" fg:w="27"/><text x="71.5121%" y="863.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="72.2718%" y="837" width="0.0388%" height="15" fill="rgb(234,12,49)" fg:x="1861" fg:w="1"/><text x="72.5218%" y="847.50"></text></g><g><title>wgpu_test`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.04%)</title><rect x="72.2718%" y="821" width="0.0388%" height="15" fill="rgb(236,10,21)" fg:x="1861" fg:w="1"/><text x="72.5218%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.19%)</title><rect x="72.6214%" y="789" width="0.1942%" height="15" fill="rgb(248,182,45)" fg:x="1870" fg:w="5"/><text x="72.8714%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (4 samples, 0.16%)</title><rect x="72.6602%" y="773" width="0.1553%" height="15" fill="rgb(217,95,36)" fg:x="1871" fg:w="4"/><text x="72.9102%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (10 samples, 0.39%)</title><rect x="72.4660%" y="805" width="0.3883%" height="15" fill="rgb(212,110,31)" fg:x="1866" fg:w="10"/><text x="72.7160%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::strongest_failure_ordering (1 samples, 0.04%)</title><rect x="72.8155%" y="789" width="0.0388%" height="15" fill="rgb(206,32,53)" fg:x="1875" fg:w="1"/><text x="73.0655%" y="799.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (11 samples, 0.43%)</title><rect x="72.4660%" y="821" width="0.4272%" height="15" fill="rgb(246,141,37)" fg:x="1866" fg:w="11"/><text x="72.7160%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::strongest_failure_ordering (1 samples, 0.04%)</title><rect x="72.8544%" y="805" width="0.0388%" height="15" fill="rgb(219,16,7)" fg:x="1876" fg:w="1"/><text x="73.1044%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (9 samples, 0.35%)</title><rect x="72.8932%" y="821" width="0.3495%" height="15" fill="rgb(230,205,45)" fg:x="1877" fg:w="9"/><text x="73.1432%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (6 samples, 0.23%)</title><rect x="73.0097%" y="805" width="0.2330%" height="15" fill="rgb(231,43,49)" fg:x="1880" fg:w="6"/><text x="73.2597%" y="815.50"></text></g><g><title>wgpu_test`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (25 samples, 0.97%)</title><rect x="72.3495%" y="837" width="0.9709%" height="15" fill="rgb(212,106,34)" fg:x="1863" fg:w="25"/><text x="72.5995%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (2 samples, 0.08%)</title><rect x="73.2427%" y="821" width="0.0777%" height="15" fill="rgb(206,83,17)" fg:x="1886" fg:w="2"/><text x="73.4927%" y="831.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="73.3981%" y="805" width="0.0388%" height="15" fill="rgb(244,154,49)" fg:x="1890" fg:w="1"/><text x="73.6481%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="73.3981%" y="789" width="0.0388%" height="15" fill="rgb(244,149,49)" fg:x="1890" fg:w="1"/><text x="73.6481%" y="799.50"></text></g><g><title>wgpu_test`core::mem::replace (1 samples, 0.04%)</title><rect x="73.3981%" y="773" width="0.0388%" height="15" fill="rgb(227,134,18)" fg:x="1890" fg:w="1"/><text x="73.6481%" y="783.50"></text></g><g><title>wgpu_test`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="73.4369%" y="773" width="0.0388%" height="15" fill="rgb(237,116,36)" fg:x="1891" fg:w="1"/><text x="73.6869%" y="783.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Block&lt;T&gt;::destroy (3 samples, 0.12%)</title><rect x="73.3981%" y="821" width="0.1165%" height="15" fill="rgb(205,129,40)" fg:x="1890" fg:w="3"/><text x="73.6481%" y="831.50"></text></g><g><title>wgpu_test`core::mem::drop (2 samples, 0.08%)</title><rect x="73.4369%" y="805" width="0.0777%" height="15" fill="rgb(236,178,4)" fg:x="1891" fg:w="2"/><text x="73.6869%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="73.4369%" y="789" width="0.0777%" height="15" fill="rgb(251,76,53)" fg:x="1891" fg:w="2"/><text x="73.6869%" y="799.50"></text></g><g><title>wgpu_test`alloc::alloc::box_free (1 samples, 0.04%)</title><rect x="73.4757%" y="773" width="0.0388%" height="15" fill="rgb(242,92,40)" fg:x="1892" fg:w="1"/><text x="73.7257%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="73.4757%" y="757" width="0.0388%" height="15" fill="rgb(209,45,30)" fg:x="1892" fg:w="1"/><text x="73.7257%" y="767.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.04%)</title><rect x="73.5146%" y="821" width="0.0388%" height="15" fill="rgb(218,157,36)" fg:x="1893" fg:w="1"/><text x="73.7646%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="73.5146%" y="805" width="0.0388%" height="15" fill="rgb(222,186,16)" fg:x="1893" fg:w="1"/><text x="73.7646%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="73.5146%" y="789" width="0.0388%" height="15" fill="rgb(254,72,35)" fg:x="1893" fg:w="1"/><text x="73.7646%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.04%)</title><rect x="73.5534%" y="821" width="0.0388%" height="15" fill="rgb(224,25,35)" fg:x="1894" fg:w="1"/><text x="73.8034%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="73.5534%" y="805" width="0.0388%" height="15" fill="rgb(206,135,52)" fg:x="1894" fg:w="1"/><text x="73.8034%" y="815.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (35 samples, 1.36%)</title><rect x="72.3107%" y="853" width="1.3592%" height="15" fill="rgb(229,174,47)" fg:x="1862" fg:w="35"/><text x="72.5607%" y="863.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (9 samples, 0.35%)</title><rect x="73.3204%" y="837" width="0.3495%" height="15" fill="rgb(242,184,21)" fg:x="1888" fg:w="9"/><text x="73.5704%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (2 samples, 0.08%)</title><rect x="73.5922%" y="821" width="0.0777%" height="15" fill="rgb(213,22,45)" fg:x="1895" fg:w="2"/><text x="73.8422%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (2 samples, 0.08%)</title><rect x="73.5922%" y="805" width="0.0777%" height="15" fill="rgb(237,81,54)" fg:x="1895" fg:w="2"/><text x="73.8422%" y="815.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::chain (1 samples, 0.04%)</title><rect x="73.6699%" y="853" width="0.0388%" height="15" fill="rgb(248,177,18)" fg:x="1897" fg:w="1"/><text x="73.9199%" y="863.50"></text></g><g><title>wgpu_test`core::iter::adapters::chain::Chain&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="73.6699%" y="837" width="0.0388%" height="15" fill="rgb(254,31,16)" fg:x="1897" fg:w="1"/><text x="73.9199%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="73.7476%" y="837" width="0.0777%" height="15" fill="rgb(235,20,31)" fg:x="1899" fg:w="2"/><text x="73.9976%" y="847.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::filter (4 samples, 0.16%)</title><rect x="73.7087%" y="853" width="0.1553%" height="15" fill="rgb(240,56,43)" fg:x="1898" fg:w="4"/><text x="73.9587%" y="863.50"></text></g><g><title>wgpu_test`core::iter::adapters::filter::Filter&lt;I,P&gt;::new (1 samples, 0.04%)</title><rect x="73.8252%" y="837" width="0.0388%" height="15" fill="rgb(237,197,51)" fg:x="1901" fg:w="1"/><text x="74.0752%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="73.8252%" y="821" width="0.0388%" height="15" fill="rgb(241,162,44)" fg:x="1901" fg:w="1"/><text x="74.0752%" y="831.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::take (15 samples, 0.58%)</title><rect x="73.8641%" y="853" width="0.5825%" height="15" fill="rgb(224,23,20)" fg:x="1902" fg:w="15"/><text x="74.1141%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.58%)</title><rect x="73.8641%" y="837" width="0.5825%" height="15" fill="rgb(250,109,34)" fg:x="1902" fg:w="15"/><text x="74.1141%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.12%)</title><rect x="74.4466%" y="789" width="0.1165%" height="15" fill="rgb(214,175,50)" fg:x="1917" fg:w="3"/><text x="74.6966%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.08%)</title><rect x="74.5631%" y="789" width="0.0777%" height="15" fill="rgb(213,182,5)" fg:x="1920" fg:w="2"/><text x="74.8131%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_sub (2 samples, 0.08%)</title><rect x="74.5631%" y="773" width="0.0777%" height="15" fill="rgb(209,199,19)" fg:x="1920" fg:w="2"/><text x="74.8131%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (6 samples, 0.23%)</title><rect x="74.4466%" y="853" width="0.2330%" height="15" fill="rgb(236,224,42)" fg:x="1917" fg:w="6"/><text x="74.6966%" y="863.50"></text></g><g><title>wgpu_test`&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.23%)</title><rect x="74.4466%" y="837" width="0.2330%" height="15" fill="rgb(246,226,29)" fg:x="1917" fg:w="6"/><text x="74.6966%" y="847.50"></text></g><g><title>wgpu_test`std::sys_common::rwlock::MovableRWLock::read_unlock (6 samples, 0.23%)</title><rect x="74.4466%" y="821" width="0.2330%" height="15" fill="rgb(227,223,11)" fg:x="1917" fg:w="6"/><text x="74.6966%" y="831.50"></text></g><g><title>wgpu_test`std::sys::unix::rwlock::RWLock::read_unlock (6 samples, 0.23%)</title><rect x="74.4466%" y="805" width="0.2330%" height="15" fill="rgb(219,7,51)" fg:x="1917" fg:w="6"/><text x="74.6966%" y="815.50"></text></g><g><title>wgpu_test`std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.04%)</title><rect x="74.6408%" y="789" width="0.0388%" height="15" fill="rgb(245,167,10)" fg:x="1922" fg:w="1"/><text x="74.8908%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.08%)</title><rect x="74.6796%" y="837" width="0.0777%" height="15" fill="rgb(237,224,16)" fg:x="1923" fg:w="2"/><text x="74.9296%" y="847.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (3 samples, 0.12%)</title><rect x="74.6796%" y="853" width="0.1165%" height="15" fill="rgb(226,132,13)" fg:x="1923" fg:w="3"/><text x="74.9296%" y="863.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="74.7573%" y="837" width="0.0388%" height="15" fill="rgb(214,140,3)" fg:x="1925" fg:w="1"/><text x="75.0073%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="74.7573%" y="821" width="0.0388%" height="15" fill="rgb(221,177,4)" fg:x="1925" fg:w="1"/><text x="75.0073%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="74.7573%" y="805" width="0.0388%" height="15" fill="rgb(238,139,3)" fg:x="1925" fg:w="1"/><text x="75.0073%" y="815.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="74.7961%" y="853" width="0.0388%" height="15" fill="rgb(216,17,39)" fg:x="1926" fg:w="1"/><text x="75.0461%" y="863.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::expect (1 samples, 0.04%)</title><rect x="74.8350%" y="837" width="0.0388%" height="15" fill="rgb(238,120,9)" fg:x="1927" fg:w="1"/><text x="75.0850%" y="847.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.08%)</title><rect x="74.9126%" y="805" width="0.0777%" height="15" fill="rgb(244,92,53)" fg:x="1929" fg:w="2"/><text x="75.1626%" y="815.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="75.0291%" y="773" width="0.0388%" height="15" fill="rgb(224,148,33)" fg:x="1932" fg:w="1"/><text x="75.2791%" y="783.50"></text></g><g><title>wgpu_test`fastrand::RNG::__getit (4 samples, 0.16%)</title><rect x="74.9903%" y="805" width="0.1553%" height="15" fill="rgb(243,6,36)" fg:x="1931" fg:w="4"/><text x="75.2403%" y="815.50"></text></g><g><title>wgpu_test`std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.12%)</title><rect x="75.0291%" y="789" width="0.1165%" height="15" fill="rgb(230,102,11)" fg:x="1932" fg:w="3"/><text x="75.2791%" y="799.50"></text></g><g><title>wgpu_test`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.08%)</title><rect x="75.0680%" y="773" width="0.0777%" height="15" fill="rgb(234,148,36)" fg:x="1933" fg:w="2"/><text x="75.3180%" y="783.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="75.1068%" y="757" width="0.0388%" height="15" fill="rgb(251,153,25)" fg:x="1934" fg:w="1"/><text x="75.3568%" y="767.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.04%)</title><rect x="75.1456%" y="789" width="0.0388%" height="15" fill="rgb(215,129,8)" fg:x="1935" fg:w="1"/><text x="75.3956%" y="799.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="75.3010%" y="757" width="0.0388%" height="15" fill="rgb(224,128,35)" fg:x="1939" fg:w="1"/><text x="75.5510%" y="767.50"></text></g><g><title>wgpu_test`core::convert::num::_&lt;impl core::convert::From&lt;u64&gt; for u128&gt;::from (1 samples, 0.04%)</title><rect x="75.3398%" y="757" width="0.0388%" height="15" fill="rgb(237,56,52)" fg:x="1940" fg:w="1"/><text x="75.5898%" y="767.50"></text></g><g><title>wgpu_test`fastrand::Rng::gen_mod_u64 (4 samples, 0.16%)</title><rect x="75.2621%" y="773" width="0.1553%" height="15" fill="rgb(234,213,19)" fg:x="1938" fg:w="4"/><text x="75.5121%" y="783.50"></text></g><g><title>wgpu_test`fastrand::Rng::gen_u64 (1 samples, 0.04%)</title><rect x="75.3786%" y="757" width="0.0388%" height="15" fill="rgb(252,82,23)" fg:x="1941" fg:w="1"/><text x="75.6286%" y="767.50"></text></g><g><title>wgpu_test`fastrand::usize (16 samples, 0.62%)</title><rect x="74.8350%" y="853" width="0.6214%" height="15" fill="rgb(254,201,21)" fg:x="1927" fg:w="16"/><text x="75.0850%" y="863.50"></text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.58%)</title><rect x="74.8738%" y="837" width="0.5825%" height="15" fill="rgb(250,186,11)" fg:x="1928" fg:w="15"/><text x="75.1238%" y="847.50"></text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.58%)</title><rect x="74.8738%" y="821" width="0.5825%" height="15" fill="rgb(211,174,5)" fg:x="1928" fg:w="15"/><text x="75.1238%" y="831.50"></text></g><g><title>wgpu_test`fastrand::usize::_{{closure}} (8 samples, 0.31%)</title><rect x="75.1456%" y="805" width="0.3107%" height="15" fill="rgb(214,121,10)" fg:x="1935" fg:w="8"/><text x="75.3956%" y="815.50"></text></g><g><title>wgpu_test`fastrand::Rng::usize (7 samples, 0.27%)</title><rect x="75.1845%" y="789" width="0.2718%" height="15" fill="rgb(241,66,2)" fg:x="1936" fg:w="7"/><text x="75.4345%" y="799.50"></text></g><g><title>wgpu_test`fastrand::mul_high_u64 (1 samples, 0.04%)</title><rect x="75.4175%" y="773" width="0.0388%" height="15" fill="rgb(220,167,19)" fg:x="1942" fg:w="1"/><text x="75.6675%" y="783.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="75.4563%" y="789" width="0.0388%" height="15" fill="rgb(231,54,50)" fg:x="1943" fg:w="1"/><text x="75.7063%" y="799.50"></text></g><g><title>wgpu_test`std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="75.4563%" y="837" width="0.0777%" height="15" fill="rgb(239,217,53)" fg:x="1943" fg:w="2"/><text x="75.7063%" y="847.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (2 samples, 0.08%)</title><rect x="75.4563%" y="821" width="0.0777%" height="15" fill="rgb(248,8,0)" fg:x="1943" fg:w="2"/><text x="75.7063%" y="831.50"></text></g><g><title>wgpu_test`std::thread::panicking (2 samples, 0.08%)</title><rect x="75.4563%" y="805" width="0.0777%" height="15" fill="rgb(229,118,37)" fg:x="1943" fg:w="2"/><text x="75.7063%" y="815.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="75.4951%" y="789" width="0.0388%" height="15" fill="rgb(253,223,43)" fg:x="1944" fg:w="1"/><text x="75.7451%" y="799.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="75.4951%" y="773" width="0.0388%" height="15" fill="rgb(211,77,36)" fg:x="1944" fg:w="1"/><text x="75.7451%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="75.4951%" y="757" width="0.0388%" height="15" fill="rgb(219,3,53)" fg:x="1944" fg:w="1"/><text x="75.7451%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (1 samples, 0.04%)</title><rect x="75.6117%" y="821" width="0.0388%" height="15" fill="rgb(244,45,42)" fg:x="1947" fg:w="1"/><text x="75.8617%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.08%)</title><rect x="75.6505%" y="821" width="0.0777%" height="15" fill="rgb(225,95,27)" fg:x="1948" fg:w="2"/><text x="75.9005%" y="831.50"></text></g><g><title>wgpu_test`async_executor::Runner::runnable::_{{closure}}::_{{closure}} (200 samples, 7.77%)</title><rect x="68.0777%" y="869" width="7.7670%" height="15" fill="rgb(207,74,8)" fg:x="1753" fg:w="200"/><text x="68.3277%" y="879.50">wgpu_test`a..</text></g><g><title>wgpu_test`std::sync::rwlock::RwLock&lt;T&gt;::read (10 samples, 0.39%)</title><rect x="75.4563%" y="853" width="0.3883%" height="15" fill="rgb(243,63,36)" fg:x="1943" fg:w="10"/><text x="75.7063%" y="863.50"></text></g><g><title>wgpu_test`std::sys_common::rwlock::MovableRWLock::read (8 samples, 0.31%)</title><rect x="75.5340%" y="837" width="0.3107%" height="15" fill="rgb(211,180,12)" fg:x="1945" fg:w="8"/><text x="75.7840%" y="847.50"></text></g><g><title>wgpu_test`std::sys::unix::rwlock::RWLock::read (3 samples, 0.12%)</title><rect x="75.7282%" y="821" width="0.1165%" height="15" fill="rgb(254,166,49)" fg:x="1950" fg:w="3"/><text x="75.9782%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.12%)</title><rect x="75.7282%" y="805" width="0.1165%" height="15" fill="rgb(205,19,0)" fg:x="1950" fg:w="3"/><text x="75.9782%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_add (2 samples, 0.08%)</title><rect x="75.7670%" y="789" width="0.0777%" height="15" fill="rgb(224,172,32)" fg:x="1951" fg:w="2"/><text x="76.0170%" y="799.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="75.8447%" y="805" width="0.0388%" height="15" fill="rgb(254,136,30)" fg:x="1953" fg:w="1"/><text x="76.0947%" y="815.50"></text></g><g><title>wgpu_test`async_executor::Sleepers::notify (2 samples, 0.08%)</title><rect x="75.8447%" y="853" width="0.0777%" height="15" fill="rgb(246,19,35)" fg:x="1953" fg:w="2"/><text x="76.0947%" y="863.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.08%)</title><rect x="75.8447%" y="837" width="0.0777%" height="15" fill="rgb(219,24,36)" fg:x="1953" fg:w="2"/><text x="76.0947%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.08%)</title><rect x="75.8447%" y="821" width="0.0777%" height="15" fill="rgb(251,55,1)" fg:x="1953" fg:w="2"/><text x="76.0947%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="75.8835%" y="805" width="0.0388%" height="15" fill="rgb(218,117,39)" fg:x="1954" fg:w="1"/><text x="76.1335%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="75.8835%" y="789" width="0.0388%" height="15" fill="rgb(248,169,11)" fg:x="1954" fg:w="1"/><text x="76.1335%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::compare_exchange (2 samples, 0.08%)</title><rect x="75.9223%" y="853" width="0.0777%" height="15" fill="rgb(244,40,44)" fg:x="1955" fg:w="2"/><text x="76.1723%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="75.9612%" y="837" width="0.0388%" height="15" fill="rgb(234,62,37)" fg:x="1956" fg:w="1"/><text x="76.2112%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="76.0388%" y="821" width="0.0388%" height="15" fill="rgb(207,117,42)" fg:x="1958" fg:w="1"/><text x="76.2888%" y="831.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="76.0388%" y="805" width="0.0388%" height="15" fill="rgb(213,43,2)" fg:x="1958" fg:w="1"/><text x="76.2888%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="76.0388%" y="789" width="0.0388%" height="15" fill="rgb(244,202,51)" fg:x="1958" fg:w="1"/><text x="76.2888%" y="799.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (2 samples, 0.08%)</title><rect x="76.0777%" y="821" width="0.0777%" height="15" fill="rgb(253,174,46)" fg:x="1959" fg:w="2"/><text x="76.3277%" y="831.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (2 samples, 0.08%)</title><rect x="76.0777%" y="805" width="0.0777%" height="15" fill="rgb(251,23,1)" fg:x="1959" fg:w="2"/><text x="76.3277%" y="815.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (1 samples, 0.04%)</title><rect x="76.1165%" y="789" width="0.0388%" height="15" fill="rgb(253,26,1)" fg:x="1960" fg:w="1"/><text x="76.3665%" y="799.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.04%)</title><rect x="76.1165%" y="773" width="0.0388%" height="15" fill="rgb(216,89,31)" fg:x="1960" fg:w="1"/><text x="76.3665%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="76.1553%" y="789" width="0.0388%" height="15" fill="rgb(209,109,5)" fg:x="1961" fg:w="1"/><text x="76.4053%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="76.1553%" y="773" width="0.0388%" height="15" fill="rgb(229,63,13)" fg:x="1961" fg:w="1"/><text x="76.4053%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (2 samples, 0.08%)</title><rect x="76.1553%" y="821" width="0.0777%" height="15" fill="rgb(238,137,54)" fg:x="1961" fg:w="2"/><text x="76.4053%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="76.1553%" y="805" width="0.0777%" height="15" fill="rgb(228,1,9)" fg:x="1961" fg:w="2"/><text x="76.4053%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="76.1942%" y="789" width="0.0388%" height="15" fill="rgb(249,120,48)" fg:x="1962" fg:w="1"/><text x="76.4442%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="76.2330%" y="805" width="0.0388%" height="15" fill="rgb(209,72,36)" fg:x="1963" fg:w="1"/><text x="76.4830%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (24 samples, 0.93%)</title><rect x="76.3107%" y="773" width="0.9320%" height="15" fill="rgb(247,98,49)" fg:x="1965" fg:w="24"/><text x="76.5607%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.04%)</title><rect x="77.2427%" y="773" width="0.0388%" height="15" fill="rgb(233,75,36)" fg:x="1989" fg:w="1"/><text x="77.4927%" y="783.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (34 samples, 1.32%)</title><rect x="76.0000%" y="853" width="1.3204%" height="15" fill="rgb(225,14,24)" fg:x="1957" fg:w="34"/><text x="76.2500%" y="863.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (33 samples, 1.28%)</title><rect x="76.0388%" y="837" width="1.2816%" height="15" fill="rgb(237,193,20)" fg:x="1958" fg:w="33"/><text x="76.2888%" y="847.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (28 samples, 1.09%)</title><rect x="76.2330%" y="821" width="1.0874%" height="15" fill="rgb(239,122,19)" fg:x="1963" fg:w="28"/><text x="76.4830%" y="831.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (27 samples, 1.05%)</title><rect x="76.2718%" y="805" width="1.0485%" height="15" fill="rgb(231,220,10)" fg:x="1964" fg:w="27"/><text x="76.5218%" y="815.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (27 samples, 1.05%)</title><rect x="76.2718%" y="789" width="1.0485%" height="15" fill="rgb(220,66,15)" fg:x="1964" fg:w="27"/><text x="76.5218%" y="799.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="77.2816%" y="773" width="0.0388%" height="15" fill="rgb(215,171,52)" fg:x="1990" fg:w="1"/><text x="77.5316%" y="783.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="77.2816%" y="757" width="0.0388%" height="15" fill="rgb(241,169,50)" fg:x="1990" fg:w="1"/><text x="77.5316%" y="767.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="77.2816%" y="741" width="0.0388%" height="15" fill="rgb(236,189,0)" fg:x="1990" fg:w="1"/><text x="77.5316%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="77.2816%" y="725" width="0.0388%" height="15" fill="rgb(217,147,20)" fg:x="1990" fg:w="1"/><text x="77.5316%" y="735.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::load (1 samples, 0.04%)</title><rect x="77.3204%" y="805" width="0.0388%" height="15" fill="rgb(206,188,39)" fg:x="1991" fg:w="1"/><text x="77.5704%" y="815.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="77.3204%" y="837" width="0.0777%" height="15" fill="rgb(227,118,25)" fg:x="1991" fg:w="2"/><text x="77.5704%" y="847.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (2 samples, 0.08%)</title><rect x="77.3204%" y="821" width="0.0777%" height="15" fill="rgb(248,171,40)" fg:x="1991" fg:w="2"/><text x="77.5704%" y="831.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="77.3592%" y="805" width="0.0388%" height="15" fill="rgb(251,90,54)" fg:x="1992" fg:w="1"/><text x="77.6092%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="77.3981%" y="805" width="0.0388%" height="15" fill="rgb(234,11,46)" fg:x="1993" fg:w="1"/><text x="77.6481%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="77.3981%" y="789" width="0.0388%" height="15" fill="rgb(229,134,13)" fg:x="1993" fg:w="1"/><text x="77.6481%" y="799.50"></text></g><g><title>wgpu_test`async_executor::State::notify (42 samples, 1.63%)</title><rect x="75.8447%" y="869" width="1.6311%" height="15" fill="rgb(223,129,3)" fg:x="1953" fg:w="42"/><text x="76.0947%" y="879.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.16%)</title><rect x="77.3204%" y="853" width="0.1553%" height="15" fill="rgb(221,124,13)" fg:x="1991" fg:w="4"/><text x="77.5704%" y="863.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.08%)</title><rect x="77.3981%" y="837" width="0.0777%" height="15" fill="rgb(234,3,18)" fg:x="1993" fg:w="2"/><text x="77.6481%" y="847.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (2 samples, 0.08%)</title><rect x="77.3981%" y="821" width="0.0777%" height="15" fill="rgb(249,199,20)" fg:x="1993" fg:w="2"/><text x="77.6481%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="77.4369%" y="805" width="0.0388%" height="15" fill="rgb(224,134,6)" fg:x="1994" fg:w="1"/><text x="77.6869%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="77.5146%" y="853" width="0.0388%" height="15" fill="rgb(254,83,26)" fg:x="1996" fg:w="1"/><text x="77.7646%" y="863.50"></text></g><g><title>wgpu_test`&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="77.5534%" y="805" width="0.0388%" height="15" fill="rgb(217,88,9)" fg:x="1997" fg:w="1"/><text x="77.8034%" y="815.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="77.5534%" y="789" width="0.0388%" height="15" fill="rgb(225,73,2)" fg:x="1997" fg:w="1"/><text x="77.8034%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.04%)</title><rect x="77.5534%" y="773" width="0.0388%" height="15" fill="rgb(226,44,39)" fg:x="1997" fg:w="1"/><text x="77.8034%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_add (1 samples, 0.04%)</title><rect x="77.5534%" y="757" width="0.0388%" height="15" fill="rgb(228,53,17)" fg:x="1997" fg:w="1"/><text x="77.8034%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="77.5534%" y="837" width="0.0777%" height="15" fill="rgb(212,27,27)" fg:x="1997" fg:w="2"/><text x="77.8034%" y="847.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::clone_waker (2 samples, 0.08%)</title><rect x="77.5534%" y="821" width="0.0777%" height="15" fill="rgb(241,50,6)" fg:x="1997" fg:w="2"/><text x="77.8034%" y="831.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.04%)</title><rect x="77.5922%" y="805" width="0.0388%" height="15" fill="rgb(225,28,51)" fg:x="1998" fg:w="1"/><text x="77.8422%" y="815.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (1 samples, 0.04%)</title><rect x="77.5922%" y="789" width="0.0388%" height="15" fill="rgb(215,33,16)" fg:x="1998" fg:w="1"/><text x="77.8422%" y="799.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (1 samples, 0.04%)</title><rect x="77.5922%" y="773" width="0.0388%" height="15" fill="rgb(243,40,39)" fg:x="1998" fg:w="1"/><text x="77.8422%" y="783.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.04%)</title><rect x="77.5922%" y="757" width="0.0388%" height="15" fill="rgb(225,11,42)" fg:x="1998" fg:w="1"/><text x="77.8422%" y="767.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="77.6311%" y="821" width="0.0388%" height="15" fill="rgb(241,220,38)" fg:x="1999" fg:w="1"/><text x="77.8811%" y="831.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.08%)</title><rect x="77.6311%" y="837" width="0.0777%" height="15" fill="rgb(244,52,35)" fg:x="1999" fg:w="2"/><text x="77.8811%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="77.6699%" y="821" width="0.0388%" height="15" fill="rgb(246,42,46)" fg:x="2000" fg:w="1"/><text x="77.9199%" y="831.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="77.6699%" y="805" width="0.0388%" height="15" fill="rgb(205,184,13)" fg:x="2000" fg:w="1"/><text x="77.9199%" y="815.50"></text></g><g><title>wgpu_test`async_executor::Sleepers::insert (5 samples, 0.19%)</title><rect x="77.5534%" y="853" width="0.1942%" height="15" fill="rgb(209,48,36)" fg:x="1997" fg:w="5"/><text x="77.8034%" y="863.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="77.7087%" y="837" width="0.0388%" height="15" fill="rgb(244,34,51)" fg:x="2001" fg:w="1"/><text x="77.9587%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.08%)</title><rect x="77.9417%" y="821" width="0.0777%" height="15" fill="rgb(221,107,33)" fg:x="2007" fg:w="2"/><text x="78.1917%" y="831.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="77.9806%" y="805" width="0.0388%" height="15" fill="rgb(224,203,12)" fg:x="2008" fg:w="1"/><text x="78.2306%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="77.9806%" y="789" width="0.0388%" height="15" fill="rgb(230,215,18)" fg:x="2008" fg:w="1"/><text x="78.2306%" y="799.50"></text></g><g><title>wgpu_test`&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.19%)</title><rect x="77.8641%" y="837" width="0.1942%" height="15" fill="rgb(206,185,35)" fg:x="2005" fg:w="5"/><text x="78.1141%" y="847.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="78.0194%" y="821" width="0.0388%" height="15" fill="rgb(228,140,34)" fg:x="2009" fg:w="1"/><text x="78.2694%" y="831.50"></text></g><g><title>wgpu_test`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="78.0194%" y="805" width="0.0388%" height="15" fill="rgb(208,93,13)" fg:x="2009" fg:w="1"/><text x="78.2694%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="78.0194%" y="789" width="0.0388%" height="15" fill="rgb(221,193,39)" fg:x="2009" fg:w="1"/><text x="78.2694%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="78.0194%" y="773" width="0.0388%" height="15" fill="rgb(241,132,34)" fg:x="2009" fg:w="1"/><text x="78.2694%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="78.0583%" y="821" width="0.0777%" height="15" fill="rgb(221,141,10)" fg:x="2010" fg:w="2"/><text x="78.3083%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="78.0971%" y="805" width="0.0388%" height="15" fill="rgb(226,90,31)" fg:x="2011" fg:w="1"/><text x="78.3471%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="78.0583%" y="837" width="0.1165%" height="15" fill="rgb(243,75,5)" fg:x="2010" fg:w="3"/><text x="78.3083%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="78.1359%" y="821" width="0.0388%" height="15" fill="rgb(227,156,21)" fg:x="2012" fg:w="1"/><text x="78.3859%" y="831.50"></text></g><g><title>wgpu_test`&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="78.2136%" y="805" width="0.0388%" height="15" fill="rgb(250,195,8)" fg:x="2014" fg:w="1"/><text x="78.4636%" y="815.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="78.2136%" y="789" width="0.0388%" height="15" fill="rgb(220,134,5)" fg:x="2014" fg:w="1"/><text x="78.4636%" y="799.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="78.2136%" y="773" width="0.0388%" height="15" fill="rgb(246,106,34)" fg:x="2014" fg:w="1"/><text x="78.4636%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="78.2136%" y="757" width="0.0388%" height="15" fill="rgb(205,1,4)" fg:x="2014" fg:w="1"/><text x="78.4636%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="78.1748%" y="837" width="0.1165%" height="15" fill="rgb(224,151,29)" fg:x="2013" fg:w="3"/><text x="78.4248%" y="847.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::clone_waker (3 samples, 0.12%)</title><rect x="78.1748%" y="821" width="0.1165%" height="15" fill="rgb(251,196,0)" fg:x="2013" fg:w="3"/><text x="78.4248%" y="831.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.04%)</title><rect x="78.2524%" y="805" width="0.0388%" height="15" fill="rgb(212,127,0)" fg:x="2015" fg:w="1"/><text x="78.5024%" y="815.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (1 samples, 0.04%)</title><rect x="78.2524%" y="789" width="0.0388%" height="15" fill="rgb(236,71,53)" fg:x="2015" fg:w="1"/><text x="78.5024%" y="799.50"></text></g><g><title>wgpu_test`async_executor::Sleepers::update (15 samples, 0.58%)</title><rect x="77.7476%" y="853" width="0.5825%" height="15" fill="rgb(227,99,0)" fg:x="2002" fg:w="15"/><text x="77.9976%" y="863.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::will_wake (1 samples, 0.04%)</title><rect x="78.2913%" y="837" width="0.0388%" height="15" fill="rgb(239,89,21)" fg:x="2016" fg:w="1"/><text x="78.5413%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="78.2913%" y="821" width="0.0388%" height="15" fill="rgb(243,122,19)" fg:x="2016" fg:w="1"/><text x="78.5413%" y="831.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="78.2913%" y="805" width="0.0388%" height="15" fill="rgb(229,192,45)" fg:x="2016" fg:w="1"/><text x="78.5413%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="78.2913%" y="789" width="0.0388%" height="15" fill="rgb(235,165,35)" fg:x="2016" fg:w="1"/><text x="78.5413%" y="799.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::done (2 samples, 0.08%)</title><rect x="78.3301%" y="821" width="0.0777%" height="15" fill="rgb(253,202,0)" fg:x="2017" fg:w="2"/><text x="78.5801%" y="831.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="78.3689%" y="805" width="0.0388%" height="15" fill="rgb(235,51,20)" fg:x="2018" fg:w="1"/><text x="78.6189%" y="815.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="78.3689%" y="789" width="0.0388%" height="15" fill="rgb(218,95,46)" fg:x="2018" fg:w="1"/><text x="78.6189%" y="799.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="78.3689%" y="773" width="0.0388%" height="15" fill="rgb(212,81,10)" fg:x="2018" fg:w="1"/><text x="78.6189%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="78.3689%" y="757" width="0.0388%" height="15" fill="rgb(240,59,0)" fg:x="2018" fg:w="1"/><text x="78.6189%" y="767.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="78.3689%" y="741" width="0.0388%" height="15" fill="rgb(212,191,42)" fg:x="2018" fg:w="1"/><text x="78.6189%" y="751.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (14 samples, 0.54%)</title><rect x="78.3301%" y="853" width="0.5437%" height="15" fill="rgb(233,140,3)" fg:x="2017" fg:w="14"/><text x="78.5801%" y="863.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.54%)</title><rect x="78.3301%" y="837" width="0.5437%" height="15" fill="rgb(215,69,23)" fg:x="2017" fg:w="14"/><text x="78.5801%" y="847.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.47%)</title><rect x="78.4078%" y="821" width="0.4660%" height="15" fill="rgb(240,202,20)" fg:x="2019" fg:w="12"/><text x="78.6578%" y="831.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (12 samples, 0.47%)</title><rect x="78.4078%" y="805" width="0.4660%" height="15" fill="rgb(209,146,50)" fg:x="2019" fg:w="12"/><text x="78.6578%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (12 samples, 0.47%)</title><rect x="78.4078%" y="789" width="0.4660%" height="15" fill="rgb(253,102,54)" fg:x="2019" fg:w="12"/><text x="78.6578%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (12 samples, 0.47%)</title><rect x="78.4078%" y="773" width="0.4660%" height="15" fill="rgb(250,173,47)" fg:x="2019" fg:w="12"/><text x="78.6578%" y="783.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="78.8738%" y="853" width="0.0388%" height="15" fill="rgb(232,142,7)" fg:x="2031" fg:w="1"/><text x="79.1238%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::swap (1 samples, 0.04%)</title><rect x="78.9126%" y="853" width="0.0388%" height="15" fill="rgb(230,157,47)" fg:x="2032" fg:w="1"/><text x="79.1626%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_swap (1 samples, 0.04%)</title><rect x="78.9126%" y="837" width="0.0388%" height="15" fill="rgb(214,177,35)" fg:x="2032" fg:w="1"/><text x="79.1626%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (2 samples, 0.08%)</title><rect x="78.9515%" y="853" width="0.0777%" height="15" fill="rgb(234,119,46)" fg:x="2033" fg:w="2"/><text x="79.2015%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (2 samples, 0.08%)</title><rect x="78.9515%" y="837" width="0.0777%" height="15" fill="rgb(241,180,50)" fg:x="2033" fg:w="2"/><text x="79.2015%" y="847.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="79.0291%" y="837" width="0.0388%" height="15" fill="rgb(221,54,25)" fg:x="2035" fg:w="1"/><text x="79.2791%" y="847.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="79.0291%" y="821" width="0.0388%" height="15" fill="rgb(209,157,44)" fg:x="2035" fg:w="1"/><text x="79.2791%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (15 samples, 0.58%)</title><rect x="79.0680%" y="805" width="0.5825%" height="15" fill="rgb(246,115,41)" fg:x="2036" fg:w="15"/><text x="79.3180%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (15 samples, 0.58%)</title><rect x="79.0680%" y="789" width="0.5825%" height="15" fill="rgb(229,86,1)" fg:x="2036" fg:w="15"/><text x="79.3180%" y="799.50"></text></g><g><title>wgpu_test`async_executor::Ticker::sleep (58 samples, 2.25%)</title><rect x="77.4757%" y="869" width="2.2524%" height="15" fill="rgb(240,108,53)" fg:x="1995" fg:w="58"/><text x="77.7257%" y="879.50">w..</text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.70%)</title><rect x="79.0291%" y="853" width="0.6990%" height="15" fill="rgb(227,134,2)" fg:x="2035" fg:w="18"/><text x="79.2791%" y="863.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.66%)</title><rect x="79.0680%" y="837" width="0.6602%" height="15" fill="rgb(213,129,25)" fg:x="2036" fg:w="17"/><text x="79.3180%" y="847.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (17 samples, 0.66%)</title><rect x="79.0680%" y="821" width="0.6602%" height="15" fill="rgb(226,35,21)" fg:x="2036" fg:w="17"/><text x="79.3180%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.08%)</title><rect x="79.6505%" y="805" width="0.0777%" height="15" fill="rgb(208,129,26)" fg:x="2051" fg:w="2"/><text x="79.9005%" y="815.50"></text></g><g><title>wgpu_test`async_executor::Sleepers::is_notified (1 samples, 0.04%)</title><rect x="79.7282%" y="853" width="0.0388%" height="15" fill="rgb(224,83,6)" fg:x="2053" fg:w="1"/><text x="79.9782%" y="863.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="79.7670%" y="837" width="0.0388%" height="15" fill="rgb(227,52,39)" fg:x="2054" fg:w="1"/><text x="80.0170%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="79.8058%" y="805" width="0.0388%" height="15" fill="rgb(241,30,17)" fg:x="2055" fg:w="1"/><text x="80.0558%" y="815.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="79.8058%" y="789" width="0.0388%" height="15" fill="rgb(246,186,42)" fg:x="2055" fg:w="1"/><text x="80.0558%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="79.8835%" y="789" width="0.0388%" height="15" fill="rgb(221,169,15)" fg:x="2057" fg:w="1"/><text x="80.1335%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.16%)</title><rect x="79.8058%" y="837" width="0.1553%" height="15" fill="rgb(235,108,21)" fg:x="2055" fg:w="4"/><text x="80.0558%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.16%)</title><rect x="79.8058%" y="821" width="0.1553%" height="15" fill="rgb(219,148,30)" fg:x="2055" fg:w="4"/><text x="80.0558%" y="831.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (3 samples, 0.12%)</title><rect x="79.8447%" y="805" width="0.1165%" height="15" fill="rgb(220,109,5)" fg:x="2056" fg:w="3"/><text x="80.0947%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="79.9223%" y="789" width="0.0388%" height="15" fill="rgb(213,203,48)" fg:x="2058" fg:w="1"/><text x="80.1723%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="79.9223%" y="773" width="0.0388%" height="15" fill="rgb(244,71,33)" fg:x="2058" fg:w="1"/><text x="80.1723%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="79.9612%" y="837" width="0.0388%" height="15" fill="rgb(209,23,2)" fg:x="2059" fg:w="1"/><text x="80.2112%" y="847.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.04%)</title><rect x="79.9612%" y="821" width="0.0388%" height="15" fill="rgb(219,97,7)" fg:x="2059" fg:w="1"/><text x="80.2112%" y="831.50"></text></g><g><title>wgpu_test`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.04%)</title><rect x="79.9612%" y="805" width="0.0388%" height="15" fill="rgb(216,161,23)" fg:x="2059" fg:w="1"/><text x="80.2112%" y="815.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="80.0000%" y="837" width="0.0388%" height="15" fill="rgb(207,45,42)" fg:x="2060" fg:w="1"/><text x="80.2500%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.04%)</title><rect x="80.0388%" y="837" width="0.0388%" height="15" fill="rgb(241,61,4)" fg:x="2061" fg:w="1"/><text x="80.2888%" y="847.50"></text></g><g><title>wgpu_test`core::intrinsics::copy (1 samples, 0.04%)</title><rect x="80.0388%" y="821" width="0.0388%" height="15" fill="rgb(236,170,1)" fg:x="2061" fg:w="1"/><text x="80.2888%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="80.0388%" y="805" width="0.0388%" height="15" fill="rgb(239,72,5)" fg:x="2061" fg:w="1"/><text x="80.2888%" y="815.50"></text></g><g><title>wgpu_test`async_executor::Sleepers::remove (9 samples, 0.35%)</title><rect x="79.7670%" y="853" width="0.3495%" height="15" fill="rgb(214,13,50)" fg:x="2054" fg:w="9"/><text x="80.0170%" y="863.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::rev (1 samples, 0.04%)</title><rect x="80.0777%" y="837" width="0.0388%" height="15" fill="rgb(224,88,9)" fg:x="2062" fg:w="1"/><text x="80.3277%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (3 samples, 0.12%)</title><rect x="80.1165%" y="853" width="0.1165%" height="15" fill="rgb(238,192,34)" fg:x="2063" fg:w="3"/><text x="80.3665%" y="863.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="80.1165%" y="837" width="0.1165%" height="15" fill="rgb(217,203,50)" fg:x="2063" fg:w="3"/><text x="80.3665%" y="847.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.12%)</title><rect x="80.1165%" y="821" width="0.1165%" height="15" fill="rgb(241,123,32)" fg:x="2063" fg:w="3"/><text x="80.3665%" y="831.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (3 samples, 0.12%)</title><rect x="80.1165%" y="805" width="0.1165%" height="15" fill="rgb(248,151,39)" fg:x="2063" fg:w="3"/><text x="80.3665%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.12%)</title><rect x="80.1165%" y="789" width="0.1165%" height="15" fill="rgb(208,89,6)" fg:x="2063" fg:w="3"/><text x="80.3665%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.12%)</title><rect x="80.1165%" y="773" width="0.1165%" height="15" fill="rgb(254,43,26)" fg:x="2063" fg:w="3"/><text x="80.3665%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::swap (1 samples, 0.04%)</title><rect x="80.2330%" y="853" width="0.0388%" height="15" fill="rgb(216,158,13)" fg:x="2066" fg:w="1"/><text x="80.4830%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_swap (1 samples, 0.04%)</title><rect x="80.2330%" y="837" width="0.0388%" height="15" fill="rgb(212,47,37)" fg:x="2066" fg:w="1"/><text x="80.4830%" y="847.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="80.2718%" y="837" width="0.0388%" height="15" fill="rgb(254,16,10)" fg:x="2067" fg:w="1"/><text x="80.5218%" y="847.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="80.2718%" y="821" width="0.0388%" height="15" fill="rgb(223,228,16)" fg:x="2067" fg:w="1"/><text x="80.5218%" y="831.50"></text></g><g><title>wgpu_test`async_executor::Ticker::wake (17 samples, 0.66%)</title><rect x="79.7282%" y="869" width="0.6602%" height="15" fill="rgb(249,108,50)" fg:x="2053" fg:w="17"/><text x="79.9782%" y="879.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.12%)</title><rect x="80.2718%" y="853" width="0.1165%" height="15" fill="rgb(208,220,5)" fg:x="2067" fg:w="3"/><text x="80.5218%" y="863.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.08%)</title><rect x="80.3107%" y="837" width="0.0777%" height="15" fill="rgb(217,89,48)" fg:x="2068" fg:w="2"/><text x="80.5607%" y="847.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (2 samples, 0.08%)</title><rect x="80.3107%" y="821" width="0.0777%" height="15" fill="rgb(212,113,41)" fg:x="2068" fg:w="2"/><text x="80.5607%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.08%)</title><rect x="80.3107%" y="805" width="0.0777%" height="15" fill="rgb(231,127,5)" fg:x="2068" fg:w="2"/><text x="80.5607%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.08%)</title><rect x="80.3107%" y="789" width="0.0777%" height="15" fill="rgb(217,141,17)" fg:x="2068" fg:w="2"/><text x="80.5607%" y="799.50"></text></g><g><title>wgpu_test`async_executor::steal (2 samples, 0.08%)</title><rect x="80.3883%" y="869" width="0.0777%" height="15" fill="rgb(245,125,54)" fg:x="2070" fg:w="2"/><text x="80.6383%" y="879.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="80.4660%" y="869" width="0.0388%" height="15" fill="rgb(248,125,3)" fg:x="2072" fg:w="1"/><text x="80.7160%" y="879.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::filter (1 samples, 0.04%)</title><rect x="80.5049%" y="869" width="0.0388%" height="15" fill="rgb(236,119,51)" fg:x="2073" fg:w="1"/><text x="80.7549%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::result::Result&lt;async_task::runnable::Runnable,concurrent_queue::PopError&gt;&gt; (3 samples, 0.12%)</title><rect x="80.5437%" y="869" width="0.1165%" height="15" fill="rgb(239,99,8)" fg:x="2074" fg:w="3"/><text x="80.7937%" y="879.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (333 samples, 12.93%)</title><rect x="67.7670%" y="933" width="12.9320%" height="15" fill="rgb(224,228,4)" fg:x="1745" fg:w="333"/><text x="68.0170%" y="943.50">wgpu_test`&lt;core::fu..</text></g><g><title>wgpu_test`async_executor::Ticker::runnable_with::_{{closure}} (331 samples, 12.85%)</title><rect x="67.8447%" y="917" width="12.8544%" height="15" fill="rgb(220,131,45)" fg:x="1747" fg:w="331"/><text x="68.0947%" y="927.50">wgpu_test`async_exe..</text></g><g><title>wgpu_test`&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (328 samples, 12.74%)</title><rect x="67.9612%" y="901" width="12.7379%" height="15" fill="rgb(215,62,5)" fg:x="1750" fg:w="328"/><text x="68.2112%" y="911.50">wgpu_test`&lt;futures_..</text></g><g><title>wgpu_test`async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (326 samples, 12.66%)</title><rect x="68.0388%" y="885" width="12.6602%" height="15" fill="rgb(253,12,24)" fg:x="1752" fg:w="326"/><text x="68.2888%" y="895.50">wgpu_test`async_exe..</text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::swap (1 samples, 0.04%)</title><rect x="80.6602%" y="869" width="0.0388%" height="15" fill="rgb(248,120,50)" fg:x="2077" fg:w="1"/><text x="80.9102%" y="879.50"></text></g><g><title>wgpu_test`async_executor::Ticker::runnable_with (1 samples, 0.04%)</title><rect x="80.6990%" y="933" width="0.0388%" height="15" fill="rgb(245,194,10)" fg:x="2078" fg:w="1"/><text x="80.9490%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="80.6990%" y="917" width="0.0388%" height="15" fill="rgb(241,149,38)" fg:x="2078" fg:w="1"/><text x="80.9490%" y="927.50"></text></g><g><title>wgpu_test`async_executor::Runner::runnable::_{{closure}} (337 samples, 13.09%)</title><rect x="67.7282%" y="949" width="13.0874%" height="15" fill="rgb(219,215,7)" fg:x="1744" fg:w="337"/><text x="67.9782%" y="959.50">wgpu_test`async_exec..</text></g><g><title>wgpu_test`core::future::from_generator (2 samples, 0.08%)</title><rect x="80.7379%" y="933" width="0.0777%" height="15" fill="rgb(208,120,31)" fg:x="2079" fg:w="2"/><text x="80.9879%" y="943.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (339 samples, 13.17%)</title><rect x="67.6893%" y="965" width="13.1650%" height="15" fill="rgb(244,30,8)" fg:x="1743" fg:w="339"/><text x="67.9393%" y="975.50">wgpu_test`&lt;core::fut..</text></g><g><title>wgpu_test`core::pin::Pin&lt;&amp;mut T&gt;::map_unchecked_mut (1 samples, 0.04%)</title><rect x="80.8155%" y="949" width="0.0388%" height="15" fill="rgb(238,35,44)" fg:x="2081" fg:w="1"/><text x="81.0655%" y="959.50"></text></g><g><title>wgpu_test`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (1 samples, 0.04%)</title><rect x="80.8544%" y="965" width="0.0388%" height="15" fill="rgb(243,218,37)" fg:x="2082" fg:w="1"/><text x="81.1044%" y="975.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="80.8932%" y="949" width="0.0388%" height="15" fill="rgb(218,169,10)" fg:x="2083" fg:w="1"/><text x="81.1432%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="80.9320%" y="949" width="0.0388%" height="15" fill="rgb(221,144,10)" fg:x="2084" fg:w="1"/><text x="81.1820%" y="959.50"></text></g><g><title>wgpu_test`async_executor::Runner::runnable (5 samples, 0.19%)</title><rect x="80.8932%" y="965" width="0.1942%" height="15" fill="rgb(226,41,38)" fg:x="2083" fg:w="5"/><text x="81.1432%" y="975.50"></text></g><g><title>wgpu_test`core::future::from_generator (3 samples, 0.12%)</title><rect x="80.9709%" y="949" width="0.1165%" height="15" fill="rgb(228,3,1)" fg:x="2085" fg:w="3"/><text x="81.2209%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="80.9709%" y="933" width="0.1165%" height="15" fill="rgb(209,129,12)" fg:x="2085" fg:w="3"/><text x="81.2209%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.16%)</title><rect x="81.2427%" y="901" width="0.1553%" height="15" fill="rgb(213,136,33)" fg:x="2092" fg:w="4"/><text x="81.4927%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="81.4757%" y="869" width="0.0388%" height="15" fill="rgb(209,181,29)" fg:x="2098" fg:w="1"/><text x="81.7257%" y="879.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="81.5534%" y="853" width="0.0388%" height="15" fill="rgb(234,173,18)" fg:x="2100" fg:w="1"/><text x="81.8034%" y="863.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="81.5922%" y="853" width="0.0388%" height="15" fill="rgb(227,73,47)" fg:x="2101" fg:w="1"/><text x="81.8422%" y="863.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="81.5922%" y="837" width="0.0388%" height="15" fill="rgb(234,9,34)" fg:x="2101" fg:w="1"/><text x="81.8422%" y="847.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.04%)</title><rect x="81.5922%" y="821" width="0.0388%" height="15" fill="rgb(235,172,15)" fg:x="2101" fg:w="1"/><text x="81.8422%" y="831.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="81.5922%" y="805" width="0.0388%" height="15" fill="rgb(245,61,2)" fg:x="2101" fg:w="1"/><text x="81.8422%" y="815.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="81.6311%" y="837" width="0.0388%" height="15" fill="rgb(238,39,47)" fg:x="2102" fg:w="1"/><text x="81.8811%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="81.6311%" y="821" width="0.0388%" height="15" fill="rgb(234,37,24)" fg:x="2102" fg:w="1"/><text x="81.8811%" y="831.50"></text></g><g><title>wgpu_test`concurrent_queue::full_fence (1 samples, 0.04%)</title><rect x="81.7087%" y="805" width="0.0388%" height="15" fill="rgb(248,223,24)" fg:x="2104" fg:w="1"/><text x="81.9587%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.04%)</title><rect x="81.7087%" y="789" width="0.0388%" height="15" fill="rgb(223,12,15)" fg:x="2104" fg:w="1"/><text x="81.9587%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.04%)</title><rect x="81.7087%" y="773" width="0.0388%" height="15" fill="rgb(249,6,3)" fg:x="2104" fg:w="1"/><text x="81.9587%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="81.7087%" y="757" width="0.0388%" height="15" fill="rgb(237,105,33)" fg:x="2104" fg:w="1"/><text x="81.9587%" y="767.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.04%)</title><rect x="81.7476%" y="805" width="0.0388%" height="15" fill="rgb(252,208,35)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="815.50"></text></g><g><title>wgpu_test`core::mem::drop (1 samples, 0.04%)</title><rect x="81.7476%" y="789" width="0.0388%" height="15" fill="rgb(215,181,35)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;usize&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="81.7476%" y="773" width="0.0388%" height="15" fill="rgb(246,212,3)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="783.50"></text></g><g><title>wgpu_test`alloc::alloc::box_free (1 samples, 0.04%)</title><rect x="81.7476%" y="757" width="0.0388%" height="15" fill="rgb(247,156,24)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="767.50"></text></g><g><title>wgpu_test`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="81.7476%" y="741" width="0.0388%" height="15" fill="rgb(248,9,31)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="751.50"></text></g><g><title>wgpu_test`alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="81.7476%" y="725" width="0.0388%" height="15" fill="rgb(234,26,45)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="81.7476%" y="709" width="0.0388%" height="15" fill="rgb(249,11,32)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.04%)</title><rect x="81.7476%" y="693" width="0.0388%" height="15" fill="rgb(249,162,33)" fg:x="2105" fg:w="1"/><text x="81.9976%" y="703.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.16%)</title><rect x="81.6699%" y="837" width="0.1553%" height="15" fill="rgb(232,4,32)" fg:x="2103" fg:w="4"/><text x="81.9199%" y="847.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.16%)</title><rect x="81.6699%" y="821" width="0.1553%" height="15" fill="rgb(212,5,45)" fg:x="2103" fg:w="4"/><text x="81.9199%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="81.7864%" y="805" width="0.0388%" height="15" fill="rgb(227,95,13)" fg:x="2106" fg:w="1"/><text x="82.0364%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="81.7864%" y="789" width="0.0388%" height="15" fill="rgb(223,205,10)" fg:x="2106" fg:w="1"/><text x="82.0364%" y="799.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (6 samples, 0.23%)</title><rect x="81.6311%" y="853" width="0.2330%" height="15" fill="rgb(222,178,8)" fg:x="2102" fg:w="6"/><text x="81.8811%" y="863.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="81.8252%" y="837" width="0.0388%" height="15" fill="rgb(216,13,22)" fg:x="2107" fg:w="1"/><text x="82.0752%" y="847.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (1 samples, 0.04%)</title><rect x="81.8641%" y="853" width="0.0388%" height="15" fill="rgb(240,167,12)" fg:x="2108" fg:w="1"/><text x="82.1141%" y="863.50"></text></g><g><title>wgpu_test`event_listener::List::insert (1 samples, 0.04%)</title><rect x="81.9029%" y="837" width="0.0388%" height="15" fill="rgb(235,68,35)" fg:x="2109" fg:w="1"/><text x="82.1529%" y="847.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="81.9029%" y="821" width="0.0388%" height="15" fill="rgb(253,40,27)" fg:x="2109" fg:w="1"/><text x="82.1529%" y="831.50"></text></g><g><title>wgpu_test`event_listener::Event::listen (2 samples, 0.08%)</title><rect x="81.9029%" y="853" width="0.0777%" height="15" fill="rgb(214,19,28)" fg:x="2109" fg:w="2"/><text x="82.1529%" y="863.50"></text></g><g><title>wgpu_test`event_listener::full_fence (1 samples, 0.04%)</title><rect x="81.9417%" y="837" width="0.0388%" height="15" fill="rgb(210,167,45)" fg:x="2110" fg:w="1"/><text x="82.1917%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::new (1 samples, 0.04%)</title><rect x="81.9417%" y="821" width="0.0388%" height="15" fill="rgb(232,97,40)" fg:x="2110" fg:w="1"/><text x="82.1917%" y="831.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.50%)</title><rect x="81.5146%" y="869" width="0.5049%" height="15" fill="rgb(250,35,23)" fg:x="2099" fg:w="13"/><text x="81.7646%" y="879.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (1 samples, 0.04%)</title><rect x="81.9806%" y="853" width="0.0388%" height="15" fill="rgb(248,47,53)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="863.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (1 samples, 0.04%)</title><rect x="81.9806%" y="837" width="0.0388%" height="15" fill="rgb(226,58,50)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="847.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="81.9806%" y="821" width="0.0388%" height="15" fill="rgb(217,105,26)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="831.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="81.9806%" y="805" width="0.0388%" height="15" fill="rgb(208,64,1)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="815.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="81.9806%" y="789" width="0.0388%" height="15" fill="rgb(214,80,1)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="81.9806%" y="773" width="0.0388%" height="15" fill="rgb(206,175,26)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="81.9806%" y="757" width="0.0388%" height="15" fill="rgb(235,156,37)" fg:x="2111" fg:w="1"/><text x="82.2306%" y="767.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="82.1359%" y="837" width="0.0388%" height="15" fill="rgb(213,100,9)" fg:x="2115" fg:w="1"/><text x="82.3859%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="82.1359%" y="821" width="0.0388%" height="15" fill="rgb(241,15,13)" fg:x="2115" fg:w="1"/><text x="82.3859%" y="831.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="82.1359%" y="805" width="0.0388%" height="15" fill="rgb(205,97,43)" fg:x="2115" fg:w="1"/><text x="82.3859%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="82.1359%" y="789" width="0.0388%" height="15" fill="rgb(216,106,32)" fg:x="2115" fg:w="1"/><text x="82.3859%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="82.1748%" y="821" width="0.0388%" height="15" fill="rgb(226,200,8)" fg:x="2116" fg:w="1"/><text x="82.4248%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.08%)</title><rect x="82.1748%" y="837" width="0.0777%" height="15" fill="rgb(244,54,29)" fg:x="2116" fg:w="2"/><text x="82.4248%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="82.2136%" y="821" width="0.0388%" height="15" fill="rgb(252,169,12)" fg:x="2117" fg:w="1"/><text x="82.4636%" y="831.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="82.2913%" y="805" width="0.0388%" height="15" fill="rgb(231,199,11)" fg:x="2119" fg:w="1"/><text x="82.5413%" y="815.50"></text></g><g><title>wgpu_test`concurrent_queue::single::Single&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="82.2913%" y="789" width="0.0388%" height="15" fill="rgb(233,191,18)" fg:x="2119" fg:w="1"/><text x="82.5413%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.04%)</title><rect x="82.2913%" y="773" width="0.0388%" height="15" fill="rgb(215,83,47)" fg:x="2119" fg:w="1"/><text x="82.5413%" y="783.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.04%)</title><rect x="82.2913%" y="757" width="0.0388%" height="15" fill="rgb(251,67,19)" fg:x="2119" fg:w="1"/><text x="82.5413%" y="767.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="82.2913%" y="741" width="0.0388%" height="15" fill="rgb(240,7,20)" fg:x="2119" fg:w="1"/><text x="82.5413%" y="751.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="82.4466%" y="741" width="0.0388%" height="15" fill="rgb(210,150,26)" fg:x="2123" fg:w="1"/><text x="82.6966%" y="751.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="82.4466%" y="725" width="0.0388%" height="15" fill="rgb(228,75,42)" fg:x="2123" fg:w="1"/><text x="82.6966%" y="735.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="82.4466%" y="709" width="0.0388%" height="15" fill="rgb(237,134,48)" fg:x="2123" fg:w="1"/><text x="82.6966%" y="719.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (3 samples, 0.12%)</title><rect x="82.4466%" y="789" width="0.1165%" height="15" fill="rgb(205,80,50)" fg:x="2123" fg:w="3"/><text x="82.6966%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (3 samples, 0.12%)</title><rect x="82.4466%" y="773" width="0.1165%" height="15" fill="rgb(217,74,48)" fg:x="2123" fg:w="3"/><text x="82.6966%" y="783.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="82.4466%" y="757" width="0.1165%" height="15" fill="rgb(205,82,50)" fg:x="2123" fg:w="3"/><text x="82.6966%" y="767.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.08%)</title><rect x="82.4854%" y="741" width="0.0777%" height="15" fill="rgb(228,1,33)" fg:x="2124" fg:w="2"/><text x="82.7354%" y="751.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (2 samples, 0.08%)</title><rect x="82.4854%" y="725" width="0.0777%" height="15" fill="rgb(214,50,23)" fg:x="2124" fg:w="2"/><text x="82.7354%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.08%)</title><rect x="82.4854%" y="709" width="0.0777%" height="15" fill="rgb(210,62,9)" fg:x="2124" fg:w="2"/><text x="82.7354%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.08%)</title><rect x="82.4854%" y="693" width="0.0777%" height="15" fill="rgb(210,104,37)" fg:x="2124" fg:w="2"/><text x="82.7354%" y="703.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="82.5631%" y="789" width="0.0388%" height="15" fill="rgb(232,104,43)" fg:x="2126" fg:w="1"/><text x="82.8131%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::as_ref (1 samples, 0.04%)</title><rect x="82.5631%" y="773" width="0.0388%" height="15" fill="rgb(244,52,6)" fg:x="2126" fg:w="1"/><text x="82.8131%" y="783.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (1 samples, 0.04%)</title><rect x="82.6019%" y="789" width="0.0388%" height="15" fill="rgb(211,174,52)" fg:x="2127" fg:w="1"/><text x="82.8519%" y="799.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="82.6019%" y="773" width="0.0388%" height="15" fill="rgb(229,48,4)" fg:x="2127" fg:w="1"/><text x="82.8519%" y="783.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="82.6019%" y="757" width="0.0388%" height="15" fill="rgb(205,155,16)" fg:x="2127" fg:w="1"/><text x="82.8519%" y="767.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="82.6408%" y="693" width="0.0777%" height="15" fill="rgb(211,141,53)" fg:x="2128" fg:w="2"/><text x="82.8908%" y="703.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="82.6796%" y="677" width="0.0388%" height="15" fill="rgb(240,148,11)" fg:x="2129" fg:w="1"/><text x="82.9296%" y="687.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (3 samples, 0.12%)</title><rect x="82.6408%" y="725" width="0.1165%" height="15" fill="rgb(214,45,23)" fg:x="2128" fg:w="3"/><text x="82.8908%" y="735.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (3 samples, 0.12%)</title><rect x="82.6408%" y="709" width="0.1165%" height="15" fill="rgb(248,74,26)" fg:x="2128" fg:w="3"/><text x="82.8908%" y="719.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="82.7184%" y="693" width="0.0388%" height="15" fill="rgb(218,121,16)" fg:x="2130" fg:w="1"/><text x="82.9684%" y="703.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (4 samples, 0.16%)</title><rect x="82.6408%" y="741" width="0.1553%" height="15" fill="rgb(218,10,47)" fg:x="2128" fg:w="4"/><text x="82.8908%" y="751.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="82.7573%" y="725" width="0.0388%" height="15" fill="rgb(227,99,14)" fg:x="2131" fg:w="1"/><text x="83.0073%" y="735.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="82.7573%" y="709" width="0.0388%" height="15" fill="rgb(229,83,46)" fg:x="2131" fg:w="1"/><text x="83.0073%" y="719.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="82.7961%" y="741" width="0.0388%" height="15" fill="rgb(228,25,1)" fg:x="2132" fg:w="1"/><text x="83.0461%" y="751.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (1 samples, 0.04%)</title><rect x="82.8350%" y="693" width="0.0388%" height="15" fill="rgb(252,190,15)" fg:x="2133" fg:w="1"/><text x="83.0850%" y="703.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.04%)</title><rect x="82.8350%" y="677" width="0.0388%" height="15" fill="rgb(213,103,51)" fg:x="2133" fg:w="1"/><text x="83.0850%" y="687.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (1 samples, 0.04%)</title><rect x="82.8350%" y="661" width="0.0388%" height="15" fill="rgb(220,38,44)" fg:x="2133" fg:w="1"/><text x="83.0850%" y="671.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (1 samples, 0.04%)</title><rect x="82.8350%" y="645" width="0.0388%" height="15" fill="rgb(210,45,26)" fg:x="2133" fg:w="1"/><text x="83.0850%" y="655.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (1 samples, 0.04%)</title><rect x="82.8350%" y="629" width="0.0388%" height="15" fill="rgb(205,95,48)" fg:x="2133" fg:w="1"/><text x="83.0850%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.04%)</title><rect x="82.8350%" y="613" width="0.0388%" height="15" fill="rgb(225,179,37)" fg:x="2133" fg:w="1"/><text x="83.0850%" y="623.50"></text></g><g><title>wgpu_test`async_executor::State::notify (2 samples, 0.08%)</title><rect x="82.8350%" y="709" width="0.0777%" height="15" fill="rgb(230,209,3)" fg:x="2133" fg:w="2"/><text x="83.0850%" y="719.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="82.8738%" y="693" width="0.0388%" height="15" fill="rgb(248,12,46)" fg:x="2134" fg:w="1"/><text x="83.1238%" y="703.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="82.8738%" y="677" width="0.0388%" height="15" fill="rgb(234,18,0)" fg:x="2134" fg:w="1"/><text x="83.1238%" y="687.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="82.8738%" y="661" width="0.0388%" height="15" fill="rgb(238,197,14)" fg:x="2134" fg:w="1"/><text x="83.1238%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="82.8738%" y="645" width="0.0388%" height="15" fill="rgb(251,162,48)" fg:x="2134" fg:w="1"/><text x="83.1238%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="82.8738%" y="629" width="0.0388%" height="15" fill="rgb(237,73,42)" fg:x="2134" fg:w="1"/><text x="83.1238%" y="639.50"></text></g><g><title>wgpu_test`async_executor::Executor::schedule::_{{closure}} (4 samples, 0.16%)</title><rect x="82.8350%" y="725" width="0.1553%" height="15" fill="rgb(211,108,8)" fg:x="2133" fg:w="4"/><text x="83.0850%" y="735.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.08%)</title><rect x="82.9126%" y="709" width="0.0777%" height="15" fill="rgb(213,45,22)" fg:x="2135" fg:w="2"/><text x="83.1626%" y="719.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.08%)</title><rect x="82.9126%" y="693" width="0.0777%" height="15" fill="rgb(252,154,5)" fg:x="2135" fg:w="2"/><text x="83.1626%" y="703.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="82.9515%" y="677" width="0.0388%" height="15" fill="rgb(221,79,52)" fg:x="2136" fg:w="1"/><text x="83.2015%" y="687.50"></text></g><g><title>wgpu_test`async_task::utils::padding_needed_for (1 samples, 0.04%)</title><rect x="82.9903%" y="677" width="0.0388%" height="15" fill="rgb(229,220,36)" fg:x="2137" fg:w="1"/><text x="83.2403%" y="687.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="83.0291%" y="677" width="0.0388%" height="15" fill="rgb(211,17,16)" fg:x="2138" fg:w="1"/><text x="83.2791%" y="687.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="83.0680%" y="677" width="0.0388%" height="15" fill="rgb(222,55,31)" fg:x="2139" fg:w="1"/><text x="83.3180%" y="687.50"></text></g><g><title>wgpu_test`async_channel::Sender&lt;T&gt;::try_send (22 samples, 0.85%)</title><rect x="82.2913%" y="821" width="0.8544%" height="15" fill="rgb(221,221,31)" fg:x="2119" fg:w="22"/><text x="82.5413%" y="831.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (21 samples, 0.82%)</title><rect x="82.3301%" y="805" width="0.8155%" height="15" fill="rgb(227,168,26)" fg:x="2120" fg:w="21"/><text x="82.5801%" y="815.50"></text></g><g><title>wgpu_test`event_listener::List::notify (13 samples, 0.50%)</title><rect x="82.6408%" y="789" width="0.5049%" height="15" fill="rgb(224,139,9)" fg:x="2128" fg:w="13"/><text x="82.8908%" y="799.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (13 samples, 0.50%)</title><rect x="82.6408%" y="773" width="0.5049%" height="15" fill="rgb(254,172,0)" fg:x="2128" fg:w="13"/><text x="82.8908%" y="783.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (13 samples, 0.50%)</title><rect x="82.6408%" y="757" width="0.5049%" height="15" fill="rgb(235,203,1)" fg:x="2128" fg:w="13"/><text x="82.8908%" y="767.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (8 samples, 0.31%)</title><rect x="82.8350%" y="741" width="0.3107%" height="15" fill="rgb(216,205,24)" fg:x="2133" fg:w="8"/><text x="83.0850%" y="751.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (4 samples, 0.16%)</title><rect x="82.9903%" y="725" width="0.1553%" height="15" fill="rgb(233,24,6)" fg:x="2137" fg:w="4"/><text x="83.2403%" y="735.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (4 samples, 0.16%)</title><rect x="82.9903%" y="709" width="0.1553%" height="15" fill="rgb(244,110,9)" fg:x="2137" fg:w="4"/><text x="83.2403%" y="719.50"></text></g><g><title>wgpu_test`async_task::utils::extend (4 samples, 0.16%)</title><rect x="82.9903%" y="693" width="0.1553%" height="15" fill="rgb(239,222,42)" fg:x="2137" fg:w="4"/><text x="83.2403%" y="703.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="83.1068%" y="677" width="0.0388%" height="15" fill="rgb(218,145,13)" fg:x="2140" fg:w="1"/><text x="83.3568%" y="687.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.04%)</title><rect x="83.1456%" y="821" width="0.0388%" height="15" fill="rgb(207,69,11)" fg:x="2141" fg:w="1"/><text x="83.3956%" y="831.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.97%)</title><rect x="82.2524%" y="837" width="0.9709%" height="15" fill="rgb(220,223,22)" fg:x="2118" fg:w="25"/><text x="82.5024%" y="847.50"></text></g><g><title>wgpu_test`core::mem::replace (1 samples, 0.04%)</title><rect x="83.1845%" y="821" width="0.0388%" height="15" fill="rgb(245,102,5)" fg:x="2142" fg:w="1"/><text x="83.4345%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="83.2621%" y="805" width="0.0388%" height="15" fill="rgb(211,148,2)" fg:x="2144" fg:w="1"/><text x="83.5121%" y="815.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="83.2621%" y="789" width="0.0388%" height="15" fill="rgb(241,13,44)" fg:x="2144" fg:w="1"/><text x="83.5121%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="83.2621%" y="773" width="0.0388%" height="15" fill="rgb(219,137,21)" fg:x="2144" fg:w="1"/><text x="83.5121%" y="783.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="83.3010%" y="805" width="0.0388%" height="15" fill="rgb(242,206,5)" fg:x="2145" fg:w="1"/><text x="83.5510%" y="815.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="83.3010%" y="789" width="0.0388%" height="15" fill="rgb(217,114,22)" fg:x="2145" fg:w="1"/><text x="83.5510%" y="799.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="83.3010%" y="773" width="0.0388%" height="15" fill="rgb(253,206,42)" fg:x="2145" fg:w="1"/><text x="83.5510%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="83.3010%" y="757" width="0.0388%" height="15" fill="rgb(236,102,18)" fg:x="2145" fg:w="1"/><text x="83.5510%" y="767.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::extend (4 samples, 0.16%)</title><rect x="83.2233%" y="837" width="0.1553%" height="15" fill="rgb(208,59,49)" fg:x="2143" fg:w="4"/><text x="83.4733%" y="847.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::union_with (4 samples, 0.16%)</title><rect x="83.2233%" y="821" width="0.1553%" height="15" fill="rgb(215,194,28)" fg:x="2143" fg:w="4"/><text x="83.4733%" y="831.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="83.3398%" y="805" width="0.0388%" height="15" fill="rgb(243,207,11)" fg:x="2146" fg:w="1"/><text x="83.5898%" y="815.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="83.3398%" y="789" width="0.0388%" height="15" fill="rgb(254,179,35)" fg:x="2146" fg:w="1"/><text x="83.5898%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="83.3398%" y="773" width="0.0388%" height="15" fill="rgb(235,97,3)" fg:x="2146" fg:w="1"/><text x="83.5898%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="83.3398%" y="757" width="0.0388%" height="15" fill="rgb(215,155,33)" fg:x="2146" fg:w="1"/><text x="83.5898%" y="767.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="83.3786%" y="789" width="0.0388%" height="15" fill="rgb(223,128,12)" fg:x="2147" fg:w="1"/><text x="83.6286%" y="799.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="83.3786%" y="773" width="0.0388%" height="15" fill="rgb(208,157,18)" fg:x="2147" fg:w="1"/><text x="83.6286%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="83.3786%" y="757" width="0.0388%" height="15" fill="rgb(249,70,54)" fg:x="2147" fg:w="1"/><text x="83.6286%" y="767.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="83.4951%" y="757" width="0.0388%" height="15" fill="rgb(244,118,24)" fg:x="2150" fg:w="1"/><text x="83.7451%" y="767.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::all (4 samples, 0.16%)</title><rect x="83.4175%" y="789" width="0.1553%" height="15" fill="rgb(211,54,0)" fg:x="2148" fg:w="4"/><text x="83.6675%" y="799.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.16%)</title><rect x="83.4175%" y="773" width="0.1553%" height="15" fill="rgb(245,137,45)" fg:x="2148" fg:w="4"/><text x="83.6675%" y="783.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.04%)</title><rect x="83.5340%" y="757" width="0.0388%" height="15" fill="rgb(232,154,31)" fg:x="2151" fg:w="1"/><text x="83.7840%" y="767.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::is_disjoint::_{{closure}} (1 samples, 0.04%)</title><rect x="83.5340%" y="741" width="0.0388%" height="15" fill="rgb(253,6,39)" fg:x="2151" fg:w="1"/><text x="83.7840%" y="751.50"></text></g><g><title>wgpu_test`&lt;&amp;u32 as core::ops::bit::BitAnd&lt;&amp;u32&gt;&gt;::bitand (1 samples, 0.04%)</title><rect x="83.5340%" y="725" width="0.0388%" height="15" fill="rgb(234,183,24)" fg:x="2151" fg:w="1"/><text x="83.7840%" y="735.50"></text></g><g><title>wgpu_test`&lt;u32 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.04%)</title><rect x="83.5340%" y="709" width="0.0388%" height="15" fill="rgb(252,84,40)" fg:x="2151" fg:w="1"/><text x="83.7840%" y="719.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (7 samples, 0.27%)</title><rect x="83.3786%" y="837" width="0.2718%" height="15" fill="rgb(224,65,2)" fg:x="2147" fg:w="7"/><text x="83.6286%" y="847.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (7 samples, 0.27%)</title><rect x="83.3786%" y="821" width="0.2718%" height="15" fill="rgb(229,38,24)" fg:x="2147" fg:w="7"/><text x="83.6286%" y="831.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::is_disjoint (7 samples, 0.27%)</title><rect x="83.3786%" y="805" width="0.2718%" height="15" fill="rgb(218,131,50)" fg:x="2147" fg:w="7"/><text x="83.6286%" y="815.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (2 samples, 0.08%)</title><rect x="83.5728%" y="789" width="0.0777%" height="15" fill="rgb(233,106,18)" fg:x="2152" fg:w="2"/><text x="83.8228%" y="799.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.08%)</title><rect x="83.5728%" y="773" width="0.0777%" height="15" fill="rgb(220,216,11)" fg:x="2152" fg:w="2"/><text x="83.8228%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.08%)</title><rect x="83.5728%" y="757" width="0.0777%" height="15" fill="rgb(251,100,45)" fg:x="2152" fg:w="2"/><text x="83.8228%" y="767.50"></text></g><g><title>wgpu_test`core::cmp::min (2 samples, 0.08%)</title><rect x="83.5728%" y="741" width="0.0777%" height="15" fill="rgb(235,143,32)" fg:x="2152" fg:w="2"/><text x="83.8228%" y="751.50"></text></g><g><title>wgpu_test`core::cmp::Ord::min (2 samples, 0.08%)</title><rect x="83.5728%" y="725" width="0.0777%" height="15" fill="rgb(248,124,34)" fg:x="2152" fg:w="2"/><text x="83.8228%" y="735.50"></text></g><g><title>wgpu_test`core::cmp::min_by (2 samples, 0.08%)</title><rect x="83.5728%" y="709" width="0.0777%" height="15" fill="rgb(225,221,4)" fg:x="2152" fg:w="2"/><text x="83.8228%" y="719.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::difference_with (1 samples, 0.04%)</title><rect x="83.6505%" y="837" width="0.0388%" height="15" fill="rgb(242,27,43)" fg:x="2154" fg:w="1"/><text x="83.9005%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="83.6505%" y="821" width="0.0388%" height="15" fill="rgb(227,54,8)" fg:x="2154" fg:w="1"/><text x="83.9005%" y="831.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="83.6505%" y="805" width="0.0388%" height="15" fill="rgb(253,139,49)" fg:x="2154" fg:w="1"/><text x="83.9005%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="83.6505%" y="789" width="0.0388%" height="15" fill="rgb(231,26,43)" fg:x="2154" fg:w="1"/><text x="83.9005%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="83.6893%" y="821" width="0.0388%" height="15" fill="rgb(207,121,39)" fg:x="2155" fg:w="1"/><text x="83.9393%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="83.7282%" y="821" width="0.0388%" height="15" fill="rgb(223,101,35)" fg:x="2156" fg:w="1"/><text x="83.9782%" y="831.50"></text></g><g><title>wgpu_test`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="83.7282%" y="805" width="0.0388%" height="15" fill="rgb(232,87,23)" fg:x="2156" fg:w="1"/><text x="83.9782%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="83.7282%" y="789" width="0.0388%" height="15" fill="rgb(225,180,29)" fg:x="2156" fg:w="1"/><text x="83.9782%" y="799.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 1.79%)</title><rect x="82.0194%" y="869" width="1.7864%" height="15" fill="rgb(225,25,17)" fg:x="2112" fg:w="46"/><text x="82.2694%" y="879.50">w..</text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::_{{closure}} (45 samples, 1.75%)</title><rect x="82.0583%" y="853" width="1.7476%" height="15" fill="rgb(223,8,52)" fg:x="2113" fg:w="45"/><text x="82.3083%" y="863.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::intersect_with (3 samples, 0.12%)</title><rect x="83.6893%" y="837" width="0.1165%" height="15" fill="rgb(246,42,21)" fg:x="2155" fg:w="3"/><text x="83.9393%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="83.7670%" y="821" width="0.0388%" height="15" fill="rgb(205,64,43)" fg:x="2157" fg:w="1"/><text x="84.0170%" y="831.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="83.7670%" y="805" width="0.0388%" height="15" fill="rgb(221,160,13)" fg:x="2157" fg:w="1"/><text x="84.0170%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="83.7670%" y="789" width="0.0388%" height="15" fill="rgb(239,58,35)" fg:x="2157" fg:w="1"/><text x="84.0170%" y="799.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="83.8058%" y="869" width="0.0388%" height="15" fill="rgb(251,26,40)" fg:x="2158" fg:w="1"/><text x="84.0558%" y="879.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (1 samples, 0.04%)</title><rect x="83.8058%" y="853" width="0.0388%" height="15" fill="rgb(247,0,4)" fg:x="2158" fg:w="1"/><text x="84.0558%" y="863.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="83.8058%" y="837" width="0.0388%" height="15" fill="rgb(218,130,10)" fg:x="2158" fg:w="1"/><text x="84.0558%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::as_ref (1 samples, 0.04%)</title><rect x="83.8058%" y="821" width="0.0388%" height="15" fill="rgb(239,32,7)" fg:x="2158" fg:w="1"/><text x="84.0558%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="83.8058%" y="805" width="0.0388%" height="15" fill="rgb(210,192,24)" fg:x="2158" fg:w="1"/><text x="84.0558%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="83.8058%" y="789" width="0.0388%" height="15" fill="rgb(226,212,17)" fg:x="2158" fg:w="1"/><text x="84.0558%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="83.8835%" y="853" width="0.0388%" height="15" fill="rgb(219,201,28)" fg:x="2160" fg:w="1"/><text x="84.1335%" y="863.50"></text></g><g><title>wgpu_test`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="83.8835%" y="837" width="0.0388%" height="15" fill="rgb(235,207,41)" fg:x="2160" fg:w="1"/><text x="84.1335%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="83.8835%" y="821" width="0.0388%" height="15" fill="rgb(241,95,54)" fg:x="2160" fg:w="1"/><text x="84.1335%" y="831.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="83.8835%" y="805" width="0.0388%" height="15" fill="rgb(248,12,23)" fg:x="2160" fg:w="1"/><text x="84.1335%" y="815.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="83.8835%" y="789" width="0.0388%" height="15" fill="rgb(228,173,4)" fg:x="2160" fg:w="1"/><text x="84.1335%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="83.9223%" y="853" width="0.0388%" height="15" fill="rgb(254,99,5)" fg:x="2161" fg:w="1"/><text x="84.1723%" y="863.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="83.9223%" y="837" width="0.0388%" height="15" fill="rgb(212,184,17)" fg:x="2161" fg:w="1"/><text x="84.1723%" y="847.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="83.9223%" y="821" width="0.0388%" height="15" fill="rgb(252,174,1)" fg:x="2161" fg:w="1"/><text x="84.1723%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="83.9223%" y="805" width="0.0388%" height="15" fill="rgb(241,118,51)" fg:x="2161" fg:w="1"/><text x="84.1723%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (5 samples, 0.19%)</title><rect x="83.8447%" y="869" width="0.1942%" height="15" fill="rgb(227,94,47)" fg:x="2159" fg:w="5"/><text x="84.0947%" y="879.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::set (2 samples, 0.08%)</title><rect x="83.9612%" y="853" width="0.0777%" height="15" fill="rgb(229,104,2)" fg:x="2162" fg:w="2"/><text x="84.2112%" y="863.50"></text></g><g><title>wgpu_test`fixedbitset::div_rem (2 samples, 0.08%)</title><rect x="83.9612%" y="837" width="0.0777%" height="15" fill="rgb(219,28,31)" fg:x="2162" fg:w="2"/><text x="84.2112%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="84.0388%" y="837" width="0.0388%" height="15" fill="rgb(233,109,36)" fg:x="2164" fg:w="1"/><text x="84.2888%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="84.0777%" y="821" width="0.0388%" height="15" fill="rgb(246,88,11)" fg:x="2165" fg:w="1"/><text x="84.3277%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="84.0777%" y="805" width="0.0388%" height="15" fill="rgb(209,212,17)" fg:x="2165" fg:w="1"/><text x="84.3277%" y="815.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="84.0777%" y="789" width="0.0388%" height="15" fill="rgb(243,59,29)" fg:x="2165" fg:w="1"/><text x="84.3277%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="84.0777%" y="773" width="0.0388%" height="15" fill="rgb(244,205,48)" fg:x="2165" fg:w="1"/><text x="84.3277%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::clear (4 samples, 0.16%)</title><rect x="84.0388%" y="853" width="0.1553%" height="15" fill="rgb(227,30,6)" fg:x="2164" fg:w="4"/><text x="84.2888%" y="863.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::clear (3 samples, 0.12%)</title><rect x="84.0777%" y="837" width="0.1165%" height="15" fill="rgb(220,205,48)" fg:x="2165" fg:w="3"/><text x="84.3277%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="84.1165%" y="821" width="0.0777%" height="15" fill="rgb(250,94,14)" fg:x="2166" fg:w="2"/><text x="84.3665%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="84.1553%" y="805" width="0.0388%" height="15" fill="rgb(216,119,42)" fg:x="2167" fg:w="1"/><text x="84.4053%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (5 samples, 0.19%)</title><rect x="84.0388%" y="869" width="0.1942%" height="15" fill="rgb(232,155,0)" fg:x="2164" fg:w="5"/><text x="84.2888%" y="879.50"></text></g><g><title>wgpu_test`bevy_ecs::query::access::Access&lt;T&gt;::extend (1 samples, 0.04%)</title><rect x="84.1942%" y="853" width="0.0388%" height="15" fill="rgb(212,24,32)" fg:x="2168" fg:w="1"/><text x="84.4442%" y="863.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::union_with (1 samples, 0.04%)</title><rect x="84.1942%" y="837" width="0.0388%" height="15" fill="rgb(216,69,20)" fg:x="2168" fg:w="1"/><text x="84.4442%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="84.1942%" y="821" width="0.0388%" height="15" fill="rgb(229,73,31)" fg:x="2168" fg:w="1"/><text x="84.4442%" y="831.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="84.1942%" y="805" width="0.0388%" height="15" fill="rgb(224,219,20)" fg:x="2168" fg:w="1"/><text x="84.4442%" y="815.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="84.1942%" y="789" width="0.0388%" height="15" fill="rgb(215,146,41)" fg:x="2168" fg:w="1"/><text x="84.4442%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="84.1942%" y="773" width="0.0388%" height="15" fill="rgb(244,71,31)" fg:x="2168" fg:w="1"/><text x="84.4442%" y="783.50"></text></g><g><title>wgpu_test`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.12%)</title><rect x="84.2330%" y="853" width="0.1165%" height="15" fill="rgb(224,24,11)" fg:x="2169" fg:w="3"/><text x="84.4830%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="84.2330%" y="837" width="0.1165%" height="15" fill="rgb(229,76,15)" fg:x="2169" fg:w="3"/><text x="84.4830%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.04%)</title><rect x="84.3495%" y="853" width="0.0388%" height="15" fill="rgb(209,93,2)" fg:x="2172" fg:w="1"/><text x="84.5995%" y="863.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="84.3883%" y="837" width="0.0388%" height="15" fill="rgb(216,200,50)" fg:x="2173" fg:w="1"/><text x="84.6383%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;usize,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="84.3883%" y="821" width="0.0388%" height="15" fill="rgb(211,67,34)" fg:x="2173" fg:w="1"/><text x="84.6383%" y="831.50"></text></g><g><title>wgpu_test`&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="84.3883%" y="805" width="0.0388%" height="15" fill="rgb(225,87,47)" fg:x="2173" fg:w="1"/><text x="84.6383%" y="815.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="84.3883%" y="789" width="0.0388%" height="15" fill="rgb(217,185,16)" fg:x="2173" fg:w="1"/><text x="84.6383%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_counters_and_queue_systems (6 samples, 0.23%)</title><rect x="84.2330%" y="869" width="0.2330%" height="15" fill="rgb(205,0,0)" fg:x="2169" fg:w="6"/><text x="84.4830%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;usize&gt;&gt; (2 samples, 0.08%)</title><rect x="84.3883%" y="853" width="0.0777%" height="15" fill="rgb(207,116,45)" fg:x="2173" fg:w="2"/><text x="84.6383%" y="863.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;usize,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="84.4272%" y="837" width="0.0388%" height="15" fill="rgb(221,156,26)" fg:x="2174" fg:w="1"/><text x="84.6772%" y="847.50"></text></g><g><title>wgpu_test`core::future::from_generator (1 samples, 0.04%)</title><rect x="84.4660%" y="869" width="0.0388%" height="15" fill="rgb(213,140,4)" fg:x="2175" fg:w="1"/><text x="84.7160%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::eq (1 samples, 0.04%)</title><rect x="84.5049%" y="805" width="0.0388%" height="15" fill="rgb(231,224,15)" fg:x="2176" fg:w="1"/><text x="84.7549%" y="815.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (1 samples, 0.04%)</title><rect x="84.5437%" y="805" width="0.0388%" height="15" fill="rgb(244,76,20)" fg:x="2177" fg:w="1"/><text x="84.7937%" y="815.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="84.5437%" y="789" width="0.0388%" height="15" fill="rgb(238,117,7)" fg:x="2177" fg:w="1"/><text x="84.7937%" y="799.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="84.5437%" y="773" width="0.0388%" height="15" fill="rgb(235,1,10)" fg:x="2177" fg:w="1"/><text x="84.7937%" y="783.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="84.5437%" y="757" width="0.0388%" height="15" fill="rgb(216,165,6)" fg:x="2177" fg:w="1"/><text x="84.7937%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="84.5437%" y="741" width="0.0388%" height="15" fill="rgb(246,91,35)" fg:x="2177" fg:w="1"/><text x="84.7937%" y="751.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (3 samples, 0.12%)</title><rect x="84.5049%" y="869" width="0.1165%" height="15" fill="rgb(228,96,24)" fg:x="2176" fg:w="3"/><text x="84.7549%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (3 samples, 0.12%)</title><rect x="84.5049%" y="853" width="0.1165%" height="15" fill="rgb(254,217,53)" fg:x="2176" fg:w="3"/><text x="84.7549%" y="863.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (3 samples, 0.12%)</title><rect x="84.5049%" y="837" width="0.1165%" height="15" fill="rgb(209,60,0)" fg:x="2176" fg:w="3"/><text x="84.7549%" y="847.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="84.5049%" y="821" width="0.1165%" height="15" fill="rgb(250,93,26)" fg:x="2176" fg:w="3"/><text x="84.7549%" y="831.50"></text></g><g><title>wgpu_test`event_listener::List::notify (1 samples, 0.04%)</title><rect x="84.5825%" y="805" width="0.0388%" height="15" fill="rgb(211,9,40)" fg:x="2178" fg:w="1"/><text x="84.8325%" y="815.50"></text></g><g><title>wgpu_test`core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.04%)</title><rect x="84.6214%" y="853" width="0.0388%" height="15" fill="rgb(242,57,20)" fg:x="2179" fg:w="1"/><text x="84.8714%" y="863.50"></text></g><g><title>wgpu_test`&lt;fixedbitset::Masks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="84.6602%" y="805" width="0.0388%" height="15" fill="rgb(248,85,48)" fg:x="2180" fg:w="1"/><text x="84.9102%" y="815.50"></text></g><g><title>wgpu_test`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.04%)</title><rect x="84.6990%" y="805" width="0.0388%" height="15" fill="rgb(212,117,2)" fg:x="2181" fg:w="1"/><text x="84.9490%" y="815.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.16%)</title><rect x="84.6602%" y="821" width="0.1553%" height="15" fill="rgb(243,19,3)" fg:x="2180" fg:w="4"/><text x="84.9102%" y="831.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="84.7379%" y="805" width="0.0777%" height="15" fill="rgb(232,217,24)" fg:x="2182" fg:w="2"/><text x="84.9879%" y="815.50"></text></g><g><title>wgpu_test`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.04%)</title><rect x="84.7767%" y="789" width="0.0388%" height="15" fill="rgb(224,175,40)" fg:x="2183" fg:w="1"/><text x="85.0267%" y="799.50"></text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::count_ones::_{{closure}} (1 samples, 0.04%)</title><rect x="84.7767%" y="773" width="0.0388%" height="15" fill="rgb(212,162,32)" fg:x="2183" fg:w="1"/><text x="85.0267%" y="783.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="84.7767%" y="757" width="0.0388%" height="15" fill="rgb(215,9,4)" fg:x="2183" fg:w="1"/><text x="85.0267%" y="767.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::sum (5 samples, 0.19%)</title><rect x="84.6602%" y="853" width="0.1942%" height="15" fill="rgb(242,42,7)" fg:x="2180" fg:w="5"/><text x="84.9102%" y="863.50"></text></g><g><title>wgpu_test`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (5 samples, 0.19%)</title><rect x="84.6602%" y="837" width="0.1942%" height="15" fill="rgb(242,184,45)" fg:x="2180" fg:w="5"/><text x="84.9102%" y="847.50"></text></g><g><title>wgpu_test`core::iter::adapters::map::map_fold (1 samples, 0.04%)</title><rect x="84.8155%" y="821" width="0.0388%" height="15" fill="rgb(228,111,51)" fg:x="2184" fg:w="1"/><text x="85.0655%" y="831.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::_{{closure}}::_{{closure}} (90 samples, 3.50%)</title><rect x="81.4369%" y="885" width="3.4951%" height="15" fill="rgb(236,147,17)" fg:x="2097" fg:w="90"/><text x="81.6869%" y="895.50">wgp..</text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::count_ones (8 samples, 0.31%)</title><rect x="84.6214%" y="869" width="0.3107%" height="15" fill="rgb(210,75,22)" fg:x="2179" fg:w="8"/><text x="84.8714%" y="879.50"></text></g><g><title>wgpu_test`fixedbitset::Masks::new (2 samples, 0.08%)</title><rect x="84.8544%" y="853" width="0.0777%" height="15" fill="rgb(217,159,45)" fg:x="2185" fg:w="2"/><text x="85.1044%" y="863.50"></text></g><g><title>wgpu_test`&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="85.0097%" y="869" width="0.0388%" height="15" fill="rgb(245,165,53)" fg:x="2189" fg:w="1"/><text x="85.2597%" y="879.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="85.0874%" y="853" width="0.0388%" height="15" fill="rgb(251,190,50)" fg:x="2191" fg:w="1"/><text x="85.3374%" y="863.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="85.0874%" y="837" width="0.0388%" height="15" fill="rgb(208,203,29)" fg:x="2191" fg:w="1"/><text x="85.3374%" y="847.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="85.2039%" y="757" width="0.0388%" height="15" fill="rgb(207,209,35)" fg:x="2194" fg:w="1"/><text x="85.4539%" y="767.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="85.2039%" y="741" width="0.0388%" height="15" fill="rgb(230,144,49)" fg:x="2194" fg:w="1"/><text x="85.4539%" y="751.50"></text></g><g><title>wgpu_test`async_task::utils::extend (2 samples, 0.08%)</title><rect x="85.2039%" y="773" width="0.0777%" height="15" fill="rgb(229,31,6)" fg:x="2194" fg:w="2"/><text x="85.4539%" y="783.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="85.2427%" y="757" width="0.0388%" height="15" fill="rgb(251,129,24)" fg:x="2195" fg:w="1"/><text x="85.4927%" y="767.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="85.2816%" y="773" width="0.0388%" height="15" fill="rgb(235,105,15)" fg:x="2196" fg:w="1"/><text x="85.5316%" y="783.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (5 samples, 0.19%)</title><rect x="85.1650%" y="805" width="0.1942%" height="15" fill="rgb(216,52,43)" fg:x="2193" fg:w="5"/><text x="85.4150%" y="815.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (5 samples, 0.19%)</title><rect x="85.1650%" y="789" width="0.1942%" height="15" fill="rgb(238,144,41)" fg:x="2193" fg:w="5"/><text x="85.4150%" y="799.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="85.3204%" y="773" width="0.0388%" height="15" fill="rgb(243,63,9)" fg:x="2197" fg:w="1"/><text x="85.5704%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (7 samples, 0.27%)</title><rect x="85.1650%" y="837" width="0.2718%" height="15" fill="rgb(246,208,1)" fg:x="2193" fg:w="7"/><text x="85.4150%" y="847.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (7 samples, 0.27%)</title><rect x="85.1650%" y="821" width="0.2718%" height="15" fill="rgb(233,182,18)" fg:x="2193" fg:w="7"/><text x="85.4150%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_add (2 samples, 0.08%)</title><rect x="85.3592%" y="805" width="0.0777%" height="15" fill="rgb(242,224,8)" fg:x="2198" fg:w="2"/><text x="85.6092%" y="815.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="85.4369%" y="837" width="0.0388%" height="15" fill="rgb(243,54,37)" fg:x="2200" fg:w="1"/><text x="85.6869%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.04%)</title><rect x="85.4757%" y="837" width="0.0388%" height="15" fill="rgb(233,192,12)" fg:x="2201" fg:w="1"/><text x="85.7257%" y="847.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="85.4757%" y="821" width="0.0388%" height="15" fill="rgb(251,192,53)" fg:x="2201" fg:w="1"/><text x="85.7257%" y="831.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.47%)</title><rect x="85.1262%" y="853" width="0.4660%" height="15" fill="rgb(246,141,26)" fg:x="2192" fg:w="12"/><text x="85.3762%" y="863.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (2 samples, 0.08%)</title><rect x="85.5146%" y="837" width="0.0777%" height="15" fill="rgb(239,195,19)" fg:x="2202" fg:w="2"/><text x="85.7646%" y="847.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="85.5146%" y="821" width="0.0777%" height="15" fill="rgb(241,16,39)" fg:x="2202" fg:w="2"/><text x="85.7646%" y="831.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="85.5146%" y="805" width="0.0777%" height="15" fill="rgb(223,13,53)" fg:x="2202" fg:w="2"/><text x="85.7646%" y="815.50"></text></g><g><title>wgpu_test`std::sync::poison::map_result (2 samples, 0.08%)</title><rect x="85.5146%" y="789" width="0.0777%" height="15" fill="rgb(214,227,0)" fg:x="2202" fg:w="2"/><text x="85.7646%" y="799.50"></text></g><g><title>wgpu_test`concurrent_queue::single::Single&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="85.6311%" y="821" width="0.0388%" height="15" fill="rgb(228,103,26)" fg:x="2205" fg:w="1"/><text x="85.8811%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.04%)</title><rect x="85.6311%" y="805" width="0.0388%" height="15" fill="rgb(254,177,53)" fg:x="2205" fg:w="1"/><text x="85.8811%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.04%)</title><rect x="85.6311%" y="789" width="0.0388%" height="15" fill="rgb(208,201,34)" fg:x="2205" fg:w="1"/><text x="85.8811%" y="799.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="85.6311%" y="773" width="0.0388%" height="15" fill="rgb(212,39,5)" fg:x="2205" fg:w="1"/><text x="85.8811%" y="783.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.12%)</title><rect x="85.5922%" y="837" width="0.1165%" height="15" fill="rgb(246,117,3)" fg:x="2204" fg:w="3"/><text x="85.8422%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.04%)</title><rect x="85.6699%" y="821" width="0.0388%" height="15" fill="rgb(244,118,39)" fg:x="2206" fg:w="1"/><text x="85.9199%" y="831.50"></text></g><g><title>wgpu_test`concurrent_queue::single::Single&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="85.7087%" y="837" width="0.0388%" height="15" fill="rgb(241,64,10)" fg:x="2207" fg:w="1"/><text x="85.9587%" y="847.50"></text></g><g><title>wgpu_test`async_channel::Receiver&lt;T&gt;::try_recv (5 samples, 0.19%)</title><rect x="85.5922%" y="853" width="0.1942%" height="15" fill="rgb(229,39,44)" fg:x="2204" fg:w="5"/><text x="85.8422%" y="863.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (1 samples, 0.04%)</title><rect x="85.7476%" y="837" width="0.0388%" height="15" fill="rgb(230,226,3)" fg:x="2208" fg:w="1"/><text x="85.9976%" y="847.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="85.7476%" y="821" width="0.0388%" height="15" fill="rgb(222,13,42)" fg:x="2208" fg:w="1"/><text x="85.9976%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="85.7476%" y="805" width="0.0388%" height="15" fill="rgb(247,180,54)" fg:x="2208" fg:w="1"/><text x="85.9976%" y="815.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_ptr (1 samples, 0.04%)</title><rect x="85.7864%" y="821" width="0.0388%" height="15" fill="rgb(205,96,16)" fg:x="2209" fg:w="1"/><text x="86.0364%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="85.7864%" y="805" width="0.0388%" height="15" fill="rgb(205,100,21)" fg:x="2209" fg:w="1"/><text x="86.0364%" y="815.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (1 samples, 0.04%)</title><rect x="85.8252%" y="821" width="0.0388%" height="15" fill="rgb(248,51,4)" fg:x="2210" fg:w="1"/><text x="86.0752%" y="831.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (1 samples, 0.04%)</title><rect x="85.8252%" y="805" width="0.0388%" height="15" fill="rgb(217,197,30)" fg:x="2210" fg:w="1"/><text x="86.0752%" y="815.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="85.8252%" y="789" width="0.0388%" height="15" fill="rgb(240,179,40)" fg:x="2210" fg:w="1"/><text x="86.0752%" y="799.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (3 samples, 0.12%)</title><rect x="85.7864%" y="837" width="0.1165%" height="15" fill="rgb(212,185,35)" fg:x="2209" fg:w="3"/><text x="86.0364%" y="847.50"></text></g><g><title>wgpu_test`core::mem::align_of_val_raw (1 samples, 0.04%)</title><rect x="85.8641%" y="821" width="0.0388%" height="15" fill="rgb(251,222,31)" fg:x="2211" fg:w="1"/><text x="86.1141%" y="831.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="85.9029%" y="821" width="0.0388%" height="15" fill="rgb(208,140,36)" fg:x="2212" fg:w="1"/><text x="86.1529%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::store (1 samples, 0.04%)</title><rect x="85.9029%" y="805" width="0.0388%" height="15" fill="rgb(220,148,1)" fg:x="2212" fg:w="1"/><text x="86.1529%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_store (1 samples, 0.04%)</title><rect x="85.9029%" y="789" width="0.0388%" height="15" fill="rgb(254,4,28)" fg:x="2212" fg:w="1"/><text x="86.1529%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.08%)</title><rect x="85.9029%" y="837" width="0.0777%" height="15" fill="rgb(222,185,44)" fg:x="2212" fg:w="2"/><text x="86.1529%" y="847.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="85.9417%" y="821" width="0.0388%" height="15" fill="rgb(215,74,39)" fg:x="2213" fg:w="1"/><text x="86.1917%" y="831.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (1 samples, 0.04%)</title><rect x="85.9806%" y="837" width="0.0388%" height="15" fill="rgb(247,86,4)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="847.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="85.9806%" y="821" width="0.0388%" height="15" fill="rgb(231,105,32)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="831.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="85.9806%" y="805" width="0.0388%" height="15" fill="rgb(222,65,35)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="815.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="85.9806%" y="789" width="0.0388%" height="15" fill="rgb(218,145,35)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="799.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="85.9806%" y="773" width="0.0388%" height="15" fill="rgb(208,7,15)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="783.50"></text></g><g><title>wgpu_test`std::panicking::panicking (1 samples, 0.04%)</title><rect x="85.9806%" y="757" width="0.0388%" height="15" fill="rgb(209,83,13)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="767.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="85.9806%" y="741" width="0.0388%" height="15" fill="rgb(218,3,10)" fg:x="2214" fg:w="1"/><text x="86.2306%" y="751.50"></text></g><g><title>wgpu_test`event_listener::List::insert (1 samples, 0.04%)</title><rect x="86.0194%" y="837" width="0.0388%" height="15" fill="rgb(211,219,4)" fg:x="2215" fg:w="1"/><text x="86.2694%" y="847.50"></text></g><g><title>wgpu_test`core::cell::Cell&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="86.0194%" y="821" width="0.0388%" height="15" fill="rgb(228,194,12)" fg:x="2215" fg:w="1"/><text x="86.2694%" y="831.50"></text></g><g><title>wgpu_test`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 1.05%)</title><rect x="85.0485%" y="869" width="1.0485%" height="15" fill="rgb(210,175,7)" fg:x="2190" fg:w="27"/><text x="85.2985%" y="879.50"></text></g><g><title>wgpu_test`event_listener::Event::listen (8 samples, 0.31%)</title><rect x="85.7864%" y="853" width="0.3107%" height="15" fill="rgb(243,132,6)" fg:x="2209" fg:w="8"/><text x="86.0364%" y="863.50"></text></g><g><title>wgpu_test`event_listener::full_fence (1 samples, 0.04%)</title><rect x="86.0583%" y="837" width="0.0388%" height="15" fill="rgb(207,72,18)" fg:x="2216" fg:w="1"/><text x="86.3083%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.04%)</title><rect x="86.0583%" y="821" width="0.0388%" height="15" fill="rgb(236,1,18)" fg:x="2216" fg:w="1"/><text x="86.3083%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.04%)</title><rect x="86.0583%" y="805" width="0.0388%" height="15" fill="rgb(227,0,18)" fg:x="2216" fg:w="1"/><text x="86.3083%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (1 samples, 0.04%)</title><rect x="86.0583%" y="789" width="0.0388%" height="15" fill="rgb(247,37,5)" fg:x="2216" fg:w="1"/><text x="86.3083%" y="799.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="86.0971%" y="853" width="0.0388%" height="15" fill="rgb(237,179,24)" fg:x="2217" fg:w="1"/><text x="86.3471%" y="863.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="86.1359%" y="853" width="0.0388%" height="15" fill="rgb(226,53,20)" fg:x="2218" fg:w="1"/><text x="86.3859%" y="863.50"></text></g><g><title>wgpu_test`alloc::boxed::Box&lt;T,A&gt;::into_raw (1 samples, 0.04%)</title><rect x="86.1748%" y="821" width="0.0388%" height="15" fill="rgb(247,75,7)" fg:x="2219" fg:w="1"/><text x="86.4248%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.04%)</title><rect x="86.2136%" y="805" width="0.0388%" height="15" fill="rgb(233,96,12)" fg:x="2220" fg:w="1"/><text x="86.4636%" y="815.50"></text></g><g><title>wgpu_test`&lt;cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="86.2524%" y="805" width="0.0388%" height="15" fill="rgb(224,125,0)" fg:x="2221" fg:w="1"/><text x="86.5024%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::write (2 samples, 0.08%)</title><rect x="86.2913%" y="805" width="0.0777%" height="15" fill="rgb(224,92,25)" fg:x="2222" fg:w="2"/><text x="86.5413%" y="815.50"></text></g><g><title>wgpu_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (5 samples, 0.19%)</title><rect x="86.2136%" y="821" width="0.1942%" height="15" fill="rgb(224,42,24)" fg:x="2220" fg:w="5"/><text x="86.4636%" y="831.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="86.3689%" y="805" width="0.0388%" height="15" fill="rgb(234,132,49)" fg:x="2224" fg:w="1"/><text x="86.6189%" y="815.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="86.3689%" y="789" width="0.0388%" height="15" fill="rgb(248,100,35)" fg:x="2224" fg:w="1"/><text x="86.6189%" y="799.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (7 samples, 0.27%)</title><rect x="86.1748%" y="837" width="0.2718%" height="15" fill="rgb(239,94,40)" fg:x="2219" fg:w="7"/><text x="86.4248%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::write (1 samples, 0.04%)</title><rect x="86.4078%" y="821" width="0.0388%" height="15" fill="rgb(235,139,28)" fg:x="2225" fg:w="1"/><text x="86.6578%" y="831.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="86.4466%" y="805" width="0.0388%" height="15" fill="rgb(217,144,7)" fg:x="2226" fg:w="1"/><text x="86.6966%" y="815.50"></text></g><g><title>wgpu_test`&lt;event_listener::ListGuard as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="86.4466%" y="789" width="0.0388%" height="15" fill="rgb(227,55,4)" fg:x="2226" fg:w="1"/><text x="86.6966%" y="799.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="86.4466%" y="773" width="0.0388%" height="15" fill="rgb(252,82,54)" fg:x="2226" fg:w="1"/><text x="86.6966%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7 samples, 0.27%)</title><rect x="86.4854%" y="725" width="0.2718%" height="15" fill="rgb(245,172,4)" fg:x="2227" fg:w="7"/><text x="86.7354%" y="735.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (9 samples, 0.35%)</title><rect x="86.4466%" y="821" width="0.3495%" height="15" fill="rgb(207,26,27)" fg:x="2226" fg:w="9"/><text x="86.6966%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (8 samples, 0.31%)</title><rect x="86.4854%" y="805" width="0.3107%" height="15" fill="rgb(252,98,18)" fg:x="2227" fg:w="8"/><text x="86.7354%" y="815.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.31%)</title><rect x="86.4854%" y="789" width="0.3107%" height="15" fill="rgb(244,8,26)" fg:x="2227" fg:w="8"/><text x="86.7354%" y="799.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (8 samples, 0.31%)</title><rect x="86.4854%" y="773" width="0.3107%" height="15" fill="rgb(237,173,45)" fg:x="2227" fg:w="8"/><text x="86.7354%" y="783.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (8 samples, 0.31%)</title><rect x="86.4854%" y="757" width="0.3107%" height="15" fill="rgb(208,213,49)" fg:x="2227" fg:w="8"/><text x="86.7354%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (8 samples, 0.31%)</title><rect x="86.4854%" y="741" width="0.3107%" height="15" fill="rgb(212,122,37)" fg:x="2227" fg:w="8"/><text x="86.7354%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_wake (1 samples, 0.04%)</title><rect x="86.7573%" y="725" width="0.0388%" height="15" fill="rgb(213,80,17)" fg:x="2234" fg:w="1"/><text x="87.0073%" y="735.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="86.7961%" y="821" width="0.0388%" height="15" fill="rgb(206,210,43)" fg:x="2235" fg:w="1"/><text x="87.0461%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::as_ref (1 samples, 0.04%)</title><rect x="86.7961%" y="805" width="0.0388%" height="15" fill="rgb(229,214,3)" fg:x="2235" fg:w="1"/><text x="87.0461%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.12%)</title><rect x="86.8350%" y="757" width="0.1165%" height="15" fill="rgb(235,213,29)" fg:x="2236" fg:w="3"/><text x="87.0850%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.12%)</title><rect x="86.8350%" y="741" width="0.1165%" height="15" fill="rgb(248,135,26)" fg:x="2236" fg:w="3"/><text x="87.0850%" y="751.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (4 samples, 0.16%)</title><rect x="86.8350%" y="821" width="0.1553%" height="15" fill="rgb(242,188,12)" fg:x="2236" fg:w="4"/><text x="87.0850%" y="831.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.16%)</title><rect x="86.8350%" y="805" width="0.1553%" height="15" fill="rgb(245,38,12)" fg:x="2236" fg:w="4"/><text x="87.0850%" y="815.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.16%)</title><rect x="86.8350%" y="789" width="0.1553%" height="15" fill="rgb(218,42,13)" fg:x="2236" fg:w="4"/><text x="87.0850%" y="799.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (4 samples, 0.16%)</title><rect x="86.8350%" y="773" width="0.1553%" height="15" fill="rgb(238,132,49)" fg:x="2236" fg:w="4"/><text x="87.0850%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="86.9515%" y="757" width="0.0388%" height="15" fill="rgb(209,196,19)" fg:x="2239" fg:w="1"/><text x="87.2015%" y="767.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.04%)</title><rect x="87.0291%" y="773" width="0.0388%" height="15" fill="rgb(244,131,22)" fg:x="2241" fg:w="1"/><text x="87.2791%" y="783.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="87.0291%" y="757" width="0.0388%" height="15" fill="rgb(223,18,34)" fg:x="2241" fg:w="1"/><text x="87.2791%" y="767.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.04%)</title><rect x="87.1068%" y="693" width="0.0388%" height="15" fill="rgb(252,124,54)" fg:x="2243" fg:w="1"/><text x="87.3568%" y="703.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset (1 samples, 0.04%)</title><rect x="87.1068%" y="677" width="0.0388%" height="15" fill="rgb(229,106,42)" fg:x="2243" fg:w="1"/><text x="87.3568%" y="687.50"></text></g><g><title>wgpu_test`alloc::sync::data_offset_align (1 samples, 0.04%)</title><rect x="87.1068%" y="661" width="0.0388%" height="15" fill="rgb(221,129,1)" fg:x="2243" fg:w="1"/><text x="87.3568%" y="671.50"></text></g><g><title>wgpu_test`core::alloc::layout::size_align (1 samples, 0.04%)</title><rect x="87.1068%" y="645" width="0.0388%" height="15" fill="rgb(229,74,15)" fg:x="2243" fg:w="1"/><text x="87.3568%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.23%)</title><rect x="87.1456%" y="645" width="0.2330%" height="15" fill="rgb(210,206,50)" fg:x="2244" fg:w="6"/><text x="87.3956%" y="655.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (8 samples, 0.31%)</title><rect x="87.1068%" y="725" width="0.3107%" height="15" fill="rgb(251,114,31)" fg:x="2243" fg:w="8"/><text x="87.3568%" y="735.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (8 samples, 0.31%)</title><rect x="87.1068%" y="709" width="0.3107%" height="15" fill="rgb(215,225,28)" fg:x="2243" fg:w="8"/><text x="87.3568%" y="719.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (7 samples, 0.27%)</title><rect x="87.1456%" y="693" width="0.2718%" height="15" fill="rgb(237,109,14)" fg:x="2244" fg:w="7"/><text x="87.3956%" y="703.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (7 samples, 0.27%)</title><rect x="87.1456%" y="677" width="0.2718%" height="15" fill="rgb(230,13,37)" fg:x="2244" fg:w="7"/><text x="87.3956%" y="687.50"></text></g><g><title>wgpu_test`parking::Inner::unpark (7 samples, 0.27%)</title><rect x="87.1456%" y="661" width="0.2718%" height="15" fill="rgb(231,40,28)" fg:x="2244" fg:w="7"/><text x="87.3956%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.04%)</title><rect x="87.3786%" y="645" width="0.0388%" height="15" fill="rgb(231,202,18)" fg:x="2250" fg:w="1"/><text x="87.6286%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.04%)</title><rect x="87.3786%" y="629" width="0.0388%" height="15" fill="rgb(225,33,18)" fg:x="2250" fg:w="1"/><text x="87.6286%" y="639.50"></text></g><g><title>wgpu_test`async_executor::Executor::schedule::_{{closure}} (9 samples, 0.35%)</title><rect x="87.1068%" y="757" width="0.3495%" height="15" fill="rgb(223,64,47)" fg:x="2243" fg:w="9"/><text x="87.3568%" y="767.50"></text></g><g><title>wgpu_test`async_executor::State::notify (9 samples, 0.35%)</title><rect x="87.1068%" y="741" width="0.3495%" height="15" fill="rgb(234,114,13)" fg:x="2243" fg:w="9"/><text x="87.3568%" y="751.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="87.4175%" y="725" width="0.0388%" height="15" fill="rgb(248,56,40)" fg:x="2251" fg:w="1"/><text x="87.6675%" y="735.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="87.4175%" y="709" width="0.0388%" height="15" fill="rgb(221,194,21)" fg:x="2251" fg:w="1"/><text x="87.6675%" y="719.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="87.4175%" y="693" width="0.0388%" height="15" fill="rgb(242,108,46)" fg:x="2251" fg:w="1"/><text x="87.6675%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="87.4175%" y="677" width="0.0388%" height="15" fill="rgb(220,106,10)" fg:x="2251" fg:w="1"/><text x="87.6675%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="87.4175%" y="661" width="0.0388%" height="15" fill="rgb(211,88,4)" fg:x="2251" fg:w="1"/><text x="87.6675%" y="671.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (2 samples, 0.08%)</title><rect x="87.4563%" y="725" width="0.0777%" height="15" fill="rgb(214,95,34)" fg:x="2252" fg:w="2"/><text x="87.7063%" y="735.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="87.4951%" y="709" width="0.0388%" height="15" fill="rgb(250,160,33)" fg:x="2253" fg:w="1"/><text x="87.7451%" y="719.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (15 samples, 0.58%)</title><rect x="86.9903%" y="789" width="0.5825%" height="15" fill="rgb(225,29,10)" fg:x="2240" fg:w="15"/><text x="87.2403%" y="799.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (13 samples, 0.50%)</title><rect x="87.0680%" y="773" width="0.5049%" height="15" fill="rgb(224,28,30)" fg:x="2242" fg:w="13"/><text x="87.3180%" y="783.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (3 samples, 0.12%)</title><rect x="87.4563%" y="757" width="0.1165%" height="15" fill="rgb(231,77,4)" fg:x="2252" fg:w="3"/><text x="87.7063%" y="767.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (3 samples, 0.12%)</title><rect x="87.4563%" y="741" width="0.1165%" height="15" fill="rgb(209,63,21)" fg:x="2252" fg:w="3"/><text x="87.7063%" y="751.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="87.5340%" y="725" width="0.0388%" height="15" fill="rgb(226,22,11)" fg:x="2254" fg:w="1"/><text x="87.7840%" y="735.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="87.5340%" y="709" width="0.0388%" height="15" fill="rgb(216,82,30)" fg:x="2254" fg:w="1"/><text x="87.7840%" y="719.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="87.5340%" y="693" width="0.0388%" height="15" fill="rgb(246,227,38)" fg:x="2254" fg:w="1"/><text x="87.7840%" y="703.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (30 samples, 1.17%)</title><rect x="86.4466%" y="837" width="1.1650%" height="15" fill="rgb(251,203,53)" fg:x="2226" fg:w="30"/><text x="86.6966%" y="847.50"></text></g><g><title>wgpu_test`event_listener::List::notify (16 samples, 0.62%)</title><rect x="86.9903%" y="821" width="0.6214%" height="15" fill="rgb(254,101,1)" fg:x="2240" fg:w="16"/><text x="87.2403%" y="831.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (16 samples, 0.62%)</title><rect x="86.9903%" y="805" width="0.6214%" height="15" fill="rgb(241,180,5)" fg:x="2240" fg:w="16"/><text x="87.2403%" y="815.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.04%)</title><rect x="87.5728%" y="789" width="0.0388%" height="15" fill="rgb(218,168,4)" fg:x="2255" fg:w="1"/><text x="87.8228%" y="799.50"></text></g><g><title>wgpu_test`async_channel::Sender&lt;T&gt;::try_send (38 samples, 1.48%)</title><rect x="86.1748%" y="853" width="1.4757%" height="15" fill="rgb(224,223,32)" fg:x="2219" fg:w="38"/><text x="86.4248%" y="863.50"></text></g><g><title>wgpu_test`event_listener::full_fence (1 samples, 0.04%)</title><rect x="87.6117%" y="837" width="0.0388%" height="15" fill="rgb(236,106,22)" fg:x="2256" fg:w="1"/><text x="87.8617%" y="847.50"></text></g><g><title>wgpu_test`&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 1.59%)</title><rect x="86.0971%" y="869" width="1.5922%" height="15" fill="rgb(206,121,5)" fg:x="2217" fg:w="41"/><text x="86.3471%" y="879.50"></text></g><g><title>wgpu_test`event_listener::Event::notify (1 samples, 0.04%)</title><rect x="87.6505%" y="853" width="0.0388%" height="15" fill="rgb(233,87,28)" fg:x="2257" fg:w="1"/><text x="87.9005%" y="863.50"></text></g><g><title>wgpu_test`event_listener::Event::try_inner (1 samples, 0.04%)</title><rect x="87.6505%" y="837" width="0.0388%" height="15" fill="rgb(236,137,17)" fg:x="2257" fg:w="1"/><text x="87.9005%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::as_ref (1 samples, 0.04%)</title><rect x="87.6505%" y="821" width="0.0388%" height="15" fill="rgb(209,183,38)" fg:x="2257" fg:w="1"/><text x="87.9005%" y="831.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::table::Column::get_data_ptr (1 samples, 0.04%)</title><rect x="87.7670%" y="805" width="0.0388%" height="15" fill="rgb(206,162,44)" fg:x="2260" fg:w="1"/><text x="88.0170%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetypes::resource (1 samples, 0.04%)</title><rect x="87.8058%" y="773" width="0.0388%" height="15" fill="rgb(237,70,39)" fg:x="2261" fg:w="1"/><text x="88.0558%" y="783.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="87.8058%" y="757" width="0.0388%" height="15" fill="rgb(212,176,5)" fg:x="2261" fg:w="1"/><text x="88.0558%" y="767.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="87.8058%" y="741" width="0.0388%" height="15" fill="rgb(232,95,16)" fg:x="2261" fg:w="1"/><text x="88.0558%" y="751.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="87.8058%" y="725" width="0.0388%" height="15" fill="rgb(219,115,35)" fg:x="2261" fg:w="1"/><text x="88.0558%" y="735.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="87.8447%" y="773" width="0.0388%" height="15" fill="rgb(251,67,27)" fg:x="2262" fg:w="1"/><text x="88.0947%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (3 samples, 0.12%)</title><rect x="87.8058%" y="805" width="0.1165%" height="15" fill="rgb(222,95,40)" fg:x="2261" fg:w="3"/><text x="88.0558%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (3 samples, 0.12%)</title><rect x="87.8058%" y="789" width="0.1165%" height="15" fill="rgb(250,35,16)" fg:x="2261" fg:w="3"/><text x="88.0558%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="87.8835%" y="773" width="0.0388%" height="15" fill="rgb(224,86,44)" fg:x="2263" fg:w="1"/><text x="88.1335%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="87.8835%" y="757" width="0.0388%" height="15" fill="rgb(237,53,53)" fg:x="2263" fg:w="1"/><text x="88.1335%" y="767.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="87.8835%" y="741" width="0.0388%" height="15" fill="rgb(208,171,33)" fg:x="2263" fg:w="1"/><text x="88.1335%" y="751.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="87.8835%" y="725" width="0.0388%" height="15" fill="rgb(222,64,27)" fg:x="2263" fg:w="1"/><text x="88.1335%" y="735.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="87.8835%" y="709" width="0.0388%" height="15" fill="rgb(221,121,35)" fg:x="2263" fg:w="1"/><text x="88.1335%" y="719.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="87.8835%" y="693" width="0.0388%" height="15" fill="rgb(228,137,42)" fg:x="2263" fg:w="1"/><text x="88.1335%" y="703.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (5 samples, 0.19%)</title><rect x="87.7670%" y="821" width="0.1942%" height="15" fill="rgb(227,54,21)" fg:x="2260" fg:w="5"/><text x="88.0170%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="87.9223%" y="805" width="0.0388%" height="15" fill="rgb(240,168,33)" fg:x="2264" fg:w="1"/><text x="88.1723%" y="815.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="87.9612%" y="821" width="0.0388%" height="15" fill="rgb(243,159,6)" fg:x="2265" fg:w="1"/><text x="88.2112%" y="831.50"></text></g><g><title>wgpu_test`&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (7 samples, 0.27%)</title><rect x="87.7670%" y="837" width="0.2718%" height="15" fill="rgb(205,211,41)" fg:x="2260" fg:w="7"/><text x="88.0170%" y="847.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.04%)</title><rect x="88.0000%" y="821" width="0.0388%" height="15" fill="rgb(253,30,1)" fg:x="2266" fg:w="1"/><text x="88.2500%" y="831.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::free_unused_assets_system (1 samples, 0.04%)</title><rect x="88.0777%" y="789" width="0.0388%" height="15" fill="rgb(226,80,18)" fg:x="2268" fg:w="1"/><text x="88.3277%" y="799.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::free_unused_assets_system_impl (1 samples, 0.04%)</title><rect x="88.0777%" y="773" width="0.0388%" height="15" fill="rgb(253,156,46)" fg:x="2268" fg:w="1"/><text x="88.3277%" y="783.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::AssetServer::mark_unused_assets (1 samples, 0.04%)</title><rect x="88.0777%" y="757" width="0.0388%" height="15" fill="rgb(248,87,27)" fg:x="2268" fg:w="1"/><text x="88.3277%" y="767.50"></text></g><g><title>wgpu_test`crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="88.0777%" y="741" width="0.0388%" height="15" fill="rgb(227,122,2)" fg:x="2268" fg:w="1"/><text x="88.3277%" y="751.50"></text></g><g><title>wgpu_test`&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="88.0777%" y="725" width="0.0388%" height="15" fill="rgb(229,94,39)" fg:x="2268" fg:w="1"/><text x="88.3277%" y="735.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (11 samples, 0.43%)</title><rect x="87.7670%" y="853" width="0.4272%" height="15" fill="rgb(225,173,31)" fg:x="2260" fg:w="11"/><text x="88.0170%" y="863.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run::call_inner (4 samples, 0.16%)</title><rect x="88.0388%" y="837" width="0.1553%" height="15" fill="rgb(239,176,30)" fg:x="2267" fg:w="4"/><text x="88.2888%" y="847.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.12%)</title><rect x="88.0777%" y="821" width="0.1165%" height="15" fill="rgb(212,104,21)" fg:x="2268" fg:w="3"/><text x="88.3277%" y="831.50"></text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (3 samples, 0.12%)</title><rect x="88.0777%" y="805" width="0.1165%" height="15" fill="rgb(240,209,40)" fg:x="2268" fg:w="3"/><text x="88.3277%" y="815.50"></text></g><g><title>wgpu_test`wgpu_test::debug::log_framerate::log_framerate (2 samples, 0.08%)</title><rect x="88.1165%" y="789" width="0.0777%" height="15" fill="rgb(234,195,5)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="799.50"></text></g><g><title>wgpu_test`std::io::stdio::_print (2 samples, 0.08%)</title><rect x="88.1165%" y="773" width="0.0777%" height="15" fill="rgb(238,213,1)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="783.50"></text></g><g><title>wgpu_test`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.08%)</title><rect x="88.1165%" y="757" width="0.0777%" height="15" fill="rgb(235,182,54)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="767.50"></text></g><g><title>wgpu_test`core::fmt::write (2 samples, 0.08%)</title><rect x="88.1165%" y="741" width="0.0777%" height="15" fill="rgb(229,50,46)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="751.50"></text></g><g><title>wgpu_test`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="88.1165%" y="725" width="0.0777%" height="15" fill="rgb(219,145,13)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="735.50"></text></g><g><title>wgpu_test`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.08%)</title><rect x="88.1165%" y="709" width="0.0777%" height="15" fill="rgb(220,226,10)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.08%)</title><rect x="88.1165%" y="693" width="0.0777%" height="15" fill="rgb(248,47,30)" fg:x="2269" fg:w="2"/><text x="88.3665%" y="703.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::event::EventWriterState&lt;(&lt;bevy_ecs::change_detection::ResMut&lt;bevy_ecs::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="88.1942%" y="821" width="0.0388%" height="15" fill="rgb(231,209,44)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="831.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="88.1942%" y="805" width="0.0388%" height="15" fill="rgb(209,80,30)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.04%)</title><rect x="88.1942%" y="789" width="0.0388%" height="15" fill="rgb(232,9,14)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="88.1942%" y="773" width="0.0388%" height="15" fill="rgb(243,91,43)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetypes::resource (1 samples, 0.04%)</title><rect x="88.1942%" y="757" width="0.0388%" height="15" fill="rgb(231,90,52)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="767.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="88.1942%" y="741" width="0.0388%" height="15" fill="rgb(253,192,44)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="751.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="88.1942%" y="725" width="0.0388%" height="15" fill="rgb(241,66,31)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="735.50"></text></g><g><title>wgpu_test`core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="88.1942%" y="709" width="0.0388%" height="15" fill="rgb(235,81,37)" fg:x="2271" fg:w="1"/><text x="88.4442%" y="719.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.08%)</title><rect x="88.2330%" y="821" width="0.0777%" height="15" fill="rgb(223,221,9)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="831.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (2 samples, 0.08%)</title><rect x="88.2330%" y="805" width="0.0777%" height="15" fill="rgb(242,180,7)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (2 samples, 0.08%)</title><rect x="88.2330%" y="789" width="0.0777%" height="15" fill="rgb(243,78,19)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (2 samples, 0.08%)</title><rect x="88.2330%" y="773" width="0.0777%" height="15" fill="rgb(233,23,17)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (2 samples, 0.08%)</title><rect x="88.2330%" y="757" width="0.0777%" height="15" fill="rgb(252,122,45)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="767.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="88.2330%" y="741" width="0.0777%" height="15" fill="rgb(247,108,20)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="751.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::_{{closure}} (2 samples, 0.08%)</title><rect x="88.2330%" y="725" width="0.0777%" height="15" fill="rgb(235,84,21)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="735.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::as_ref (2 samples, 0.08%)</title><rect x="88.2330%" y="709" width="0.0777%" height="15" fill="rgb(247,129,10)" fg:x="2272" fg:w="2"/><text x="88.4830%" y="719.50"></text></g><g><title>wgpu_test`&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (4 samples, 0.16%)</title><rect x="88.1942%" y="837" width="0.1553%" height="15" fill="rgb(208,173,14)" fg:x="2271" fg:w="4"/><text x="88.4442%" y="847.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="88.3107%" y="821" width="0.0388%" height="15" fill="rgb(236,31,38)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="831.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="88.3107%" y="805" width="0.0388%" height="15" fill="rgb(232,65,17)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="88.3107%" y="789" width="0.0388%" height="15" fill="rgb(224,45,49)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="88.3107%" y="773" width="0.0388%" height="15" fill="rgb(225,2,53)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="783.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="88.3107%" y="757" width="0.0388%" height="15" fill="rgb(248,210,53)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="767.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="88.3107%" y="741" width="0.0388%" height="15" fill="rgb(211,1,30)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="751.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="88.3107%" y="725" width="0.0388%" height="15" fill="rgb(224,96,15)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="735.50"></text></g><g><title>wgpu_test`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="88.3107%" y="709" width="0.0388%" height="15" fill="rgb(252,45,11)" fg:x="2274" fg:w="1"/><text x="88.5607%" y="719.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="88.3495%" y="821" width="0.0388%" height="15" fill="rgb(220,125,38)" fg:x="2275" fg:w="1"/><text x="88.5995%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="88.3883%" y="805" width="0.0777%" height="15" fill="rgb(243,161,33)" fg:x="2276" fg:w="2"/><text x="88.6383%" y="815.50"></text></g><g><title>wgpu_test`bevy_asset::loader::update_asset_storage_system (1 samples, 0.04%)</title><rect x="88.4660%" y="789" width="0.0388%" height="15" fill="rgb(248,197,34)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="799.50"></text></g><g><title>wgpu_test`bevy_asset::asset_server::AssetServer::update_asset_storage (1 samples, 0.04%)</title><rect x="88.4660%" y="773" width="0.0388%" height="15" fill="rgb(228,165,23)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="783.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="88.4660%" y="757" width="0.0388%" height="15" fill="rgb(236,94,38)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="767.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="88.4660%" y="741" width="0.0388%" height="15" fill="rgb(220,13,23)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="751.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="88.4660%" y="725" width="0.0388%" height="15" fill="rgb(234,26,39)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="735.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="88.4660%" y="709" width="0.0388%" height="15" fill="rgb(205,117,44)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="719.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="88.4660%" y="693" width="0.0388%" height="15" fill="rgb(250,42,2)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="703.50"></text></g><g><title>wgpu_test`hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="88.4660%" y="677" width="0.0388%" height="15" fill="rgb(223,83,14)" fg:x="2278" fg:w="1"/><text x="88.7160%" y="687.50"></text></g><g><title>wgpu_test`bevy_ecs::event::EventReader&lt;T&gt;::iter (1 samples, 0.04%)</title><rect x="88.5049%" y="773" width="0.0388%" height="15" fill="rgb(241,147,50)" fg:x="2279" fg:w="1"/><text x="88.7549%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.04%)</title><rect x="88.5049%" y="757" width="0.0388%" height="15" fill="rgb(218,90,6)" fg:x="2279" fg:w="1"/><text x="88.7549%" y="767.50"></text></g><g><title>wgpu_test`bevy_ecs::event::internal_event_reader (1 samples, 0.04%)</title><rect x="88.5049%" y="741" width="0.0388%" height="15" fill="rgb(210,191,5)" fg:x="2279" fg:w="1"/><text x="88.7549%" y="751.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="88.5049%" y="725" width="0.0388%" height="15" fill="rgb(225,139,19)" fg:x="2279" fg:w="1"/><text x="88.7549%" y="735.50"></text></g><g><title>wgpu_test`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="88.5049%" y="709" width="0.0388%" height="15" fill="rgb(210,1,33)" fg:x="2279" fg:w="1"/><text x="88.7549%" y="719.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="88.5049%" y="693" width="0.0388%" height="15" fill="rgb(213,50,3)" fg:x="2279" fg:w="1"/><text x="88.7549%" y="703.50"></text></g><g><title>wgpu_test`bevy_input::mouse::mouse_button_input_system (2 samples, 0.08%)</title><rect x="88.5049%" y="789" width="0.0777%" height="15" fill="rgb(234,227,4)" fg:x="2279" fg:w="2"/><text x="88.7549%" y="799.50"></text></g><g><title>wgpu_test`bevy_input::input::Input&lt;T&gt;::clear (1 samples, 0.04%)</title><rect x="88.5437%" y="773" width="0.0388%" height="15" fill="rgb(246,63,5)" fg:x="2280" fg:w="1"/><text x="88.7937%" y="783.50"></text></g><g><title>wgpu_test`std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1 samples, 0.04%)</title><rect x="88.5437%" y="757" width="0.0388%" height="15" fill="rgb(245,136,27)" fg:x="2280" fg:w="1"/><text x="88.7937%" y="767.50"></text></g><g><title>wgpu_test`hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1 samples, 0.04%)</title><rect x="88.5437%" y="741" width="0.0388%" height="15" fill="rgb(247,199,27)" fg:x="2280" fg:w="1"/><text x="88.7937%" y="751.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.04%)</title><rect x="88.5437%" y="725" width="0.0388%" height="15" fill="rgb(252,158,49)" fg:x="2280" fg:w="1"/><text x="88.7937%" y="735.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.04%)</title><rect x="88.5437%" y="709" width="0.0388%" height="15" fill="rgb(254,73,1)" fg:x="2280" fg:w="1"/><text x="88.7937%" y="719.50"></text></g><g><title>wgpu_test`bevy_input::touch::touch_screen_input_system (1 samples, 0.04%)</title><rect x="88.5825%" y="789" width="0.0388%" height="15" fill="rgb(248,93,19)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::event::EventReader&lt;T&gt;::iter (1 samples, 0.04%)</title><rect x="88.5825%" y="773" width="0.0388%" height="15" fill="rgb(206,67,5)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.04%)</title><rect x="88.5825%" y="757" width="0.0388%" height="15" fill="rgb(209,210,4)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="767.50"></text></g><g><title>wgpu_test`bevy_ecs::event::internal_event_reader (1 samples, 0.04%)</title><rect x="88.5825%" y="741" width="0.0388%" height="15" fill="rgb(214,185,36)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="751.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="88.5825%" y="725" width="0.0388%" height="15" fill="rgb(233,191,26)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="735.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="88.5825%" y="709" width="0.0388%" height="15" fill="rgb(248,94,17)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="719.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="88.5825%" y="693" width="0.0388%" height="15" fill="rgb(250,64,4)" fg:x="2281" fg:w="1"/><text x="88.8325%" y="703.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="88.6214%" y="661" width="0.0388%" height="15" fill="rgb(218,41,53)" fg:x="2282" fg:w="1"/><text x="88.8714%" y="671.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="88.6214%" y="645" width="0.0388%" height="15" fill="rgb(251,176,28)" fg:x="2282" fg:w="1"/><text x="88.8714%" y="655.50"></text></g><g><title>wgpu_test`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="88.6214%" y="629" width="0.0388%" height="15" fill="rgb(247,22,9)" fg:x="2282" fg:w="1"/><text x="88.8714%" y="639.50"></text></g><g><title>wgpu_test`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="88.6214%" y="613" width="0.0388%" height="15" fill="rgb(218,201,14)" fg:x="2282" fg:w="1"/><text x="88.8714%" y="623.50"></text></g><g><title>wgpu_test`wgpu_test::input_test (2 samples, 0.08%)</title><rect x="88.6214%" y="789" width="0.0777%" height="15" fill="rgb(218,94,10)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="799.50"></text></g><g><title>wgpu_test`bevy_input::input::Input&lt;T&gt;::pressed (2 samples, 0.08%)</title><rect x="88.6214%" y="773" width="0.0777%" height="15" fill="rgb(222,183,52)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="783.50"></text></g><g><title>wgpu_test`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.08%)</title><rect x="88.6214%" y="757" width="0.0777%" height="15" fill="rgb(242,140,25)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="767.50"></text></g><g><title>wgpu_test`hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.08%)</title><rect x="88.6214%" y="741" width="0.0777%" height="15" fill="rgb(235,197,38)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="751.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.08%)</title><rect x="88.6214%" y="725" width="0.0777%" height="15" fill="rgb(237,136,15)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="735.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.08%)</title><rect x="88.6214%" y="709" width="0.0777%" height="15" fill="rgb(223,44,49)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="719.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.08%)</title><rect x="88.6214%" y="693" width="0.0777%" height="15" fill="rgb(227,71,15)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="703.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.08%)</title><rect x="88.6214%" y="677" width="0.0777%" height="15" fill="rgb(225,153,20)" fg:x="2282" fg:w="2"/><text x="88.8714%" y="687.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="88.6602%" y="661" width="0.0388%" height="15" fill="rgb(210,190,26)" fg:x="2283" fg:w="1"/><text x="88.9102%" y="671.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="88.6602%" y="645" width="0.0388%" height="15" fill="rgb(223,147,5)" fg:x="2283" fg:w="1"/><text x="88.9102%" y="655.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="88.6602%" y="629" width="0.0388%" height="15" fill="rgb(207,14,23)" fg:x="2283" fg:w="1"/><text x="88.9102%" y="639.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="88.6602%" y="613" width="0.0388%" height="15" fill="rgb(211,195,53)" fg:x="2283" fg:w="1"/><text x="88.9102%" y="623.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="88.6602%" y="597" width="0.0388%" height="15" fill="rgb(237,75,46)" fg:x="2283" fg:w="1"/><text x="88.9102%" y="607.50"></text></g><g><title>wgpu_test`core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="88.6602%" y="581" width="0.0388%" height="15" fill="rgb(254,55,14)" fg:x="2283" fg:w="1"/><text x="88.9102%" y="591.50"></text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="88.7379%" y="773" width="0.0388%" height="15" fill="rgb(230,185,30)" fg:x="2285" fg:w="1"/><text x="88.9879%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="88.7379%" y="757" width="0.0388%" height="15" fill="rgb(220,14,11)" fg:x="2285" fg:w="1"/><text x="88.9879%" y="767.50"></text></g><g><title>wgpu_test`&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (1 samples, 0.04%)</title><rect x="88.8932%" y="693" width="0.0388%" height="15" fill="rgb(215,169,44)" fg:x="2289" fg:w="1"/><text x="89.1432%" y="703.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="89.0097%" y="661" width="0.0388%" height="15" fill="rgb(253,203,20)" fg:x="2292" fg:w="1"/><text x="89.2597%" y="671.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="89.0097%" y="645" width="0.0388%" height="15" fill="rgb(229,225,17)" fg:x="2292" fg:w="1"/><text x="89.2597%" y="655.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="88.9709%" y="677" width="0.1165%" height="15" fill="rgb(236,76,26)" fg:x="2291" fg:w="3"/><text x="89.2209%" y="687.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="89.0485%" y="661" width="0.0388%" height="15" fill="rgb(234,15,30)" fg:x="2293" fg:w="1"/><text x="89.2985%" y="671.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="89.0874%" y="677" width="0.0388%" height="15" fill="rgb(211,113,48)" fg:x="2294" fg:w="1"/><text x="89.3374%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="89.1262%" y="661" width="0.0388%" height="15" fill="rgb(221,31,36)" fg:x="2295" fg:w="1"/><text x="89.3762%" y="671.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="89.3592%" y="645" width="0.0388%" height="15" fill="rgb(215,118,52)" fg:x="2301" fg:w="1"/><text x="89.6092%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_add_epi32 (11 samples, 0.43%)</title><rect x="89.3981%" y="645" width="0.4272%" height="15" fill="rgb(241,151,27)" fg:x="2302" fg:w="11"/><text x="89.6481%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.16%)</title><rect x="89.6699%" y="629" width="0.1553%" height="15" fill="rgb(253,51,3)" fg:x="2309" fg:w="4"/><text x="89.9199%" y="639.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.08%)</title><rect x="89.8252%" y="645" width="0.0777%" height="15" fill="rgb(216,201,24)" fg:x="2313" fg:w="2"/><text x="90.0752%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.04%)</title><rect x="89.8641%" y="629" width="0.0388%" height="15" fill="rgb(231,107,4)" fg:x="2314" fg:w="1"/><text x="90.1141%" y="639.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.27%)</title><rect x="89.9029%" y="645" width="0.2718%" height="15" fill="rgb(243,97,54)" fg:x="2315" fg:w="7"/><text x="90.1529%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.04%)</title><rect x="90.1359%" y="629" width="0.0388%" height="15" fill="rgb(221,32,51)" fg:x="2321" fg:w="1"/><text x="90.3859%" y="639.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.08%)</title><rect x="90.1748%" y="645" width="0.0777%" height="15" fill="rgb(218,171,35)" fg:x="2322" fg:w="2"/><text x="90.4248%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_slli_epi32 (4 samples, 0.16%)</title><rect x="90.2524%" y="645" width="0.1553%" height="15" fill="rgb(214,20,53)" fg:x="2324" fg:w="4"/><text x="90.5024%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.08%)</title><rect x="90.4078%" y="645" width="0.0777%" height="15" fill="rgb(239,9,52)" fg:x="2328" fg:w="2"/><text x="90.6578%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.04%)</title><rect x="90.4466%" y="629" width="0.0388%" height="15" fill="rgb(215,114,45)" fg:x="2329" fg:w="1"/><text x="90.6966%" y="639.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.04%)</title><rect x="90.4854%" y="645" width="0.0388%" height="15" fill="rgb(208,118,9)" fg:x="2330" fg:w="1"/><text x="90.7354%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.04%)</title><rect x="90.4854%" y="629" width="0.0388%" height="15" fill="rgb(235,7,39)" fg:x="2330" fg:w="1"/><text x="90.7354%" y="639.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.04%)</title><rect x="90.5243%" y="645" width="0.0388%" height="15" fill="rgb(243,225,15)" fg:x="2331" fg:w="1"/><text x="90.7743%" y="655.50"></text></g><g><title>wgpu_test`core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.04%)</title><rect x="90.5631%" y="645" width="0.0388%" height="15" fill="rgb(225,216,18)" fg:x="2332" fg:w="1"/><text x="90.8131%" y="655.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="90.6019%" y="645" width="0.0388%" height="15" fill="rgb(233,36,38)" fg:x="2333" fg:w="1"/><text x="90.8519%" y="655.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="90.6019%" y="629" width="0.0388%" height="15" fill="rgb(239,88,23)" fg:x="2333" fg:w="1"/><text x="90.8519%" y="639.50"></text></g><g><title>wgpu_test`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="90.6019%" y="613" width="0.0388%" height="15" fill="rgb(219,181,35)" fg:x="2333" fg:w="1"/><text x="90.8519%" y="623.50"></text></g><g><title>wgpu_test`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="90.6019%" y="597" width="0.0388%" height="15" fill="rgb(215,18,46)" fg:x="2333" fg:w="1"/><text x="90.8519%" y="607.50"></text></g><g><title>wgpu_test`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="90.6019%" y="581" width="0.0388%" height="15" fill="rgb(241,38,11)" fg:x="2333" fg:w="1"/><text x="90.8519%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="90.6019%" y="565" width="0.0388%" height="15" fill="rgb(248,169,45)" fg:x="2333" fg:w="1"/><text x="90.8519%" y="575.50"></text></g><g><title>wgpu_test`rand::rng::Rng::gen (49 samples, 1.90%)</title><rect x="88.7767%" y="773" width="1.9029%" height="15" fill="rgb(239,50,49)" fg:x="2286" fg:w="49"/><text x="89.0267%" y="783.50">w..</text></g><g><title>wgpu_test`rand::distributions::integer::_&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (49 samples, 1.90%)</title><rect x="88.7767%" y="757" width="1.9029%" height="15" fill="rgb(231,96,31)" fg:x="2286" fg:w="49"/><text x="89.0267%" y="767.50">w..</text></g><g><title>wgpu_test`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (49 samples, 1.90%)</title><rect x="88.7767%" y="741" width="1.9029%" height="15" fill="rgb(224,193,37)" fg:x="2286" fg:w="49"/><text x="89.0267%" y="751.50">w..</text></g><g><title>wgpu_test`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (47 samples, 1.83%)</title><rect x="88.8544%" y="725" width="1.8252%" height="15" fill="rgb(227,153,50)" fg:x="2288" fg:w="47"/><text x="89.1044%" y="735.50">w..</text></g><g><title>wgpu_test`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (46 samples, 1.79%)</title><rect x="88.8932%" y="709" width="1.7864%" height="15" fill="rgb(249,228,3)" fg:x="2289" fg:w="46"/><text x="89.1432%" y="719.50">w..</text></g><g><title>wgpu_test`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (45 samples, 1.75%)</title><rect x="88.9320%" y="693" width="1.7476%" height="15" fill="rgb(219,164,43)" fg:x="2290" fg:w="45"/><text x="89.1820%" y="703.50"></text></g><g><title>wgpu_test`rand_chacha::guts::refill_wide (40 samples, 1.55%)</title><rect x="89.1262%" y="677" width="1.5534%" height="15" fill="rgb(216,45,41)" fg:x="2295" fg:w="40"/><text x="89.3762%" y="687.50"></text></g><g><title>wgpu_test`rand_chacha::guts::refill_wide::impl_avx2 (39 samples, 1.51%)</title><rect x="89.1650%" y="661" width="1.5146%" height="15" fill="rgb(210,226,51)" fg:x="2296" fg:w="39"/><text x="89.4150%" y="671.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.04%)</title><rect x="90.6408%" y="645" width="0.0388%" height="15" fill="rgb(209,117,49)" fg:x="2334" fg:w="1"/><text x="90.8908%" y="655.50"></text></g><g><title>wgpu_test`rand::rng::Rng::gen_range (1 samples, 0.04%)</title><rect x="90.6796%" y="773" width="0.0388%" height="15" fill="rgb(206,196,24)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="783.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.04%)</title><rect x="90.6796%" y="757" width="0.0388%" height="15" fill="rgb(253,218,3)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="767.50"></text></g><g><title>wgpu_test`&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.04%)</title><rect x="90.6796%" y="741" width="0.0388%" height="15" fill="rgb(252,166,2)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="751.50"></text></g><g><title>wgpu_test`&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (1 samples, 0.04%)</title><rect x="90.6796%" y="725" width="0.0388%" height="15" fill="rgb(236,218,26)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="735.50"></text></g><g><title>wgpu_test`rand::rng::Rng::gen (1 samples, 0.04%)</title><rect x="90.6796%" y="709" width="0.0388%" height="15" fill="rgb(254,84,19)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="719.50"></text></g><g><title>wgpu_test`rand::distributions::integer::_&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.04%)</title><rect x="90.6796%" y="693" width="0.0388%" height="15" fill="rgb(219,137,29)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="703.50"></text></g><g><title>wgpu_test`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.04%)</title><rect x="90.6796%" y="677" width="0.0388%" height="15" fill="rgb(227,47,52)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="687.50"></text></g><g><title>wgpu_test`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (1 samples, 0.04%)</title><rect x="90.6796%" y="661" width="0.0388%" height="15" fill="rgb(229,167,24)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="671.50"></text></g><g><title>wgpu_test`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="90.6796%" y="645" width="0.0388%" height="15" fill="rgb(233,164,1)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="655.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="90.6796%" y="629" width="0.0388%" height="15" fill="rgb(218,88,48)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="639.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="90.6796%" y="613" width="0.0388%" height="15" fill="rgb(226,214,24)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="623.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="90.6796%" y="597" width="0.0388%" height="15" fill="rgb(233,29,12)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="607.50"></text></g><g><title>wgpu_test`core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="90.6796%" y="581" width="0.0388%" height="15" fill="rgb(219,120,34)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="591.50"></text></g><g><title>wgpu_test`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="90.6796%" y="565" width="0.0388%" height="15" fill="rgb(226,78,44)" fg:x="2335" fg:w="1"/><text x="90.9296%" y="575.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (62 samples, 2.41%)</title><rect x="88.3495%" y="837" width="2.4078%" height="15" fill="rgb(240,15,48)" fg:x="2275" fg:w="62"/><text x="88.5995%" y="847.50">wg..</text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (61 samples, 2.37%)</title><rect x="88.3883%" y="821" width="2.3689%" height="15" fill="rgb(253,176,7)" fg:x="2276" fg:w="61"/><text x="88.6383%" y="831.50">wg..</text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (59 samples, 2.29%)</title><rect x="88.4660%" y="805" width="2.2913%" height="15" fill="rgb(206,166,28)" fg:x="2278" fg:w="59"/><text x="88.7160%" y="815.50">w..</text></g><g><title>wgpu_test`wgpu_test::world::change_world::change_world (53 samples, 2.06%)</title><rect x="88.6990%" y="789" width="2.0583%" height="15" fill="rgb(241,53,51)" fg:x="2284" fg:w="53"/><text x="88.9490%" y="799.50">w..</text></g><g><title>wgpu_test`rand::rngs::thread::thread_rng (1 samples, 0.04%)</title><rect x="90.7184%" y="773" width="0.0388%" height="15" fill="rgb(249,112,30)" fg:x="2336" fg:w="1"/><text x="90.9684%" y="783.50"></text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="90.7184%" y="757" width="0.0388%" height="15" fill="rgb(217,85,30)" fg:x="2336" fg:w="1"/><text x="90.9684%" y="767.50"></text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="90.7184%" y="741" width="0.0388%" height="15" fill="rgb(233,49,7)" fg:x="2336" fg:w="1"/><text x="90.9684%" y="751.50"></text></g><g><title>wgpu_test`rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.04%)</title><rect x="90.7184%" y="725" width="0.0388%" height="15" fill="rgb(234,109,9)" fg:x="2336" fg:w="1"/><text x="90.9684%" y="735.50"></text></g><g><title>wgpu_test`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="90.7184%" y="709" width="0.0388%" height="15" fill="rgb(253,95,22)" fg:x="2336" fg:w="1"/><text x="90.9684%" y="719.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::event::EventWriterState&lt;(&lt;bevy_ecs::change_detection::ResMut&lt;bevy_ecs::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="90.7573%" y="837" width="0.0388%" height="15" fill="rgb(233,176,25)" fg:x="2337" fg:w="1"/><text x="91.0073%" y="847.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (68 samples, 2.64%)</title><rect x="88.1942%" y="853" width="2.6408%" height="15" fill="rgb(236,33,39)" fg:x="2271" fg:w="68"/><text x="88.4442%" y="863.50">wg..</text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="90.7961%" y="837" width="0.0388%" height="15" fill="rgb(223,226,42)" fg:x="2338" fg:w="1"/><text x="91.0461%" y="847.50"></text></g><g><title>wgpu_test`&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="90.8350%" y="837" width="0.0388%" height="15" fill="rgb(216,99,33)" fg:x="2339" fg:w="1"/><text x="91.0850%" y="847.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="90.8350%" y="821" width="0.0388%" height="15" fill="rgb(235,84,23)" fg:x="2339" fg:w="1"/><text x="91.0850%" y="831.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.04%)</title><rect x="90.8350%" y="805" width="0.0388%" height="15" fill="rgb(232,2,27)" fg:x="2339" fg:w="1"/><text x="91.0850%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="90.8350%" y="789" width="0.0388%" height="15" fill="rgb(241,23,22)" fg:x="2339" fg:w="1"/><text x="91.0850%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.04%)</title><rect x="90.8350%" y="773" width="0.0388%" height="15" fill="rgb(211,73,27)" fg:x="2339" fg:w="1"/><text x="91.0850%" y="783.50"></text></g><g><title>wgpu_test`bevy_core::label::entity_labels_system (1 samples, 0.04%)</title><rect x="90.8738%" y="789" width="0.0388%" height="15" fill="rgb(235,109,49)" fg:x="2340" fg:w="1"/><text x="91.1238%" y="799.50"></text></g><g><title>wgpu_test`bevy_ecs::system::system_param::RemovedComponents&lt;T&gt;::iter (1 samples, 0.04%)</title><rect x="90.8738%" y="773" width="0.0388%" height="15" fill="rgb(230,99,29)" fg:x="2340" fg:w="1"/><text x="91.1238%" y="783.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::removed_with_id (1 samples, 0.04%)</title><rect x="90.8738%" y="757" width="0.0388%" height="15" fill="rgb(245,199,7)" fg:x="2340" fg:w="1"/><text x="91.1238%" y="767.50"></text></g><g><title>wgpu_test`core::iter::adapters::cloned::Cloned&lt;I&gt;::new (1 samples, 0.04%)</title><rect x="90.8738%" y="741" width="0.0388%" height="15" fill="rgb(217,179,10)" fg:x="2340" fg:w="1"/><text x="91.1238%" y="751.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::CommandSink::blit_commands (1 samples, 0.04%)</title><rect x="90.9126%" y="757" width="0.0388%" height="15" fill="rgb(254,99,47)" fg:x="2341" fg:w="1"/><text x="91.1626%" y="767.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::new_blit_command_encoder (1 samples, 0.04%)</title><rect x="90.9126%" y="741" width="0.0388%" height="15" fill="rgb(251,121,7)" fg:x="2341" fg:w="1"/><text x="91.1626%" y="751.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="90.9126%" y="725" width="0.0388%" height="15" fill="rgb(250,177,26)" fg:x="2341" fg:w="1"/><text x="91.1626%" y="735.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="90.9126%" y="709" width="0.0388%" height="15" fill="rgb(232,88,15)" fg:x="2341" fg:w="1"/><text x="91.1626%" y="719.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer blitCommandEncoder] (1 samples, 0.04%)</title><rect x="90.9126%" y="693" width="0.0388%" height="15" fill="rgb(251,54,54)" fg:x="2341" fg:w="1"/><text x="91.1626%" y="703.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.04%)</title><rect x="90.9126%" y="677" width="0.0388%" height="15" fill="rgb(208,177,15)" fg:x="2341" fg:w="1"/><text x="91.1626%" y="687.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (8 samples, 0.31%)</title><rect x="90.9515%" y="693" width="0.3107%" height="15" fill="rgb(205,97,32)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (8 samples, 0.31%)</title><rect x="90.9515%" y="677" width="0.3107%" height="15" fill="rgb(217,192,13)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="687.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (8 samples, 0.31%)</title><rect x="90.9515%" y="661" width="0.3107%" height="15" fill="rgb(215,163,41)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="671.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (8 samples, 0.31%)</title><rect x="90.9515%" y="645" width="0.3107%" height="15" fill="rgb(246,83,29)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="655.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (8 samples, 0.31%)</title><rect x="90.9515%" y="629" width="0.3107%" height="15" fill="rgb(219,2,45)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="639.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (8 samples, 0.31%)</title><rect x="90.9515%" y="613" width="0.3107%" height="15" fill="rgb(242,215,33)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="623.50"></text></g><g><title>IOKit`IOConnectCallMethod (8 samples, 0.31%)</title><rect x="90.9515%" y="597" width="0.3107%" height="15" fill="rgb(217,1,6)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="607.50"></text></g><g><title>IOKit`io_connect_method (8 samples, 0.31%)</title><rect x="90.9515%" y="581" width="0.3107%" height="15" fill="rgb(207,85,52)" fg:x="2342" fg:w="8"/><text x="91.2015%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (7 samples, 0.27%)</title><rect x="90.9903%" y="565" width="0.2718%" height="15" fill="rgb(231,171,19)" fg:x="2343" fg:w="7"/><text x="91.2403%" y="575.50"></text></g><g><title>wgpu_test`metal::device::DeviceRef::new_buffer_with_data (11 samples, 0.43%)</title><rect x="90.9515%" y="757" width="0.4272%" height="15" fill="rgb(207,128,4)" fg:x="2342" fg:w="11"/><text x="91.2015%" y="767.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (11 samples, 0.43%)</title><rect x="90.9515%" y="741" width="0.4272%" height="15" fill="rgb(219,208,4)" fg:x="2342" fg:w="11"/><text x="91.2015%" y="751.50"></text></g><g><title>wgpu_test`&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (11 samples, 0.43%)</title><rect x="90.9515%" y="725" width="0.4272%" height="15" fill="rgb(235,161,42)" fg:x="2342" fg:w="11"/><text x="91.2015%" y="735.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlDevice newBufferWithBytes:length:options:] (11 samples, 0.43%)</title><rect x="90.9515%" y="709" width="0.4272%" height="15" fill="rgb(247,218,18)" fg:x="2342" fg:w="11"/><text x="91.2015%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="91.2621%" y="693" width="0.1165%" height="15" fill="rgb(232,114,51)" fg:x="2350" fg:w="3"/><text x="91.5121%" y="703.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::update_buffer (13 samples, 0.50%)</title><rect x="90.9126%" y="773" width="0.5049%" height="15" fill="rgb(222,95,3)" fg:x="2341" fg:w="13"/><text x="91.1626%" y="783.50"></text></g><g><title>wgpu_test`metal::resource::ResourceRef::set_label (1 samples, 0.04%)</title><rect x="91.3786%" y="757" width="0.0388%" height="15" fill="rgb(240,65,29)" fg:x="2353" fg:w="1"/><text x="91.6286%" y="767.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="91.3786%" y="741" width="0.0388%" height="15" fill="rgb(249,209,20)" fg:x="2353" fg:w="1"/><text x="91.6286%" y="751.50"></text></g><g><title>wgpu_test`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="91.3786%" y="725" width="0.0388%" height="15" fill="rgb(241,48,37)" fg:x="2353" fg:w="1"/><text x="91.6286%" y="735.50"></text></g><g><title>Metal`-[MTLIOAccelResource setLabel:] (1 samples, 0.04%)</title><rect x="91.3786%" y="709" width="0.0388%" height="15" fill="rgb(230,140,42)" fg:x="2353" fg:w="1"/><text x="91.6286%" y="719.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (1 samples, 0.04%)</title><rect x="91.4175%" y="741" width="0.0388%" height="15" fill="rgb(230,176,45)" fg:x="2354" fg:w="1"/><text x="91.6675%" y="751.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::State::reset_resources (1 samples, 0.04%)</title><rect x="91.4175%" y="725" width="0.0388%" height="15" fill="rgb(245,112,21)" fg:x="2354" fg:w="1"/><text x="91.6675%" y="735.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::StageResources::clear (1 samples, 0.04%)</title><rect x="91.4175%" y="709" width="0.0388%" height="15" fill="rgb(207,183,35)" fg:x="2354" fg:w="1"/><text x="91.6675%" y="719.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.04%)</title><rect x="91.4175%" y="693" width="0.0388%" height="15" fill="rgb(227,44,33)" fg:x="2354" fg:w="1"/><text x="91.6675%" y="703.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.04%)</title><rect x="91.4175%" y="677" width="0.0388%" height="15" fill="rgb(246,120,21)" fg:x="2354" fg:w="1"/><text x="91.6675%" y="687.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="91.4175%" y="661" width="0.0388%" height="15" fill="rgb(235,57,52)" fg:x="2354" fg:w="1"/><text x="91.6675%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderArray initWithCapacity:] (1 samples, 0.04%)</title><rect x="91.4563%" y="517" width="0.0388%" height="15" fill="rgb(238,84,10)" fg:x="2355" fg:w="1"/><text x="91.7063%" y="527.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn (2 samples, 0.08%)</title><rect x="91.4563%" y="741" width="0.0777%" height="15" fill="rgb(251,200,32)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="751.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (2 samples, 0.08%)</title><rect x="91.4563%" y="725" width="0.0777%" height="15" fill="rgb(247,159,13)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="735.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn::_{{closure}} (2 samples, 0.08%)</title><rect x="91.4563%" y="709" width="0.0777%" height="15" fill="rgb(238,64,4)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="719.50"></text></g><g><title>wgpu_test`gfx_backend_metal::command::QueueInner::spawn_temp (2 samples, 0.08%)</title><rect x="91.4563%" y="693" width="0.0777%" height="15" fill="rgb(221,131,51)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="703.50"></text></g><g><title>wgpu_test`metal::commandqueue::CommandQueueRef::new_command_buffer_with_unretained_references (2 samples, 0.08%)</title><rect x="91.4563%" y="677" width="0.0777%" height="15" fill="rgb(242,5,29)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="687.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (2 samples, 0.08%)</title><rect x="91.4563%" y="661" width="0.0777%" height="15" fill="rgb(214,130,32)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="671.50"></text></g><g><title>wgpu_test`&lt;() as objc::message::MessageArguments&gt;::invoke (2 samples, 0.08%)</title><rect x="91.4563%" y="645" width="0.0777%" height="15" fill="rgb(244,210,16)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="655.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdQueue commandBufferWithUnretainedReferences] (2 samples, 0.08%)</title><rect x="91.4563%" y="629" width="0.0777%" height="15" fill="rgb(234,48,26)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="639.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:] (2 samples, 0.08%)</title><rect x="91.4563%" y="613" width="0.0777%" height="15" fill="rgb(231,82,38)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="623.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:] (2 samples, 0.08%)</title><rect x="91.4563%" y="597" width="0.0777%" height="15" fill="rgb(254,128,41)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="607.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFX10_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.08%)</title><rect x="91.4563%" y="581" width="0.0777%" height="15" fill="rgb(212,73,49)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="591.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[GFXAAMD_MtlCmdBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.08%)</title><rect x="91.4563%" y="565" width="0.0777%" height="15" fill="rgb(205,62,54)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="575.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.08%)</title><rect x="91.4563%" y="549" width="0.0777%" height="15" fill="rgb(228,0,8)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="559.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.08%)</title><rect x="91.4563%" y="533" width="0.0777%" height="15" fill="rgb(251,28,17)" fg:x="2355" fg:w="2"/><text x="91.7063%" y="543.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue device] (1 samples, 0.04%)</title><rect x="91.4951%" y="517" width="0.0388%" height="15" fill="rgb(238,105,27)" fg:x="2356" fg:w="1"/><text x="91.7451%" y="527.50"></text></g><g><title>wgpu_test`gfx_hal::command::CommandBuffer::begin_primary (4 samples, 0.16%)</title><rect x="91.4175%" y="773" width="0.1553%" height="15" fill="rgb(237,216,33)" fg:x="2354" fg:w="4"/><text x="91.6675%" y="783.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (4 samples, 0.16%)</title><rect x="91.4175%" y="757" width="0.1553%" height="15" fill="rgb(229,228,25)" fg:x="2354" fg:w="4"/><text x="91.6675%" y="767.50"></text></g><g><title>wgpu_test`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.04%)</title><rect x="91.5340%" y="741" width="0.0388%" height="15" fill="rgb(233,75,23)" fg:x="2357" fg:w="1"/><text x="91.7840%" y="751.50"></text></g><g><title>wgpu_test`metal::nsstring_from_str (1 samples, 0.04%)</title><rect x="91.5340%" y="725" width="0.0388%" height="15" fill="rgb(231,207,16)" fg:x="2357" fg:w="1"/><text x="91.7840%" y="735.50"></text></g><g><title>wgpu_test`objc::message::platform::send_unverified (1 samples, 0.04%)</title><rect x="91.5340%" y="709" width="0.0388%" height="15" fill="rgb(231,191,45)" fg:x="2357" fg:w="1"/><text x="91.7840%" y="719.50"></text></g><g><title>wgpu_test`&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.04%)</title><rect x="91.5340%" y="693" width="0.0388%" height="15" fill="rgb(224,133,17)" fg:x="2357" fg:w="1"/><text x="91.7840%" y="703.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.04%)</title><rect x="91.5340%" y="677" width="0.0388%" height="15" fill="rgb(209,178,27)" fg:x="2357" fg:w="1"/><text x="91.7840%" y="687.50"></text></g><g><title>CoreFoundation`_CFGetTSD (1 samples, 0.04%)</title><rect x="91.5340%" y="661" width="0.0388%" height="15" fill="rgb(218,37,11)" fg:x="2357" fg:w="1"/><text x="91.7840%" y="671.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="91.5728%" y="741" width="0.0388%" height="15" fill="rgb(251,226,25)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="751.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="91.5728%" y="725" width="0.0388%" height="15" fill="rgb(209,222,27)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="735.50"></text></g><g><title>wgpu_test`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="91.5728%" y="709" width="0.0388%" height="15" fill="rgb(238,22,21)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="719.50"></text></g><g><title>wgpu_test`smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.04%)</title><rect x="91.5728%" y="693" width="0.0388%" height="15" fill="rgb(233,161,25)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="703.50"></text></g><g><title>wgpu_test`smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.04%)</title><rect x="91.5728%" y="677" width="0.0388%" height="15" fill="rgb(226,122,53)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="687.50"></text></g><g><title>wgpu_test`smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.04%)</title><rect x="91.5728%" y="661" width="0.0388%" height="15" fill="rgb(220,123,17)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="671.50"></text></g><g><title>wgpu_test`smallvec::SmallVec&lt;A&gt;::inline_capacity (1 samples, 0.04%)</title><rect x="91.5728%" y="645" width="0.0388%" height="15" fill="rgb(230,224,35)" fg:x="2358" fg:w="1"/><text x="91.8228%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (1 samples, 0.04%)</title><rect x="91.6117%" y="725" width="0.0388%" height="15" fill="rgb(246,83,8)" fg:x="2359" fg:w="1"/><text x="91.8617%" y="735.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="91.6893%" y="677" width="0.0388%" height="15" fill="rgb(230,214,17)" fg:x="2361" fg:w="1"/><text x="91.9393%" y="687.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.08%)</title><rect x="91.6893%" y="709" width="0.0777%" height="15" fill="rgb(222,97,18)" fg:x="2361" fg:w="2"/><text x="91.9393%" y="719.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="91.6893%" y="693" width="0.0777%" height="15" fill="rgb(206,79,1)" fg:x="2361" fg:w="2"/><text x="91.9393%" y="703.50"></text></g><g><title>wgpu_test`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="91.7282%" y="677" width="0.0388%" height="15" fill="rgb(214,121,34)" fg:x="2362" fg:w="1"/><text x="91.9782%" y="687.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;u32,&lt;alloc::vec::Vec&lt;u32&gt; as alloc::vec::spec_extend::SpecExtend&lt;u32,alloc::vec::drain::Drain&lt;u32&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="91.7282%" y="661" width="0.0388%" height="15" fill="rgb(249,199,46)" fg:x="2362" fg:w="1"/><text x="91.9782%" y="671.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="91.7670%" y="709" width="0.0388%" height="15" fill="rgb(214,222,46)" fg:x="2363" fg:w="1"/><text x="92.0170%" y="719.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="91.7670%" y="693" width="0.0388%" height="15" fill="rgb(248,168,30)" fg:x="2363" fg:w="1"/><text x="92.0170%" y="703.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="91.8058%" y="709" width="0.0388%" height="15" fill="rgb(226,14,28)" fg:x="2364" fg:w="1"/><text x="92.0558%" y="719.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="91.8058%" y="693" width="0.0388%" height="15" fill="rgb(253,123,1)" fg:x="2364" fg:w="1"/><text x="92.0558%" y="703.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit::_{{closure}} (6 samples, 0.23%)</title><rect x="91.6505%" y="725" width="0.2330%" height="15" fill="rgb(225,24,42)" fg:x="2360" fg:w="6"/><text x="91.9005%" y="735.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="91.8447%" y="709" width="0.0388%" height="15" fill="rgb(216,161,37)" fg:x="2365" fg:w="1"/><text x="92.0947%" y="719.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="91.8447%" y="693" width="0.0388%" height="15" fill="rgb(251,164,26)" fg:x="2365" fg:w="1"/><text x="92.0947%" y="703.50"></text></g><g><title>wgpu_test`&lt;metal::commandbuffer::CommandBuffer as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="91.8835%" y="725" width="0.0388%" height="15" fill="rgb(219,177,3)" fg:x="2366" fg:w="1"/><text x="92.1335%" y="735.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (29 samples, 1.13%)</title><rect x="90.8350%" y="853" width="1.1262%" height="15" fill="rgb(222,65,0)" fg:x="2339" fg:w="29"/><text x="91.0850%" y="863.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (28 samples, 1.09%)</title><rect x="90.8738%" y="837" width="1.0874%" height="15" fill="rgb(223,69,54)" fg:x="2340" fg:w="28"/><text x="91.1238%" y="847.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28 samples, 1.09%)</title><rect x="90.8738%" y="821" width="1.0874%" height="15" fill="rgb(235,30,27)" fg:x="2340" fg:w="28"/><text x="91.1238%" y="831.50"></text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (28 samples, 1.09%)</title><rect x="90.8738%" y="805" width="1.0874%" height="15" fill="rgb(220,183,50)" fg:x="2340" fg:w="28"/><text x="91.1238%" y="815.50"></text></g><g><title>wgpu_test`wgpu_test::world::update_world (27 samples, 1.05%)</title><rect x="90.9126%" y="789" width="1.0485%" height="15" fill="rgb(248,198,15)" fg:x="2341" fg:w="27"/><text x="91.1626%" y="799.50"></text></g><g><title>wgpu_test`gfx_hal::queue::CommandQueue::submit_without_semaphores (10 samples, 0.39%)</title><rect x="91.5728%" y="773" width="0.3883%" height="15" fill="rgb(222,211,4)" fg:x="2358" fg:w="10"/><text x="91.8228%" y="783.50"></text></g><g><title>wgpu_test`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (10 samples, 0.39%)</title><rect x="91.5728%" y="757" width="0.3883%" height="15" fill="rgb(214,102,34)" fg:x="2358" fg:w="10"/><text x="91.8228%" y="767.50"></text></g><g><title>wgpu_test`objc::rc::autorelease::autoreleasepool (9 samples, 0.35%)</title><rect x="91.6117%" y="741" width="0.3495%" height="15" fill="rgb(245,92,5)" fg:x="2359" fg:w="9"/><text x="91.8617%" y="751.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="91.9223%" y="725" width="0.0388%" height="15" fill="rgb(252,72,51)" fg:x="2367" fg:w="1"/><text x="92.1723%" y="735.50"></text></g><g><title>wgpu_test`&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="91.9612%" y="837" width="0.0388%" height="15" fill="rgb(252,208,19)" fg:x="2368" fg:w="1"/><text x="92.2112%" y="847.50"></text></g><g><title>wgpu_test`bevy_ecs::system::query::Query&lt;Q,F&gt;::new (1 samples, 0.04%)</title><rect x="91.9612%" y="821" width="0.0388%" height="15" fill="rgb(211,69,7)" fg:x="2368" fg:w="1"/><text x="92.2112%" y="831.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (2 samples, 0.08%)</title><rect x="91.9612%" y="853" width="0.0777%" height="15" fill="rgb(211,27,16)" fg:x="2368" fg:w="2"/><text x="92.2112%" y="863.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (1 samples, 0.04%)</title><rect x="92.0000%" y="837" width="0.0388%" height="15" fill="rgb(219,216,14)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="847.50"></text></g><g><title>wgpu_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="92.0000%" y="821" width="0.0388%" height="15" fill="rgb(219,71,8)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="831.50"></text></g><g><title>wgpu_test`core::ops::function::FnMut::call_mut (1 samples, 0.04%)</title><rect x="92.0000%" y="805" width="0.0388%" height="15" fill="rgb(223,170,53)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="815.50"></text></g><g><title>wgpu_test`bevy_transform::hierarchy::hierarchy_maintenance_system::parent_update_system (1 samples, 0.04%)</title><rect x="92.0000%" y="789" width="0.0388%" height="15" fill="rgb(246,21,26)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="799.50"></text></g><g><title>wgpu_test`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="92.0000%" y="773" width="0.0388%" height="15" fill="rgb(248,20,46)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="783.50"></text></g><g><title>wgpu_test`std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.04%)</title><rect x="92.0000%" y="757" width="0.0388%" height="15" fill="rgb(252,94,11)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="767.50"></text></g><g><title>wgpu_test`hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.04%)</title><rect x="92.0000%" y="741" width="0.0388%" height="15" fill="rgb(236,163,8)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="751.50"></text></g><g><title>wgpu_test`hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="92.0000%" y="725" width="0.0388%" height="15" fill="rgb(217,221,45)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="735.50"></text></g><g><title>wgpu_test`hashbrown::raw::sse2::Group::static_empty (1 samples, 0.04%)</title><rect x="92.0000%" y="709" width="0.0388%" height="15" fill="rgb(238,38,17)" fg:x="2369" fg:w="1"/><text x="92.2500%" y="719.50"></text></g><g><title>wgpu_test`&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (1 samples, 0.04%)</title><rect x="92.0388%" y="853" width="0.0388%" height="15" fill="rgb(242,210,23)" fg:x="2370" fg:w="1"/><text x="92.2888%" y="863.50"></text></g><g><title>wgpu_test`&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="92.0388%" y="837" width="0.0388%" height="15" fill="rgb(250,86,53)" fg:x="2370" fg:w="1"/><text x="92.2888%" y="847.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.04%)</title><rect x="92.0388%" y="821" width="0.0388%" height="15" fill="rgb(223,168,25)" fg:x="2370" fg:w="1"/><text x="92.2888%" y="831.50"></text></g><g><title>wgpu_test`bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.04%)</title><rect x="92.0388%" y="805" width="0.0388%" height="15" fill="rgb(251,189,4)" fg:x="2370" fg:w="1"/><text x="92.2888%" y="815.50"></text></g><g><title>wgpu_test`bevy_ecs::archetype::Archetypes::resource (1 samples, 0.04%)</title><rect x="92.0388%" y="789" width="0.0388%" height="15" fill="rgb(245,19,28)" fg:x="2370" fg:w="1"/><text x="92.2888%" y="799.50"></text></g><g><title>wgpu_test`core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="92.0388%" y="773" width="0.0388%" height="15" fill="rgb(207,10,34)" fg:x="2370" fg:w="1"/><text x="92.2888%" y="783.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::as_mut (1 samples, 0.04%)</title><rect x="92.0777%" y="853" width="0.0388%" height="15" fill="rgb(235,153,31)" fg:x="2371" fg:w="1"/><text x="92.3277%" y="863.50"></text></g><g><title>wgpu_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (115 samples, 4.47%)</title><rect x="87.6893%" y="869" width="4.4660%" height="15" fill="rgb(228,72,37)" fg:x="2258" fg:w="115"/><text x="87.9393%" y="879.50">wgpu_..</text></g><g><title>wgpu_test`core::sync::atomic::AtomicU32::fetch_add (1 samples, 0.04%)</title><rect x="92.1165%" y="853" width="0.0388%" height="15" fill="rgb(215,15,16)" fg:x="2372" fg:w="1"/><text x="92.3665%" y="863.50"></text></g><g><title>wgpu_test`&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="92.1553%" y="869" width="0.0388%" height="15" fill="rgb(250,119,29)" fg:x="2373" fg:w="1"/><text x="92.4053%" y="879.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (1 samples, 0.04%)</title><rect x="92.1942%" y="869" width="0.0388%" height="15" fill="rgb(214,59,1)" fg:x="2374" fg:w="1"/><text x="92.4442%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (2 samples, 0.08%)</title><rect x="92.2330%" y="869" width="0.0777%" height="15" fill="rgb(223,109,25)" fg:x="2375" fg:w="2"/><text x="92.4830%" y="879.50"></text></g><g><title>wgpu_test`&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.2718%" y="853" width="0.0388%" height="15" fill="rgb(230,198,22)" fg:x="2376" fg:w="1"/><text x="92.5218%" y="863.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.04%)</title><rect x="92.2718%" y="837" width="0.0388%" height="15" fill="rgb(245,184,46)" fg:x="2376" fg:w="1"/><text x="92.5218%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_sub (1 samples, 0.04%)</title><rect x="92.2718%" y="821" width="0.0388%" height="15" fill="rgb(253,73,16)" fg:x="2376" fg:w="1"/><text x="92.5218%" y="831.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="92.3107%" y="773" width="0.0388%" height="15" fill="rgb(206,94,45)" fg:x="2377" fg:w="1"/><text x="92.5607%" y="783.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="92.3107%" y="757" width="0.0388%" height="15" fill="rgb(236,83,27)" fg:x="2377" fg:w="1"/><text x="92.5607%" y="767.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::get (1 samples, 0.04%)</title><rect x="92.3107%" y="741" width="0.0388%" height="15" fill="rgb(220,196,8)" fg:x="2377" fg:w="1"/><text x="92.5607%" y="751.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::load (1 samples, 0.04%)</title><rect x="92.3107%" y="725" width="0.0388%" height="15" fill="rgb(254,185,14)" fg:x="2377" fg:w="1"/><text x="92.5607%" y="735.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="92.3107%" y="709" width="0.0388%" height="15" fill="rgb(226,50,22)" fg:x="2377" fg:w="1"/><text x="92.5607%" y="719.50"></text></g><g><title>wgpu_test`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="92.3107%" y="821" width="0.0777%" height="15" fill="rgb(253,147,0)" fg:x="2377" fg:w="2"/><text x="92.5607%" y="831.50"></text></g><g><title>wgpu_test`event_listener::Inner::lock (2 samples, 0.08%)</title><rect x="92.3107%" y="805" width="0.0777%" height="15" fill="rgb(252,46,33)" fg:x="2377" fg:w="2"/><text x="92.5607%" y="815.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.08%)</title><rect x="92.3107%" y="789" width="0.0777%" height="15" fill="rgb(242,22,54)" fg:x="2377" fg:w="2"/><text x="92.5607%" y="799.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="92.3495%" y="773" width="0.0388%" height="15" fill="rgb(223,178,32)" fg:x="2378" fg:w="1"/><text x="92.5995%" y="783.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="92.3495%" y="757" width="0.0388%" height="15" fill="rgb(214,106,53)" fg:x="2378" fg:w="1"/><text x="92.5995%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="92.3495%" y="741" width="0.0388%" height="15" fill="rgb(232,65,50)" fg:x="2378" fg:w="1"/><text x="92.5995%" y="751.50"></text></g><g><title>wgpu_test`core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="92.3883%" y="821" width="0.0388%" height="15" fill="rgb(231,110,28)" fg:x="2379" fg:w="1"/><text x="92.6383%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (1 samples, 0.04%)</title><rect x="92.4272%" y="821" width="0.0388%" height="15" fill="rgb(216,71,40)" fg:x="2380" fg:w="1"/><text x="92.6772%" y="831.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.4272%" y="805" width="0.0388%" height="15" fill="rgb(229,89,53)" fg:x="2380" fg:w="1"/><text x="92.6772%" y="815.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="92.4272%" y="789" width="0.0388%" height="15" fill="rgb(210,124,14)" fg:x="2380" fg:w="1"/><text x="92.6772%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="92.4272%" y="773" width="0.0388%" height="15" fill="rgb(236,213,6)" fg:x="2380" fg:w="1"/><text x="92.6772%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (5 samples, 0.19%)</title><rect x="92.3107%" y="869" width="0.1942%" height="15" fill="rgb(228,41,5)" fg:x="2377" fg:w="5"/><text x="92.5607%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (5 samples, 0.19%)</title><rect x="92.3107%" y="853" width="0.1942%" height="15" fill="rgb(221,167,25)" fg:x="2377" fg:w="5"/><text x="92.5607%" y="863.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (5 samples, 0.19%)</title><rect x="92.3107%" y="837" width="0.1942%" height="15" fill="rgb(228,144,37)" fg:x="2377" fg:w="5"/><text x="92.5607%" y="847.50"></text></g><g><title>wgpu_test`event_listener::List::remove (1 samples, 0.04%)</title><rect x="92.4660%" y="821" width="0.0388%" height="15" fill="rgb(227,189,38)" fg:x="2381" fg:w="1"/><text x="92.7160%" y="831.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (1 samples, 0.04%)</title><rect x="92.5049%" y="869" width="0.0388%" height="15" fill="rgb(218,8,2)" fg:x="2382" fg:w="1"/><text x="92.7549%" y="879.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.5049%" y="853" width="0.0388%" height="15" fill="rgb(209,61,28)" fg:x="2382" fg:w="1"/><text x="92.7549%" y="863.50"></text></g><g><title>wgpu_test`bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::_{{closure}} (197 samples, 7.65%)</title><rect x="84.9320%" y="885" width="7.6505%" height="15" fill="rgb(233,140,39)" fg:x="2187" fg:w="197"/><text x="85.1820%" y="895.50">wgpu_test`..</text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (1 samples, 0.04%)</title><rect x="92.5437%" y="869" width="0.0388%" height="15" fill="rgb(251,66,48)" fg:x="2383" fg:w="1"/><text x="92.7937%" y="879.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="92.5825%" y="885" width="0.0388%" height="15" fill="rgb(210,44,45)" fg:x="2384" fg:w="1"/><text x="92.8325%" y="895.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 11.26%)</title><rect x="81.3981%" y="901" width="11.2621%" height="15" fill="rgb(214,136,46)" fg:x="2096" fg:w="290"/><text x="81.6481%" y="911.50">wgpu_test`&lt;core::..</text></g><g><title>wgpu_test`fixedbitset::FixedBitSet::count_ones (1 samples, 0.04%)</title><rect x="92.6214%" y="885" width="0.0388%" height="15" fill="rgb(207,130,50)" fg:x="2385" fg:w="1"/><text x="92.8714%" y="895.50"></text></g><g><title>wgpu_test`core::mem::drop (1 samples, 0.04%)</title><rect x="92.6602%" y="853" width="0.0388%" height="15" fill="rgb(228,102,49)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="863.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.04%)</title><rect x="92.6602%" y="837" width="0.0388%" height="15" fill="rgb(253,55,1)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.6602%" y="821" width="0.0388%" height="15" fill="rgb(238,222,9)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="831.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.04%)</title><rect x="92.6602%" y="805" width="0.0388%" height="15" fill="rgb(246,99,6)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="815.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="92.6602%" y="789" width="0.0388%" height="15" fill="rgb(219,110,26)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="799.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="92.6602%" y="773" width="0.0388%" height="15" fill="rgb(239,160,33)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="783.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="92.6602%" y="757" width="0.0388%" height="15" fill="rgb(220,202,23)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="767.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="92.6602%" y="741" width="0.0388%" height="15" fill="rgb(208,80,26)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="751.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="92.6602%" y="725" width="0.0388%" height="15" fill="rgb(243,85,7)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="735.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="92.6602%" y="709" width="0.0388%" height="15" fill="rgb(228,77,47)" fg:x="2386" fg:w="1"/><text x="92.9102%" y="719.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::remove (1 samples, 0.04%)</title><rect x="92.6990%" y="853" width="0.0388%" height="15" fill="rgb(212,226,8)" fg:x="2387" fg:w="1"/><text x="92.9490%" y="863.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::try_remove (1 samples, 0.04%)</title><rect x="92.6990%" y="837" width="0.0388%" height="15" fill="rgb(241,120,54)" fg:x="2387" fg:w="1"/><text x="92.9490%" y="847.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get_mut (1 samples, 0.04%)</title><rect x="92.6990%" y="821" width="0.0388%" height="15" fill="rgb(226,80,16)" fg:x="2387" fg:w="1"/><text x="92.9490%" y="831.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (1 samples, 0.04%)</title><rect x="92.6990%" y="805" width="0.0388%" height="15" fill="rgb(240,76,13)" fg:x="2387" fg:w="1"/><text x="92.9490%" y="815.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="92.6990%" y="789" width="0.0388%" height="15" fill="rgb(252,74,8)" fg:x="2387" fg:w="1"/><text x="92.9490%" y="799.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="92.6602%" y="885" width="0.1165%" height="15" fill="rgb(244,155,2)" fg:x="2386" fg:w="3"/><text x="92.9102%" y="895.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}}::_{{closure}} (3 samples, 0.12%)</title><rect x="92.6602%" y="869" width="0.1165%" height="15" fill="rgb(215,81,35)" fg:x="2386" fg:w="3"/><text x="92.9102%" y="879.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="92.7379%" y="853" width="0.0388%" height="15" fill="rgb(206,55,2)" fg:x="2388" fg:w="1"/><text x="92.9879%" y="863.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="92.7379%" y="837" width="0.0388%" height="15" fill="rgb(231,2,34)" fg:x="2388" fg:w="1"/><text x="92.9879%" y="847.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="92.7379%" y="821" width="0.0388%" height="15" fill="rgb(242,176,48)" fg:x="2388" fg:w="1"/><text x="92.9879%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="92.7379%" y="805" width="0.0388%" height="15" fill="rgb(249,31,36)" fg:x="2388" fg:w="1"/><text x="92.9879%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.04%)</title><rect x="92.7379%" y="789" width="0.0388%" height="15" fill="rgb(205,18,17)" fg:x="2388" fg:w="1"/><text x="92.9879%" y="799.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (4 samples, 0.16%)</title><rect x="92.6602%" y="901" width="0.1553%" height="15" fill="rgb(254,130,5)" fg:x="2386" fg:w="4"/><text x="92.9102%" y="911.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.04%)</title><rect x="92.7767%" y="885" width="0.0388%" height="15" fill="rgb(229,42,45)" fg:x="2389" fg:w="1"/><text x="93.0267%" y="895.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="92.8155%" y="869" width="0.0388%" height="15" fill="rgb(245,95,25)" fg:x="2390" fg:w="1"/><text x="93.0655%" y="879.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="92.8544%" y="773" width="0.0388%" height="15" fill="rgb(249,193,38)" fg:x="2391" fg:w="1"/><text x="93.1044%" y="783.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="92.8544%" y="757" width="0.0388%" height="15" fill="rgb(241,140,43)" fg:x="2391" fg:w="1"/><text x="93.1044%" y="767.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="92.8544%" y="741" width="0.0388%" height="15" fill="rgb(245,78,48)" fg:x="2391" fg:w="1"/><text x="93.1044%" y="751.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="92.8544%" y="725" width="0.0388%" height="15" fill="rgb(214,92,39)" fg:x="2391" fg:w="1"/><text x="93.1044%" y="735.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="92.8544%" y="709" width="0.0388%" height="15" fill="rgb(211,189,14)" fg:x="2391" fg:w="1"/><text x="93.1044%" y="719.50"></text></g><g><title>wgpu_test`core::mem::drop (2 samples, 0.08%)</title><rect x="92.8544%" y="853" width="0.0777%" height="15" fill="rgb(218,7,24)" fg:x="2391" fg:w="2"/><text x="93.1044%" y="863.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.08%)</title><rect x="92.8544%" y="837" width="0.0777%" height="15" fill="rgb(224,200,49)" fg:x="2391" fg:w="2"/><text x="93.1044%" y="847.50"></text></g><g><title>wgpu_test`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="92.8544%" y="821" width="0.0777%" height="15" fill="rgb(218,210,14)" fg:x="2391" fg:w="2"/><text x="93.1044%" y="831.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.08%)</title><rect x="92.8544%" y="805" width="0.0777%" height="15" fill="rgb(234,142,31)" fg:x="2391" fg:w="2"/><text x="93.1044%" y="815.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (2 samples, 0.08%)</title><rect x="92.8544%" y="789" width="0.0777%" height="15" fill="rgb(227,165,2)" fg:x="2391" fg:w="2"/><text x="93.1044%" y="799.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="92.8932%" y="773" width="0.0388%" height="15" fill="rgb(232,44,46)" fg:x="2392" fg:w="1"/><text x="93.1432%" y="783.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (3 samples, 0.12%)</title><rect x="92.9320%" y="853" width="0.1165%" height="15" fill="rgb(236,149,47)" fg:x="2393" fg:w="3"/><text x="93.1820%" y="863.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="92.9320%" y="837" width="0.1165%" height="15" fill="rgb(227,45,31)" fg:x="2393" fg:w="3"/><text x="93.1820%" y="847.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.12%)</title><rect x="92.9320%" y="821" width="0.1165%" height="15" fill="rgb(240,176,51)" fg:x="2393" fg:w="3"/><text x="93.1820%" y="831.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::unlock (3 samples, 0.12%)</title><rect x="92.9320%" y="805" width="0.1165%" height="15" fill="rgb(249,146,41)" fg:x="2393" fg:w="3"/><text x="93.1820%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.12%)</title><rect x="92.9320%" y="789" width="0.1165%" height="15" fill="rgb(213,208,4)" fg:x="2393" fg:w="3"/><text x="93.1820%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.12%)</title><rect x="92.9320%" y="773" width="0.1165%" height="15" fill="rgb(245,84,36)" fg:x="2393" fg:w="3"/><text x="93.1820%" y="783.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="93.1650%" y="837" width="0.0388%" height="15" fill="rgb(254,84,18)" fg:x="2399" fg:w="1"/><text x="93.4150%" y="847.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="93.1650%" y="821" width="0.0388%" height="15" fill="rgb(225,38,54)" fg:x="2399" fg:w="1"/><text x="93.4150%" y="831.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::contains (5 samples, 0.19%)</title><rect x="93.0485%" y="853" width="0.1942%" height="15" fill="rgb(246,50,30)" fg:x="2396" fg:w="5"/><text x="93.2985%" y="863.50"></text></g><g><title>wgpu_test`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="93.2039%" y="837" width="0.0388%" height="15" fill="rgb(246,148,9)" fg:x="2400" fg:w="1"/><text x="93.4539%" y="847.50"></text></g><g><title>wgpu_test`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="93.2039%" y="821" width="0.0388%" height="15" fill="rgb(223,75,4)" fg:x="2400" fg:w="1"/><text x="93.4539%" y="831.50"></text></g><g><title>wgpu_test`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="93.2427%" y="789" width="0.0388%" height="15" fill="rgb(239,148,41)" fg:x="2401" fg:w="1"/><text x="93.4927%" y="799.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::remove (2 samples, 0.08%)</title><rect x="93.2427%" y="853" width="0.0777%" height="15" fill="rgb(205,195,3)" fg:x="2401" fg:w="2"/><text x="93.4927%" y="863.50"></text></g><g><title>wgpu_test`slab::Slab&lt;T&gt;::try_remove (2 samples, 0.08%)</title><rect x="93.2427%" y="837" width="0.0777%" height="15" fill="rgb(254,161,1)" fg:x="2401" fg:w="2"/><text x="93.4927%" y="847.50"></text></g><g><title>wgpu_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.08%)</title><rect x="93.2427%" y="821" width="0.0777%" height="15" fill="rgb(211,229,8)" fg:x="2401" fg:w="2"/><text x="93.4927%" y="831.50"></text></g><g><title>wgpu_test`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.08%)</title><rect x="93.2427%" y="805" width="0.0777%" height="15" fill="rgb(220,97,9)" fg:x="2401" fg:w="2"/><text x="93.4927%" y="815.50"></text></g><g><title>wgpu_test`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="93.2816%" y="789" width="0.0388%" height="15" fill="rgb(240,218,8)" fg:x="2402" fg:w="1"/><text x="93.5316%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.23%)</title><rect x="93.3204%" y="805" width="0.2330%" height="15" fill="rgb(250,44,0)" fg:x="2403" fg:w="6"/><text x="93.5704%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.23%)</title><rect x="93.3204%" y="789" width="0.2330%" height="15" fill="rgb(236,41,53)" fg:x="2403" fg:w="6"/><text x="93.5704%" y="799.50"></text></g><g><title>wgpu_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.78%)</title><rect x="92.8155%" y="885" width="0.7767%" height="15" fill="rgb(218,227,13)" fg:x="2390" fg:w="20"/><text x="93.0655%" y="895.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}}::_{{closure}} (19 samples, 0.74%)</title><rect x="92.8544%" y="869" width="0.7379%" height="15" fill="rgb(217,94,32)" fg:x="2391" fg:w="19"/><text x="93.1044%" y="879.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.27%)</title><rect x="93.3204%" y="853" width="0.2718%" height="15" fill="rgb(213,217,12)" fg:x="2403" fg:w="7"/><text x="93.5704%" y="863.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (7 samples, 0.27%)</title><rect x="93.3204%" y="837" width="0.2718%" height="15" fill="rgb(229,13,46)" fg:x="2403" fg:w="7"/><text x="93.5704%" y="847.50"></text></g><g><title>wgpu_test`std::sys::unix::mutex::Mutex::lock (7 samples, 0.27%)</title><rect x="93.3204%" y="821" width="0.2718%" height="15" fill="rgb(243,139,5)" fg:x="2403" fg:w="7"/><text x="93.5704%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="93.5534%" y="805" width="0.0388%" height="15" fill="rgb(249,38,45)" fg:x="2409" fg:w="1"/><text x="93.8034%" y="815.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="93.5922%" y="885" width="0.0388%" height="15" fill="rgb(216,70,11)" fg:x="2410" fg:w="1"/><text x="93.8422%" y="895.50"></text></g><g><title>wgpu_test`async_executor::Executor::spawn::_{{closure}} (323 samples, 12.54%)</title><rect x="81.1262%" y="917" width="12.5437%" height="15" fill="rgb(253,101,25)" fg:x="2089" fg:w="323"/><text x="81.3762%" y="927.50">wgpu_test`async_exe..</text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (22 samples, 0.85%)</title><rect x="92.8155%" y="901" width="0.8544%" height="15" fill="rgb(207,197,30)" fg:x="2390" fg:w="22"/><text x="93.0655%" y="911.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="93.6311%" y="885" width="0.0388%" height="15" fill="rgb(238,87,13)" fg:x="2411" fg:w="1"/><text x="93.8811%" y="895.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.04%)</title><rect x="93.6311%" y="869" width="0.0388%" height="15" fill="rgb(215,155,8)" fg:x="2411" fg:w="1"/><text x="93.8811%" y="879.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.6311%" y="853" width="0.0388%" height="15" fill="rgb(239,166,38)" fg:x="2411" fg:w="1"/><text x="93.8811%" y="863.50"></text></g><g><title>wgpu_test`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="93.6311%" y="837" width="0.0388%" height="15" fill="rgb(240,194,35)" fg:x="2411" fg:w="1"/><text x="93.8811%" y="847.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="93.6311%" y="821" width="0.0388%" height="15" fill="rgb(219,10,44)" fg:x="2411" fg:w="1"/><text x="93.8811%" y="831.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (324 samples, 12.58%)</title><rect x="81.1262%" y="933" width="12.5825%" height="15" fill="rgb(251,220,35)" fg:x="2089" fg:w="324"/><text x="81.3762%" y="943.50">wgpu_test`&lt;core::fu..</text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="93.6699%" y="917" width="0.0388%" height="15" fill="rgb(218,117,13)" fg:x="2412" fg:w="1"/><text x="93.9199%" y="927.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align (2 samples, 0.08%)</title><rect x="93.7087%" y="869" width="0.0777%" height="15" fill="rgb(221,213,40)" fg:x="2413" fg:w="2"/><text x="93.9587%" y="879.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="93.7476%" y="853" width="0.0388%" height="15" fill="rgb(251,224,35)" fg:x="2414" fg:w="1"/><text x="93.9976%" y="863.50"></text></g><g><title>wgpu_test`async_task::utils::extend (3 samples, 0.12%)</title><rect x="93.7087%" y="885" width="0.1165%" height="15" fill="rgb(241,33,39)" fg:x="2413" fg:w="3"/><text x="93.9587%" y="895.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="93.7864%" y="869" width="0.0388%" height="15" fill="rgb(222,74,17)" fg:x="2415" fg:w="1"/><text x="94.0364%" y="879.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (4 samples, 0.16%)</title><rect x="93.7087%" y="933" width="0.1553%" height="15" fill="rgb(225,103,0)" fg:x="2413" fg:w="4"/><text x="93.9587%" y="943.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (4 samples, 0.16%)</title><rect x="93.7087%" y="917" width="0.1553%" height="15" fill="rgb(240,0,12)" fg:x="2413" fg:w="4"/><text x="93.9587%" y="927.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (4 samples, 0.16%)</title><rect x="93.7087%" y="901" width="0.1553%" height="15" fill="rgb(233,213,37)" fg:x="2413" fg:w="4"/><text x="93.9587%" y="911.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="93.8252%" y="885" width="0.0388%" height="15" fill="rgb(225,84,52)" fg:x="2416" fg:w="1"/><text x="94.0752%" y="895.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align (1 samples, 0.04%)</title><rect x="93.9806%" y="869" width="0.0388%" height="15" fill="rgb(247,160,51)" fg:x="2420" fg:w="1"/><text x="94.2306%" y="879.50"></text></g><g><title>wgpu_test`async_task::utils::extend (4 samples, 0.16%)</title><rect x="93.9029%" y="885" width="0.1553%" height="15" fill="rgb(244,60,51)" fg:x="2418" fg:w="4"/><text x="94.1529%" y="895.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="94.0194%" y="869" width="0.0388%" height="15" fill="rgb(233,114,7)" fg:x="2421" fg:w="1"/><text x="94.2694%" y="879.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align (1 samples, 0.04%)</title><rect x="94.0583%" y="885" width="0.0388%" height="15" fill="rgb(246,136,16)" fg:x="2422" fg:w="1"/><text x="94.3083%" y="895.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (1 samples, 0.04%)</title><rect x="94.0971%" y="885" width="0.0388%" height="15" fill="rgb(243,114,45)" fg:x="2423" fg:w="1"/><text x="94.3471%" y="895.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (8 samples, 0.31%)</title><rect x="93.8641%" y="933" width="0.3107%" height="15" fill="rgb(247,183,43)" fg:x="2417" fg:w="8"/><text x="94.1141%" y="943.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (8 samples, 0.31%)</title><rect x="93.8641%" y="917" width="0.3107%" height="15" fill="rgb(251,210,42)" fg:x="2417" fg:w="8"/><text x="94.1141%" y="927.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (8 samples, 0.31%)</title><rect x="93.8641%" y="901" width="0.3107%" height="15" fill="rgb(221,88,35)" fg:x="2417" fg:w="8"/><text x="94.1141%" y="911.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="94.1359%" y="885" width="0.0388%" height="15" fill="rgb(242,21,20)" fg:x="2424" fg:w="1"/><text x="94.3859%" y="895.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="94.1359%" y="869" width="0.0388%" height="15" fill="rgb(233,226,36)" fg:x="2424" fg:w="1"/><text x="94.3859%" y="879.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align (1 samples, 0.04%)</title><rect x="94.3301%" y="885" width="0.0388%" height="15" fill="rgb(243,189,34)" fg:x="2429" fg:w="1"/><text x="94.5801%" y="895.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.04%)</title><rect x="94.3301%" y="869" width="0.0388%" height="15" fill="rgb(207,145,50)" fg:x="2429" fg:w="1"/><text x="94.5801%" y="879.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::size (1 samples, 0.04%)</title><rect x="94.3689%" y="885" width="0.0388%" height="15" fill="rgb(242,1,50)" fg:x="2430" fg:w="1"/><text x="94.6189%" y="895.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (3 samples, 0.12%)</title><rect x="94.4078%" y="885" width="0.1165%" height="15" fill="rgb(231,65,32)" fg:x="2431" fg:w="3"/><text x="94.6578%" y="895.50"></text></g><g><title>wgpu_test`core::cmp::max_by (3 samples, 0.12%)</title><rect x="94.4078%" y="869" width="0.1165%" height="15" fill="rgb(208,68,49)" fg:x="2431" fg:w="3"/><text x="94.6578%" y="879.50"></text></g><g><title>wgpu_test`async_task::utils::extend (9 samples, 0.35%)</title><rect x="94.2524%" y="901" width="0.3495%" height="15" fill="rgb(253,54,49)" fg:x="2427" fg:w="9"/><text x="94.5024%" y="911.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (2 samples, 0.08%)</title><rect x="94.5243%" y="885" width="0.0777%" height="15" fill="rgb(245,186,24)" fg:x="2434" fg:w="2"/><text x="94.7743%" y="895.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::new (4 samples, 0.16%)</title><rect x="94.6019%" y="901" width="0.1553%" height="15" fill="rgb(209,2,41)" fg:x="2436" fg:w="4"/><text x="94.8519%" y="911.50"></text></g><g><title>wgpu_test`core::alloc::layout::Layout::from_size_align_unchecked (3 samples, 0.12%)</title><rect x="94.6408%" y="885" width="0.1165%" height="15" fill="rgb(242,208,54)" fg:x="2437" fg:w="3"/><text x="94.8908%" y="895.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::new_unchecked (2 samples, 0.08%)</title><rect x="94.6796%" y="869" width="0.0777%" height="15" fill="rgb(225,9,51)" fg:x="2438" fg:w="2"/><text x="94.9296%" y="879.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="94.7573%" y="901" width="0.0388%" height="15" fill="rgb(207,207,25)" fg:x="2440" fg:w="1"/><text x="95.0073%" y="911.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="94.7573%" y="885" width="0.0388%" height="15" fill="rgb(253,96,18)" fg:x="2440" fg:w="1"/><text x="95.0073%" y="895.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (17 samples, 0.66%)</title><rect x="94.1748%" y="933" width="0.6602%" height="15" fill="rgb(252,215,20)" fg:x="2425" fg:w="17"/><text x="94.4248%" y="943.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (17 samples, 0.66%)</title><rect x="94.1748%" y="917" width="0.6602%" height="15" fill="rgb(245,227,26)" fg:x="2425" fg:w="17"/><text x="94.4248%" y="927.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="94.7961%" y="901" width="0.0388%" height="15" fill="rgb(241,208,0)" fg:x="2441" fg:w="1"/><text x="95.0461%" y="911.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="94.8738%" y="821" width="0.0388%" height="15" fill="rgb(224,130,10)" fg:x="2443" fg:w="1"/><text x="95.1238%" y="831.50"></text></g><g><title>wgpu_test`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="94.8738%" y="805" width="0.0388%" height="15" fill="rgb(237,29,0)" fg:x="2443" fg:w="1"/><text x="95.1238%" y="815.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.08%)</title><rect x="94.8738%" y="869" width="0.0777%" height="15" fill="rgb(219,27,41)" fg:x="2443" fg:w="2"/><text x="95.1238%" y="879.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (2 samples, 0.08%)</title><rect x="94.8738%" y="853" width="0.0777%" height="15" fill="rgb(245,101,19)" fg:x="2443" fg:w="2"/><text x="95.1238%" y="863.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (2 samples, 0.08%)</title><rect x="94.8738%" y="837" width="0.0777%" height="15" fill="rgb(243,44,37)" fg:x="2443" fg:w="2"/><text x="95.1238%" y="847.50"></text></g><g><title>wgpu_test`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="94.9126%" y="821" width="0.0388%" height="15" fill="rgb(228,213,43)" fg:x="2444" fg:w="1"/><text x="95.1626%" y="831.50"></text></g><g><title>wgpu_test`core::cmp::max_by (1 samples, 0.04%)</title><rect x="94.9126%" y="805" width="0.0388%" height="15" fill="rgb(219,163,21)" fg:x="2444" fg:w="1"/><text x="95.1626%" y="815.50"></text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="94.9126%" y="789" width="0.0388%" height="15" fill="rgb(234,86,24)" fg:x="2444" fg:w="1"/><text x="95.1626%" y="799.50"></text></g><g><title>wgpu_test`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="94.9126%" y="773" width="0.0388%" height="15" fill="rgb(225,10,24)" fg:x="2444" fg:w="1"/><text x="95.1626%" y="783.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="94.9515%" y="869" width="0.0388%" height="15" fill="rgb(218,109,7)" fg:x="2445" fg:w="1"/><text x="95.2015%" y="879.50"></text></g><g><title>wgpu_test`async_executor::LocalExecutor::schedule::_{{closure}} (2 samples, 0.08%)</title><rect x="94.9903%" y="853" width="0.0777%" height="15" fill="rgb(210,20,26)" fg:x="2446" fg:w="2"/><text x="95.2403%" y="863.50"></text></g><g><title>wgpu_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.08%)</title><rect x="94.9903%" y="837" width="0.0777%" height="15" fill="rgb(216,18,1)" fg:x="2446" fg:w="2"/><text x="95.2403%" y="847.50"></text></g><g><title>wgpu_test`&lt;cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="95.0291%" y="821" width="0.0388%" height="15" fill="rgb(206,163,23)" fg:x="2447" fg:w="1"/><text x="95.2791%" y="831.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake (6 samples, 0.23%)</title><rect x="94.8738%" y="885" width="0.2330%" height="15" fill="rgb(229,150,31)" fg:x="2443" fg:w="6"/><text x="95.1238%" y="895.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (3 samples, 0.12%)</title><rect x="94.9903%" y="869" width="0.1165%" height="15" fill="rgb(231,10,5)" fg:x="2446" fg:w="3"/><text x="95.2403%" y="879.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::from_ptr (1 samples, 0.04%)</title><rect x="95.0680%" y="853" width="0.0388%" height="15" fill="rgb(250,40,50)" fg:x="2448" fg:w="1"/><text x="95.3180%" y="863.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::task_layout (1 samples, 0.04%)</title><rect x="95.0680%" y="837" width="0.0388%" height="15" fill="rgb(217,119,7)" fg:x="2448" fg:w="1"/><text x="95.3180%" y="847.50"></text></g><g><title>wgpu_test`async_task::utils::extend (1 samples, 0.04%)</title><rect x="95.0680%" y="821" width="0.0388%" height="15" fill="rgb(245,214,40)" fg:x="2448" fg:w="1"/><text x="95.3180%" y="831.50"></text></g><g><title>wgpu_test`core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="95.0680%" y="805" width="0.0388%" height="15" fill="rgb(216,187,1)" fg:x="2448" fg:w="1"/><text x="95.3180%" y="815.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.04%)</title><rect x="95.1068%" y="885" width="0.0388%" height="15" fill="rgb(237,146,21)" fg:x="2449" fg:w="1"/><text x="95.3568%" y="895.50"></text></g><g><title>wgpu_test`async_task::utils::abort_on_panic (9 samples, 0.35%)</title><rect x="94.8350%" y="933" width="0.3495%" height="15" fill="rgb(210,174,47)" fg:x="2442" fg:w="9"/><text x="95.0850%" y="943.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run::_{{closure}} (8 samples, 0.31%)</title><rect x="94.8738%" y="917" width="0.3107%" height="15" fill="rgb(218,111,39)" fg:x="2443" fg:w="8"/><text x="95.1238%" y="927.50"></text></g><g><title>wgpu_test`core::task::wake::Waker::wake (8 samples, 0.31%)</title><rect x="94.8738%" y="901" width="0.3107%" height="15" fill="rgb(224,95,19)" fg:x="2443" fg:w="8"/><text x="95.1238%" y="911.50"></text></g><g><title>wgpu_test`waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.04%)</title><rect x="95.1456%" y="885" width="0.0388%" height="15" fill="rgb(234,15,38)" fg:x="2450" fg:w="1"/><text x="95.3956%" y="895.50"></text></g><g><title>wgpu_test`futures_lite::future::block_on::parker_and_waker::_{{closure}} (1 samples, 0.04%)</title><rect x="95.1456%" y="869" width="0.0388%" height="15" fill="rgb(246,56,12)" fg:x="2450" fg:w="1"/><text x="95.3956%" y="879.50"></text></g><g><title>wgpu_test`parking::Unparker::unpark (1 samples, 0.04%)</title><rect x="95.1456%" y="853" width="0.0388%" height="15" fill="rgb(247,16,17)" fg:x="2450" fg:w="1"/><text x="95.3956%" y="863.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="95.1456%" y="837" width="0.0388%" height="15" fill="rgb(215,151,11)" fg:x="2450" fg:w="1"/><text x="95.3956%" y="847.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.08%)</title><rect x="95.1845%" y="933" width="0.0777%" height="15" fill="rgb(225,16,24)" fg:x="2451" fg:w="2"/><text x="95.4345%" y="943.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.08%)</title><rect x="95.1845%" y="917" width="0.0777%" height="15" fill="rgb(217,117,5)" fg:x="2451" fg:w="2"/><text x="95.4345%" y="927.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.04%)</title><rect x="95.2621%" y="933" width="0.0388%" height="15" fill="rgb(246,187,53)" fg:x="2453" fg:w="1"/><text x="95.5121%" y="943.50"></text></g><g><title>wgpu_test`async_task::raw::RawTask&lt;F,T,S&gt;::run (367 samples, 14.25%)</title><rect x="81.0874%" y="949" width="14.2524%" height="15" fill="rgb(241,71,40)" fg:x="2088" fg:w="367"/><text x="81.3374%" y="959.50">wgpu_test`async_task::..</text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="95.3010%" y="933" width="0.0388%" height="15" fill="rgb(231,67,39)" fg:x="2454" fg:w="1"/><text x="95.5510%" y="943.50"></text></g><g><title>wgpu_test`core::mem::forget (1 samples, 0.04%)</title><rect x="95.3398%" y="949" width="0.0388%" height="15" fill="rgb(222,120,24)" fg:x="2455" fg:w="1"/><text x="95.5898%" y="959.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::load (2 samples, 0.08%)</title><rect x="95.3786%" y="949" width="0.0777%" height="15" fill="rgb(248,3,3)" fg:x="2456" fg:w="2"/><text x="95.6286%" y="959.50"></text></g><g><title>wgpu_test`async_task::runnable::Runnable::run (371 samples, 14.41%)</title><rect x="81.0874%" y="965" width="14.4078%" height="15" fill="rgb(228,218,5)" fg:x="2088" fg:w="371"/><text x="81.3374%" y="975.50">wgpu_test`async_task::..</text></g><g><title>wgpu_test`core::task::wake::RawWaker::new (1 samples, 0.04%)</title><rect x="95.4563%" y="949" width="0.0388%" height="15" fill="rgb(212,202,43)" fg:x="2458" fg:w="1"/><text x="95.7063%" y="959.50"></text></g><g><title>wgpu_test`&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="95.4951%" y="933" width="0.0388%" height="15" fill="rgb(235,183,2)" fg:x="2459" fg:w="1"/><text x="95.7451%" y="943.50"></text></g><g><title>wgpu_test`core::mem::replace (1 samples, 0.04%)</title><rect x="95.5340%" y="933" width="0.0388%" height="15" fill="rgb(230,165,10)" fg:x="2460" fg:w="1"/><text x="95.7840%" y="943.50"></text></g><g><title>wgpu_test`core::ptr::read (1 samples, 0.04%)</title><rect x="95.5340%" y="917" width="0.0388%" height="15" fill="rgb(219,54,40)" fg:x="2460" fg:w="1"/><text x="95.7840%" y="927.50"></text></g><g><title>wgpu_test`async_executor::Executor::run::_{{closure}}::_{{closure}} (719 samples, 27.92%)</title><rect x="67.6893%" y="981" width="27.9223%" height="15" fill="rgb(244,73,9)" fg:x="1743" fg:w="719"/><text x="67.9393%" y="991.50">wgpu_test`async_executor::Executor::run::_{{c..</text></g><g><title>wgpu_test`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.12%)</title><rect x="95.4951%" y="965" width="0.1165%" height="15" fill="rgb(212,32,45)" fg:x="2459" fg:w="3"/><text x="95.7451%" y="975.50"></text></g><g><title>wgpu_test`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.12%)</title><rect x="95.4951%" y="949" width="0.1165%" height="15" fill="rgb(205,58,31)" fg:x="2459" fg:w="3"/><text x="95.7451%" y="959.50"></text></g><g><title>wgpu_test`core::ptr::read (1 samples, 0.04%)</title><rect x="95.5728%" y="933" width="0.0388%" height="15" fill="rgb(250,120,43)" fg:x="2461" fg:w="1"/><text x="95.8228%" y="943.50"></text></g><g><title>wgpu_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (754 samples, 29.28%)</title><rect x="66.4078%" y="1013" width="29.2816%" height="15" fill="rgb(235,13,10)" fg:x="1710" fg:w="754"/><text x="66.6578%" y="1023.50">wgpu_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as c..</text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (721 samples, 28.00%)</title><rect x="67.6893%" y="997" width="28.0000%" height="15" fill="rgb(232,219,31)" fg:x="1743" fg:w="721"/><text x="67.9393%" y="1007.50">wgpu_test`&lt;core::future::from_generator::GenF..</text></g><g><title>wgpu_test`async_task::runnable::Runnable::run (2 samples, 0.08%)</title><rect x="95.6117%" y="981" width="0.0777%" height="15" fill="rgb(218,157,51)" fg:x="2462" fg:w="2"/><text x="95.8617%" y="991.50"></text></g><g><title>wgpu_test`async_executor::Executor::run::_{{closure}} (756 samples, 29.36%)</title><rect x="66.3689%" y="1029" width="29.3592%" height="15" fill="rgb(211,91,52)" fg:x="1709" fg:w="756"/><text x="66.6189%" y="1039.50">wgpu_test`async_executor::Executor::run::_{{clo..</text></g><g><title>wgpu_test`async_executor::Executor::state (1 samples, 0.04%)</title><rect x="95.6893%" y="1013" width="0.0388%" height="15" fill="rgb(240,173,1)" fg:x="2464" fg:w="1"/><text x="95.9393%" y="1023.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.04%)</title><rect x="95.6893%" y="997" width="0.0388%" height="15" fill="rgb(248,20,47)" fg:x="2464" fg:w="1"/><text x="95.9393%" y="1007.50"></text></g><g><title>wgpu_test`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.04%)</title><rect x="95.6893%" y="981" width="0.0388%" height="15" fill="rgb(217,221,40)" fg:x="2464" fg:w="1"/><text x="95.9393%" y="991.50"></text></g><g><title>wgpu_test`once_cell::imp::initialize_inner (1 samples, 0.04%)</title><rect x="95.6893%" y="965" width="0.0388%" height="15" fill="rgb(226,149,51)" fg:x="2464" fg:w="1"/><text x="95.9393%" y="975.50"></text></g><g><title>wgpu_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (757 samples, 29.40%)</title><rect x="66.3689%" y="1045" width="29.3981%" height="15" fill="rgb(252,193,7)" fg:x="1709" fg:w="757"/><text x="66.6189%" y="1055.50">wgpu_test`&lt;core::future::from_generator::GenFut..</text></g><g><title>wgpu_test`core::pin::Pin&lt;&amp;mut T&gt;::map_unchecked_mut (1 samples, 0.04%)</title><rect x="95.7282%" y="1029" width="0.0388%" height="15" fill="rgb(205,123,0)" fg:x="2465" fg:w="1"/><text x="95.9782%" y="1039.50"></text></g><g><title>wgpu_test`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (1 samples, 0.04%)</title><rect x="95.7670%" y="1045" width="0.0388%" height="15" fill="rgb(233,173,25)" fg:x="2466" fg:w="1"/><text x="96.0170%" y="1055.50"></text></g><g><title>wgpu_test`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="95.8058%" y="1029" width="0.0777%" height="15" fill="rgb(216,63,32)" fg:x="2467" fg:w="2"/><text x="96.0558%" y="1039.50"></text></g><g><title>wgpu_test`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.08%)</title><rect x="95.8058%" y="1013" width="0.0777%" height="15" fill="rgb(209,56,45)" fg:x="2467" fg:w="2"/><text x="96.0558%" y="1023.50"></text></g><g><title>wgpu_test`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="95.8835%" y="1029" width="0.0388%" height="15" fill="rgb(226,111,49)" fg:x="2469" fg:w="1"/><text x="96.1335%" y="1039.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.04%)</title><rect x="95.9223%" y="1029" width="0.0388%" height="15" fill="rgb(244,181,21)" fg:x="2470" fg:w="1"/><text x="96.1723%" y="1039.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="96.0777%" y="981" width="0.0388%" height="15" fill="rgb(222,126,15)" fg:x="2474" fg:w="1"/><text x="96.3277%" y="991.50"></text></g><g><title>wgpu_test`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (2 samples, 0.08%)</title><rect x="96.0777%" y="1013" width="0.0777%" height="15" fill="rgb(222,95,17)" fg:x="2474" fg:w="2"/><text x="96.3277%" y="1023.50"></text></g><g><title>wgpu_test`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="96.0777%" y="997" width="0.0777%" height="15" fill="rgb(254,46,5)" fg:x="2474" fg:w="2"/><text x="96.3277%" y="1007.50"></text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.04%)</title><rect x="96.1165%" y="981" width="0.0388%" height="15" fill="rgb(236,216,35)" fg:x="2475" fg:w="1"/><text x="96.3665%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="96.1165%" y="965" width="0.0388%" height="15" fill="rgb(217,187,26)" fg:x="2475" fg:w="1"/><text x="96.3665%" y="975.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.19%)</title><rect x="96.1553%" y="1013" width="0.1942%" height="15" fill="rgb(207,192,25)" fg:x="2476" fg:w="5"/><text x="96.4053%" y="1023.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_compare_exchange (4 samples, 0.16%)</title><rect x="96.1942%" y="997" width="0.1553%" height="15" fill="rgb(253,135,27)" fg:x="2477" fg:w="4"/><text x="96.4442%" y="1007.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::load (1 samples, 0.04%)</title><rect x="96.5049%" y="997" width="0.0388%" height="15" fill="rgb(211,122,29)" fg:x="2485" fg:w="1"/><text x="96.7549%" y="1007.50"></text></g><g><title>wgpu_test`core::sync::atomic::AtomicBool::load (1 samples, 0.04%)</title><rect x="96.5825%" y="981" width="0.0388%" height="15" fill="rgb(233,162,40)" fg:x="2487" fg:w="1"/><text x="96.8325%" y="991.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::get (4 samples, 0.16%)</title><rect x="96.5437%" y="997" width="0.1553%" height="15" fill="rgb(222,184,47)" fg:x="2486" fg:w="4"/><text x="96.7937%" y="1007.50"></text></g><g><title>wgpu_test`core::sync::atomic::atomic_load (2 samples, 0.08%)</title><rect x="96.6214%" y="981" width="0.0777%" height="15" fill="rgb(249,99,23)" fg:x="2488" fg:w="2"/><text x="96.8714%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.04%)</title><rect x="96.6990%" y="981" width="0.0388%" height="15" fill="rgb(214,60,12)" fg:x="2490" fg:w="1"/><text x="96.9490%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (76 samples, 2.95%)</title><rect x="96.7379%" y="965" width="2.9515%" height="15" fill="rgb(250,229,36)" fg:x="2491" fg:w="76"/><text x="96.9879%" y="975.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (4 samples, 0.16%)</title><rect x="99.6893%" y="965" width="0.1553%" height="15" fill="rgb(232,195,10)" fg:x="2567" fg:w="4"/><text x="99.9393%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (2 samples, 0.08%)</title><rect x="99.7670%" y="949" width="0.0777%" height="15" fill="rgb(205,213,31)" fg:x="2569" fg:w="2"/><text x="100.0170%" y="959.50"></text></g><g><title>wgpu_test`std::sync::condvar::Condvar::wait (91 samples, 3.53%)</title><rect x="96.3495%" y="1013" width="3.5340%" height="15" fill="rgb(237,43,8)" fg:x="2481" fg:w="91"/><text x="96.5995%" y="1023.50">wgp..</text></g><g><title>wgpu_test`std::sys_common::condvar::Condvar::wait (82 samples, 3.18%)</title><rect x="96.6990%" y="997" width="3.1845%" height="15" fill="rgb(216,208,3)" fg:x="2490" fg:w="82"/><text x="96.9490%" y="1007.50">wgp..</text></g><g><title>wgpu_test`std::sys::unix::condvar::Condvar::wait (81 samples, 3.15%)</title><rect x="96.7379%" y="981" width="3.1456%" height="15" fill="rgb(228,179,44)" fg:x="2491" fg:w="81"/><text x="96.9879%" y="991.50">wgp..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.04%)</title><rect x="99.8447%" y="965" width="0.0388%" height="15" fill="rgb(230,192,27)" fg:x="2571" fg:w="1"/><text x="100.0947%" y="975.50"></text></g><g><title>wgpu_test`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.04%)</title><rect x="99.8835%" y="1013" width="0.0388%" height="15" fill="rgb(251,30,38)" fg:x="2572" fg:w="1"/><text x="100.1335%" y="1023.50"></text></g><g><title>wgpu_test`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="99.8835%" y="997" width="0.0388%" height="15" fill="rgb(246,55,52)" fg:x="2572" fg:w="1"/><text x="100.1335%" y="1007.50"></text></g><g><title>wgpu_test`std::sync::poison::Flag::borrow (1 samples, 0.04%)</title><rect x="99.8835%" y="981" width="0.0388%" height="15" fill="rgb(249,79,26)" fg:x="2572" fg:w="1"/><text x="100.1335%" y="991.50"></text></g><g><title>wgpu_test`std::thread::panicking (1 samples, 0.04%)</title><rect x="99.8835%" y="965" width="0.0388%" height="15" fill="rgb(220,202,16)" fg:x="2572" fg:w="1"/><text x="100.1335%" y="975.50"></text></g><g><title>wgpu_test`std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="99.8835%" y="949" width="0.0388%" height="15" fill="rgb(250,170,23)" fg:x="2572" fg:w="1"/><text x="100.1335%" y="959.50"></text></g><g><title>wgpu_test`std::sync::mutex::guard_poison (1 samples, 0.04%)</title><rect x="99.9223%" y="1013" width="0.0388%" height="15" fill="rgb(230,7,37)" fg:x="2573" fg:w="1"/><text x="100.1723%" y="1023.50"></text></g><g><title>all (2,575 samples, 100%)</title><rect x="0.0000%" y="1333" width="100.0000%" height="15" fill="rgb(213,71,1)" fg:x="0" fg:w="2575"/><text x="0.2500%" y="1343.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (881 samples, 34.21%)</title><rect x="65.7864%" y="1317" width="34.2136%" height="15" fill="rgb(227,87,39)" fg:x="1694" fg:w="881"/><text x="66.0364%" y="1327.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (881 samples, 34.21%)</title><rect x="65.7864%" y="1301" width="34.2136%" height="15" fill="rgb(210,41,29)" fg:x="1694" fg:w="881"/><text x="66.0364%" y="1311.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>wgpu_test`std::sys::unix::thread::Thread::new::thread_start (870 samples, 33.79%)</title><rect x="66.2136%" y="1285" width="33.7864%" height="15" fill="rgb(206,191,31)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1295.50">wgpu_test`std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>wgpu_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (870 samples, 33.79%)</title><rect x="66.2136%" y="1269" width="33.7864%" height="15" fill="rgb(247,75,54)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1279.50">wgpu_test`core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>wgpu_test`std::thread::Builder::spawn_unchecked::_{{closure}} (870 samples, 33.79%)</title><rect x="66.2136%" y="1253" width="33.7864%" height="15" fill="rgb(208,54,50)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1263.50">wgpu_test`std::thread::Builder::spawn_unchecked::_{{clo..</text></g><g><title>wgpu_test`std::panic::catch_unwind (870 samples, 33.79%)</title><rect x="66.2136%" y="1237" width="33.7864%" height="15" fill="rgb(214,90,37)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1247.50">wgpu_test`std::panic::catch_unwind</text></g><g><title>wgpu_test`std::panicking::try (870 samples, 33.79%)</title><rect x="66.2136%" y="1221" width="33.7864%" height="15" fill="rgb(220,132,6)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1231.50">wgpu_test`std::panicking::try</text></g><g><title>wgpu_test`__rust_try (870 samples, 33.79%)</title><rect x="66.2136%" y="1205" width="33.7864%" height="15" fill="rgb(213,167,7)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1215.50">wgpu_test`__rust_try</text></g><g><title>wgpu_test`std::panicking::try::do_call (870 samples, 33.79%)</title><rect x="66.2136%" y="1189" width="33.7864%" height="15" fill="rgb(243,36,27)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1199.50">wgpu_test`std::panicking::try::do_call</text></g><g><title>wgpu_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (870 samples, 33.79%)</title><rect x="66.2136%" y="1173" width="33.7864%" height="15" fill="rgb(235,147,12)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1183.50">wgpu_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F..</text></g><g><title>wgpu_test`std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (870 samples, 33.79%)</title><rect x="66.2136%" y="1157" width="33.7864%" height="15" fill="rgb(212,198,44)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1167.50">wgpu_test`std::thread::Builder::spawn_unchecked::_{{clo..</text></g><g><title>wgpu_test`std::sys_common::backtrace::__rust_begin_short_backtrace (870 samples, 33.79%)</title><rect x="66.2136%" y="1141" width="33.7864%" height="15" fill="rgb(218,68,50)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1151.50">wgpu_test`std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>wgpu_test`bevy_tasks::task_pool::TaskPool::new_internal::_{{closure}}::_{{closure}} (870 samples, 33.79%)</title><rect x="66.2136%" y="1125" width="33.7864%" height="15" fill="rgb(224,79,48)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1135.50">wgpu_test`bevy_tasks::task_pool::TaskPool::new_internal..</text></g><g><title>wgpu_test`futures_lite::future::block_on (870 samples, 33.79%)</title><rect x="66.2136%" y="1109" width="33.7864%" height="15" fill="rgb(213,191,50)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1119.50">wgpu_test`futures_lite::future::block_on</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with (870 samples, 33.79%)</title><rect x="66.2136%" y="1093" width="33.7864%" height="15" fill="rgb(254,146,10)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1103.50">wgpu_test`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>wgpu_test`std::thread::local::LocalKey&lt;T&gt;::try_with (870 samples, 33.79%)</title><rect x="66.2136%" y="1077" width="33.7864%" height="15" fill="rgb(215,175,11)" fg:x="1705" fg:w="870"/><text x="66.4636%" y="1087.50">wgpu_test`std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>wgpu_test`futures_lite::future::block_on::_{{closure}} (869 samples, 33.75%)</title><rect x="66.2524%" y="1061" width="33.7476%" height="15" fill="rgb(207,49,7)" fg:x="1706" fg:w="869"/><text x="66.5024%" y="1071.50">wgpu_test`futures_lite::future::block_on::_{{closure}}</text></g><g><title>wgpu_test`parking::Parker::park (108 samples, 4.19%)</title><rect x="95.8058%" y="1045" width="4.1942%" height="15" fill="rgb(234,144,29)" fg:x="2467" fg:w="108"/><text x="96.0558%" y="1055.50">wgpu_..</text></g><g><title>wgpu_test`parking::Inner::park (104 samples, 4.04%)</title><rect x="95.9612%" y="1029" width="4.0388%" height="15" fill="rgb(213,222,48)" fg:x="2471" fg:w="104"/><text x="96.2112%" y="1039.50">wgpu..</text></g><g><title>wgpu_test`std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.04%)</title><rect x="99.9612%" y="1013" width="0.0388%" height="15" fill="rgb(222,8,6)" fg:x="2574" fg:w="1"/><text x="100.2112%" y="1023.50"></text></g></svg></svg>